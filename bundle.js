(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/* ParserSetup.js
* 
* Sets up options/functions for parser
*/


(function (root, setupFactory) {  // root is usually `window`
    if ( typeof define === 'function' && define.amd) {  // amd if possible
        // AMD. Register as an anonymous module.
        define( ['jquery', '../third-party/franc-all.js', 'iso-639.json', '@knod/unfluff', '@knod/sbd'], function (jQuery, franc, langCodes, unfluff, sbd) { return (root.Parser = setupFactory(jQuery, franc, langCodes, unfluff, sbd) ); });
    } else if ( typeof module === 'object' && module.exports) {  // Node-ish next
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = setupFactory( require('jquery'), require('../third-party/franc-all.js'), require('./parse/iso-639.json'), require('@knod/unfluff'), require('@knod/sbd') );
    } else {  // Global if nothing else
        // Browser globals
        console.warn('If this isn\'t running off browserify, I\'m not sure how to get these libs in here.')
        // root.Parser = setupFactory( JQuery );
    }
}( this, function ( $, franc, langCodes, unfluff, sbd ) {
	/* (jQuery, {}, {}, {}) -> Parser Constructor */

    "use strict";


    var ParserSetup = function () {
    /* () -> ParserSetup
    * 
    * Builds the options needed for the parser
    */
    	var rSup = {};

    	rSup.debug = false;

    	rSup.cleanNode = function ( node ) {
    	/* ( DOM Node ) -> same DOM Node
    	* 
    	* Removes unwanted elements from the node and returns it.
        * TODO: Add 'head' (not 'iframe', though)
	    */
    		var $node     = $(node),
                // 'sup' has been declared distracting
                // 'script' and 'style' have English, skewing language detection results
                toRemove  = ['sup', 'script', 'style'];

            for (let tagi = 0; tagi < toRemove.length; tagi++) {
                let tag = toRemove[tagi];
                $node.find(tag).remove();
            };

    		return $node[0];
    	};


    	rSup.detectLanguage = function ( text ) {
    	/* ( Str ) -> iso6391 language code Str
    	* 
    	* Best guess. Defaults to English if none other is found.
    	*/
    		var lang = franc( text,
    			// The languages unfluff can handle atm
    				{ 'whitelist': ['ara', 'bul', 'ces', 'dan', 'deu', 'ell',
    					'eng', 'spa', 'fin', 'fra', 'hun', 'ind', 'ita', 'kor',
    					'nob', 'nor', 'pol', 'por', 'rus', 'swe', 'tha', 'tur', 'zho']
    			});
    		if (lang === 'und') {lang = 'eng';}

    		var iso6391Lang = langCodes[lang].iso6391;

    		if (rSup.debug) {  // Help non-coder devs identify some bugs
        	    console.log( '~~~parse debug~~~ language detected:', lang, '->', iso6391Lang );
    		}

    		return iso6391Lang;
    	};  // End rSup.detectLanguage()


    	rSup.findArticle = function ( node, lang ) {
    	/* ( DOM Node, Str ) -> Str
    	* 
    	* Uses the language `lang` and a DOM Node to return
    	* the best guess at the main text of the article
	    */
	    	var html = $(node).html(),
				cmds = unfluff.lazy( html, lang ),
				text = cmds.text();

            // Last ditch effort to get something if unfluff doesn't
            // get anything
            if (!text) { text = $(node).text(); }

    		if (rSup.debug) {  // Help non-coder devs identify some bugs
        	    console.log( '~~~parse debug~~~ article text identified (a string):', text );
    		}

			return text;
    	};  // End rSup.findArticle()


    	rSup.cleanText = function ( text ) {
    	/* (Str) -> Str
    	* 
    	* Does whatever further text filtering, cleaning, and parsing needs
    	* to be done. Default does nothing
    	*/
    		var cleaned = text;

    		// Add your code here
    		if (rSup.debug) {  // Help non-coder devs identify some bugs
        	    console.log( '~~~parse debug~~~ plain text cleaned (a string):', cleaned );
    		}

    		return cleaned;
    	};  // End rSup.cleanText()


    	rSup.splitSentences = function ( text ) {
    	/* ( Str ) -> [Str]
    	* 
    	* Returns a list of sentences, which are each a list of words (strings).
        * Best results with English.
	    */
	    	// var sentenceObjs  = sbd.text( text ).sentences,
      //           sentences     = [];

	    	// for (let senti = 0; senti < sentenceObjs.length; senti++) {
	    		
      //           let sentObj  = sentenceObjs[senti],
      //               terms    = sentObj.terms,
      //               sentence = [];
      //           for (var wordi = 0; wordi < terms.length; wordi++) {
      //               var word = terms[wordi].text;
      //               sentence.push( word );
      //           };
	    		
      //           sentences.push( sentence );
	    	// };
            var sentences = sbd.sentences( text, {parse_type: 'words'} );

    		if (rSup.debug) {  // Help non-coder devs identify some bugs
        	    console.log( '~~~parse debug~~~ sentences (an array of arrays of strings):', sentences );
    		}

            return sentences;
    	};

		return rSup;
    };  // End ParserSetup() -> {}

    return ParserSetup;
}));

},{"../third-party/franc-all.js":105,"./parse/iso-639.json":9,"@knod/sbd":23,"@knod/unfluff":29,"jquery":103}],2:[function(require,module,exports){
/* ReaderlyDisplay.js
* 
* Just the Readerly text display, including areas for
* future buttons. No settings, etc.
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/Read.js
* 
* NOTES:
* - name - ReaderlyBar? ReaderlySee?
* 
* TODO:
* - Consider prepending main element as opposed to appending it. Possibly
* 	easer for screen readers to find more quickly.
*/

(function (root, displayFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( ['jquery', 'core-CSS', 'settings/noui-CSS'], function ( jquery, nouiCSS ) {
        	return ( root.ReaderlyDisplay = displayFactory( jquery, nouiCSS ) );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = displayFactory( require('jquery'), require('./core-CSS'), require('./settings/noui-CSS') );
    } else {
        // Browser globals
        root.ReaderlyDisplay = displayFactory( root.jQuery, root.nouiCSS );
    }
}(this, function ( $, coreCSSstr, nouiCSSstr ) {

	"use strict";

	var ReaderlyDisplay = function ( timer, parentNode ) {

		var rDis = {};

		rDis._toTrigger = [];


		var iframeStr = '<iframe id="__rdly_iframe" title="Readerly article reader."></iframe>';

		var cssStr = '<style>' + coreCSSstr + '\n' + nouiCSSstr + '</style>';

		//  TODO: Change (almost) all these to id's
		var htmlStr = '<div id="__rdly">\
	<div id="__rdly_above_bar" class="__rdly-main-section"></div>\
	<div id="__rdly_bar" class="__rdly-main-section">\
		<div class="__rdly-bar-section __rdly-bar-left"></div>\
		<div class="__rdly-bar-section __rdly-bar-center __rdly-transform-centered">\
			<div id="__rdly_above_text_elements"></div>\
			<div id="__rdly_left_text_elements"></div>\
			<div id="__rdly_text_elements"></div>\
			<div id="__rdly_right_text_elements"></div>\
			<div id="__rdly_below_text_elements"></div>\
		</div>\
		<div class="__rdly-bar-section __rdly-bar-right">\
			<button id="__rdly_close" class="__rdly-sup-menu-button">X</button>\
		</div>\
	</div>\
	<div id="__rdly_below_bar" class="__rdly-main-section __rdly-hidden"></div>\
</div>';

		var readerly, textElems, $iframe;

		// =========== HOOKS =========== \\

		rDis.addToTriggerList = function ( newObjWithTriggerFuncts ) {
			// TODO: Prevent duplicates
			rDis._toTrigger.push( newObjWithTriggerFuncts );
			return rDis;
		};



		// =========== RUNTIME ACTIONS =========== \\

		rDis.close = function () {
		// This is where everything gets closed, paused, put away
			rDis.hide();
			for (let trigi = 0; trigi < rDis._toTrigger.length; trigi++) {
				let obj = rDis._toTrigger[ trigi ]
				if ( obj.close ) obj.close();
			};
			return rDis;
		};

		rDis.open = function () {
			rDis.show();
			for (let trigi = 0; trigi < rDis._toTrigger.length; trigi++) {
				let obj = rDis._toTrigger[ trigi ]
				if ( obj.open ) obj.open();
			};
			return rDis;
		};


		rDis.show = function () {
			$iframe.show();
			$(readerly).slideDown( 200 );
			// $(readerly).slideDown( 200, rDis.update );
			return rDis;
		};


		rDis.hide = function () {
			$iframe.hide();
			$(readerly).slideUp( 200 );
			// $(readerly).slideUp( 200, rDis.update );
			return rDis;
		};


		rDis.destroy = function () {
			$(readerly).remove();
			return rDis;
		};


		// iframe element sizing
		// https://jsfiddle.net/fpd4fb80/31/
		rDis._sizeIframeAndContents = function () {
			var debug = false;
if (debug) console.log('~~~~~~~~~~~~~~~~~~~~')
			// There should only be one (for now...)
			var grower = $(readerly).find('.__rdly-to-grow')[0];

			// For when the element isn't made yet or isn't visible
			if ( !grower ) { return rDis; }

			var scrollable = $(grower).parent()[0],
				scrollRect = scrollable.getBoundingClientRect();

			// Get the difference between the lowest point of the
			// unscrolled scrollable content and the lowest visible point
			// Takes into account everything above and including, but not
			// below, the scrollable content

			// Takes into account everything above the scrollable element
			// including borders/padding/etc.
			var top 			= scrollable.getBoundingClientRect().top,
			// Takes into account the height of the element that's
			// currently going to be scrolled
				height 			= grower.getBoundingClientRect().height,
			// The bottom of where the contents would end if you weren't
			// scrolled and no adjustments for size were made.
				potentialBottom = top + height,
			// The bottom of the the visible window
				screenBottom 	= document.documentElement.clientHeight,
			// How much needs to be subtracted (almost, see below) from the
			// scrollable node's height (not contents) in order to fit on the page.
				diff 			= (potentialBottom - screenBottom);
if (debug) console.log('top:', top, '; height:', height, '; potentialBottom:', potentialBottom, '; screenBottom:', screenBottom, '; diff:', diff);
			// Have taken care off stuff above and in the contents
			// Now will account for all the padding/borders, etc at
			// the bottom that may otherwise get cut off in some browsers
			// (Have to calcuate this again because the viewport might have changed on scroll)
			var scrollBottom = scrollable.getBoundingClientRect().bottom,
			// The bottom of the outer-most node, so we can pull everything
			// up to be visible
				outerBottom  = readerly.getBoundingClientRect().bottom,
				bottomDiff 	 = outerBottom - scrollBottom;

			diff = diff + bottomDiff;

if (debug) console.log('scrollBottom:', scrollBottom, '; outerBottom:', outerBottom, '; bottomDiff:', bottomDiff, '; diff:', diff)
if (debug) console.log('diff > 0:', diff > 0)
			var newHeight = height;
			if ( diff > 0 ) {
				newHeight = height - diff;
			}
			scrollable.style.height = newHeight + 'px';
if (debug) console.log('scrollable height:', scrollable.style.height)

			// Since the outer element is being used to determine the height of
			// the iframe, I assume it's at the very top of the iframe, so no
			// extra 'outer top' value needs to be subtracted.
			var currentOuterHeight 	= top + newHeight + bottomDiff;
			$iframe[0].style.height = currentOuterHeight + 'px';

			return rDis;
		};  // End rDis._sizeIframeAndContents()


		rDis.update = function () {
		// Callable from outside to have the display reset what it needs to reset
			rDis._sizeIframeAndContents();
			return rDis;
		};



		// =========== INITIALIZE =========== \\

		rDis._addEvents = function () {
			$(rDis.nodes.close).on( 'touchend click', rDis.close );
			$(readerly).on( 'mousedown mouseup mousemove touchstart touchend', rDis.update );
			$(window).on( 'resize', rDis.update );
			// Event for content zooming?
			return rDis;
		};


		rDis._addNodes = function ( parentNode ) {

			if (!parentNode) { parentNode = $(document.body)[0] }

			$iframe = $(iframeStr);
			$iframe.appendTo( parentNode );

			var doc  = $iframe[0].contentDocument;

			readerly = rDis._readerlyNode = $(htmlStr)[0];
			$(readerly).appendTo( doc.body );

			// STYLES
			var $styles = $(cssStr);
			$styles.appendTo( doc.head );

			// ??: Is this useful?
			rDis.nodes 	= {
				doc: 			doc,
				head: 			doc.head,
				body: 			doc.body,
				readerly: 		readerly,
				above: 			$(readerly).find('#__rdly_above_bar')[0],
				bar: 			$(readerly).find('#__rdly-bar')[0],
				barLeft: 		$(readerly).find('.__rdly-bar-left')[0],
				barCenter: 		$(readerly).find('.__rdly-bar-center')[0],
				aboveText: 		$(readerly).find('#__rdly_above_text_elements')[0],
				leftOfText: 	$(readerly).find('#__rdly_left_text_elements')[0],
				textElements: 	$(readerly).find('#__rdly_text_elements')[0],
				rightOfText: 	$(readerly).find('#__rdly_right_text_elements')[0],
				belowText: 		$(readerly).find('#__rdly_below_text_elements')[0],
				barRight: 		$(readerly).find('.__rdly-bar-right')[0],
				close: 			$(readerly).find('#__rdly_close')[0],
				below: 			$(readerly).find('#__rdly_below_bar')[0]
			}

			return rDis;
		};  // End rDis._addNodes()


		rDis._init = function ( parentNode ) {
			if ( !$('#__rdly_iframe')[0] ) {
				rDis._addNodes( parentNode )
					._addEvents()
					// This is in the wrong place
					// Reconfig needed. This should construct timer?
					// Create parent object instead?
					.addToTriggerList( timer );
				// This should not be visible until it's .show()n
				$iframe.hide();
				$(readerly).hide(0, rDis.update )
				// $('#__rdly_iframe').hide(0);
			}
			return rDis;
		};


		// =========== ADD NODE, ETC. =========== \\
		// Don't show at start, only when prompted
		rDis._init( parentNode );

		// To be called in a script
		return rDis;
	};  // End ReaderlyDisplay() -> {}

	// To put on the window object, or export into a module
    return ReaderlyDisplay;
}));

},{"./core-CSS":4,"./settings/noui-CSS":17,"jquery":103}],3:[function(require,module,exports){
/* ReaderlyStorage.js
* 
* Destructive, unfortunately - doesn't mutate settings,
* just recreates them. All async :/
* 
* For now, chrome extension storage. Migrate in future.
* https://developer.chrome.com/extensions/storage
*/


(function (root, storeFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () {
        	return ( root.ReaderlyStorage = storeFactory() );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = storeFactory();
    } else {
        // Browser globals
        root.ReaderlyStorage = storeFactory();
    }
}(this, function () {

	"use strict";


	var ReaderlyStorage = function () {
	/* ( None ) -> ReaderlyStorage
	* 
	*/
		var rSto = {};

		rSto.set = function ( settings, callback ) {
		// Set any number of settings values
			// Docs say no args returned
			chrome.storage.sync.set( settings, callback );
		};  // End rSto.set()


		rSto.save = rSto.set;


		rSto.loadAll = function ( callback ) {
			chrome.storage.sync.get( null, function loadOldReaderlySettings( settings ) {
				callback( settings );
			});
		};  // End rSto.loadAll()


		rSto.get = function ( keyOrKeys, callback ) {
			chrome.storage.sync.get( keyOrKeys, function loadOldReaderlySettings( settings ) {
				callback( settings );
			});
		};  // End rSto.get()


		rSto.cleanSave = function ( settings, callback ) {
			chrome.storage.sync.clear( function clearReaderlySettings() {
				// Docs say no args returned
				chrome.storage.sync.set( settings, callback );
			});
		};  // End rSto.cleanSave()


		rSto.clear = function ( callback ) {
			// Docs say no args returned
			chrome.storage.sync.clear( callback );
		};  // End rSto.clear()


		rSto.remove = function ( keyOrKeys, callback ) {
			// Docs say no args returned
			chrome.storage.sync.remove( keyOrKeys, callback );
		};  // End rSto.remove()


		return rSto;
	};  // End ReaderlyStorage() -> {}

    return ReaderlyStorage;
}));
},{}],4:[function(require,module,exports){
/* core-CSS.js
* css that's bundleable
* 
* Scroll bars issue:
* https://jsfiddle.net/fpd4fb80/31/
*/

(function (root, coreCSSFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () {
        	return ( root.coreCSS = coreCSSFactory() );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = coreCSSFactory();
    } else {
        // Browser globals
        root.coreCSS = coreCSSFactory();
    }
}(this, function () {

	"use strict";

	var coreCSS = "/*readerly-main.css\
* \
* Refer to main display script (currently ReaderlyDisplay.js\
* on 12/20/16) for DOM structure.\
* \
* Affects mostly main display, but also others.\
* \
* TODO:\
* - Implement more robust hiding. (jQuery .hide type thing atm)\
* - More robust defaults.\
*/\
\
/* ============================== */\
/* STRUCTURE */\
/* ============================== */\
#__rdly_iframe {\
	position: fixed;\
	top: 0;\
	left: 0;\
	width: 100%;\
	z-index: 4300200100;\
}\
html, body {\
	height: 100%;\
	overflow: hidden;\
}\
\
#__rdly,\
#__rdly * {\
	box-sizing: border-box;\
}\
\
#__rdly {\
	display: flex;\
	flex-direction: column;\
	max-height: 100%;\
	top: 0;\
	left: 0;\
	width: 100%;\
	transition: top 100ms linear;\
}\
\
.__rdly-main-section {\
	width: 100%;\
	display: flex;\
	/* For absolutely positioned children */\
	position: relative;\
}\
\
/* Should be 'top' and 'bottom' instead? */\
#__rdly #__rdly_above_bar {\
	top: 0;\
	/* function */\
	z-index: 50;\
}\
\
#__rdly_below_bar {\
	top: 100%;\
	display: flex;\
}\
\
#__rdly #__rdly_bar {\
	/* ??: Will this work if font-size is declared lower down? */\
	min-height: 2em;\
	text-align: center;\
}\
\
/* ??: Generalize positions? Left, right, top, bottom, center, middle? */\
#__rdly .__rdly-bar-left,\
#__rdly .__rdly-bar-center,\
#__rdly .__rdly-bar-right {\
	/* vertically centered without flexbox */\
	position: absolute;\
	top: 50%;\
	transform: translateY(-50%);\
	height: 100%;\
	display: flex;\
	align-items: center;\
	align-content: center;\
	justify-content: center;\
}\
#__rdly .__rdly-bar-left,\
#__rdly .__rdly-bar-right {\
	padding: 0.75%;\
}\
#__rdly .__rdly-bar-left {\
	left: 0;\
}\
#__rdly .__rdly-bar-center {\
	height: 100%;\
	text-align: center;\
}\
#__rdly .__rdly-bar-right {\
	right: 0;\
}\
#__rdly #__rdly_close {\
	align-self: flex-start;\
}\
\
#__rdly #__rdly_text_elements {\
	/* em counts the widest possible text */\
	width: 13em;\
	height: 100%;\
}\
\
/* Horizontally and vertically centered without flexbox */\
/* Comes last to take precedence */\
#__rdly .__rdly-transform-centered {\
	position: absolute;\
	top: 50%;\
	left: 50%;\
	transform: translate( -50% ,-50% );\
}\
\
\
/* ============================== */\
/* SKIN */\
/* ============================== */\
#__rdly_iframe {\
	border: 0;\
}\
body {\
	margin: 0;\
}\
\
#__rdly div,\
#__rdly span,\
#__rdly a,\
#__rdly li {\
	/* font defaults from chrome inspection */\
	font-family: 'droid', serif;\
	font-size: 16px;\
	line-height: normal;\
	font-style: normal;\
	font-weight: normal;\
	font-variant: none;\
	font-stretch: normal;\
	font-feature-settings: normal;\
	font-kerning: auto;\
	-webkit-font-smoothing: auto;\
	text-transform: none;\
}\
\
/* Since using img src attribute, must change color in file */\
/*button svg,\
button path,\
button polygon {\
	fill: black;\
	stroke: black;\
}*/\
button {\
    display: flex;\
    justify-content: center;\
    align-items: center;\
}\
button img {\
    width: 70%;\
    margin-left: -9%;\
}\
\
#__rdly {\
	/*border: 1px solid gray;*/\
	/*border-left: 0;*/\
	/*border-right: 0;*/\
	background-color: rgba(250, 250, 250, 1);\
}\
\
.__rdly-main-section {\
	border: 0;\
	border-bottom: 1px solid gray;\
}\
\
#__rdly #__rdly_bar,\
#__rdly #__rdly_bar div,\
#__rdly #__rdly_bar span,\
#__rdly #__rdly_bar a,\
#__rdly #__rdly_bar li {\
	font-size: 36px;\
}\
\
\
/* Should this be in readerly-main.css? new readerly-ui.css?*/\
#__rdly button::-moz-focus-inner,\
#__rdly input::-moz-focus-inner {\
	/*padding: 0;*/\
	/*background-color: rgba( 220, 220, 220, 1 );*/\
}\
\
#__rdly button {\
	border-radius: 3px;\
}\
\
#__rdly button {\
  background-color: rgba( 220, 220, 220, 1 );\
}\
#__rdly button:active {\
	background-color: rgba( 200, 200, 200, 1 );\
}\
#__rdly button:hover,\
#__rdly .__rdly-active-ui {\
	background-color: rgba(160, 160, 160, 1);\
	fill: rgba(100, 100, 100, 1);\
}\
/* TODO: add:\
#__rdly .__rdly-active-ui {\
  border-style: inset;\
}\
*/\
\
\
/* ============================== */\
/* FUNCTION */\
/* ============================== */\
\
#__rdly .__rdly-hidden {\
	display: none;\
}\
\
#__rdly .__rdly-rotating {\
    -webkit-animation:spin 4s linear infinite;\
    -moz-animation:spin 4s linear infinite;\
    animation:spin 4s linear infinite;\
}\
@-moz-keyframes spin {\
	100%\
	{ -moz-transform: rotate(360deg); }\
}\
@-webkit-keyframes spin {\
	100%\
	{ -webkit-transform: rotate(360deg); }\
}\
@keyframes spin {\
	100%\
	{ transform:rotate(360deg); }\
}\
\
#__rdly .__rdly-scrollable-y {\
	display: block;\
	overflow-y: scroll;\
	overflow-x: hidden;\
}\
\
#__rdly .__rdly-scrollable-y > * {\
	height: auto;\
	overflow: visible;\
}\
";

	// To put on the window object, or export into a module
    return coreCSS;
}));

},{}],5:[function(require,module,exports){
/* Parser.js
* 
* Make your own parser if you want, as long as
* its .parse() returns a list of lists of strings.
* (list of sentences which are lists of words)
*/

(function (root, parserFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {  // amd if possible
        // AMD. Register as an anonymous module.
        define( ['jquery'], function (jquery) { return (root.Parser = parserFactory(jquery) ); });
    } else if (typeof module === 'object' && module.exports) {  // Node-ish next
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = parserFactory( require('jquery') );
    } else {  // Global if nothing else
        // Browser globals
        root.Parser = parserFactory( jQuery );
    }
}(this, function ($) {
	/* (jQuery) -> Parser Constructor */

    "use strict";


    var Parser = function ( cleanNode, detectLanguage, findArticle, cleanText, splitSentences ) {
    /* (func, func, func, func) -> Parser
    * 
    * Given a set of functions, returns an object that can use those modules to
    * extract text as a list of sentences. If all that's being passed in is
    * text (not a DOM node), the only required modules are 'cleanText' and `splitSentences`.
    *
    * - 'cleanNode' accepts a DOM node and removes unwanted elements
    * - `detectLanguage` accepts a string of text and returns the code
    * for the detected language
    * - `findArticle` uses that language and a DOM Node containing text
    * to return the main text of the article
    * - `cleanText` accepts a string and does something (or nothing) to
    * it, then returns the changed (or same) string
    * - `splitSentences` accepts text (best with English) and returns a
    * list of sentences containing lists of words
    */
    	var rPar = {};

    	rPar.language = 'en';


    	rPar.debug = true;


		rPar.cleanHTML = function ( $node ) {
		// Remove unwanted nodes from the text
			$node.find('sup').remove();
			// These would have English, so they'd skew language detection results
			$node.find('script').remove();
			$node.find('style').remove();
			return $node;
		};


		rPar.smallSample = function ( node, desiredSampleLength ) {
		/* ( jQuery Node, [int] ) -> Str
		* 
		* Get a sample of the text (probably to use in detecting language)
		* A hack for language detection for now until language detection
		* is made lazy.
		*/
			var $node 				= $(node),
				halfSampleLength 	= desiredSampleLength/2 || 500;


			var text = $node.text();
			text = text.replace(/\s\s+/g, ' ');

			// Average letter length of an English word = ~5 characters + a space
			var aproxNumWords 	= Math.floor(text.length/6),
				halfNumWords 	= aproxNumWords/2;

			// Want to get as close to 1k words as possible
			var startingPoint, length;
			if ( halfNumWords > halfSampleLength ) {
				length = halfSampleLength * 2;
				startingPoint = halfNumWords - halfSampleLength;
			} else {
				length = text.length;
				startingPoint = 0;
			}

			var sample = text.slice( startingPoint, startingPoint + length );

    		if (rPar.debug) {  // Help non-coder devs identify some bugs
        	    console.log( '~~~parse debug~~~ text sample to send to language detection (Readerly code, not from a library or package):', sample );
    		}

			return sample;
		};  // End rPar.smallSample()


		rPar.parse = function ( input ) {
	    /* ( DOM Node || Str ) -> [Str]
	    * 
	    * Given an DOM node or string of text, returns a list of sentences.
	    * What it returns depends heavily on
	    */
	    	var rawText = '';

	    	if ( typeof input === 'string' ) {

	    		rawText = input;

	    	// Otherwise it's a DOM node
	    	} else {
	    		var $node = $(input);

		    	var clone = $node.clone()[0],
		    		clean = cleanNode( clone );

		    	var sampleText 	= rPar.smallSample( clean ),
		    		lang 		= detectLanguage( sampleText );
		    	rPar.language 	= lang;

		    	rawText = findArticle( clean, lang );
	    	}

	    	var refinedText = cleanText( rawText ),
	    		sentences = splitSentences( refinedText );

	    	return sentences;
		};  // End rPar.parse()

		return rPar;
    };  // End Parser() -> {}

    return Parser;
}));

},{"jquery":103}],6:[function(require,module,exports){
/* WordNav.js
* 
* Navigate the sentences and words in Words
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/ReadBlock.js
* 
* TODO:
* - ??: Add delay for paragraph?
* - Reset values non-destructively
* 
* DONE:
* - Go back a sentence - array of indexes where sentences start?
* - Change max word length - recombine split words (record of which
* words were split) and address each word that is longer than
* the max-word length.
* - Split Qeue into
*   Words and...
*   Word(s) Navigator/Trotter/Transporter/Traveler/Traverse/Walker/Explorer
*/

(function (root, wNavFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {  // amd if possible
        // AMD. Register as an anonymous module.
        define( [], function () { return ( root.WordNav = wNavFactory() ) });
    } else if (typeof module === 'object' && module.exports) {  // Node-ish next
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = wNavFactory();
    } else {  // Global if nothing else
        // Browser globals
        // !!! Broken !!!
        root.WordNav = wNavFactory( Fragment, root );  // root.sentences is undefined :P Not sure what to provide there
    }
}(this, function () {

    "use strict";


    // TODO: Do this without needing a new object each time
    var WordNav = function () {
    /* ( None ) -> WordNav
    * 
    * Provides commands for getting the words/fragments passed into
    * its `.process()`. 
    * Always use .getFragment()
    */
        var wNav = {};

        // Contains .sentences, .positions
        wNav.words = null;

        wNav.index 		 = 0;
        wNav.position    = [0, 0, 0],
        wNav.currentWord = null;
        wNav.fragmentor  = null;


        // ==== Internal ==== \\
        wNav._progress 	= 0;
        var sentences 	= wNav._sentences = null;
        var positions 	= wNav._positions = [];


       	wNav.process = function ( senteceArray, fragmentor ) {
       		if (!senteceArray) { console.error('WordNav needs dataz to .process(). You gave it dis:', senteceArray); }

            wNav.fragmentor = fragmentor;

            sentences = wNav.sentences = senteceArray;  
            positions = wNav.positions = [];  // TODO: ??: Empty non-destructively??

            for ( let senti = 0; senti < sentences.length; senti++ ) {
                
                let sentence  = sentences[senti];
                for (let wordi = 0; wordi < sentence.length; wordi++) {
                    positions.push([ senti, wordi ]);
                };
            }

	       return wNav;
       	};



        // ========= RUNTIME: TRAVELING THE WORDS/SENTENCES (for external use) ========= \\

        wNav.restart = function () {
            wNav.index    = 0;
            wNav.position = [0, 0, 0];
            return wNav;
        };


        wNav.getFragment = function ( changesOrIndex ) {
        /* ( [int, int, int] or int ) -> Str
        * 
        * Currently it seems that only one of the ints can be something
        * other than 0.
        * ??: Find cases where that isn't true.
        */
            var frag        = null;
            var pos         = wNav.position,
            // wNav.currentWord isn't just a string. It's not from the sentence/word
            // array, it's a word once it has been fragmented into a list of strings
                currentWord = wNav.currentWord;

            // TODO:
            // If maxNumCharacters changed, re-fragment word and start at
            // the beginning of word

            // if plain index change/jump
            if ( typeof changesOrIndex === 'number' ) {
                currentWord = wNav._stepWord( changesOrIndex );
                pos[2]      = 0;

            // !!! CAN ONLY CHANGE ONE POSITION AT A TIME !!! \\

            // if sentence change
            } else if ( changesOrIndex[0] !== 0 ) {

                // find new sentence and get the new index
                var index   = wNav._stepSentence( changesOrIndex[0] );
                currentWord = wNav._stepWord( index );
                pos[2]      = 0;

            // if word change
            } else if ( changesOrIndex[1] !== 0 ) {

                index       = wNav.index + changesOrIndex[1];
                currentWord = wNav._stepWord( index );
                pos[2]      = 0;

            // if fragment change
            } else if ( changesOrIndex[2] > 0 ) {  // No provision for backwards fragment travel

                var fragi = pos[2] + changesOrIndex[2];

                // if current fragment starts new word
                if ( fragi >= currentWord.length ) {
                    
                    currentWord = wNav._stepWord( wNav.index + 1 );
                    pos[2]      = 0;
                
                } else {

                    // don't change index or current word, just current fragment position
                    pos[2] = fragi;

                }

            } else {
                currentWord = wNav._stepWord( wNav.index );
                pos[2]      = 0;
            } // end if index or which position changed


            wNav.currentWord = currentWord;
            frag             = currentWord[ pos[2] ];

            return frag;
        }  // End wNav.getFragment()



        wNav._stepWord = function ( index ) {
        // ( int ) -> [ Str ]
            wNav.index      = wNav.normalizeIndex( index );
            var pos         = positions[ wNav.index ];
            wNav.position[0]= pos[0];
            wNav.position[1]= pos[1];
            var word        = sentences[ wNav.position[0] ][ wNav.position[1] ],
                fragmented  = wNav.fragmentor.process( word );

            return fragmented;
        };  // End wNav._stepWord()



        wNav._stepSentence = function ( sentenceChange ) {
        // ( [int, int] ) -> Int
            if ( sentenceChange === 0 ) { return 0; }

            var pos     = [ wNav.position[0], wNav.position[1] ],
                senti   = pos[0],
                wordi   = pos[1];

            // If in the last sentence, go to the last word
            if ( sentenceChange > 0 && senti >= (sentences.length - 1) ) {
                wordi = sentences[ senti ].length - 1;

            } else {
                // If we're in the middle of a sentence and we're
                // only going back one step, go back to the beginning of the sentence
                if ( sentenceChange === -1 && wordi > 0 ) {}  // No change to sentence
                // otherwise change sentence
                else { senti += sentenceChange; }
                // Either way, word is first word of sentence
                wordi = 0;
            }  // end if at last sentence

            pos[1] = wordi;
            pos[0] = wNav.normalizeSentencePos( senti );

            var newIndex = wNav._sentenceChangeToIndex( sentenceChange, pos );
            if ( newIndex === null ) { newIndex = wNav.index; }

            return newIndex;
        };  // End wNav._stepSentence


        wNav._sentenceChangeToIndex = function ( sentenceChange, newPos ) {
        /* ( int ) -> Int or null
        * 
        * Given the direction of change and the position desired, find the
        * index of the new position.
        * Only used for sentence changes. If we need something else,
        * we'll see about that then. Just trying to speed up the search.
        */
            if ( sentenceChange === 0 ) { return 0; }  // signOf shouldn't return NaN now

            var incrementor = signOf( sentenceChange ),  // 1 or -1
                tempi       = wNav.index,
                found       = false;

            // Until we find the position or there are no more positions left
            while ( !found && positions[ tempi ] ) {
                // Test out positions
                var pos = positions[ tempi ];
                if ( pos[0] === newPos[0] && pos[1] === newPos[1] ) {
                    found = true;
                }
                // If not found, keep going until there are no more positions left in the list
                if (!found) { tempi += incrementor; }
            }

            // If we went through all the list we could and didn't find anything, say so
            // Not quite sure why that would happen, though
            if ( !positions[tempi] ) { tempi = null; }

            return tempi;
        };  // End wNav._sentenceChangeToIndex()


        wNav._positionToIndex = function ( pos ) {
        /* ( [int, int] ) -> Int
        * 
        * Given a [sentence, word] position, find the index of that
        * configuration in the positions list. If none found, return
        * -1. (There are ways to speed this up if needed, like checking
        * just sentence index first until sentence found, etc).
        * 
        * This is different from ._sentenceChangeToIndex() because this
        * one searches the whole array, it doesn't start from the current
        * position and work in a direction (back of forward) from there.
        * TODO: Performance analysis on long texts
        */
            var index = positions.findIndex( function matchPosToIndex( potential ) {
                var sent = (pos[0] === potential[0]),
                    frag = (pos[1] === potential[1]);
                return sent && frag;
            })
            return index;
        }



        // ========== utilities ========== \\

        var signOf = function ( num ) {
            return typeof num === 'number' ? num ? num < 0 ? -1 : 1 : num === num ? num : NaN : NaN;
        }

        wNav.normalizeIndex = function ( index ) {
            index = Math.min( index, positions.length - 1 );  // max
            return Math.max( index, 0 );  // min
        };
        wNav.normalizeSentencePos = function ( senti ) {
            senti = Math.min( senti, (sentences.length - 1) );
            return Math.max( senti, 0 );
        };



        // ========== gets ========== \\

        wNav.getProgress = function () {
            wNav._progress = wNav.index / (positions.length - 1);
            return wNav._progress;
        };
        wNav.getLength = function () { return positions.length; };
        wNav.getIndex = function () { return wNav.index; }


        return wNav;
    };  // End WordNav() -> {}

    return WordNav;
}));

},{}],7:[function(require,module,exports){
/* WordSplitter.js
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/ReadBlock.js
* 
* Split a word into fragments based on... its length?
*/

(function (root, splitFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () { return ( root.WordSplitter = splitFactory() ); });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = splitFactory();
    } else {
        // Browser globals
        root.WordSplitter = splitFactory();
    }
}(this, function () {

	"use strict";


	var WordSplitter = function ( charsNode, settings, storage ) {
	/* ( DOM Node, async {} ) -> WordSplitter
	* 
	* Returns an object that takes a string and returns an array
	* of strings, each of which isn't longer than it should
	* be.
	*/
		var rSpt = {};


		// ============= SETUP ============= \\

		rSpt.charsNode 	= charsNode;  // No reason I can see for this to change
		rSpt._settings 	= {};
		var _wSetts 	= rSpt._settings;
		var defaults 	= { maxNumCharacters: 10 };


		// var setSettingsAtStart = function ( maxObj ) {
		// /* 
		// * Get settings established in this WordSplitter and set default max in storage if needed
		// * Async
		// */
		// 	if ( maxObj ) {
		// 		rSpt.set( 'maxNumCharacters', maxObj.maxNumCharacters );
		// 	} else {
		// 		storage.set( defaults );
		// 		rSpt.set( 'maxNumCharacters', defaults.maxNumCharacters );
		// 	}
		// }

		// storage.loadAll( setSettingsAtStart );

		rSpt._init = function ( settings ) {

			var maxNumCharacters = settings.maxNumCharacters || defaults.maxNumCharacters;

			// !!!FOR DEBUGGING ONLY!!!
			if ( false ) storage.clear()
			
			// Update settings based on what's passed in
			rSpt.set( 'maxNumCharacters', maxNumCharacters);

			return rSpt;
		};  // End rSpt._init()



		// ============= USER INPUT ============= \\

		rSpt.settingsAvailable = ['maxNumCharcters'];

		rSpt.set = function ( settingName, value) {
			// If we just go off of lowercase, we can remove at
			// least some typo mistakes and uncertainties
			var op = '_set' + settingName;
			if ( !rSpt[ op ] ) {
				console.error('There is no approved setting by the name of "' + operation + '". Maybe check your capitalization. Also, you can check `yourWordSplitterObj.settingsAvailable` to see what setting names are available to you.');
				return null;
			}
			
			// The value after it has been normalized
			var val = rSpt[ op ]( value );

			// Create object for data so we can use the value of `op` as a key
			// instead of the literal word "op"
			var toSave 				= {};
			toSave[ settingName ] 	= val;
			storage.set( toSave );  // Should this be all lowercase too?

			_wSetts[ settingName ] = val;
			// console.trace(_wSetts)
			return rSpt;
		};  // End rSpt.set()


		rSpt._setmaxNumCharacters = function ( max ) {
			return Math.max(max, 1);  // Minimum allowed length = 1
		};  // End rSpt.setMaxNumCharacters()



		// ============= RUNTIME ============= \\

		rSpt._getMaxLength = function ( word, styles ) {

			// Get the max letters that can fit in the width
			var pxWidth		= parseFloat( styles['width'].replace('px', '') ),
				fontSize 	= parseFloat( styles['font-size'].replace('px', '') );

			var remWidth 	= Math.floor( pxWidth/fontSize );
			// Get the max letters that are allowed by the user
			var userMaxChars = rSpt._settings.maxNumCharacters;
			// Get the smaller of the two (the limiting factor)
			var maxChars 	 = Math.min( userMaxChars, remWidth );

			return maxChars;
		};  // End rSpt._getMaxLength()


		rSpt._makeCharsMap = function ( chars, maxWithHyphen ) {
		/* ( str, int ) -> [Int]
		* 
		* Return an array of how many groups of how many strings
		* the final word array should contain.
		*/
			var splitGroupLengths 	= [],
				evenly 				= Math.floor(chars.length/maxWithHyphen);

			// If we were to split the word evenly, how many letters would
			// go in each group? How many groups would there be? (not counting the remainder)
			for (let numi = 0; numi < evenly; numi++) {
				splitGroupLengths.push( maxWithHyphen );
			};

			// Find how much would remain after dividing the string evenly
			// If there's an imbalance, redistribute a bit
			var remainder = chars.length % maxWithHyphen,
				// How many letters are missing
				needed 	  = maxWithHyphen - remainder,
				// We'll add some back in by taking away letters from others
				halved 	  = Math.floor(needed/2),
				// `havled` removes characters counts from other items
				// Have to remember to add them to the very end (the remainder)
				toAddBack = halved + remainder;

			// And add that back into the mix, distributed in a... sensical? way
			// Right now: letters are removed from the starting strings in
			// order to make up for the last string (really I'd rather take from
			// every other group, visiting all eventually, but this is just
			// proof of concept)
			// Do that before adding the last group so we don't mess with the last group amount
			var lastIndx = splitGroupLengths.length,
				indx 	 = 0;
			while ( halved > 0 ) {

				splitGroupLengths[indx] = splitGroupLengths[indx] - 1;

				indx 	= indx + 1;
				// Start from the beginning string again if more need to be redistributed
				indx 	= indx % lastIndx;
				halved 	= halved - 1;
			}

			splitGroupLengths.push( toAddBack );

			return splitGroupLengths;
		};  // End rSpt._makeCharsMap()


		rSpt._splitWord = function ( chars, maxChars ) {
		/* ( str, int ) -> [ str ]
		* 
		* Returns `chars` as string split into, ideally, syllables,
		* but in actual fact, just into parts of aproximately a
		* certain length that each isn't longer than `maxChars`
		* 
		* Note: Hyphens are added and accounted for.
		*/
			var split = [];

			// If it doesn't need to be broken up at all, just return what we have in an array
			if ( chars.length <= maxChars ) { return [chars]; }

			// TODO: Allow custom inclusion of hyphens. If hyphens are excluded
			// suggest whitespace indicators instead.
			// ??: If maxChars < 4, suggest space indicators instead of hypens?

			// If it's just one character long, it's super easy. There's
			// not even room for a hyphen. ??: Suggest whitespace indicators?
			if ( maxChars === 1 ) { return chars.split(''); }

			// Remember we're adding a dash to break up words
			var maxWithHyphen = maxChars - 1,
				maybeHyphen   = '-';
			// No dash for less than 4 characters
			if ( maxChars < 4 ) {
				maxWithHyphen 	= maxChars;
				maybeHyphen 	= '';
			}

			var splitMap = rSpt._makeCharsMap( chars, maxWithHyphen );

			// Build the list of strings with the right number of letters
			var start = 0;
			for (let numi = 0; numi < splitMap.length; numi++) {
				let str = chars.slice( start, start + splitMap[numi] );

				// Make sure last string doesn't get a hyphen
				if (numi < splitMap.length - 1) {
					str = str + maybeHyphen
				}

				split.push(str);
				// Start the next one where we finished this one
				start = start + splitMap[numi];
			};

			return split;
		};  // End rSpt._splitWord()



		// ========== EXTERNAL ========== \\

		rSpt.process = function( chars ) {
			// Check the chars' container node each time in case its size has changed
			// var charsNode 	= document.getElementByID( '__rdly_text_button' ),
			var styles 		= window.getComputedStyle( rSpt.charsNode ),
				maxLength 	= rSpt._getMaxLength( chars, styles );

			var split 		= rSpt._splitWord( chars, maxLength );

			return split;
		};  // End rSpt.process()



		// ========= DO IT ========== \\

		rSpt._init( settings );

		return rSpt;
	};  // End WordSplitter() -> {}

    return WordSplitter;
}));

},{}],8:[function(require,module,exports){
/* Words.js
* 
* Breaking up the text into sentences and words
* (currently word fragments, actually, but that will
* be phased out)
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/ReadBlock.js
* 
* TODO:
* - ??: Should be called Sentences instead? A bit long :/
* 
* DONE:
* - Split Queue into
*   Words and...
*   Word(s) Navigator/Trotter/Transporter/Traveler/Traverse/Walker/Explorer
*/

(function (root, wordsFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {  // amd if possible
        // AMD. Register as an anonymous module.
        define( [], function () { return (root.Words = wordsFactory() ); });
    } else if (typeof module === 'object' && module.exports) {  // Node-ish next
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = wordsFactory();
    } else {  // Global if nothing else
        // Browser globals
        root.Words = wordsFactory();
    }
}(this, function () {

    "use strict";


    var Words = function () {
    /* ( None ) -> Words()
    * 
    * Will turn arrays of arrays of words into an object containing
    * the same /plus/ an array of positions of those arrays and words -
    * The positions of words and their place in each sentence.
    */
        var wrds = {};

        // ========= (for external use) ========= \\
        wrds.sentences = [];  // TODO: Change to .sentences
        // Since data will be in arrays of sentences with words, this will
        // tell us which index corresponds to which sentence/word position
        wrds.positions = [];


        // ========= BUILD THE QUEUE (internal) ========= \\
        wrds.process = function ( sentences ) {
        /* ( [[Str]] ) -> Words
        * 
        * Accepts array of array of strings (which should represent
        * words in sentences). Returnsan object containing the same
        * /plus/ an array of positions of those arrays and words -
        * The positions of words and their place in each sentence.
        */
            var wordObjs   	= wrds.sentences = sentences;  
            var positions   = wrds.positions = [];

            for ( let senti = 0; senti < sentences.length; senti++ ) {
                
                let sentence  = sentences[senti];
                for (let wordi = 0; wordi < sentence.length; wordi++) {
                    positions.push([ senti, wordi ]);
                };
            }

            return wrds;
        };  // End wrds.process()


        return wrds;
    };  // End Words() -> {}

    return Words;
}));


},{}],9:[function(require,module,exports){
module.exports={
  "aar": {
    "terminologic": null,
    "iso6391": "aa",
    "name": "Afar"
  },
  "abk": {
    "terminologic": null,
    "iso6391": "ab",
    "name": "Abkhazian"
  },
  "ace": {
    "terminologic": null,
    "iso6391": null,
    "name": "Achinese"
  },
  "ach": {
    "terminologic": null,
    "iso6391": null,
    "name": "Acoli"
  },
  "ada": {
    "terminologic": null,
    "iso6391": null,
    "name": "Adangme"
  },
  "ady": {
    "terminologic": null,
    "iso6391": null,
    "name": "Adyghe; Adygei"
  },
  "afa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Afro-Asiatic languages"
  },
  "afh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Afrihili"
  },
  "afr": {
    "terminologic": null,
    "iso6391": "af",
    "name": "Afrikaans"
  },
  "ain": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ainu"
  },
  "aka": {
    "terminologic": null,
    "iso6391": "ak",
    "name": "Akan"
  },
  "akk": {
    "terminologic": null,
    "iso6391": null,
    "name": "Akkadian"
  },
  "alb": {
    "terminologic": "sqi",
    "iso6391": "sq",
    "name": "Albanian"
  },
  "ale": {
    "terminologic": null,
    "iso6391": null,
    "name": "Aleut"
  },
  "alg": {
    "terminologic": null,
    "iso6391": null,
    "name": "Algonquian languages"
  },
  "als": {
    "terminologic": "sqi",
    "iso6391": "sq",
    "name": "Albanian"
  },
  "alt": {
    "terminologic": null,
    "iso6391": null,
    "name": "Southern Altai"
  },
  "amh": {
    "terminologic": null,
    "iso6391": "am",
    "name": "Amharic"
  },
  "ang": {
    "terminologic": null,
    "iso6391": null,
    "name": "English, Old (ca.450-1100)"
  },
  "anp": {
    "terminologic": null,
    "iso6391": null,
    "name": "Angika"
  },
  "apa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Apache languages"
  },
  "ara": {
    "terminologic": null,
    "iso6391": "ar",
    "name": "Arabic"
  },
  "arb": {
    "iso6392": "ara",
    "iso6391": "ar",
    "name": "Arabic"
  },
  "arc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Official Aramaic (700-300 BCE); Imperial Aramaic (700-300 BCE)"
  },
  "arg": {
    "terminologic": null,
    "iso6391": "an",
    "name": "Aragonese"
  },
  "arm": {
    "terminologic": "hye",
    "iso6391": "hy",
    "name": "Armenian"
  },
  "arn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mapudungun; Mapuche"
  },
  "arp": {
    "terminologic": null,
    "iso6391": null,
    "name": "Arapaho"
  },
  "art": {
    "terminologic": null,
    "iso6391": null,
    "name": "Artificial languages"
  },
  "arw": {
    "terminologic": null,
    "iso6391": null,
    "name": "Arawak"
  },
  "asm": {
    "terminologic": null,
    "iso6391": "as",
    "name": "Assamese"
  },
  "ast": {
    "terminologic": null,
    "iso6391": null,
    "name": "Asturian; Bable; Leonese; Asturleonese"
  },
  "ath": {
    "terminologic": null,
    "iso6391": null,
    "name": "Athapascan languages"
  },
  "aus": {
    "terminologic": null,
    "iso6391": null,
    "name": "Australian languages"
  },
  "ava": {
    "terminologic": null,
    "iso6391": "av",
    "name": "Avaric"
  },
  "ave": {
    "terminologic": null,
    "iso6391": "ae",
    "name": "Avestan"
  },
  "awa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Awadhi"
  },
  "aym": {
    "terminologic": null,
    "iso6391": "ay",
    "name": "Aymara"
  },
  "aze": {
    "terminologic": null,
    "iso6391": "az",
    "name": "Azerbaijani"
  },
  "bad": {
    "terminologic": null,
    "iso6391": null,
    "name": "Banda languages"
  },
  "bai": {
    "terminologic": null,
    "iso6391": null,
    "name": "Bamileke languages"
  },
  "bak": {
    "terminologic": null,
    "iso6391": "ba",
    "name": "Bashkir"
  },
  "bal": {
    "terminologic": null,
    "iso6391": null,
    "name": "Baluchi"
  },
  "bam": {
    "terminologic": null,
    "iso6391": "bm",
    "name": "Bambara"
  },
  "ban": {
    "terminologic": null,
    "iso6391": null,
    "name": "Balinese"
  },
  "baq": {
    "terminologic": "eus",
    "iso6391": "eu",
    "name": "Basque"
  },
  "bas": {
    "terminologic": null,
    "iso6391": null,
    "name": "Basa"
  },
  "bat": {
    "terminologic": null,
    "iso6391": null,
    "name": "Baltic languages"
  },
  "bej": {
    "terminologic": null,
    "iso6391": null,
    "name": "Beja; Bedawiyet"
  },
  "bel": {
    "terminologic": null,
    "iso6391": "be",
    "name": "Belarusian"
  },
  "bem": {
    "terminologic": null,
    "iso6391": null,
    "name": "Bemba"
  },
  "ben": {
    "terminologic": null,
    "iso6391": "bn",
    "name": "Bengali"
  },
  "ber": {
    "terminologic": null,
    "iso6391": null,
    "name": "Berber languages"
  },
  "bho": {
    "terminologic": null,
    "iso6391": null,
    "name": "Bhojpuri"
  },
  "bih": {
    "terminologic": null,
    "iso6391": "bh",
    "name": "Bihari languages"
  },
  "bik": {
    "terminologic": null,
    "iso6391": null,
    "name": "Bikol"
  },
  "bin": {
    "terminologic": null,
    "iso6391": null,
    "name": "Bini; Edo"
  },
  "bis": {
    "terminologic": null,
    "iso6391": "bi",
    "name": "Bislama"
  },
  "bla": {
    "terminologic": null,
    "iso6391": null,
    "name": "Siksika"
  },
  "bnt": {
    "terminologic": null,
    "iso6391": null,
    "name": "Bantu (Other)"
  },
  "bod": {
    "bibliographic": "tib",
    "iso6391": "bo",
    "name": "Tibetan"
  },
  "bos": {
    "terminologic": null,
    "iso6391": "bs",
    "name": "Bosnian"
  },
  "bra": {
    "terminologic": null,
    "iso6391": null,
    "name": "Braj"
  },
  "bre": {
    "terminologic": null,
    "iso6391": "br",
    "name": "Breton"
  },
  "btk": {
    "terminologic": null,
    "iso6391": null,
    "name": "Batak languages"
  },
  "bua": {
    "terminologic": null,
    "iso6391": null,
    "name": "Buriat"
  },
  "bug": {
    "terminologic": null,
    "iso6391": null,
    "name": "Buginese"
  },
  "bul": {
    "terminologic": null,
    "iso6391": "bg",
    "name": "Bulgarian"
  },
  "bur": {
    "terminologic": "mya",
    "iso6391": "my",
    "name": "Burmese"
  },
  "byn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Blin; Bilin"
  },
  "cad": {
    "terminologic": null,
    "iso6391": null,
    "name": "Caddo"
  },
  "cai": {
    "terminologic": null,
    "iso6391": null,
    "name": "Central American Indian languages"
  },
  "car": {
    "terminologic": null,
    "iso6391": null,
    "name": "Galibi Carib"
  },
  "cat": {
    "terminologic": null,
    "iso6391": "ca",
    "name": "Catalan; Valencian"
  },
  "cau": {
    "terminologic": null,
    "iso6391": null,
    "name": "Caucasian languages"
  },
  "ceb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Cebuano"
  },
  "cel": {
    "terminologic": null,
    "iso6391": null,
    "name": "Celtic languages"
  },
  "ces": {
    "bibliographic": "cze",
    "iso6391": "cs",
    "name": "Czech"
  },
  "cha": {
    "terminologic": null,
    "iso6391": "ch",
    "name": "Chamorro"
  },
  "chb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Chibcha"
  },
  "che": {
    "terminologic": null,
    "iso6391": "ce",
    "name": "Chechen"
  },
  "chg": {
    "terminologic": null,
    "iso6391": null,
    "name": "Chagatai"
  },
  "chi": {
    "terminologic": "zho",
    "iso6391": "zh",
    "name": "Chinese"
  },
  "chk": {
    "terminologic": null,
    "iso6391": null,
    "name": "Chuukese"
  },
  "chm": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mari"
  },
  "chn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Chinook jargon"
  },
  "cho": {
    "terminologic": null,
    "iso6391": null,
    "name": "Choctaw"
  },
  "chp": {
    "terminologic": null,
    "iso6391": null,
    "name": "Chipewyan; Dene Suline"
  },
  "chr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Cherokee"
  },
  "chu": {
    "terminologic": null,
    "iso6391": "cu",
    "name": "Church Slavic; Old Slavonic; Church Slavonic; Old Bulgarian; Old Church Slavonic"
  },
  "chv": {
    "terminologic": null,
    "iso6391": "cv",
    "name": "Chuvash"
  },
  "chy": {
    "terminologic": null,
    "iso6391": null,
    "name": "Cheyenne"
  },
  "cmc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Chamic languages"
  },
  "cmn": {
    "bibliographic": "chi",
    "iso6391": "zh",
    "name": "Chinese"
  },
  "cop": {
    "terminologic": null,
    "iso6391": null,
    "name": "Coptic"
  },
  "cor": {
    "terminologic": null,
    "iso6391": "kw",
    "name": "Cornish"
  },
  "cos": {
    "terminologic": null,
    "iso6391": "co",
    "name": "Corsican"
  },
  "cpe": {
    "terminologic": null,
    "iso6391": null,
    "name": "Creoles and pidgins, English based"
  },
  "cpf": {
    "terminologic": null,
    "iso6391": null,
    "name": "Creoles and pidgins, French-based "
  },
  "cpp": {
    "terminologic": null,
    "iso6391": null,
    "name": "Creoles and pidgins, Portuguese-based "
  },
  "cre": {
    "terminologic": null,
    "iso6391": "cr",
    "name": "Cree"
  },
  "crh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Crimean Tatar; Crimean Turkish"
  },
  "crp": {
    "terminologic": null,
    "iso6391": null,
    "name": "Creoles and pidgins "
  },
  "csb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kashubian"
  },
  "cus": {
    "terminologic": null,
    "iso6391": null,
    "name": "Cushitic languages"
  },
  "cym": {
    "bibliographic": "wel",
    "iso6391": "cy",
    "name": "Welsh"
  },
  "cze": {
    "terminologic": "ces",
    "iso6391": "cs",
    "name": "Czech"
  },
  "dak": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dakota"
  },
  "dan": {
    "terminologic": null,
    "iso6391": "da",
    "name": "Danish"
  },
  "dar": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dargwa"
  },
  "day": {
    "terminologic": null,
    "iso6391": null,
    "name": "Land Dayak languages"
  },
  "del": {
    "terminologic": null,
    "iso6391": null,
    "name": "Delaware"
  },
  "den": {
    "terminologic": null,
    "iso6391": null,
    "name": "Slave (Athapascan)"
  },
  "deu": {
    "bibliographic": "ger",
    "iso6391": "de",
    "name": "German"
  },
  "dgr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dogrib"
  },
  "din": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dinka"
  },
  "div": {
    "terminologic": null,
    "iso6391": "dv",
    "name": "Divehi; Dhivehi; Maldivian"
  },
  "doi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dogri"
  },
  "dra": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dravidian languages"
  },
  "dsb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lower Sorbian"
  },
  "dua": {
    "terminologic": null,
    "iso6391": null,
    "name": "Duala"
  },
  "dum": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dutch, Middle (ca.1050-1350)"
  },
  "dut": {
    "terminologic": "nld",
    "iso6391": "nl",
    "name": "Dutch; Flemish"
  },
  "dyu": {
    "terminologic": null,
    "iso6391": null,
    "name": "Dyula"
  },
  "dzo": {
    "terminologic": null,
    "iso6391": "dz",
    "name": "Dzongkha"
  },
  "efi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Efik"
  },
  "egy": {
    "terminologic": null,
    "iso6391": null,
    "name": "Egyptian (Ancient)"
  },
  "eka": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ekajuk"
  },
  "ell": {
    "bibliographic": "gre",
    "iso6391": "el",
    "name": "Greek, Modern (1453-)"
  },
  "elx": {
    "terminologic": null,
    "iso6391": null,
    "name": "Elamite"
  },
  "eng": {
    "terminologic": null,
    "iso6391": "en",
    "name": "English"
  },
  "enm": {
    "terminologic": null,
    "iso6391": null,
    "name": "English, Middle (1100-1500)"
  },
  "epo": {
    "terminologic": null,
    "iso6391": "eo",
    "name": "Esperanto"
  },
  "est": {
    "terminologic": null,
    "iso6391": "et",
    "name": "Estonian"
  },
  "eus": {
    "bibliographic": "baq",
    "iso6391": "eu",
    "name": "Basque"
  },
  "ewe": {
    "terminologic": null,
    "iso6391": "ee",
    "name": "Ewe"
  },
  "ewo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ewondo"
  },
  "fan": {
    "terminologic": null,
    "iso6391": null,
    "name": "Fang"
  },
  "fao": {
    "terminologic": null,
    "iso6391": "fo",
    "name": "Faroese"
  },
  "fas": {
    "bibliographic": "per",
    "iso6391": "fa",
    "name": "Persian"
  },
  "fat": {
    "terminologic": null,
    "iso6391": null,
    "name": "Fanti"
  },
  "fij": {
    "terminologic": null,
    "iso6391": "fj",
    "name": "Fijian"
  },
  "fil": {
    "terminologic": null,
    "iso6391": null,
    "name": "Filipino; Pilipino"
  },
  "fin": {
    "terminologic": null,
    "iso6391": "fi",
    "name": "Finnish"
  },
  "fiu": {
    "terminologic": null,
    "iso6391": null,
    "name": "Finno-Ugrian languages"
  },
  "fon": {
    "terminologic": null,
    "iso6391": null,
    "name": "Fon"
  },
  "fra": {
    "bibliographic": "fre",
    "iso6391": "fr",
    "name": "French"
  },
  "fre": {
    "terminologic": "fra",
    "iso6391": "fr",
    "name": "French"
  },
  "frm": {
    "terminologic": null,
    "iso6391": null,
    "name": "French, Middle (ca.1400-1600)"
  },
  "fro": {
    "terminologic": null,
    "iso6391": null,
    "name": "French, Old (842-ca.1400)"
  },
  "frr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Northern Frisian"
  },
  "frs": {
    "terminologic": null,
    "iso6391": null,
    "name": "Eastern Frisian"
  },
  "fry": {
    "terminologic": null,
    "iso6391": "fy",
    "name": "Western Frisian"
  },
  "ful": {
    "terminologic": null,
    "iso6391": "ff",
    "name": "Fulah"
  },
  "fur": {
    "terminologic": null,
    "iso6391": null,
    "name": "Friulian"
  },
  "gaa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ga"
  },
  "gay": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gayo"
  },
  "gba": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gbaya"
  },
  "gem": {
    "terminologic": null,
    "iso6391": null,
    "name": "Germanic languages"
  },
  "geo": {
    "terminologic": "kat",
    "iso6391": "ka",
    "name": "Georgian"
  },
  "ger": {
    "terminologic": "deu",
    "iso6391": "de",
    "name": "German"
  },
  "gez": {
    "terminologic": null,
    "iso6391": null,
    "name": "Geez"
  },
  "gil": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gilbertese"
  },
  "gla": {
    "terminologic": null,
    "iso6391": "gd",
    "name": "Gaelic; Scottish Gaelic"
  },
  "gle": {
    "terminologic": null,
    "iso6391": "ga",
    "name": "Irish"
  },
  "glg": {
    "terminologic": null,
    "iso6391": "gl",
    "name": "Galician"
  },
  "glv": {
    "terminologic": null,
    "iso6391": "gv",
    "name": "Manx"
  },
  "gmh": {
    "terminologic": null,
    "iso6391": null,
    "name": "German, Middle High (ca.1050-1500)"
  },
  "goh": {
    "terminologic": null,
    "iso6391": null,
    "name": "German, Old High (ca.750-1050)"
  },
  "gon": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gondi"
  },
  "gor": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gorontalo"
  },
  "got": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gothic"
  },
  "grb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Grebo"
  },
  "grc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Greek, Ancient (to 1453)"
  },
  "gre": {
    "terminologic": "ell",
    "iso6391": "el",
    "name": "Greek, Modern (1453-)"
  },
  "grn": {
    "terminologic": null,
    "iso6391": "gn",
    "name": "Guarani"
  },
  "gsw": {
    "terminologic": null,
    "iso6391": null,
    "name": "Swiss German; Alemannic; Alsatian"
  },
  "guj": {
    "terminologic": null,
    "iso6391": "gu",
    "name": "Gujarati"
  },
  "gwi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Gwich'in"
  },
  "hai": {
    "terminologic": null,
    "iso6391": null,
    "name": "Haida"
  },
  "hat": {
    "terminologic": null,
    "iso6391": "ht",
    "name": "Haitian; Haitian Creole"
  },
  "hau": {
    "terminologic": null,
    "iso6391": "ha",
    "name": "Hausa"
  },
  "haw": {
    "terminologic": null,
    "iso6391": null,
    "name": "Hawaiian"
  },
  "heb": {
    "terminologic": null,
    "iso6391": "he",
    "name": "Hebrew"
  },
  "her": {
    "terminologic": null,
    "iso6391": "hz",
    "name": "Herero"
  },
  "hil": {
    "terminologic": null,
    "iso6391": null,
    "name": "Hiligaynon"
  },
  "him": {
    "terminologic": null,
    "iso6391": null,
    "name": "Himachali languages; Western Pahari languages"
  },
  "hin": {
    "terminologic": null,
    "iso6391": "hi",
    "name": "Hindi"
  },
  "hit": {
    "terminologic": null,
    "iso6391": null,
    "name": "Hittite"
  },
  "hmn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Hmong; Mong"
  },
  "hmo": {
    "terminologic": null,
    "iso6391": "ho",
    "name": "Hiri Motu"
  },
  "hrv": {
    "terminologic": null,
    "iso6391": "hr",
    "name": "Croatian"
  },
  "hsb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Upper Sorbian"
  },
  "hun": {
    "terminologic": null,
    "iso6391": "hu",
    "name": "Hungarian"
  },
  "hup": {
    "terminologic": null,
    "iso6391": null,
    "name": "Hupa"
  },
  "hye": {
    "bibliographic": "arm",
    "iso6391": "hy",
    "name": "Armenian"
  },
  "iba": {
    "terminologic": null,
    "iso6391": null,
    "name": "Iban"
  },
  "ibo": {
    "terminologic": null,
    "iso6391": "ig",
    "name": "Igbo"
  },
  "ice": {
    "terminologic": "isl",
    "iso6391": "is",
    "name": "Icelandic"
  },
  "ido": {
    "terminologic": null,
    "iso6391": "io",
    "name": "Ido"
  },
  "iii": {
    "terminologic": null,
    "iso6391": "ii",
    "name": "Sichuan Yi; Nuosu"
  },
  "ijo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ijo languages"
  },
  "iku": {
    "terminologic": null,
    "iso6391": "iu",
    "name": "Inuktitut"
  },
  "ile": {
    "terminologic": null,
    "iso6391": "ie",
    "name": "Interlingue; Occidental"
  },
  "ilo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Iloko"
  },
  "ina": {
    "terminologic": null,
    "iso6391": "ia",
    "name": "Interlingua (International Auxiliary Language Association)"
  },
  "inc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Indic languages"
  },
  "ind": {
    "terminologic": null,
    "iso6391": "id",
    "name": "Indonesian"
  },
  "ine": {
    "terminologic": null,
    "iso6391": null,
    "name": "Indo-European languages"
  },
  "inh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ingush"
  },
  "ipk": {
    "terminologic": null,
    "iso6391": "ik",
    "name": "Inupiaq"
  },
  "ira": {
    "terminologic": null,
    "iso6391": null,
    "name": "Iranian languages"
  },
  "iro": {
    "terminologic": null,
    "iso6391": null,
    "name": "Iroquoian languages"
  },
  "isl": {
    "bibliographic": "ice",
    "iso6391": "is",
    "name": "Icelandic"
  },
  "ita": {
    "terminologic": null,
    "iso6391": "it",
    "name": "Italian"
  },
  "jav": {
    "terminologic": null,
    "iso6391": "jv",
    "name": "Javanese"
  },
  "jbo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lojban"
  },
  "jpn": {
    "terminologic": null,
    "iso6391": "ja",
    "name": "Japanese"
  },
  "jpr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Judeo-Persian"
  },
  "jrb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Judeo-Arabic"
  },
  "kaa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kara-Kalpak"
  },
  "kab": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kabyle"
  },
  "kac": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kachin; Jingpho"
  },
  "kal": {
    "terminologic": null,
    "iso6391": "kl",
    "name": "Kalaallisut; Greenlandic"
  },
  "kam": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kamba"
  },
  "kan": {
    "terminologic": null,
    "iso6391": "kn",
    "name": "Kannada"
  },
  "kar": {
    "terminologic": null,
    "iso6391": null,
    "name": "Karen languages"
  },
  "kas": {
    "terminologic": null,
    "iso6391": "ks",
    "name": "Kashmiri"
  },
  "kat": {
    "bibliographic": "geo",
    "iso6391": "ka",
    "name": "Georgian"
  },
  "kau": {
    "terminologic": null,
    "iso6391": "kr",
    "name": "Kanuri"
  },
  "kaw": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kawi"
  },
  "kaz": {
    "terminologic": null,
    "iso6391": "kk",
    "name": "Kazakh"
  },
  "kbd": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kabardian"
  },
  "kha": {
    "terminologic": null,
    "iso6391": null,
    "name": "Khasi"
  },
  "khi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Khoisan languages"
  },
  "khm": {
    "terminologic": null,
    "iso6391": "km",
    "name": "Central Khmer"
  },
  "kho": {
    "terminologic": null,
    "iso6391": null,
    "name": "Khotanese; Sakan"
  },
  "kik": {
    "terminologic": null,
    "iso6391": "ki",
    "name": "Kikuyu; Gikuyu"
  },
  "kin": {
    "terminologic": null,
    "iso6391": "rw",
    "name": "Kinyarwanda"
  },
  "kir": {
    "terminologic": null,
    "iso6391": "ky",
    "name": "Kirghiz; Kyrgyz"
  },
  "kmb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kimbundu"
  },
  "kok": {
    "terminologic": null,
    "iso6391": null,
    "name": "Konkani"
  },
  "kom": {
    "terminologic": null,
    "iso6391": "kv",
    "name": "Komi"
  },
  "kon": {
    "terminologic": null,
    "iso6391": "kg",
    "name": "Kongo"
  },
  "kor": {
    "terminologic": null,
    "iso6391": "ko",
    "name": "Korean"
  },
  "kos": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kosraean"
  },
  "kpe": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kpelle"
  },
  "krc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Karachay-Balkar"
  },
  "krl": {
    "terminologic": null,
    "iso6391": null,
    "name": "Karelian"
  },
  "kro": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kru languages"
  },
  "kru": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kurukh"
  },
  "kua": {
    "terminologic": null,
    "iso6391": "kj",
    "name": "Kuanyama; Kwanyama"
  },
  "kum": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kumyk"
  },
  "kur": {
    "terminologic": null,
    "iso6391": "ku",
    "name": "Kurdish"
  },
  "kut": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kutenai"
  },
  "lad": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ladino"
  },
  "lah": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lahnda"
  },
  "lam": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lamba"
  },
  "lao": {
    "terminologic": null,
    "iso6391": "lo",
    "name": "Lao"
  },
  "lat": {
    "terminologic": null,
    "iso6391": "la",
    "name": "Latin"
  },
  "lav": {
    "terminologic": null,
    "iso6391": "lv",
    "name": "Latvian"
  },
  "lez": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lezghian"
  },
  "lim": {
    "terminologic": null,
    "iso6391": "li",
    "name": "Limburgan; Limburger; Limburgish"
  },
  "lin": {
    "terminologic": null,
    "iso6391": "ln",
    "name": "Lingala"
  },
  "lit": {
    "terminologic": null,
    "iso6391": "lt",
    "name": "Lithuanian"
  },
  "lol": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mongo"
  },
  "loz": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lozi"
  },
  "ltz": {
    "terminologic": null,
    "iso6391": "lb",
    "name": "Luxembourgish; Letzeburgesch"
  },
  "lua": {
    "terminologic": null,
    "iso6391": null,
    "name": "Luba-Lulua"
  },
  "lub": {
    "terminologic": null,
    "iso6391": "lu",
    "name": "Luba-Katanga"
  },
  "lug": {
    "terminologic": null,
    "iso6391": "lg",
    "name": "Ganda"
  },
  "lui": {
    "terminologic": null,
    "iso6391": null,
    "name": "Luiseno"
  },
  "lun": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lunda"
  },
  "luo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Luo (Kenya and Tanzania)"
  },
  "lus": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lushai"
  },
  "mac": {
    "terminologic": "mkd",
    "iso6391": "mk",
    "name": "Macedonian"
  },
  "mad": {
    "terminologic": null,
    "iso6391": null,
    "name": "Madurese"
  },
  "mag": {
    "terminologic": null,
    "iso6391": null,
    "name": "Magahi"
  },
  "mah": {
    "terminologic": null,
    "iso6391": "mh",
    "name": "Marshallese"
  },
  "mai": {
    "terminologic": null,
    "iso6391": null,
    "name": "Maithili"
  },
  "mak": {
    "terminologic": null,
    "iso6391": null,
    "name": "Makasar"
  },
  "mal": {
    "terminologic": null,
    "iso6391": "ml",
    "name": "Malayalam"
  },
  "man": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mandingo"
  },
  "mao": {
    "terminologic": "mri",
    "iso6391": "mi",
    "name": "Maori"
  },
  "map": {
    "terminologic": null,
    "iso6391": null,
    "name": "Austronesian languages"
  },
  "mar": {
    "terminologic": null,
    "iso6391": "mr",
    "name": "Marathi"
  },
  "mas": {
    "terminologic": null,
    "iso6391": null,
    "name": "Masai"
  },
  "may": {
    "terminologic": "msa",
    "iso6391": "ms",
    "name": "Malay"
  },
  "mdf": {
    "terminologic": null,
    "iso6391": null,
    "name": "Moksha"
  },
  "mdr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mandar"
  },
  "men": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mende"
  },
  "mga": {
    "terminologic": null,
    "iso6391": null,
    "name": "Irish, Middle (900-1200)"
  },
  "mic": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mi'kmaq; Micmac"
  },
  "min": {
    "terminologic": null,
    "iso6391": null,
    "name": "Minangkabau"
  },
  "mis": {
    "terminologic": null,
    "iso6391": null,
    "name": "Uncoded languages"
  },
  "mkd": {
    "bibliographic": "mac",
    "iso6391": "mk",
    "name": "Macedonian"
  },
  "mkh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mon-Khmer languages"
  },
  "mlg": {
    "terminologic": null,
    "iso6391": "mg",
    "name": "Malagasy"
  },
  "mlt": {
    "terminologic": null,
    "iso6391": "mt",
    "name": "Maltese"
  },
  "mnc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Manchu"
  },
  "mni": {
    "terminologic": null,
    "iso6391": null,
    "name": "Manipuri"
  },
  "mno": {
    "terminologic": null,
    "iso6391": null,
    "name": "Manobo languages"
  },
  "moh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mohawk"
  },
  "mon": {
    "terminologic": null,
    "iso6391": "mn",
    "name": "Mongolian"
  },
  "mos": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mossi"
  },
  "mri": {
    "bibliographic": "mao",
    "iso6391": "mi",
    "name": "Maori"
  },
  "msa": {
    "bibliographic": "may",
    "iso6391": "ms",
    "name": "Malay"
  },
  "mul": {
    "terminologic": null,
    "iso6391": null,
    "name": "Multiple languages"
  },
  "mun": {
    "terminologic": null,
    "iso6391": null,
    "name": "Munda languages"
  },
  "mus": {
    "terminologic": null,
    "iso6391": null,
    "name": "Creek"
  },
  "mwl": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mirandese"
  },
  "mwr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Marwari"
  },
  "mya": {
    "bibliographic": "bur",
    "iso6391": "my",
    "name": "Burmese"
  },
  "myn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Mayan languages"
  },
  "myv": {
    "terminologic": null,
    "iso6391": null,
    "name": "Erzya"
  },
  "nah": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nahuatl languages"
  },
  "nai": {
    "terminologic": null,
    "iso6391": null,
    "name": "North American Indian languages"
  },
  "nap": {
    "terminologic": null,
    "iso6391": null,
    "name": "Neapolitan"
  },
  "nau": {
    "terminologic": null,
    "iso6391": "na",
    "name": "Nauru"
  },
  "nav": {
    "terminologic": null,
    "iso6391": "nv",
    "name": "Navajo; Navaho"
  },
  "nbl": {
    "terminologic": null,
    "iso6391": "nr",
    "name": "Ndebele, South; South Ndebele"
  },
  "nde": {
    "terminologic": null,
    "iso6391": "nd",
    "name": "Ndebele, North; North Ndebele"
  },
  "ndo": {
    "terminologic": null,
    "iso6391": "ng",
    "name": "Ndonga"
  },
  "nds": {
    "terminologic": null,
    "iso6391": null,
    "name": "Low German; Low Saxon; German, Low; Saxon, Low"
  },
  "nep": {
    "terminologic": null,
    "iso6391": "ne",
    "name": "Nepali"
  },
  "new": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nepal Bhasa; Newari"
  },
  "nia": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nias"
  },
  "nic": {
    "terminologic": null,
    "iso6391": null,
    "name": "Niger-Kordofanian languages"
  },
  "niu": {
    "terminologic": null,
    "iso6391": null,
    "name": "Niuean"
  },
  "nld": {
    "bibliographic": "dut",
    "iso6391": "nl",
    "name": "Dutch; Flemish"
  },
  "nno": {
    "terminologic": null,
    "iso6391": "nn",
    "name": "Norwegian Nynorsk; Nynorsk, Norwegian"
  },
  "nob": {
    "terminologic": null,
    "iso6391": "nb",
    "name": "Bokmål, Norwegian; Norwegian Bokmål"
  },
  "nog": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nogai"
  },
  "non": {
    "terminologic": null,
    "iso6391": null,
    "name": "Norse, Old"
  },
  "nor": {
    "terminologic": null,
    "iso6391": "no",
    "name": "Norwegian"
  },
  "nqo": {
    "terminologic": null,
    "iso6391": null,
    "name": "N'Ko"
  },
  "nso": {
    "terminologic": null,
    "iso6391": null,
    "name": "Pedi; Sepedi; Northern Sotho"
  },
  "nub": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nubian languages"
  },
  "nwc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Classical Newari; Old Newari; Classical Nepal Bhasa"
  },
  "nya": {
    "terminologic": null,
    "iso6391": "ny",
    "name": "Chichewa; Chewa; Nyanja"
  },
  "nym": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nyamwezi"
  },
  "nyn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nyankole"
  },
  "nyo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nyoro"
  },
  "nzi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nzima"
  },
  "oci": {
    "terminologic": null,
    "iso6391": "oc",
    "name": "Occitan (post 1500); Provençal"
  },
  "oji": {
    "terminologic": null,
    "iso6391": "oj",
    "name": "Ojibwa"
  },
  "ori": {
    "terminologic": null,
    "iso6391": "or",
    "name": "Oriya"
  },
  "orm": {
    "terminologic": null,
    "iso6391": "om",
    "name": "Oromo"
  },
  "osa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Osage"
  },
  "oss": {
    "terminologic": null,
    "iso6391": "os",
    "name": "Ossetian; Ossetic"
  },
  "ota": {
    "terminologic": null,
    "iso6391": null,
    "name": "Turkish, Ottoman (1500-1928)"
  },
  "oto": {
    "terminologic": null,
    "iso6391": null,
    "name": "Otomian languages"
  },
  "paa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Papuan languages"
  },
  "pag": {
    "terminologic": null,
    "iso6391": null,
    "name": "Pangasinan"
  },
  "pal": {
    "terminologic": null,
    "iso6391": null,
    "name": "Pahlavi"
  },
  "pam": {
    "terminologic": null,
    "iso6391": null,
    "name": "Pampanga; Kapampangan"
  },
  "pan": {
    "terminologic": null,
    "iso6391": "pa",
    "name": "Panjabi; Punjabi"
  },
  "pap": {
    "terminologic": null,
    "iso6391": null,
    "name": "Papiamento"
  },
  "pau": {
    "terminologic": null,
    "iso6391": null,
    "name": "Palauan"
  },
  "peo": {
    "terminologic": null,
    "iso6391": null,
    "name": "Persian, Old (ca.600-400 B.C.)"
  },
  "per": {
    "terminologic": "fas",
    "iso6391": "fa",
    "name": "Persian"
  },
  "phi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Philippine languages"
  },
  "phn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Phoenician"
  },
  "pli": {
    "terminologic": null,
    "iso6391": "pi",
    "name": "Pali"
  },
  "pol": {
    "terminologic": null,
    "iso6391": "pl",
    "name": "Polish"
  },
  "pon": {
    "terminologic": null,
    "iso6391": null,
    "name": "Pohnpeian"
  },
  "por": {
    "terminologic": null,
    "iso6391": "pt",
    "name": "Portuguese"
  },
  "pra": {
    "terminologic": null,
    "iso6391": null,
    "name": "Prakrit languages"
  },
  "pro": {
    "terminologic": null,
    "iso6391": null,
    "name": "Provençal, Old (to 1500)"
  },
  "pus": {
    "terminologic": null,
    "iso6391": "ps",
    "name": "Pushto; Pashto"
  },
  "qaa-qtz": {
    "terminologic": null,
    "iso6391": null,
    "name": "Reserved for local use"
  },
  "que": {
    "terminologic": null,
    "iso6391": "qu",
    "name": "Quechua"
  },
  "raj": {
    "terminologic": null,
    "iso6391": null,
    "name": "Rajasthani"
  },
  "rap": {
    "terminologic": null,
    "iso6391": null,
    "name": "Rapanui"
  },
  "rar": {
    "terminologic": null,
    "iso6391": null,
    "name": "Rarotongan; Cook Islands Maori"
  },
  "roa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Romance languages"
  },
  "roh": {
    "terminologic": null,
    "iso6391": "rm",
    "name": "Romansh"
  },
  "rom": {
    "terminologic": null,
    "iso6391": null,
    "name": "Romany"
  },
  "ron": {
    "bibliographic": "rum",
    "iso6391": "ro",
    "name": "Romanian; Moldavian; Moldovan"
  },
  "rum": {
    "terminologic": "ron",
    "iso6391": "ro",
    "name": "Romanian; Moldavian; Moldovan"
  },
  "run": {
    "terminologic": null,
    "iso6391": "rn",
    "name": "Rundi"
  },
  "rup": {
    "terminologic": null,
    "iso6391": null,
    "name": "Aromanian; Arumanian; Macedo-Romanian"
  },
  "rus": {
    "terminologic": null,
    "iso6391": "ru",
    "name": "Russian"
  },
  "sad": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sandawe"
  },
  "sag": {
    "terminologic": null,
    "iso6391": "sg",
    "name": "Sango"
  },
  "sah": {
    "terminologic": null,
    "iso6391": null,
    "name": "Yakut"
  },
  "sai": {
    "terminologic": null,
    "iso6391": null,
    "name": "South American Indian (Other)"
  },
  "sal": {
    "terminologic": null,
    "iso6391": null,
    "name": "Salishan languages"
  },
  "sam": {
    "terminologic": null,
    "iso6391": null,
    "name": "Samaritan Aramaic"
  },
  "san": {
    "terminologic": null,
    "iso6391": "sa",
    "name": "Sanskrit"
  },
  "sas": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sasak"
  },
  "sat": {
    "terminologic": null,
    "iso6391": null,
    "name": "Santali"
  },
  "scn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sicilian"
  },
  "sco": {
    "terminologic": null,
    "iso6391": null,
    "name": "Scots"
  },
  "sel": {
    "terminologic": null,
    "iso6391": null,
    "name": "Selkup"
  },
  "sem": {
    "terminologic": null,
    "iso6391": null,
    "name": "Semitic languages"
  },
  "sga": {
    "terminologic": null,
    "iso6391": null,
    "name": "Irish, Old (to 900)"
  },
  "sgn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sign Languages"
  },
  "shn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Shan"
  },
  "sid": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sidamo"
  },
  "sin": {
    "terminologic": null,
    "iso6391": "si",
    "name": "Sinhala; Sinhalese"
  },
  "sio": {
    "terminologic": null,
    "iso6391": null,
    "name": "Siouan languages"
  },
  "sit": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sino-Tibetan languages"
  },
  "sla": {
    "terminologic": null,
    "iso6391": null,
    "name": "Slavic languages"
  },
  "slo": {
    "terminologic": "slk",
    "iso6391": "sk",
    "name": "Slovak"
  },
  "slk": {
    "bibliographic": "slo",
    "iso6391": "sk",
    "name": "Slovak"
  },
  "slv": {
    "terminologic": null,
    "iso6391": "sl",
    "name": "Slovenian"
  },
  "sma": {
    "terminologic": null,
    "iso6391": null,
    "name": "Southern Sami"
  },
  "sme": {
    "terminologic": null,
    "iso6391": "se",
    "name": "Northern Sami"
  },
  "smi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sami languages"
  },
  "smj": {
    "terminologic": null,
    "iso6391": null,
    "name": "Lule Sami"
  },
  "smn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Inari Sami"
  },
  "smo": {
    "terminologic": null,
    "iso6391": "sm",
    "name": "Samoan"
  },
  "sms": {
    "terminologic": null,
    "iso6391": null,
    "name": "Skolt Sami"
  },
  "sna": {
    "terminologic": null,
    "iso6391": "sn",
    "name": "Shona"
  },
  "snd": {
    "terminologic": null,
    "iso6391": "sd",
    "name": "Sindhi"
  },
  "snk": {
    "terminologic": null,
    "iso6391": null,
    "name": "Soninke"
  },
  "sog": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sogdian"
  },
  "som": {
    "terminologic": null,
    "iso6391": "so",
    "name": "Somali"
  },
  "son": {
    "terminologic": null,
    "iso6391": null,
    "name": "Songhai languages"
  },
  "sot": {
    "terminologic": null,
    "iso6391": "st",
    "name": "Sotho, Southern"
  },
  "spa": {
    "terminologic": null,
    "iso6391": "es",
    "name": "Spanish; Castilian"
  },
  "sqi": {
    "bibliographic": "alb",
    "iso6391": "sq",
    "name": "Albanian"
  },
  "srd": {
    "terminologic": null,
    "iso6391": "sc",
    "name": "Sardinian"
  },
  "srn": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sranan Tongo"
  },
  "srp": {
    "terminologic": null,
    "iso6391": "sr",
    "name": "Serbian"
  },
  "srr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Serer"
  },
  "ssa": {
    "terminologic": null,
    "iso6391": null,
    "name": "Nilo-Saharan languages"
  },
  "ssw": {
    "terminologic": null,
    "iso6391": "ss",
    "name": "Swati"
  },
  "suk": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sukuma"
  },
  "sun": {
    "terminologic": null,
    "iso6391": "su",
    "name": "Sundanese"
  },
  "sus": {
    "terminologic": null,
    "iso6391": null,
    "name": "Susu"
  },
  "sux": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sumerian"
  },
  "swa": {
    "terminologic": null,
    "iso6391": "sw",
    "name": "Swahili"
  },
  "swe": {
    "terminologic": null,
    "iso6391": "sv",
    "name": "Swedish"
  },
  "syc": {
    "terminologic": null,
    "iso6391": null,
    "name": "Classical Syriac"
  },
  "syr": {
    "terminologic": null,
    "iso6391": null,
    "name": "Syriac"
  },
  "tah": {
    "terminologic": null,
    "iso6391": "ty",
    "name": "Tahitian"
  },
  "tai": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tai languages"
  },
  "tam": {
    "terminologic": null,
    "iso6391": "ta",
    "name": "Tamil"
  },
  "tat": {
    "terminologic": null,
    "iso6391": "tt",
    "name": "Tatar"
  },
  "tel": {
    "terminologic": null,
    "iso6391": "te",
    "name": "Telugu"
  },
  "tem": {
    "terminologic": null,
    "iso6391": null,
    "name": "Timne"
  },
  "ter": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tereno"
  },
  "tet": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tetum"
  },
  "tgk": {
    "terminologic": null,
    "iso6391": "tg",
    "name": "Tajik"
  },
  "tgl": {
    "terminologic": null,
    "iso6391": "tl",
    "name": "Tagalog"
  },
  "tha": {
    "terminologic": null,
    "iso6391": "th",
    "name": "Thai"
  },
  "tib": {
    "terminologic": "bod",
    "iso6391": "bo",
    "name": "Tibetan"
  },
  "tig": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tigre"
  },
  "tir": {
    "terminologic": null,
    "iso6391": "ti",
    "name": "Tigrinya"
  },
  "tiv": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tiv"
  },
  "tkl": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tokelau"
  },
  "tlh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Klingon; tlhIngan-Hol"
  },
  "tli": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tlingit"
  },
  "tmh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tamashek"
  },
  "tog": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tonga (Nyasa)"
  },
  "ton": {
    "terminologic": null,
    "iso6391": "to",
    "name": "Tonga (Tonga Islands)"
  },
  "tpi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tok Pisin"
  },
  "tsi": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tsimshian"
  },
  "tsn": {
    "terminologic": null,
    "iso6391": "tn",
    "name": "Tswana"
  },
  "tso": {
    "terminologic": null,
    "iso6391": "ts",
    "name": "Tsonga"
  },
  "tuk": {
    "terminologic": null,
    "iso6391": "tk",
    "name": "Turkmen"
  },
  "tum": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tumbuka"
  },
  "tup": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tupi languages"
  },
  "tur": {
    "terminologic": null,
    "iso6391": "tr",
    "name": "Turkish"
  },
  "tut": {
    "terminologic": null,
    "iso6391": null,
    "name": "Altaic languages"
  },
  "tvl": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tuvalu"
  },
  "twi": {
    "terminologic": null,
    "iso6391": "tw",
    "name": "Twi"
  },
  "tyv": {
    "terminologic": null,
    "iso6391": null,
    "name": "Tuvinian"
  },
  "udm": {
    "terminologic": null,
    "iso6391": null,
    "name": "Udmurt"
  },
  "uga": {
    "terminologic": null,
    "iso6391": null,
    "name": "Ugaritic"
  },
  "uig": {
    "terminologic": null,
    "iso6391": "ug",
    "name": "Uighur; Uyghur"
  },
  "ukr": {
    "terminologic": null,
    "iso6391": "uk",
    "name": "Ukrainian"
  },
  "umb": {
    "terminologic": null,
    "iso6391": null,
    "name": "Umbundu"
  },
  "und": {
    "terminologic": null,
    "iso6391": null,
    "name": "Undetermined"
  },
  "urd": {
    "terminologic": null,
    "iso6391": "ur",
    "name": "Urdu"
  },
  "uzb": {
    "terminologic": null,
    "iso6391": "uz",
    "name": "Uzbek"
  },
  "vai": {
    "terminologic": null,
    "iso6391": null,
    "name": "Vai"
  },
  "ven": {
    "terminologic": null,
    "iso6391": "ve",
    "name": "Venda"
  },
  "vie": {
    "terminologic": null,
    "iso6391": "vi",
    "name": "Vietnamese"
  },
  "vol": {
    "terminologic": null,
    "iso6391": "vo",
    "name": "Volapük"
  },
  "vot": {
    "terminologic": null,
    "iso6391": null,
    "name": "Votic"
  },
  "wak": {
    "terminologic": null,
    "iso6391": null,
    "name": "Wakashan languages"
  },
  "wal": {
    "terminologic": null,
    "iso6391": null,
    "name": "Walamo"
  },
  "war": {
    "terminologic": null,
    "iso6391": null,
    "name": "Waray"
  },
  "was": {
    "terminologic": null,
    "iso6391": null,
    "name": "Washo"
  },
  "wel": {
    "terminologic": "cym",
    "iso6391": "cy",
    "name": "Welsh"
  },
  "wen": {
    "terminologic": null,
    "iso6391": null,
    "name": "Sorbian languages"
  },
  "wln": {
    "terminologic": null,
    "iso6391": "wa",
    "name": "Walloon"
  },
  "wol": {
    "terminologic": null,
    "iso6391": "wo",
    "name": "Wolof"
  },
  "xal": {
    "terminologic": null,
    "iso6391": null,
    "name": "Kalmyk; Oirat"
  },
  "xho": {
    "terminologic": null,
    "iso6391": "xh",
    "name": "Xhosa"
  },
  "yao": {
    "terminologic": null,
    "iso6391": null,
    "name": "Yao"
  },
  "yap": {
    "terminologic": null,
    "iso6391": null,
    "name": "Yapese"
  },
  "yid": {
    "terminologic": null,
    "iso6391": "yi",
    "name": "Yiddish"
  },
  "yor": {
    "terminologic": null,
    "iso6391": "yo",
    "name": "Yoruba"
  },
  "ypk": {
    "terminologic": null,
    "iso6391": null,
    "name": "Yupik languages"
  },
  "zap": {
    "terminologic": null,
    "iso6391": null,
    "name": "Zapotec"
  },
  "zbl": {
    "terminologic": null,
    "iso6391": null,
    "name": "Blissymbols; Blissymbolics; Bliss"
  },
  "zen": {
    "terminologic": null,
    "iso6391": null,
    "name": "Zenaga"
  },
  "zgh": {
    "terminologic": null,
    "iso6391": null,
    "name": "Standard Moroccan Tamazight"
  },
  "zha": {
    "terminologic": null,
    "iso6391": "za",
    "name": "Zhuang; Chuang"
  },
  "zho": {
    "bibliographic": "chi",
    "iso6391": "zh",
    "name": "Chinese"
  },
  "znd": {
    "terminologic": null,
    "iso6391": null,
    "name": "Zande languages"
  },
  "zul": {
    "terminologic": null,
    "iso6391": "zu",
    "name": "Zulu"
  },
  "zun": {
    "terminologic": null,
    "iso6391": null,
    "name": "Zuni"
  },
  "zxx": {
    "terminologic": null,
    "iso6391": null,
    "name": "No linguistic content; Not applicable"
  },
  "zza": {
    "terminologic": null,
    "iso6391": null,
    "name": "Zaza; Dimili; Dimli; Kirdki; Kirmanjki; Zazaki"
  }
}
},{}],10:[function(require,module,exports){
/* Delayer.js
* 
* Holding the changing user delay settinga and mananging
* the calculation of the delay till the current word is
* changed.
*/

(function (root, delayFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () {
        	return ( root.Delayer = delayFactory() );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = delayFactory();
    } else {
        // Browser globals
        root.Delayer = delayFactory();
    }
}(this, function () {

	"use strict";

	var Delayer = function ( settings, storage ) {
	/* ( {}, {} ) -> Delay
	* 
	*/
		var rDel = {};

		var _rSetts = null;
		var defaultSettings = {
			wpm: 			500,
			slowStartDelay: 5,
			sentenceDelay: 	2.5,
			otherPuncDelay: 1.5,
			shortWordDelay: 1.3,
			longWordDelay: 	1.4,
			numericDelay: 	2.0
		};


		rDel._init = function ( settings ) {

			var wpm 			= settings.wpm 				|| defaultSettings.wpm,
				slowStartDelay 	= settings.slowStartDelay 	|| defaultSettings.slowStartDelay,
				sentenceDelay 	= settings.sentenceDelay 	|| defaultSettings.sentenceDelay,
				otherPuncDelay 	= settings.otherPuncDelay 	|| defaultSettings.otherPuncDelay,
				shortWordDelay 	= settings.shortWordDelay 	|| defaultSettings.shortWordDelay,
				longWordDelay 	= settings.longWordDelay 	|| defaultSettings.longWordDelay,
				numericDelay 	= settings.numericDelay 	|| defaultSettings.numericDelay;

			// !!!FOR DEBUGGING ONLY!!!
			if ( false ) storage.clear()
			
			// Update settings based on what's passed in
			_rSetts = rDel._settings = {};
			rDel.set( 'wpm', 			wpm 			)
				.set( 'slowStartDelay', slowStartDelay 	)
				.set( 'sentenceDelay', 	sentenceDelay 	)
				.set( 'otherPuncDelay', otherPuncDelay 	)
				.set( 'shortWordDelay', shortWordDelay 	)
				.set( 'longWordDelay', 	longWordDelay 	)
				.set( 'numericDelay', 	numericDelay 	);

			return rDel;
		};  // End rDel._init()



		// ============== RUNTIME ============== \\

		rDel.calcDelay = function ( frag, justOnce ) {
		/* ( Str || Obj, [bool] ) -> #
		* 
		*/
		// !!! TODO: `justOnce` is an issue because it's actually just whether
		// or not a function has been passed into the loop, nothing else
			var delay = rDel.delay;

			var processed = frag;
			// !!! TEMPORARY UNTIL CONVERTED TO ONLY STRINGS !!!
			// If a string was passed in instead of an object, assess the string
			if ( typeof frag === 'string' ) { processed = rDel._process( frag ); }
			var processed = rDel._process( frag );

			if ( processed.hasPeriod ) 	 delay 	*= _rSetts.sentenceDelay;
			if ( processed.hasOtherPunc ) delay *= _rSetts.otherPuncDelay;
			if ( processed.isShort() ) 	 delay 	*= _rSetts.shortWordDelay;
			if ( processed.isLong() ) 	 delay 	*= _rSetts.longWordDelay;
			if ( processed.isNumeric ) 	 delay 	*= _rSetts.numericDelay;

			// Just after starting up again, go slowly, then speed up a bit
			// each time the loop is called
			var extraDelay = rDel._tempSlowStart;
			// Make sure startDelay isn't used up by things like .once() called
			// repeatedly, like when the scrubber is moved.
			if (!justOnce) {rDel._tempSlowStart = Math.max( 1, extraDelay / 1.5 );}
			delay = delay * rDel._tempSlowStart;
			// Once is true all the time

			return delay;
		};  // End rDel.calcDelay()


		rDel.resetSlowStart = function ( val ) {
		/* (Num) -> Delayer
		* 
		* For after restart or pause, assign a value to start the
		* text off slowly to warm the reader up to full speed.
		*/
			if ( val ) { rDel._tempSlowStart = val; }
			else { rDel._tempSlowStart = _rSetts.slowStartDelay; }
			return rDel;
		};


		// ======= PROCESSING STRING ======== \\
		rDel._process = function ( chars ) {
		/* ( Str ) -> {}
		* 
		* Assesses the properties of a string, saving them in an object
		*/
			var frag = { chars: chars };

	        rDel._setPuncProps( frag );

			// TODO: Get from storage (with callback)
			var shortLength = 2,
				longLength 	= 8;

			// TODO: Change to non-functions when you have a min
			frag.isShort = function () { return chars.length <= shortLength; };
	        frag.isLong = function () { return chars.length >= longLength; };

			frag.isNumeric = /\d/.test(chars);

			return frag;
		};  // End rDel._process()


		rDel._setPuncProps = function ( frag ) {
		/* ( Str ) -> {}
		* 
		* Tests and sets the punctuation properties
		*/
			var str = frag.chars;

			frag.hasPeriod 	  = /[.!?]/.test(str);
			// TODO: test for non-alphameric/period characters
			frag.hasOtherPunc = /["'()”’:;,_]/.test(str);

			return rDel;
		};  // end rDel._setPuncProps()


		// ============== SET OPTIONS ============== \\

		// Not needed, but might be nice to have:
		rDel.settingsAvailable = ['wpm', 'sentenceDelay', 'otherPuncDelay', 'shortWordDelay',
						'longWordDelay', 'numericDelay', 'slowStartDelay'];

		rDel.set = function ( settingName, value) {
			// If we just go off of lowercase, we can remove at
			// least some typo mistakes and uncertainties
			var op = '_set' + settingName;
			if ( !rDel[ op ] ) {
				console.error('There is no approved setting by the name of "' + operation + '". Maybe check your capitalization. Also, you can check `yourDelayerObj.settingsAvailable` to see what setting names are available to you.');
				return false;
			}
			
			// The value after it has been normalized
			var val = rDel[ op ]( value );

			// Create object for data so we can use the value of `op` as a key
			// instead of the literal word "op"
			var toSave 				= {};
			toSave[ settingName ] 	= val;
			storage.set( toSave );  // Should this be all lowercase too?

			// _rSetts[settingName] = val;

			return rDel;
		};  // End rDel.set()



		rDel._withinLimits = function ( val, min, max ) {
			var minLimited = Math.max( min, val );
			return Math.min( max, minLimited );
		};

		rDel._toUsefulVal = function ( val, min, max ) {
			var num = parseFloat(val);
			return rDel._withinLimits( num, min, max );
		};



		rDel._setwpm = function ( val ) {
			_rSetts.wpm = rDel._toUsefulVal( val, 1, 5000 );
			rDel.delay = 1/(_rSetts.wpm/60)*1000;
			return _rSetts.wpm;
		};

		// ??: What do these numbers mean? It's not milliseconds, that's for sure.
		rDel._setslowStartDelay = function ( val ) {
			_rSetts.slowStartDelay = rDel._toUsefulVal( val, 0, 10 );
			return _rSetts.slowStartDelay;
		};
		rDel._setsentenceDelay = function ( val ) {
			_rSetts.sentenceDelay = rDel._toUsefulVal( val, 1, 10 );
			return _rSetts.sentenceDelay;
		};
		rDel._setotherPuncDelay = function ( val ) {
			_rSetts.otherPuncDelay = rDel._toUsefulVal( val, 1, 10 );
			return _rSetts.otherPuncDelay;
		};
		rDel._setshortWordDelay = function ( val ) {
			_rSetts.shortWordDelay = rDel._toUsefulVal( val, 1, 10 );
			return _rSetts.shortWordDelay;
		};
		rDel._setlongWordDelay = function ( val ) {
			_rSetts.longWordDelay = rDel._toUsefulVal( val, 1, 10 );
			return _rSetts.longWordDelay;
		};
		rDel._setnumericDelay = function ( val ) {
			_rSetts.numericDelay = rDel._toUsefulVal( val, 1, 10 );
			return _rSetts.numericDelay;
		};

        // ============== DO IT ============== \\
		rDel._init( settings )
		return rDel;
	};  // End Delay() -> {}

    return Delayer;
}));

},{}],11:[function(require,module,exports){
/* PlaybackUI.js
* 
* Pause, play, rewind, fast-forward, and scrub
* controls. Includes progress bar. Name is not
* accurate, but it is clear and recognizable.
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/Read.js
*/

(function (root, playbackFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( ['jquery', 'nouislider', 'playback/playback-css'], function ( jquery, nouislider, playbackCSS ) {
        	return ( root.PlaybackUI = playbackFactory( jquery, nouislider, playbackCSS ) );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = playbackFactory( require('jquery'), require('nouislider'), require('./playback-CSS') );
    } else {
        // Browser globals
        root.PlaybackUI = playbackFactory( root.jQuery, root.noUiSlider, root.playbackCSS );  // not sure noUi is here
    }
}(this, function ( $, noUiSlider, playbackCSSstr ) {

	"use strict";

	var PlaybackUI = function ( timer, coreDisplay ) {

		var rPUI = {};

		rPUI.modifierKeysDown = [];  // Will be emptied when app is closed
		rPUI.sentenceModifierKey = 18;  // 'alt'

		rPUI.isOpen 	 = false;
		rPUI.isPlaying 	 = false;
		rPUI.isScrubbing = false;
		rPUI.nodes 		 = {};
		var nodes 		 = rPUI.nodes;

		var progressNode, percentDone, scrubber;
		var indicator, textButton, loading;
		var playPauseFeedback, playFeedback, pauseFeedback;
		var controls;  // We'll see how this one shapes up
		var rewindSentence;

		var progStr = '<div id="__rdly_progress"></div>';

		var indicatorStr 	= '<div id="__rdly_indicator" class="__rdly-transform-centered"></div>',
			textButtonStr 	= '<button id="__rdly_text_button" class="__rdly-transform-centered"></button>',
			loadingStr 		= '<div id="__rdly_loading" class="__rdly-hidden"></div>';

		var feedbackStr = '<div id="__rdly_play_pause_feedback" class="__rdly-transform-centered">\
	<div id="__rdly_pause_feedback" class="__rdly-playback-feedback __rdly-transform-centered">||</div>\
	<div id="__rdly_play_feedback" class="__rdly-playback-feedback __rdly-transform-centered">></div>\
</div>';

// 		var controlsStr = '<div id="__rdly_playback_controls">\
// 	<button id="__rdly_rewind_sentence" class="__rdly-playback-button"></button>\
// 	<button id="__rdly_rewind_word" class="__rdly-playback-button"></button>\
// 	<button id="__rdly_fastforward_word" class="__rdly-playback-button"></button>\
// 	<button id="__rdly_fastforward_sentence" class="__rdly-playback-button"></button>\
// </div>';

		var browser = chrome || browser,
			rewPath = browser.extension.getURL('images/rewind.svg');
		// TODO: Credit for icon (color altered): <div>Icons made by <a href="http://www.flaticon.com/authors/madebyoliver" title="Madebyoliver">Madebyoliver</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>
		var rewindSentenceStr = '<button id="__rdly_rewind-sentence" class="__rdly-big-menu-button">\
	<img src="' + rewPath + '"></img>\
</button>';



		// =========== RUNTIME ACTIONS =========== \\

		rPUI.clear = function () {
			rPUI.modifierKeysDown = [];
			return rPUI;
		};
		rPUI.open = function () {
			rPUI.isOpen = true;
			return rPUI;
		};
		rPUI.close = function () {
			rPUI.isOpen = false;
			return rPUI;
		};

		rPUI.hideText = function () {
			$(textButton).addClass('__rdly-hidden');
			return rPUI;
		};


		rPUI.showText = function () {
			$(textButton).removeClass('__rdly-hidden');
			return rPUI;
		};


		rPUI.wait = function () {
			rPUI.hideText();
			$(loading).addClass('__rdly-rotating');
			$(loading).removeClass('__rdly-hidden');
			return rPUI;
		};


		rPUI.stopWaiting = function () {
			$(loading).addClass('__rdly-hidden');
			$(loading).removeClass('__rdly-rotating');
			rPUI.showText();
			return rPUI;
		};


		rPUI.clearText = function () {
			$(textButton).html("");
			return rPUI;
		};



		// ----- DOM EVENTS ----- \\
		rPUI._play = function () {
			$(playFeedback).removeClass('__rdly-hidden');
			$(pauseFeedback).addClass('__rdly-hidden');
			// https://jsfiddle.net/aL7kxe78/3/ fadeOut (ends with display: none)
			// http://stackoverflow.com/a/4549418/3791179 <- opacity
			var x = $(playPauseFeedback).fadeTo(0, 0.7).fadeTo(700, 0)
			return rPUI;
		}

		rPUI._pause = function () {
			$(pauseFeedback).removeClass('__rdly-hidden');
			$(playFeedback).addClass('__rdly-hidden');
			$(playPauseFeedback).fadeTo(0, 0.7).fadeTo(700, 0)
			return rPUI;
		}

		rPUI._togglePlayPause = function () {
			timer.togglePlayPause();
			return rPUI;
		};


		rPUI._rewindSentence = function () {
			timer.prevSentence();
			return rPUI;
		};


		// ----- TIMER EVENTS ----- \\
		var whiteSpaceRegexp = /[\n\r\s]/;
		var paragraphSymbol  = '';
		rPUI._showNewFragment = function ( evnt, timer, fragment ) {
			var chars = fragment;
			// Adds pauses for line breaks
			// TOOD: Deal with line breaks in timer instead?
			if ( !whiteSpaceRegexp.test(chars) ) {
				$(textButton).html( chars );
			} else {
				$(textButton).html( paragraphSymbol );
			}
			rPUI.stopWaiting();
			return rPUI;
		};


		rPUI._showProgress = function ( evnt, timer, fraction, indx, total ) {
		// TODO: Needs some work
			if ( !rPUI.isScrubbing ) {  // Don't mess timing up with transitions
				progressNode.noUiSlider.set( indx );  // version 8 nouislider
			}
			return rPUI;
		};


		rPUI._start = function () {
			progressNode.noUiSlider.updateOptions({
				range: { min: 0, max: (timer.getLength() - 1) }
			});
			return rPUI;
		}


		// --------- SCRUBBER EVENTS --------- \\
		rPUI._startScrubbing = function ( values, handle ) {
			rPUI.isScrubbing = true;
			return rPUI;
		};  // End rPUI._startScrubbing()


		rPUI._updateScrubbedWords = function ( values, handle ) {
			timer.jumpTo({
				type: 'index',
				amount: parseInt(values[handle])
			});
			return rPUI;
		};  // End rPUI._updateScrubbedWords()


		rPUI._stopScrubbing = function ( values, handle ) {
			rPUI.isScrubbing = false;
			timer.disengageJumpTo();
			return rPUI;
		};  // End rPUI._stopScrubbing()


		rPUI.keyUp = function ( evnt ) {

			// If it was closed, the list of keys down is destroyed anyway
			if (!rPUI.isOpen) { return rPUI; };

			var keyCode = evnt.keyCode || evnt.which || evnt.charCode;
			var smod 	= rPUI.sentenceModifierKey;

			// Modifier keys
			if ( keyCode === smod ) {

				var smodi = rPUI.modifierKeysDown.indexOf( smod );
				if ( smodi > -1 ) { rPUI.modifierKeysDown.splice( smodi ) }
			}

			return rPUI;
		};  // End rPUI.keyUp()


		rPUI.keyDown = function ( evnt ) {

			// If the app isn't open, don't want to get errors for trying
			// to do impossible stuff and don't want to change position in text
			if (!rPUI.isOpen) { return rPUI; };

			var keyCode = evnt.keyCode || evnt.which || evnt.charCode;
			var smod = rPUI.sentenceModifierKey;

			// Modifier keys
			if ( keyCode === smod && rPUI.modifierKeysDown.indexOf( smod ) === -1 ) {
				rPUI.modifierKeysDown.push( smod )
			}

			if ( rPUI.modifierKeysDown.indexOf( smod ) > -1 ) {
				if ( keyCode === 39 ) { timer.nextSentence(); }
				else if ( keyCode === 37 ) { timer.prevSentence(); }
			} else {
				if ( keyCode === 39 ) { timer.nextWord(); }
				else if ( keyCode === 37 ) { timer.prevWord(); }
			}

			return rPUI;
		};  // End rPUI.keyDown()


		// =========== INITIALIZE =========== \\

		rPUI._progressSlider = function ( progNode ) {
		/* ( DOM Node ) -> same DOM Node
		* 
		* Turn the given data into one noUiSlider slider
		*/
			// To keep handles within the bar
			$(progNode).addClass('noUi-extended');

			var slider = noUiSlider.create( progNode, {
				range: { min: 0, max: 1 },
				start: 0,
				step: 1,
				connect: [true, false],
				handles: 1,
				behaviour: 'tap'
			});

			return progNode;
		};  // End rPUI._progressSlider()


		rPUI._addEvents = function () {
			// Timer events
			$(timer).on('playBegin', rPUI._play);
			$(timer).on('pauseFinish', rPUI._pause);
			// $(timer).on('stopFinish', rPUI._pause);  // Not sure pause should appear at the end
			$(timer).on( 'startFinish', rPUI._start );
			$(timer).on( 'newWordFragment', rPUI._showNewFragment );
			$(timer).on( 'progress', rPUI._showProgress );

			// Scrubber events
			progressNode.noUiSlider.on( 'start', rPUI._startScrubbing );
			progressNode.noUiSlider.on( 'slide', rPUI._updateScrubbedWords );
			progressNode.noUiSlider.on( 'change', rPUI._stopScrubbing );

			// DOM events
			$(textButton).on( 'touchend click', rPUI._togglePlayPause );
			$(rewindSentence).on( 'touchend click', rPUI._rewindSentence );

			// Keyboard input
			// Arrow keys only listen to the keydown and keyup event, not keypress
			$(coreDisplay.nodes.doc).on( 'keydown', rPUI.keyDown );
			$(coreDisplay.nodes.doc).on( 'keyup', rPUI.keyUp );
			$(document.body).on( 'keydown', rPUI.keyDown );
			$(document.body).on( 'keyup', rPUI.keyUp );

			return rPUI;
		};  // End rPUI._addEvents()


		rPUI._init = function ( coreDisplay ) {

			rPUI.modifierKeysDown = [];  // TODO: Empty non-destructively
			rPUI.sentenceModifierKey = 18;  // 'alt' TODO: Modifiable?

			progressNode = nodes.progressNode = $(progStr)[0];
			rPUI._progressSlider( progressNode );

			indicator = nodes.indicator = $(indicatorStr)[0];
			// ??: Should this really be a button? How do the rest of the controls fit into this?
			// ??: Should there just be an invisible set of controls that accessible aids can grab hold of
			textButton 	= nodes.textButton 	= $(textButtonStr)[0];
			loading 	= nodes.loading 	= $(loadingStr)[0];

			playPauseFeedback 	= nodes.playPauseFeedback 	= $(feedbackStr)[0];
			playFeedback 		= nodes.playFeedback  		= $(playPauseFeedback).find('#__rdly_play_feedback')[0];
			pauseFeedback 		= nodes.pauseFeedback 		= $(playPauseFeedback).find('#__rdly_pause_feedback')[0];

			// // Go in .rdly-bar-center .rdly-below?
			// controls = nodes.controls = $(controlsStr)[0];

			rewindSentence = nodes.rewindSentence = $(rewindSentenceStr)[0];

			var coreNodes = coreDisplay.nodes;
			$(progressNode).appendTo( coreNodes.above );
			$(playPauseFeedback).appendTo( coreNodes.barCenter );

			$(indicator).appendTo( coreNodes.textElements );
			$(textButton).appendTo( coreNodes.textElements );
			$(loading).appendTo( coreNodes.textElements );
			
			$(controls).appendTo( coreNodes.bar );
			$(rewindSentence).appendTo( coreNodes.barLeft );

			// STYLES
			playbackCSSstr 	= '<style>' + playbackCSSstr + '</style>';
			var $css 		= $(playbackCSSstr);
			$css.appendTo( coreNodes.head );


			coreDisplay.addToTriggerList( rPUI );


			rPUI._addEvents();

			return rPUI;
		};  // End rPUI._init()


		// =========== ADD NODE, ETC. =========== \\
		// Don't show at start, only when prompted
		rPUI._init( coreDisplay );

		// To be called in a script
		return rPUI;
	};  // End PlaybackUI() -> {}

	// To put on the window object, or export into a module
    return PlaybackUI;
}));

},{"./playback-CSS":13,"jquery":103,"nouislider":104}],12:[function(require,module,exports){
/* ReaderlyTimer.js
* 
* Transmits fragments from Queue. Uses `delayer` to determine time
* between each transmition.
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/Read.js
* 
* TODO;
* - Speed up with long ff or rewind
* - ??: Make length delay proportional to word length?
* - Long word delay not working? How about otherPunc? And do more
* 	symbols need to be included in that set of otherPunc?
* - Implement more robust pausing? (store in bool and wait for appropriate time)
* 
* DONE:
* - Add extra paragraph pause back in
* - Scrubbing doesn't restart the slow-start value
* 
* NOTES/GUIDES:
* - Always return Timer so functions can be chained
* - Always send Timer as the first argument to events to
* 	stay consistent.
*/

(function (root, timerFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( ['jquery'], function ( jquery ) {
        	return ( root.ReaderlyTimer = timerFactory( jquery ) );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = timerFactory( require('jquery') );
    } else {
        // Browser globals
        root.ReaderlyTimer = timerFactory( root.jQuery );
    }
}(this, function ( $ ) {

	"use strict";

	var ReaderlyTimer = function ( delayer ) {
	/* ( {}, {} ) -> ReaderlyTimer
	* 
	*/
		var rTim = {};

		rTim._init = function () {

			rTim.done 		 = false;

			rTim._timeoutID  = null;
			rTim._isPlaying  = false;
			rTim._wasPlaying = false;

			// Moving around
			rTim._jumping 	 		= false;
			rTim._incrementors 		= [0, 0, 1];  // This is a regular 1 step forward move
			rTim._skipWhitespace 	= false;
			rTim._whitespaceRegex 	= new RegExp('[\n\r]', 'g');

			return rTim;
		};  // End rTim._init()



		// ============== PASSED ON DIRECTLY FROM QUEUE ============== \\

		rTim.getProgress = function () {
			return rTim._queue.getProgress();
		};  // End rTim.gesProsress()


		rTim.getLength = function () {
			return rTim._queue.getLength();
		};  // End rTim.gesProsress()



		// ============== FLOW CONTROL ============== \\

		rTim._noDelayMod = function ( startDelay ) { return startDelay; };


		rTim._restart = function ( startEventName, endEventName, startDelayModFunc ) {

			if ( startEventName ) $(rTim).trigger( startEventName, [rTim] );

			rTim.done = false;

			// Start slow when next go through loop (restore countdown)
			var delayMod = startDelayModFunc || rTim._noDelayMod;
			var delay 	 = delayMod( delayer._settings.slowStartDelay );
			delayer.resetSlowStart( delay );

			// Just put the index at the right place
			rTim._queue.restart();
			rTim._pause(null, null, null);
			rTim.play();

			if ( endEventName ) $(rTim).trigger( endEventName, [rTim] );

			return rTim;
		};  // End rTim._restart()
		
		rTim.start = function ( queue ) {
			// Queue is passed in here, so that a Timer doesn't
			// have to be destroyed every time something new is read

			if (!queue) {
				console.error( "No readable object was passed into PlaybackManager. `queue`:", rTim._queue );
			} else {

				$(rTim).trigger( 'startBegin', [rTim] );

				rTim._queue = queue;
				rTim._restart( null, null, null );

				$(rTim).trigger( 'startFinish', [rTim] );
			}  // end if no data passed in

			return rTim;
		};  // End rTim.start()

		rTim.restart = function () {
			rTim._restart( 'restartBegin', 'restartFinish', null );
			return rTim;
		};



		// ??: 'playing' event should go off every time, but if we're
		// restarting without pausing first (pausing would trigger visual
		// feedback about pausing), then should the event not happen? That
		// means the "play" image won't fire off on restarts, even though
		// it feels like it should always fire on play.
		rTim._play = function ( startEventName, endEventName ) {
		/* ( Str, Str ) -> PlaybackManager
		* 
		* For all 'play'-like activities
		* ??: Just one eventName which gets + 'Begin' and + 'Finish' where appropriate?
		*/
			// "play" will always be forward. "rewind" can be play, but with "prev".
			rTim._incrementors = [0, 0, 1];

			if ( startEventName ) $(rTim).trigger( startEventName, [rTim] );
			
			if ( !rTim._isPlaying ) {
				rTim._isPlaying = true;
				rTim._loop( [0, 0, 0], false );
			}

			if ( endEventName ) $(rTim).trigger( endEventName, [rTim] );

			return rTim;
		};  // End rTim._play()


		rTim.play = function () {
			if ( rTim.done ) { rTim.restart(); }  // Comes back here after restarted
			else { rTim._play( 'playBegin', 'playFinish' ); }
			return rTim;
		};  // End rTim.play()




		rTim._pause = function ( startEventName, endEventName, startDelayModFunc ) {
		/* ( Str, Str, Func ) -> PlaybackManager
		* 
		* For all 'pause'-like activities
		*/ 
			if ( startEventName ) $(rTim).trigger( startEventName, [rTim] );

			clearTimeout(rTim._timeoutID);  // Needed? Maybe more immediate.
			rTim._isPlaying = false;

			// Start slow when next go through loop (restore countdown)
			var delayMod = startDelayModFunc || rTim._noDelayMod;
			var delay 	 = delayMod( delayer._settings.slowStartDelay );
			delayer.resetSlowStart( delay );

			if ( endEventName ) $(rTim).trigger( endEventName, [rTim] );

			return rTim;
		};  // End rTim._pause()


		// Names for "pause":
		rTim.pause = function () {
			rTim._pause( 'pauseBegin', 'pauseFinish', null );
			return rTim;
		};
		rTim.stop = function () {
			rTim._pause( 'stopBegin', 'stopFinish', null );
			return rTim;
		};
		rTim.close = function () {
			rTim._pause( 'closeBegin', 'closeFinish', null );
			return rTim;
		};


		rTim.togglePlayPause = function () {
			if (rTim._isPlaying) { rTim.pause(); }
			else { rTim.play(); }
			return rTim;
		};


		// ========== FF and REWIND (arrow keys and other) ========== \\
		rTim._oneStepUntimed = function ( changes ) {
		// Or decrement :/
			rTim._wasPlaying = rTim._isPlaying;
			rTim._pause( null, null, null );

			rTim._skipWhitespace = true;
			rTim.once( changes );
			rTim._skipWhitespace = false;

			if ( rTim._wasPlaying ) { rTim._play( null, null, null ); }
			return rTim;
		};  // End rTim._oneStepUntimed()

		rTim.nextWord = function () {
			rTim._oneStepUntimed( [0, 1, 0] );
			return rTim;
		};
		rTim.nextSentence = function() {
			rTim._oneStepUntimed( [1, 0, 0] );
			return rTim;
		};

		rTim.prevWord = function () {
			rTim._oneStepUntimed( [0, -1, 0] );
			return rTim;
		};
		rTim.prevSentence = function() {
			rTim._oneStepUntimed( [-1, 0, 0] );
			return rTim;
		};


		// =================== Scrubber bar =================== \\
		rTim.jumpTo = function ( playbackObj ) {
		// Argument to pass in? 'previous sentence'? 'next sentence'?
		// 'section of document'? An index number?
		// ??: How to give useful feedback from this?
			if ( rTim._queue ) {

				if ( !rTim._jumping ) {
					rTim._wasPlaying = rTim._isPlaying;
					rTim._pause( null, null, null );
					rTim._jumping = true;
				}

				var newIndex = playbackObj.amount,
					oldIndex = rTim._queue.getIndex();
				rTim.once( [0, newIndex - oldIndex, 0] );
			}
			return rTim;
		};  // End rTim.jumpTo()

		rTim.disengageJumpTo = function () {
			if ( rTim._wasPlaying ) { rTim._play( null, null, null ); }
			rTim._jumping = false;
			return rTim;
		};



		// ================================
		// LOOPS
		// ================================

        rTim.signOf = function ( num ) {
            return typeof num === 'number' ? num ? num < 0 ? -1 : 1 : num === num ? num : NaN : NaN;
        }

		rTim._wordsDone = function () {
		// Checks progress
		// Returns `true` if we're at the end of the words

			var progress = rTim.getProgress();
			// TODO: Needs some work. Fragile.
			$(rTim).trigger( 'progress', [rTim, progress, rTim._queue.index, rTim.getLength()] );

			// Stop if we've reached the end
			if ( progress === 1 ) {
				$(rTim).trigger( 'done', [rTim] );
				rTim.stop();
				rTim.done = true;
			} else {
				rTim.done = false;
			}

			return rTim.done;
		};  // End rTim._wordsDone()


        rTim._skipDirection = function ( incrementors, frag ) {
			var vector = [0, 0, 0];

			var hasOnlyNewLines = false,
				chars 			= frag,  // Doesn't change frag
				noWhitespace 	= chars.replace(rTim._whitespaceRegex, '');

			// If it's time to skip whitespace and there's nothing but whitespace
			// in the fragment, figure out which direction to move in, and 
			// send info to move once in that direction
			if ( rTim._skipWhitespace && noWhitespace.length === 0 ) {

				var senti = rTim._queue.position[0];

				if ( incrementors[0] !== 0 ) {
					vector[0] = rTim.signOf(incrementors[0]);

				} else if( incrementors[1] !== 0 ) {
					vector[1] = rTim.signOf(incrementors[1]);

				} else if( incrementors[2] !== 0 ) {
					vector[2] = rTim.signOf(incrementors[2]);

				// For when play passes [0, 0, 0]. ??: Does anything else ever do this?
				// We're going to have to skip in some direction or we'll never get anywhere
				} else {
					vector = [0, 0, 1];  // ??: Always true?
				}
			}

			return vector;
        };  // End rTim._skipDirection()


        rTim._loop = function( incrementors, justOnce ) {
        // https://jsfiddle.net/d1mgadeo/2/

    	    // Finish if we're at the end of the text
    	    if ( rTim._done ) { return; }
    	    // can't do if (!_isPlaying) because things that call .once() and such also pause

			$(rTim).trigger( 'loopBegin', [rTim] );
    	    
			// If, for example, calling the loop from the loop, just keep
			// going in the same global direction. Allows for stuff like
			// `._play()` to show current word, then keep going
			incrementors = incrementors || rTim._incrementors;  // ??: Too indirect?
			var frag 	 = rTim._queue.getFragment( incrementors ),
				skipDir  = rTim._skipDirection( incrementors, frag );  // [int, int] of -1, 0, or 1

			// !!! KEEP THIS even though it's not currently needed for sentences. I hope
			// to make paragraphs their own sentences for reasons of accessibility.
			// It's actually useful when navigating by word fragment.
    	    if ( skipDir[0] !== 0 || skipDir[1] !== 0 || skipDir[2] !== 0 ) {

				$(rTim).trigger( 'loopSkip', [rTim, frag] );
    	    	rTim._loop( skipDir, justOnce );
    	    
    	    } else {

				if ( !justOnce ) {
					// How long this word will remain on the screen before changing
					var delay = delayer.calcDelay( frag, justOnce );  // TODO: for fastforward, modify speed
					rTim._timeoutID = setTimeout( rTim._loop, delay );
				}

				// Send fragment after setTimeout so that you can easily
				// pause on "newWordFragment". Feels weird, though.
				$(rTim).trigger( 'newWordFragment', [rTim, frag] );
				$(rTim).trigger( 'loopFinish', [rTim] );

    	    }  // end if skip fragment or not skip fragment

			// Finish if we're at the end of the text
			if ( rTim._wordsDone() ) { return rTim; }

			return rTim;  // Return timeout id instead?
        };  // End rTim._loop()


		rTim.once = function ( incrementors ) {

			$(rTim).trigger( 'onceBegin', [rTim] );
			rTim._loop( incrementors, true);
			$(rTim).trigger( 'onceFinish', [rTim] );

			return rTim;
		};  // End rTim.once()


        // ============== DO IT ============== \\
		rTim._init()
		return rTim;
	};  // End ReaderlyTimer() -> {}

    return ReaderlyTimer;
}));

},{"jquery":103}],13:[function(require,module,exports){
// playback-CSS.js
// css that's bundleable

(function (root, playbackCSSFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () {
        	return ( root.playbackCSS = playbackCSSFactory() );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = playbackCSSFactory();
    } else {
        // Browser globals
        root.playbackCSS = playbackCSSFactory();
    }
}(this, function () {

	"use strict";

	var playbackCSS = "/* readerly-playback.css */\
\
/* ============================== */\
/* STRUCTURE */\
/* ============================== */\
#__rdly_progress {\
	position: relative;\
	height: 7px;\
	width: 100%;\
	/* function */\
	/*cursor: pointer;*/\
}\
#__rdly_percent_done {\
	position: relative;\
	height: 100%;\
	width: 0;\
	transition: width 200ms linear;\
}\
#__rdly_scrubber {\
	/* Probably needs to be an arrow pointing up. svg time */\
	position: absolute;\
	height: .75rem;\
	width: .5rem;\
	right: 0;\
	top:0;\
	transform: translate( 50%, 0 );\
}\
\
#__rdly_indicator {\
	/* Don't get in the way of text */\
	position: absolute;\
	z-index: -10;\
}\
#__rdly_text_button {\
	width: 100%;\
	height: 100%;\
	text-align: center;\
}\
#__rdly_loading {\
	/* Can't be centered with transform because transform is used to rotate it */\
	/* Horizontally centered by parent text-align */\
	display: inline-block;\
	width: 2em;\
	height: 2em;\
}\
\
#__rdly_restart {\
	/*position: relative;*/\
	/*width: 1.5em;*/\
	/*height: 1.5em;*/\
	/* function */\
	/*cursor: pointer;*/\
}\
\
#__rdly_playback_controls {\
	clear: both;\
	height: 1em;\
	/* For now */\
	display: none;\
}\
#__rdly_playback_controls:last-child {\
	padding-right: 0;\
}\
\
/* This should be controlled elsewhere */\
.__rdly-playback-button,\
.__rdly-playback-feedback {\
	width: 2.5em;\
	height: 2.5em;\
}\
\
#__rdly_play_pause_feedback {\
	display: flex;\
	/*function*/\
	pointer-events: none;\
}\
#__rdly_play_feedback, #__rdly_pause_feedback {\
	display: flex;\
    align-items: center;\
    justify-content: center;\
}\
\
\
/* ============================== */\
/* SKIN */\
/* ============================== */\
#__rdly_above_bar {\
	border-bottom: 0;\
}\
\
#__rdly_progress {\
	border:0;\
	border-top: 1px solid gray;\
	border-bottom: 1px solid gray;\
}\
#__rdly_percent_done {\
	background-color: #3498db;\
}\
#__rdly_scrubber {\
	/* temp */\
	/*background-color: rgba( 0, 0, 0, 0.2 );*/\
}\
\
\
\
#__rdly_indicator {\
	width: 2px;\
	height: 1.15em;\
	background-color: rgba( 190, 190, 190, 1 );\
}\
/* Somehow get rid of the need for #__rdly in this definition */\
#__rdly #__rdly_text_button {\
    background: none;\
    border: none;\
    height: 90%;\
\
	font-family: 'droid', serif;\
	font-size: 36px;\
	line-height: normal;\
	font-style: normal;\
	font-weight: normal;\
	font-variant: none;\
	font-stretch: normal;\
	font-feature-settings: normal;\
	font-kerning: auto;\
	-webkit-font-smoothing: auto;\
	text-transform: none;\
}\
#__rdly_loading {\
	fill: rgba( 150, 150, 150, 1 );\
	/* temp for visibility before icon is chosen */\
	border: 1px solid gray;\
}\
\
#__rdly_play_feedback, #__rdly_pause_feedback {\
	border-radius: 50%;\
	width: 1.75em;\
    height: 1.75em;\
    font-size: inherit;\
    font-weight: bold;\
    color: rgb(220, 220, 220);\
    background: rgb(50, 50, 50);\
}\
\
#__rdly_rewind_sentence {\
	/*background-image: url('');*/\
}\
#__rdly_rewind_word {\
	/*background-image: url('');*/\
}\
#__rdly_pause {\
	/*background-image: url('');*/\
}\
#__rdly_play {\
	/*background-image: url('');*/\
}\
#__rdly_fastforward_word {\
	/*background-image: url('');*/\
}\
#__rdly_fastforward_sentence {\
	/*background-image: url('');*/\
}\
\
#__rdly_restart {\
	/*background-image: url('');*/\
}\
";

	// To put on the window object, or export into a module
    return playbackCSS;
}));

},{}],14:[function(require,module,exports){
/* ReaderlySettings.js
* 
* Should manage settings. Don't put them directly in here
* one by one. This should have functions that allow this
* object to be extended.
* 
* TODO:
* ??: Add events/buttons for things like opening and closing settings?
* - ??: Don't close settings when closing readerly? If they were there
* 	on close, should they be there on re-open?
* - Stop scrolling on doc when being scrolled
*/

(function (root, settingsFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( ['jquery', './settings/settings-CSS'], function ( jquery, settingsCSS ) {
        	return ( root.ReaderlySettings = settingsFactory( jquery, settingsCSS ) );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = settingsFactory( require('jquery'), require('./settings-CSS') );
    } else {
        // Browser globals
        root.ReaderlySettings = settingsFactory( root.jQuery, root.settingsCSS );
    }
}(this, function ( $, settingsCSSstr ) {

	"use strict";

	var ReaderlySettings = function ( timer, coreDisplay ) {

		var rSet = {};

		rSet.settings = {};

		rSet.nodes 				= {};
		rSet.menuNodes 			= {};
		rSet._destroyTabEvent 	= null;
		rSet._changeIDsEvent 	= null;

		rSet._isOpen 			= false;

		var opener, container, menus, tabs;


		// =========== ALLOW EXTENTIONS OF SETTINGS =========== \\

		// ---- Add a tab to go with the settings ---- \\
		rSet._hideLoneTab = function () {
		/* Make sure that if there's only one settings element,
		* the tabs don't show
		*/
			if ( Object.keys(rSet.menuNodes).length <= 1 ) {
				$(tabs).addClass( '__rdly-hidden' );
			} else {
				$(tabs).removeClass( '__rdly-hidden' );
			}
			return rSet;
		};

		rSet._showMenu = function ( evnt ) {
		// Sent from a tab, DOES NOT SHOW THE NODE THAT CONTAINS ALL THE MENUS
		// Shows one individual menu, hiding the other menu nodes
			var $thisTab = $(evnt.target),
				id 		 = evnt.target.id.replace(/_tab$/, ''),
				$menus 	 = $(menus).find( '.__rdly-settings-menu' ),
				$tabs 	 = $(tabs),
				thisMenu = rSet.menuNodes[ id ];

			// Hide all, then show this one
			$menus.addClass( '__rdly-hidden' );
			$(thisMenu).removeClass( '__rdly-hidden' );
			// There should only be one (for now...). It's height gets adjusted.
			// Should only have one child, which can grow.
			$menus.removeClass( '__rdly-to-grow' );
			$(thisMenu).addClass( '__rdly-to-grow' );

			// Same type of thing, showing this tab as active
			$tabs.removeClass( '__rdly-active-ui' );
			$thisTab.addClass( '__rdly-active-ui' );

			return rSet;
		};

		rSet.destroyMenu = function ( evnt ) {
			var id = evnt.target.id;  // jQuery element? Need to get [0] item?

			$(rSet.menuNodes[ id ]).remove();
			rSet.menuNodes[ id ] = null;
			$($(tabs).find('#' + id + '_tab' )).remove();

			return rSet;
		};

		rSet._addTab = function ( id, tabText ) {
			var html = '<div id="' + id + '_tab" class="__rdly-settings-tab">' + tabText + '</div>',
				$tab = $( html );
			$tab.appendTo( tabs );
			rSet._hideLoneTab();

			$tab.on( 'touchend click', rSet._showMenu )

			return $tab;
		};

		rSet.addMenu = function ( menu ) {// node, tabText ) {

			var node 	= menu.node,
				tabText = menu.tabText;

			var id = node.id;

			// Abort if already exists
			if ( rSet.menuNodes[ id ] ) {
				// Not sure how else to handle this gracefully...
				// Just refuse to add something with this ID? That seems cruel.
				console.warn( "A settings menu of this id is already in here. Please pick a different id or use someManager.destroyMenu( 'someID' ) to destroy it. Existing menu:", rSet.menuNodes[ id ] );
				return node;
			}

			rSet.menuNodes[ id ] = node;

			// Otherwise keep going
			var $newNode = $(node);
			$newNode.addClass( '__rdly-settings-menu' );
			// $newNode.addClass( '__rdly-settings-menu __rdly-scrollable-y-contents' );

			$(menus).append( $newNode );
			$newNode[0].addEventListener( 'destroyOneSettingsMenu', rSet._removeMenu, false );  // TODO: Remove this line
			rSet.settings[ menu.id ] = menu;

			var $tab = rSet._addTab( id, tabText );

			// Show the first menu added
			$($(tabs).children()[0]).trigger( 'click' );

			return rSet;
		};  // End rSet.addMenu()


		// =========== BASE OBJECT =========== \\
		rSet._open = function () {
			$(coreDisplay.nodes.below).removeClass('__rdly-hidden');
			$(opener).addClass( '__rdly-active-ui' );  // different style
			rSet._isOpen = true;
			coreDisplay.update();
			return rSet;
		};

		rSet.close = function ( evnt ) {
		// Allowed to be called externally
			$(coreDisplay.nodes.below).addClass('__rdly-hidden');
			$(opener).removeClass( '__rdly-active-ui' );  // different style
			rSet._isOpen = false;
			coreDisplay.update();
			return rSet;
		};

		rSet._toggleOpenClose = function () {
			if ( rSet._isOpen ) {
				rSet.close();
			} else {
				rSet._open();
			}
			return rSet;
		};

		rSet._onBlur = function ( evnt ) {
			var parent = $(evnt.target).parents('#__rdly_settings_container')[0]
			if ( !parent ) {
				// If they've clicked the "open settings" button, toggle
				if ( evnt.target === rSet.nodes._openSettings ) {
					rSet._toggleOpenClose();
				// Otherwise they're just getting out of the settings menu, so close
				// ??: Allow users to click other buttons while settings are open?
				// They may realize they want to pause while they're changing the
				// settings, so maybe not.
				} else {
					rSet.close();
				}
			}
			return rSet;
		};

		rSet._addEvents = function () {
			// $('#__rdly').on( 'touchend click', rSet._onBlur );  // See question above
			$(opener).on( 'touchend click', rSet._toggleOpenClose );
			return rSet;
		};


		rSet._addBase = function ( coreDisplay ) {
			var $open = $('<button id="__rdly_open_settings" class="__rdly-big-menu-button">Set</button>'),
				$cont = $('<div id="__rdly_settings_container"></div>'),
				$taby = $('<div id="__rdly_settings_tabs"></div>'),
				$sets = $('<div id="__rdly_settings_menus" class="__rdly-scrollable-y"></div>');

			var coreNodes 	= coreDisplay.nodes,
				head 		= coreNodes.head,
				left  		= coreNodes.barLeft,
				below 		= coreNodes.below;

			var nodes 	= rSet.nodes;
			opener 		= nodes._openSettings 	 	= $open.prependTo( left )[0];
			container 	= nodes._settingsContainer 	= $cont.prependTo( below )[0];
			tabs 		= nodes._tabs 			 	= $taby.appendTo( $cont )[0];
			menus 		= nodes._menus 		 		= $sets.appendTo( $cont )[0];

			// STYLES
			settingsCSSstr 	= '<style>' + settingsCSSstr + '</style>';
			var $css 		= $(settingsCSSstr);
			$css.appendTo( head );

			return rSet;	
		};

		rSet._destroy = function () {
			opener.remove();
			container.remove();

			// $('#__rdly').off( rSet._onBlur );

			return rSet;
		};

		rSet._init = function ( coreDisplay ) {

			// // Not sure yet why you'd want to rebuild this object from
			// // scratch, but going to offer the option for now
			// if ( $('#__rdly_open_settings') ) { rSet._destroy(); }

			rSet._addBase( coreDisplay )
				._addEvents();

			coreDisplay.addToTriggerList( rSet );

			return rSet;
		};



		// =========== CREATE =========== \\
		// Don't show at start, only when prompted
		rSet._init( coreDisplay );

		// To be called in a script
		return rSet;
	};  // End ReaderlySettings() -> {}

	// To put on the window object, or export into a module
    return ReaderlySettings;
}));

},{"./settings-CSS":18,"jquery":103}],15:[function(require,module,exports){
/* SpeedSettings.js
* 
* UI elements for setting various speeds/delays for
* certain characteristics of words, like length and
* punctuation.
* 
* Based on https://github.com/jamestomasino/read_plugin/blob/master/Read.js
*/

(function (root, speedsFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( ['jquery', 'nouislider'], function ( jquery, nouislider ) {
        	return ( root.SpeedSettings = speedsFactory( jquery ) );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = speedsFactory( require('jquery'), require('nouislider') );
    } else {
        // Browser globals
        root.SpeedSettings = speedsFactory( root.jQuery, root.noUiSlider );  // not sure noUi is here
    }
}(this, function ( $, noUiSlider ) {

	"use strict";

	var SpeedSettings = function ( delayer, coreSettings ) {

		var rSpd = {};

		rSpd.node 	 = null;
		rSpd.id 	 = 'speedSettings';
		rSpd.tabText = 'Speeds';

		rSpd._nodes  = {};
		var nodes 	 = rSpd._nodes;

		nodes.wpmInput 				= null;
		nodes.wpmSlider 			= null;
		nodes.slowStartInput 		= null;
		nodes.slowStartSlider 		= null;
		nodes.sentenceDelayInput 	= null;
		nodes.sentenceDelaySlider 	= null;
		nodes.puncDelayInput 		= null;
		nodes.puncDelaySlider 		= null;
		nodes.shortWordDelayInput 	= null;
		nodes.shortWordDelaySlider 	= null;
		nodes.longWordDelayInput 	= null;
		nodes.longWordDelaySlider 	= null;
		nodes.numericDelayInput 	= null;
		nodes.numericDelaySlider 	= null;


		rSpd._oneSlider = function ( data ) {
		/* ( {} ) -> ?
		* 
		* Turn the given data into one noUiSlider slider
		*/
			// To keep handles within the bar
			$(data.sliderNode).addClass('noUi-extended');

			var slider = noUiSlider.create( data.sliderNode, {
				range: { min: data.range.min, max: data.range.max },
				start: data.startVal,
				step: data.step,
				connect: 'lower',
				handles: 1,
				behaviour: 'extend-tap',
				// Not sure the below does anything
				serialization: {
					to: [data.inputNode],
					resolution: data.resolution
				}
			});

			data.sliderNode.noUiSlider.on('update', function( values, handle ) {
				data.inputNode.value = values[handle];
				delayer.set( data.operation, values[handle] );
			});

			data.inputNode.addEventListener('change', function(){
				data.sliderNode.noUiSlider.set(this.value);
				delayer.set( data.operation, this.value );
			});

			return data.sliderNode;
		};  // End rSpd._oneSlider()


		rSpd._makeSliders = function () {

			var slider 	= rSpd._oneSlider,
				nodes 	= rSpd._nodes,
				setts 	= delayer._settings;

			slider({
				sliderNode: 	nodes.wpmSlider,
				range: 		{ min: 1, max: 1500 },
				// // Shouldthis be some none "_" value? Passed in?
				startVal: 	setts.wpm,
				step: 		25,
				inputNode: 	nodes.wpmInput,
				resolution: 1,
				operation: 	'wpm'
			});

			slider({
				sliderNode: nodes.slowStartSlider,
				range: 		{ min: 0, max: 20 },
				startVal: 	setts.slowStartDelay,
				step: 		1,
				inputNode: 	nodes.slowStartInput,
				resolution: 1,
				operation: 	'slowStartDelay'
			});

			slider({
				sliderNode: nodes.sentenceDelaySlider,
				range: 		{ min: 0, max: 5 },
				startVal: 	setts.sentenceDelay,
				step: 		0.1,
				inputNode: 	nodes.sentenceDelayInput,
				resolution: 0.1,
				operation: 	'sentenceDelay'
			});

			slider({
				sliderNode: nodes.puncDelaySlider,
				range: 		{ min: 0, max: 5 },
				startVal: 	setts.otherPuncDelay,
				step: 		0.1,
				inputNode: 	nodes.puncDelayInput,
				resolution: 0.1,
				operation: 	'otherPuncDelay'
			});

			slider({
				sliderNode: nodes.shortWordDelaySlider,
				range: 		{ min: 0, max: 5 },
				startVal: 	setts.shortWordDelay,
				step: 		0.1,
				inputNode: 	nodes.shortWordDelayInput,
				resolution: 0.1,
				operation: 	'shortWordDelay'
			});

			slider({
				sliderNode: nodes.longWordDelaySlider,
				range: 		{ min: 0, max: 5 },
				startVal: 	setts.longWordDelay,
				step: 		0.1,
				inputNode: 	nodes.longWordDelayInput,
				resolution: 0.1,
				operation: 	'longWordDelay'
			});

			slider({
				sliderNode: nodes.numericDelaySlider,
				range: 		{ min: 0, max: 5 },
				startVal: 	setts.numericDelay,
				step: 		0.1,
				inputNode: 	nodes.numericDelayInput,
				resolution: 0.1,
				operation: 	'numericDelay'
			});

			return rSpd;
		};  // End rSpd._makeSliders()


		rSpd._assignSettingItems = function () {

			var nodes = rSpd._nodes,
				$menu = $(nodes.menu);

			nodes.wpmInput 				= $menu.find('#__rdly_wpm_input')[0];
			nodes.wpmSlider 			= $menu.find('#__rdly_wpm_slider')[0];
			nodes.slowStartInput 		= $menu.find('#__rdly_slowstart_input')[0];
			nodes.slowStartSlider 		= $menu.find('#__rdly_slowstart_slider')[0];
			nodes.sentenceDelayInput 	= $menu.find('#__rdly_sentencedelay_input')[0];
			nodes.sentenceDelaySlider 	= $menu.find('#__rdly_sentencedelay_slider')[0];
			nodes.puncDelayInput 		= $menu.find('#__rdly_puncdelay_input')[0];
			nodes.puncDelaySlider 		= $menu.find('#__rdly_puncdelay_slider')[0];
			nodes.shortWordDelayInput 	= $menu.find('#__rdly_shortworddelay_input')[0];
			nodes.shortWordDelaySlider 	= $menu.find('#__rdly_shortworddelay_slider')[0];
			nodes.longWordDelayInput 	= $menu.find('#__rdly_longworddelay_input')[0];
			nodes.longWordDelaySlider 	= $menu.find('#__rdly_longworddelay_slider')[0];
			nodes.numericDelayInput 	= $menu.find('#__rdly_numericdelay_input')[0];
			nodes.numericDelaySlider 	= $menu.find('#__rdly_numericdelay_slider')[0];

			return rSpd;
		};  // End rSpd._assignSettingItems()

		rSpd._oneSetting = function ( idName, label ) {
			// Should the very specific classes be ids?
			return $('<div id="__rdly_' + idName + '_setting" class="__rdly-setting">\
						<label class="__rdly-slider-label">' + label + '</label>\
						<div class="__rdly-slider-controls">\
							<input id="__rdly_' + idName + '_input" class="__rdly-slider-input" type="text"/>\
							<div id="__rdly_' + idName + '_slider" class="__rdly-slider"></div>\
						</div>\
					</div>')
		};  // End rSpd._oneSetting()

		rSpd._addNodes = function ( coreSettings ) {

			var one = rSpd._oneSetting;

			// Maybe this should belong to something else - a settings manager
			var $menu = $('<div id="__rdly_speed_settings_menu"></div>');
			rSpd.node = $menu[0];

			coreSettings.addMenu( rSpd );

			rSpd._nodes.menu = $menu[0];

			one( 'wpm', 'Words Per Minute' ).appendTo($menu);
			one( 'slowstart', 'Slow Start Speed' ).appendTo($menu);
			one( 'sentencedelay', 'Sentence Delay' ).appendTo($menu);
			one( 'puncdelay', 'Other Punctuation Delay' ).appendTo($menu);
			one( 'shortworddelay', 'Short Word Delay' ).appendTo($menu);
			one( 'longworddelay', 'Long Word Delay' ).appendTo($menu);
			one( 'numericdelay', 'Numeric Delay' ).appendTo($menu);

			return rSpd;
		};  // End rSpd._addNodes()


		rSpd._init = function ( coreSettings ) {

			rSpd._addNodes( coreSettings );
			rSpd._assignSettingItems();
			rSpd._makeSliders();

			// Events assigned with noUiSlider creation

			return rSpd;
		};



		// =========== ADD NODE, ETC. =========== \\
		// Don't show at start, only when prompted
		rSpd._init( coreSettings );

		// To be called in a script
		return rSpd;
	};  // End SpeedSettings() -> {}

	// To put on the window object, or export into a module
    return SpeedSettings;
}));

},{"jquery":103,"nouislider":104}],16:[function(require,module,exports){
/* WordSettings.js
* 
* UI elements for setting various word features, like
* max number of displayed characters.
*/

(function (root, wordSetsFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( ['jquery', 'nouislider'], function ( jquery, nouislider ) {
        	return ( root.WordSettings = wordSetsFactory( jquery ) );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = wordSetsFactory( require('jquery'), require('nouislider') );
    } else {
        // Browser globals
        root.WordSettings = wordSetsFactory( root.jQuery, root.noUiSlider );  // not sure noUi is here
    }
}(this, function ( $, noUiSlider ) {

	"use strict";

	var WordSettings = function ( fragmentor, coreSettings ) {

		var wSets = {};

		wSets.node 	  = null;
		wSets.tabText = 'Words';

		wSets._nodes  = {};
		var nodes 	  = wSets._nodes;

		nodes.maxCharsInput 	= null;
		nodes.maxCharsSlider 	= null;
		// nodes.slowStartInput 		= null;
		// nodes.slowStartSlider 		= null;
		// nodes.sentenceDelayInput 	= null;
		// nodes.sentenceDelaySlider 	= null;
		// nodes.puncDelayInput 		= null;
		// nodes.puncDelaySlider 		= null;
		// nodes.shortWordDelayInput 	= null;
		// nodes.shortWordDelaySlider 	= null;
		// nodes.longWordDelayInput 	= null;
		// nodes.longWordDelaySlider 	= null;
		// nodes.numericDelayInput 	= null;
		// nodes.numericDelaySlider 	= null;


		wSets._oneSlider = function ( data ) {
		/* ( {} ) -> ?
		* 
		* Turn the given data into one noUiSlider slider
		*/
			// To keep handles within the bar
			$(data.sliderNode).addClass('noUi-extended');

			var slider = noUiSlider.create( data.sliderNode, {
				range: { min: data.range.min, max: data.range.max },
				start: data.startVal,
				step: data.step,
				connect: 'lower',
				handles: 1,
				behaviour: 'extend-tap',
				// Not sure the below does anything
				serialization: {
					to: [data.inputNode],
					resolution: data.resolution
				}
			});

			data.sliderNode.noUiSlider.on('update', function( values, handle ) {
				data.inputNode.value = values[handle];
				fragmentor.set( data.setting, values[handle] );
			});

			data.inputNode.addEventListener('change', function(){
				data.sliderNode.noUiSlider.set(this.value);
				fragmentor.set( data.setting, this.value );
			});

			return data.sliderNode;
		};  // End wSets._oneSlider()


		wSets._makeSliders = function () {

			var slider 	= wSets._oneSlider,
				nodes 	= wSets._nodes,
				setts 	= fragmentor._settings;

			slider({
				sliderNode: nodes.maxCharsSlider,
				range: 		{ min: 1, max: 25 },
				startVal: 	setts.maxNumCharacters,
				step: 		1,
				inputNode: 	nodes.maxCharsInput,
				resolution: 1,
				setting: 	'maxNumCharacters'
			});

			return wSets;
		};  // End wSets._makeSliders()


		wSets._assignSettingItems = function () {

			var nodes = wSets._nodes,
				$menu = $(nodes.menu);

			nodes.maxCharsInput 	= $menu.find('#__rdly_maxchars_input')[0];
			nodes.maxCharsSlider 	= $menu.find('#__rdly_maxchars_slider')[0];
			// nodes.slowStartInput 		= $menu.find('#__rdly_slowstart_input')[0];
			// nodes.slowStartSlider 		= $menu.find('#__rdly_slowstart_slider')[0];
			// nodes.sentenceDelayInput 	= $menu.find('#__rdly_sentencedelay_input')[0];
			// nodes.sentenceDelaySlider 	= $menu.find('#__rdly_sentencedelay_slider')[0];
			// nodes.puncDelayInput 		= $menu.find('#__rdly_puncdelay_input')[0];
			// nodes.puncDelaySlider 		= $menu.find('#__rdly_puncdelay_slider')[0];
			// nodes.shortWordDelayInput 	= $menu.find('#__rdly_shortworddelay_input')[0];
			// nodes.shortWordDelaySlider 	= $menu.find('#__rdly_shortworddelay_slider')[0];
			// nodes.longWordDelayInput 	= $menu.find('#__rdly_longworddelay_input')[0];
			// nodes.longWordDelaySlider 	= $menu.find('#__rdly_longworddelay_slider')[0];
			// nodes.numericDelayInput 		= $menu.find('#__rdly_numericdelay_input')[0];
			// nodes.numericDelaySlider 	= $menu.find('#__rdly_numericdelay_slider')[0];

			return wSets;
		};  // End wSets._assignSettingItems()

		wSets._oneSetting = function ( idName, label ) {
			// Should the very specific classes be ids?
			return $('<div id="__rdly_' + idName + '_setting" class="__rdly-setting">\
						<label class="__rdly-slider-label">' + label + '</label>\
						<div class="__rdly-slider-controls">\
							<input id="__rdly_' + idName + '_input" class="__rdly-slider-input" type="text"/>\
							<div id="__rdly_' + idName + '_slider" class="__rdly-slider"></div>\
						</div>\
					</div>')
		};  // End wSets._oneSetting()

		wSets._addNodes = function ( coreSettings ) {

			var one = wSets._oneSetting;

			// Maybe this should belong to something else - a settings manager
			var $menu = $('<div id="__rdly_word_settings_menu"></div>');
			wSets.node = $menu[0];

			coreSettings.addMenu( wSets );

			wSets._nodes.menu = $menu[0];

			one( 'maxchars', 'Max Letters Shown' ).appendTo($menu);
			// one( 'slowstart', 'Slow Start Speed' ).appendTo($menu);
			// one( 'sentencedelay', 'Sentence Delay' ).appendTo($menu);
			// one( 'puncdelay', 'Other Punctuation Delay' ).appendTo($menu);
			// one( 'shortworddelay', 'Short Word Delay' ).appendTo($menu);
			// one( 'longworddelay', 'Long Word Delay' ).appendTo($menu);
			// one( 'numericdelay', 'Numeric Delay' ).appendTo($menu);

			return wSets;
		};  // End wSets._addNodes()


		wSets._init = function ( coreSettings ) {

			wSets._addNodes( coreSettings );
			wSets._assignSettingItems();
			wSets._makeSliders();

			// Events assigned with noUiSlider creation

			return wSets;
		};



		// =========== ADD NODE, ETC. =========== \\
		// Don't show at start, only when prompted
		wSets._init( coreSettings );

		// To be called in a script
		return wSets;
	};  // End WordSettings() -> {}

	// To put on the window object, or export into a module
    return WordSettings;
}));

},{"jquery":103,"nouislider":104}],17:[function(require,module,exports){
// noui-CSS.js
// css that's bundleable


(function (root, nouiCSSFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () {
        	return ( root.nouiCSS = nouiCSSFactory() );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = nouiCSSFactory();
    } else {
        // Browser globals
        root.nouiCSS = nouiCSSFactory();
    }
}(this, function () {

	"use strict";

	var nouiCSS = "/* noUi.css */\
\
.noUi-target,\
.noUi-target * {\
  -webkit-touch-callout: none;\
  -webkit-user-select: none;\
  -ms-touch-action: none;\
  -ms-user-select: none;\
  -moz-user-select: none;\
  -moz-box-sizing: border-box;\
  box-sizing: border-box;\
}\
\
/* instead of background, it seems, in v8 */\
.noUi-target {\
  background: #FAFAFA;\
  box-shadow: inset 0 1px 1px #B3B3B3;\
  border: 1px solid rgba( 80, 80, 80, 1 );\
}\
\
.noUi-base {\
  width: 100%;\
  height: 100%;\
  position: relative;\
}\
\
.noUi-origin {\
  position: absolute;\
  right: 0;\
  top: 0;\
  left: 0;\
  bottom: 0;\
}\
\
.noUi-handle {\
  position: relative;\
  z-index: 1;\
}\
\
.noUi-stacking .noUi-handle {\
  /* This class is applied to the lower origin when\
     its values is > 50%. */\
  z-index: 10;\
}\
\
.noUi-stacking + .noUi-origin {\
  /* Fix stacking order in IE7, which incorrectly\
     creates a new context for the origins. */\
  /* *z-index: -1; - Original. Meant to be this way? */\
  z-index: -1;\
}\
\
.noUi-state-tap .noUi-origin {\
  /*-webkit-transition: left 0.3s, top 0.3s;*/\
  /*transition: left 0.3s, top 0.3s;*/\
}\
\
.noUi-state-drag * {\
  cursor: inherit !important;\
}\
\
/* Slider size and handle placement */\
.noUi-horizontal {\
  height: 18px;\
}\
\
.noUi-horizontal .noUi-handle {\
  width: 32px;\
  height: 20px;\
  /* Can't do adjustable height that's good with small sizes (min-height) with no min-top too :/ */\
  /*min-height: 20px;*/\
  /*height: 140%;*/\
  /*top: 69%;*/\
  left: -16px;\
  /* vertical centering without flexbox */\
  top: 50%;\
  transform: translateY(-50%);\
}\
\
.noUi-vertical {\
  width: 18px;\
}\
\
.noUi-vertical .noUi-handle {\
  width: 28px;\
  height: 34px;\
  left: -6px;\
  top: -17px;\
}\
\
.noUi-vertical.noUi-extended {\
  padding: 15px 0;\
}\
\
.noUi-vertical.noUi-extended .noUi-origin {\
  height: 100%;\
  bottom: -15px;\
}\
\
/* Styling */\
.noUi-background {\
  background: #FAFAFA;\
  box-shadow: inset 0 1px 1px #B3B3B3;\
  border: 1px solid gray;\
}\
\
.noUi-connect {\
  position: absolute;\
  height: 100%;\
  background: #3498DB;\
  box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45);\
  /*border: 3px double black;*/\
  /*border: 1px solid rgba( 80, 80, 80, 1 );*/\
  -webkit-transition: background 450ms;\
  transition: background 450ms;\
}\
\
.noUi-origin {\
  border-radius: 2px;\
}\
\
.noUi-target {\
  box-shadow: inset 0 1px 1px #f0f0f0, 0 3px 6px -5px #bbbbbb;\
}\
\
/* Handles and cursors */\
.noUi-dragable {\
  cursor: w-resize;\
}\
\
.noUi-vertical .noUi-dragable {\
  cursor: n-resize;\
}\
\
.noUi-handle {\
  border: 1.5px solid #959191;\
  border-radius: 3px;\
  background: #FFF;\
  cursor: default;\
  box-shadow: inset 0 0 1px white, inset 0 1px 7px #ebebeb, 0 3px 6px -3px #bbbbbb;\
}\
\
.noUi-active {\
  box-shadow: inset 0 0 1px white, inset 0 1px 7px #dddddd, 0 3px 6px -3px #bbbbbb;\
}\
\
/* Handle stripes */\
.noUi-handle:before,\
.noUi-handle:after {\
  content: '';\
  display: block;\
  position: absolute;\
  height: 14px;\
  width: 1px;\
  background: #959191;\
  left: 14px;\
  top: 2px;\
}\
\
.noUi-handle:after {\
  left: 16px;\
}\
\
.noUi-vertical .noUi-handle:before,\
.noUi-vertical .noUi-handle:after {\
  width: 14px;\
  height: 1px;\
  left: 6px;\
  top: 14px;\
}\
\
.noUi-vertical .noUi-handle:after {\
  top: 17px;\
}\
\
/* Disabled state */\
[disabled].noUi-connect,\
[disabled] .noUi-connect {\
  background: #B8B8B8;\
}\
\
[disabled] .noUi-handle {\
  cursor: not-allowed;\
}\
\
/* Blocked state */\
.noUi-state-blocked.noUi-connect,\
.noUi-state-blocked .noUi-connect {\
  background: #4FDACF;\
}\
\
/* Containing handles within the slider bar (horizontal) */\
.noUi-horizontal.noUi-extended {\
	/*padding-right: 32px;*/\
  /* ??: Why is 32px not working? https://refreshless.com/nouislider/more/ bottom*/\
  padding-right: 30px;\
}\
.noUi-horizontal.noUi-extended .noUi-handle {\
	left: -1px;\
}\
.noUi-horizontal.noUi-extended .noUi-origin  {\
	right: -32px;\
}\
\
/*  PROGRESSS BAR AND SCRUBBER  */\
#__rdly_progress .noUi-handle {\
  top: 6px;\
  height: 15px;\
}\
#__rdly_progress .noUi-handle::before,\
#__rdly_progress .noUi-handle::after {\
  height: 80%;\
  top: 50%;\
  transform: translateY(-50%);\
}\
";

	// To put on the window object, or export into a module
    return nouiCSS;
}));

},{}],18:[function(require,module,exports){
// settings-CSS.js
// css that's bundleable


(function (root, settingsCSSFactory) {  // root is usually `window`
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define( [], function () {
        	return ( root.settingsCSS = settingsCSSFactory() );
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node. Does not work with strict CommonJS, but only CommonJS-like
        // environments that support module.exports, like Node.
        module.exports = settingsCSSFactory();
    } else {
        // Browser globals
        root.settingsCSS = settingsCSSFactory();
    }
}(this, function () {

	"use strict";

	var settingsCSS = "/* settings.css\
* \
* Refer to main settings script (currently ReaderlySettings.js\
* on 12/20/16) for DOM structure.\
* \
* Affects main settings, settings modules, and playback.\
* Consider name change.\
* \
* TODO:\
* - More robust defualts\
*/\
\
/* ============================== */\
/* SKIN */\
/* ============================== */\
/* Should this be in readerly-main.css? */\
#__rdly button {\
	position: relative;\
	padding: 0;\
  /* functional */\
  cursor: pointer;\
}\
\
#__rdly button,\
#__rdly label,\
#__rdly input {\
  /* font defaults from chrome inspection */\
  font-family: 'droid', serif;\
  font-size: 16px;\
  line-height: normal;\
  font-style: normal;\
  font-weight: normal;\
  font-variant: none;\
  font-stretch: normal;\
  font-feature-settings: normal;\
  font-kerning: auto;\
  -webkit-font-smoothing: auto;\
  text-transform: none;\
}\
\
#__rdly .__rdly-big-menu-button {\
	width: 3em;\
	height: 3em;\
  /* default followed by desired setting */\
  margin: 0;\
	margin-right: .3em;\
}\
\
.__rdly-sup-menu-button {\
  position: relative;\
  top: 0;\
  right: 0;\
  width: 1.5em;\
  height: 1.5em;\
  margin: 0;\
}\
\
/* Solution to transition? https://stackoverflow.com/questions/3508605/how-can-i-transition-height-0-to-height-auto-using-css#8331169 */\
/* See comments on the thread */\
#__rdly_settings_container {\
  width: 100%;\
  display: flex;\
  flex-direction: column;\
}\
\
#__rdly_settings_tabs,\
#__rdly_settings_menus,\
.__rdly_settings_menu {\
	position: relative;\
	width: 100%;\
}\
\
#__rdly_settings_tabs {\
	display: flex;\
	align-items: center;\
	height: 1.2em;\
	overflow: hidden;\
}\
/* Need flex to shape them correctly :/ */\
#__rdly_settings_tab {\
	flex-grow: 1;\
	padding: 0.1em;\
}\
\
#__rdly_settings_menus {\
	height: auto;\
	text-align: center;\
}\
\
#__rdly .__rdly-settings-menu {\
  position: relative;\
  display: flex;\
  flex-wrap: wrap;\
  justify-content: space-around;\
  padding: 0 .5%;\
}\
\
#__rdly .__rdly-setting {\
  /* For more visibility, try even more vertical padding */\
  position: relative;\
	padding: 1.3% 1.5%;\
}\
\
#__rdly .__rdly-slider-controls {\
  display: flex;\
  align-items: center;\
  margin-top: 0.2rem;\
}\
\
#__rdly .__rdly-slider-input {\
  text-align: center;\
  width: 3.5em;\
  height: 1.6em;\
  font-size: 16px;\
  margin-right: 0.3em;\
  padding: 0;\
}\
\
#__rdly .__rdly-slider {\
  display: inline-block;\
  width: 150px;\
  height: 10px;\
}\
\
\
\
/* ============================== */\
/* SKIN */\
/* ============================== */\
/*#__rdly_below_bar .__rdly-section-open {\
  border-bottom: 0;\
}*/\
\
#__rdly_settings_container {\
	background-color: rgba( 230, 230, 230, 1);\
}\
\
#__rdly_settings_tabs {\
	border-bottom: 1px solid gray;\
}\
#__rdly_settings_tab {\
	border-right: 1px solid gray;\
}\
#__rdly_settings_tabs:last-child {\
	border-right: 0;\
}\
\
\
#__rdly .__rdly-slider-label {\
  font-size: 21px;\
}\
\
#__rdly .__rdly-slider-input {\
  -webkit-border-radius: 3px;\
  -moz-border-radius: 3px;\
  -ms-border-radius: 3px;\
  -o-border-radius: 3px;\
  border-radius: 3px;\
  -webkit-box-shadow: inset 1px 1px 3px rgba(179, 179, 179, 1);\
  -moz-box-shadow: inset 1px 1px 3px rgba(179, 179, 179, 1);\
  box-shadow: inset 1px 1px 3px rgba(179, 179, 179, 1);\
  /* Inset look with better color control */\
  border-top: 2px solid gray;\
  border-left: 2px solid gray;\
  border-right: 2px solid rgba(180,180,180, 1);\
  border-bottom: 2px solid rgba(180,180,180, 1);\
}\
\
#__rdly .__rdly-slider-input:focus {\
  border: 1px solid #3498db;\
  -webkit-border-radius: 2px;\
  -moz-border-radius: 2px;\
  -ms-border-radius: 2px;\
  -o-border-radius: 2px;\
  border-radius: 2px;\
}\
";

	// To put on the window object, or export into a module
    return settingsCSS;
}));

},{}],19:[function(require,module,exports){
/* main.js
* 
* TODO:
* - Cache whole page text when possible/read
* - Cache reading progress?
* - Remove html parsing from sbd node module
* - Break this up into more descrete modules
* 
* DONE:
* - Cache options and prevent them from being reset on
* 	close of extension
* - Trigger pause on clicking of central element, not
* 	just text
* - Add function "cleanNode" to get rid of unwanted elements
* 
* 
* WARNING:
* Storage is all user settings. Too cumbersome otherwise for now.
*/

(function(){

	// ============== SETUP ============== \\
	var $ 			= require('jquery');

	var Parser 		= require('./lib/parse/Parser.js'),
		ParserSetup = require('./lib/ParserSetup.js');

	var Storage 	= require('./lib/ReaderlyStorage.js'),
		Words 		= require('./lib/parse/Words.js'),
		WordNav 	= require('./lib/parse/WordNav.js'),
		WordSplitter= require('./lib/parse/WordSplitter.js'),
		Delayer 	= require('./lib/playback/Delayer.js')
		Timer 		= require('./lib/playback/ReaderlyTimer.js'),
		Display 	= require('./lib/ReaderlyDisplay.js'),
		Playback 	= require('./lib/playback/PlaybackUI.js'),
		Settings 	= require('./lib/settings/ReaderlySettings.js'),
		SpeedSets 	= require('./lib/settings/SpeedSettings.js'),
		WordSets 	= require('./lib/settings/WordSettings.js');

	var parser, fragmentor, words, wordNav, storage, delayer, timer, coreDisplay, playback, settings, speed;


	var addEvents = function () {
		$(timer).on( 'starting', function showLoading() { playback.wait(); })
	};  // End addEvents()


	var afterLoadSettings = function ( oldSettings ) {
		delayer 	= new Delayer( oldSettings, storage );
		timer 		= new Timer( delayer, oldSettings, storage );
		coreDisplay = new Display( timer );

		textElem 	= coreDisplay.nodes.textElements;
		fragmentor 	= new WordSplitter( textElem, oldSettings, storage );

		playback 	= new Playback( timer, coreDisplay );
		settings 	= new Settings( timer, coreDisplay );
		speedSets 	= new SpeedSets( delayer, settings );
		wordSets	= new WordSets( fragmentor, settings );

		addEvents();
	};  // End afterLoadSettings()


	var getParser = function () {
		var pSup = new ParserSetup();
		// FOR TESTING
		pSup.debug = true;

		// Functions to pass to parser
		var cleanNode 		= pSup.cleanNode,
			detectLanguage 	= pSup.detectLanguage,
			findArticle 	= pSup.findArticle,
			cleanText 		= pSup.cleanText,
			splitSentences 	= pSup.splitSentences;

		return new Parser( cleanNode, detectLanguage, findArticle, cleanText, splitSentences );
	};  // End getParser()


	var init = function () {

		parser  = getParser();
		parser.debug = true;

		words 	= new Words();
		wordNav = new WordNav();  // Maybe pass Words to WordNav
		storage = new Storage();
		// TESTING
		storage.set({'maxNumCharacters': 10});
		storage.loadAll( afterLoadSettings );
	};  // End init()


	// ============== START IT UP ============== \\
	init();



	// ============== RUNTIME ============== \\
	var read = function ( node ) {

		var sentenceWords = parser.parse( node );  // [[Str]]
		// var sentences = parser.parse( node );
        if (parser.debug) {  // Help non-coder devs identify some bugs
    	    console.log('~~~~~parse debug~~~~~ If any of those tests failed, the problem isn\'t with Readerly, it\'s with one of the other libraries. That problem will have to be fixed later.');
        }

        // TODO: ??: Combine Words.js and WordNav.js since Words.js now does so little?

		// // TODO: If there's already a `words` (if this isn't new), start where we left off
		// var sentenceData = words.process( sentenceWords );
		// // words.process( sentences );
		
		wordNav.process( sentenceWords, fragmentor );
		// wordNav.process( sentenceData, fragmentor );
		// wordNav.process( words );
		timer.start( wordNav );
		return true;
	};


	var openReaderly = function () {
		coreDisplay.open();
		playback.wait();  // Do we need this?
	};


	var readSelectedText = function () {
		openReaderly();
		var contents = document.getSelection().getRangeAt(0).cloneContents();
		var $container = $('<div></div>');
		$container.append(contents);
		read( $container[0] );
	};


	var readArticle = function () {
		openReaderly();
		var $clone = $('html').clone();
		read( $clone[0] );
	};



	// ==============================
	// EXTENSION EVENT LISTENER
	// ==============================
	var browser = chrome || browser;

	browser.extension.onMessage.addListener(function (request, sender, sendResponse) {


		var func = request.functiontoInvoke;
		if ( func === "readSelectedText" ) {
			
			readSelectedText();

		} else if ( func === "readFullPage" ) {

			readArticle();

		}  // end if event is ___

	});  // End event listener

})();

},{"./lib/ParserSetup.js":1,"./lib/ReaderlyDisplay.js":2,"./lib/ReaderlyStorage.js":3,"./lib/parse/Parser.js":5,"./lib/parse/WordNav.js":6,"./lib/parse/WordSplitter.js":7,"./lib/parse/Words.js":8,"./lib/playback/Delayer.js":10,"./lib/playback/PlaybackUI.js":11,"./lib/playback/ReaderlyTimer.js":12,"./lib/settings/ReaderlySettings.js":14,"./lib/settings/SpeedSettings.js":15,"./lib/settings/WordSettings.js":16,"jquery":103}],20:[function(require,module,exports){
var abbreviations;
var englishAbbreviations = [
    "al",
    "adj",
    "assn",
    "Ave",
    "BSc", "MSc",
    "Cell",
    "Ch",
    "Co",
    "cc",
    "Corp",
    "Dem",
    "Dept",
    "ed",
    "eg",
    "Eq",
    "Eqs",
    "est",
    "est",
    "etc",
    "Ex",
    "ext", // + number?
    "Fig",
    "fig",
    "Figs",
    "figs",
    "i.e",
    "ie",
    "Inc",
    "inc",
    "Jan","Feb","Mar","Apr","Jun","Jul","Aug","Sep","Sept","Oct","Nov","Dec",
    "jr",
    "mi",
    "Miss", "Mrs", "Mr", "Ms",
    "Mol",
    "mt",
    "mts",
    "no",
    "Nos",
    "PhD", "MD", "BA", "MA", "MM",
    "pl",
    "pop",
    "pp",
    "Prof", "Dr",
    "pt",
    "Ref",
    "Refs",
    "Rep",
    "repr",
    "rev",
    "Sec",
    "Secs",
    "Sgt", "Col", "Gen", "Rep", "Sen",'Gov', "Lt", "Maj", "Capt","St",
    "Sr", "sr", "Jr", "jr", "Rev",
    "Sun","Mon","Tu","Tue","Tues","Wed","Th","Thu","Thur","Thurs","Fri","Sat",
    "trans",
    "Univ",
    "Viz",
    "Vol",
    "vs",
    "v",
];

exports.setAbbreviations = function(abbr) {
    if(abbr){
        abbreviations = abbr;
    } else {
        abbreviations = englishAbbreviations;
    }
}

exports.isCapitalized = function(str) {
    return /^[A-Z][a-z].*/.test(str) || this.isNumber(str);
}

// Start with opening quotes or capitalized letter
exports.isSentenceStarter = function(str) {
    return this.isCapitalized(str) || /``|"|'/.test(str.substring(0,2));
}

exports.isCommonAbbreviation = function(str) {
    return ~abbreviations.indexOf(str.replace(/\W+/g, ''));
}

// This is going towards too much rule based
exports.isTimeAbbreviation = function(word, next) {
    if (word === "a.m." || word === "p.m.") {
        var tmp = next.replace(/\W+/g, '').slice(-3).toLowerCase();

        if (tmp === "day") {
            return true;
        }
    }

    return false;
}

exports.isDottedAbbreviation = function(word) {
    var matches = word.replace(/[\(\)\[\]\{\}]/g, '').match(/(.\.)*/);
    return matches && matches[0].length > 0;
}

// TODO look for next words, if multiple capitalized -> not sentence ending
exports.isCustomAbbreviation = function(str) {
    if (str.length <= 3) {
        return true;
    }

    return this.isCapitalized(str);
}

// Uses current word count in sentence and next few words to check if it is
// more likely an abbreviation + name or new sentence.

// ~ TODO Perhaps also consider prev. word?
exports.isNameAbbreviation = function(wordCount, words) {
    if (words.length > 0) {
        if (wordCount < 5 && words[0].length < 6 && this.isCapitalized(words[0])) {
            return true;
        }

        var capitalized = words.filter(function(str) {
            return /[A-Z]/.test(str.charAt(0));
        });

        return capitalized.length >= 3;
    }

    return false;
}

exports.isNumber = function(str, dotPos) {
    if (dotPos) {
        str = str.slice(dotPos-1, dotPos+2);
    }

    return !isNaN(str);
};

// Phone number matching
// http://stackoverflow.com/a/123666/951517
exports.isPhoneNr = function(str) {
    return str.match(/^(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{4})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$/);
};

// Match urls / emails
// http://stackoverflow.com/a/3809435/951517
exports.isURL = function(str) {
    return str.match(/[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/);
};

// Starting a new sentence if beginning with capital letter
// Exception: The word is enclosed in brackets
exports.isConcatenated = function(word) {
    var i = 0;

    if ((i = word.indexOf(".")) > -1 ||
        (i = word.indexOf("!")) > -1 ||
        (i = word.indexOf("?")) > -1)
    {
        var c = word.charAt(i + 1);

        // Check if the next word starts with a letter
        if (c.match(/[a-zA-Z].*/)) {
            return [word.slice(0, i), word.slice(i+1)];
        }
    }

    return false;
};

exports.isBoundaryChar = function(word) {
    return word === "." ||
           word === "!" ||
           word === "?";
};

},{}],21:[function(require,module,exports){

exports.endsWithChar = function ends_with_char(word, c) {
    if (c.length > 1) {
        return c.indexOf(word.slice(-1)) > -1;
    }

    return word.slice(-1) === c;
};

exports.endsWith = function ends_with(word, end) {
    return word.slice(word.length - end.length) === end;
};
},{}],22:[function(require,module,exports){

module.exports = function sanitizeHtml(text, opts) {
  // Strip HTML from Text using browser HTML parser
  if (typeof text == 'string' || text instanceof String) {
    var $div = document.createElement("DIV");
    $div.innerHTML = text;
    text =  ($div.textContent || '').trim();
  }
  //DOM Object
  else if (typeof text === 'object' && text.textContent) {
    text = (text.textContent || '').trim();
  }

  return text;
};

},{}],23:[function(require,module,exports){
/*jshint node:true, laxcomma:true */
"use strict";

var sanitizeHtml = require('sanitize-html');

var String = require('./String');
var Match  = require('./Match');

var newline_placeholder = " @~@ ";
var newline_placeholder_t = newline_placeholder.trim();


// Split the entry into sentences.
var buildSentences = function(text, options) {

    Match.setAbbreviations(options.abbreviations);

    if (options.newline_boundaries) {
        text = text.replace(/\n+|[-#=_+*]{4,}/g, newline_placeholder);
    }

    if (options.html_boundaries) {
        var html_boundaries_regexp = "(<br\\s*\\/?>|<\\/(" + options.html_boundaries_tags.join("|") + ")>)";
        var re = new RegExp(html_boundaries_regexp, "g");
        text = text.replace(re, "$1" + newline_placeholder);
    }

    if (options.sanitize || options.allowed_tags) {
        if (! options.allowed_tags) {
            options.allowed_tags = [""];
        }

        text = sanitizeHtml(text, { "allowedTags" : options.allowed_tags });
    }

    // Split the text into words
    // - see http://blog.tompawlak.org/split-string-into-tokens-javascript
    var words = text.trim().match(/\S+|[\n\r]/g);

    var wordCount = 0;
    var index = 0;
    var temp  = [];
    var sentences = [];
    var current   = [];

    // If given text is only whitespace (or nothing of \S+)
    if (!words || !words.length) {
        return [];
    }

    for (var i=0, L=words.length; i < L; i++) {
        wordCount++;

        // A new line counts as a sentence
        if (  words[i] === '\n' || words[i] === '\r' ) {
            sentences.push(current);
            sentences.push( [ words[i] ] )
            current   = [];
            wordCount = 0;
            continue;
        }

        // Add the word to current sentence
        current.push(words[i]);

        // Sub-sentences, reset counter
        if (~words[i].indexOf(',')) {
            wordCount = 0;
        }

        if (Match.isBoundaryChar(words[i])      ||
            String.endsWithChar(words[i], "?!") ||
            words[i] === newline_placeholder_t)
        {
            if ((options.newline_boundaries || options.html_boundaries) && words[i] === newline_placeholder_t) {
                current.pop();
            }

            sentences.push(current);
            wordCount = 0;
            current   = [];

            continue;
        }


        if (String.endsWithChar(words[i], "\"") || String.endsWithChar(words[i], "”")) {
            // endQuote = words[i].slice(-1);
            words[i] = words[i].slice(0, -1);
        }

        // A dot might indicate the end sentences
        // Exception: The next sentence starts with a word (non abbreviation)
        //            that has a capital letter.
        if (String.endsWithChar(words[i], '.')) {
            // Check if there is a next word
            // This probably needs to be improved with machine learning
            if (i+1 < L) {
                // Single character abbr.
                if (words[i].length === 2 && isNaN(words[i].charAt(0))) {
                    continue;
                }

                // Common abbr. that often do not end sentences
                if (Match.isCommonAbbreviation(words[i])) {
                    continue;
                }

                // Next word starts with capital word, but current sentence is
                // quite short
                if (Match.isSentenceStarter(words[i+1])) {
                    if (Match.isTimeAbbreviation(words[i], words[i+1])) {
                        continue;
                    }

                    // Dealing with names at the start of sentences
                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 6))) {
                        continue;
                    }

                    if (Match.isNumber(words[i+1])) {
                        if (Match.isCustomAbbreviation(words[i])) {
                            continue;
                        }
                    }
                }
                else {
                    // Skip ellipsis
                    if (String.endsWith(words[i], "..")) {
                        continue;
                    }

                    //// Skip abbreviations
                    // Short words + dot or a dot after each letter
                    if (Match.isDottedAbbreviation(words[i])) {
                        continue;
                    }

                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 5))) {
                        continue;
                    }
                }
            }

            sentences.push(current);
            current   = [];
            wordCount = 0;

            continue;
        }

        // Check if the word has a dot in it
        if ((index = words[i].indexOf(".")) > -1) {
            if (Match.isNumber(words[i], index)) {
                continue;
            }

            // Custom dotted abbreviations (like K.L.M or I.C.T)
            if (Match.isDottedAbbreviation(words[i])) {
                continue;
            }

            // Skip urls / emails and the like
            if (Match.isURL(words[i]) || Match.isPhoneNr(words[i])) {
                continue;
            }
        }

        if (temp = Match.isConcatenated(words[i])) {
            current.pop();
            current.push(temp[0]);
            sentences.push(current);

            current = [];
            wordCount = 0;
            current.push(temp[1]);
        }
    }

    if (current.length) {
        sentences.push(current);
    }

    // Clear "empty" sentences
    sentences = sentences.filter(function(s) {
        return s.length > 0;
    });

    return sentences;
};



var sentenceStrings = function (sentences) {
/* ( str, obj ) -> [ [Str] ]
* 
* Returns a list of words
*/
    /** After processing **/
    var strings  = [];
    var sentence = "";

    for (var i=0; i < sentences.length; i++) {
        sentence = sentences[i].join(" ");

        // Single words, could be "enumeration lists"
        if (sentences[i].length === 1 && sentences[i][0].length < 4 &&
            sentences[i][0].indexOf('.') > -1)
        {
            // Check if there is a next sentence
            // It should not be another list item
            if (sentences[i+1] && sentences[i+1][0].indexOf('.') < 0) {
                sentence += " " + sentences[i+1].join(" ");
                i++;
            }
        }

        strings.push(sentence);
    }

    return strings;
};  // End sentenceStrings()


var sentenceWords = function (sentences) {
/* ( str, obj ) -> [ [Str] ]
* 
* Returns a list of sentences each of which are a list of words
*/
    /** After processing **/
    var words    = [];
    var sentence = "";

    for (var i=0; i < sentences.length; i++) {

        sentence = sentences[i];

        // Single words, could be "enumeration lists"
        if (sentences[i].length === 1 && sentences[i][0].length < 4 &&
            sentences[i][0].indexOf('.') > -1)
        {
            // Check if there is a next sentence
            // It should not be another list item
            if (sentences[i+1] && sentences[i+1][0].indexOf('.') < 0) {
                sentence = sentences[i].concat( sentences[i+1] );
                i++;
            }
        }

        words.push(sentence);
    }

    return words;
};  // End sentenceWords()




exports.sentences = function (text, user_options) {
    if (!text || typeof text !== "string" || !text.length) {
        return [];
    }

    var options = {
        "parse_type"          : "strings",  // ??: "result_type" instead?
        "newline_boundaries"  : false,
        "html_boundaries"     : false,
        "html_boundaries_tags": ["p","div","ul","ol"],
        "sanitize"            : false,
        "allowed_tags"        : false,
        "abbreviations"       : null
    };

    if (typeof user_options === "boolean") {
        // Deprecated quick option
        options.newline_boundaries = true;
    }
    else {
        // Extend options
        for (var k in user_options) {
            options[k] = user_options[k];
        }
    }

    var sentenceData = buildSentences(text, options);

    if ( options.parse_type === 'words' ) {
        return sentenceWords(sentenceData);
    } else {
        return sentenceStrings(sentenceData);
    }
};  // Ends exports.sentences()

},{"./Match":20,"./String":21,"sanitize-html":22}],24:[function(require,module,exports){
// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var _, cleanArticleTags, cleanBadTags, cleanCodeBlocks, cleanEmTags, cleaner, cleanErrantLinebreaks, cleanParaSpans, cleanUnderlines, divToPara, getReplacementNodes, removeBodyClasses, removeDropCaps, removeNodesRegex, removeScriptsStyles, replaceWithPara;
  _ = require('lodash');
  module.exports = cleaner = function (doc) {
    removeBodyClasses(doc);
    cleanArticleTags(doc);
    cleanEmTags(doc);
    cleanCodeBlocks(doc);
    removeDropCaps(doc);
    removeScriptsStyles(doc);
    cleanBadTags(doc);
    removeNodesRegex(doc, /^caption$/);
    removeNodesRegex(doc, / google /);
    removeNodesRegex(doc, /^[^entry-]more.*$/);
    removeNodesRegex(doc, /[^-]facebook/);
    removeNodesRegex(doc, /facebook-broadcasting/);
    removeNodesRegex(doc, /[^-]twitter/);
    cleanParaSpans(doc);
    cleanUnderlines(doc);
    cleanErrantLinebreaks(doc);
    divToPara(doc, 'div');
    divToPara(doc, 'span');
    return doc;
  };
  removeBodyClasses = function (doc) {
    return doc('body').removeClass();
  };
  cleanArticleTags = function (doc) {
    var articles;
    articles = doc('article');
    return articles.each(function () {
      doc(this).removeAttr('id');
      doc(this).removeAttr('name');
      return doc(this).removeAttr('class');
    });
  };
  cleanEmTags = function (doc) {
    var ems;
    ems = doc('em');
    return ems.each(function () {
      var images;
      images = ems.find('img');
      if (images.length === 0)
        return doc(this).replaceWith(doc(this).html());
    });
  };
  cleanCodeBlocks = function (doc) {
    var nodes;
    nodes = doc("[class*='highlight-'], pre code, code, pre, ul.task-list");
    return nodes.each(function () {
      return doc(this).replaceWith(doc(this).text());
    });
  };
  removeDropCaps = function (doc) {
    var nodes;
    nodes = doc('span[class~=dropcap], span[class~=drop_cap]');
    return nodes.each(function () {
      return doc(this).replaceWith(doc(this).html());
    });
  };
  removeScriptsStyles = function (doc) {
    var comments;
    doc('script').remove();
    doc('style').remove();
    comments = doc('*').contents().filter(function () {
      return this.type === 'comment';
    });
    return doc(comments).remove();
  };
  cleanBadTags = function (doc) {
    var re, removeNodesRe, toRemove;
    removeNodesRe = '^side$|combx|retweet|mediaarticlerelated|menucontainer|navbar|partner-gravity-ad|video-full-transcript|storytopbar-bucket|utility-bar|inline-share-tools|comment|PopularQuestions|contact|foot|footer|Footer|footnote|cnn_strycaptiontxt|cnn_html_slideshow|cnn_strylftcntnt|links|meta$|shoutbox|sponsor|tags|socialnetworking|socialNetworking|cnnStryHghLght|cnn_stryspcvbx|^inset$|pagetools|post-attributes|welcome_form|contentTools2|the_answers|communitypromo|runaroundLeft|subscribe|vcard|articleheadings|date|^print$|popup|author-dropdown|tools|socialtools|byline|konafilter|KonaFilter|breadcrumbs|^fn$|wp-caption-text|legende|ajoutVideo|timestamp|js_replies';
    re = new RegExp(removeNodesRe, 'i');
    toRemove = doc('*').filter(function () {
      var cache$, cache$1, cache$2;
      return (null != (cache$ = doc(this).attr('id')) ? cache$.match(re) : void 0) || (null != (cache$1 = doc(this).attr('class')) ? cache$1.match(re) : void 0) || (null != (cache$2 = doc(this).attr('name')) ? cache$2.match(re) : void 0);
    });
    return doc(toRemove).remove();
  };
  removeNodesRegex = function (doc, pattern) {
    var toRemove;
    toRemove = doc('div').filter(function () {
      var cache$, cache$1;
      return (null != (cache$ = doc(this).attr('id')) ? cache$.match(pattern) : void 0) || (null != (cache$1 = doc(this).attr('class')) ? cache$1.match(pattern) : void 0);
    });
    return doc(toRemove).remove();
  };
  cleanParaSpans = function (doc) {
    var nodes;
    nodes = doc('p span');
    return nodes.each(function () {
      return doc(this).replaceWith(doc(this).html());
    });
  };
  cleanUnderlines = function (doc) {
    var nodes;
    nodes = doc('u');
    return nodes.each(function () {
      return doc(this).replaceWith(doc(this).html());
    });
  };
  getReplacementNodes = function (doc, div) {
    var childs, nodesToRemove, nodesToReturn, replacementText, txt;
    replacementText = [];
    nodesToReturn = [];
    nodesToRemove = [];
    childs = div.contents();
    childs.each(function () {
      var kid, kidText, kidTextNode, nextSiblingNode, outer, previousSiblingNode, replaceText, txt;
      kid = doc(this);
      if (kid[0].name === 'p' && replacementText.length > 0) {
        txt = replacementText.join('');
        nodesToReturn.push(txt);
        replacementText = [];
        return nodesToReturn.push(doc(kid).html());
      } else if (kid[0].type === 'text') {
        kidTextNode = kid;
        kidText = kid.text();
        replaceText = kidText.replace(/\n/g, '\n\n').replace(/\t/g, '').replace(/^\s+$/g, '');
        if (replaceText.length > 1) {
          previousSiblingNode = kidTextNode.prev();
          while (previousSiblingNode[0] && previousSiblingNode[0].name === 'a' && previousSiblingNode.attr('grv-usedalready') !== 'yes') {
            outer = ' ' + doc.html(previousSiblingNode) + ' ';
            replacementText.push(outer);
            nodesToRemove.push(previousSiblingNode);
            previousSiblingNode.attr('grv-usedalready', 'yes');
            previousSiblingNode = previousSiblingNode.prev();
          }
          replacementText.push(replaceText);
          nextSiblingNode = kidTextNode.next();
          return function (accum$) {
            while (nextSiblingNode[0] && nextSiblingNode[0].name === 'a' && nextSiblingNode.attr('grv-usedalready') !== 'yes') {
              outer = ' ' + doc.html(nextSiblingNode) + ' ';
              replacementText.push(outer);
              nodesToRemove.push(nextSiblingNode);
              nextSiblingNode.attr('grv-usedalready', 'yes');
              accum$.push(previousSiblingNode = nextSiblingNode.next());
            }
            return accum$;
          }.call(this, []);
        }
      } else {
        return nodesToReturn.push(doc(kid).html());
      }
    });
    if (replacementText.length > 0) {
      txt = replacementText.join('');
      nodesToReturn.push(txt);
      replacementText = [];
    }
    _.each(nodesToRemove, function (n) {
      return doc(n).remove();
    });
    return nodesToReturn;
  };
  replaceWithPara = function (doc, div) {
    var divContent;
    divContent = doc(div).html();
    return doc(div).replaceWith('<p>' + divContent + '</p>');
  };
  divToPara = function (doc, domType) {
    var divs, lastCount, tags;
    divs = doc(domType);
    lastCount = divs.length + 1;
    tags = [
      'a',
      'blockquote',
      'dl',
      'div',
      'img',
      'ol',
      'p',
      'pre',
      'table',
      'ul'
    ];
    return divs.each(function () {
      var div, html, items, replaceNodes;
      div = doc(this);
      items = div.find(tags.join(', '));
      if (items.length === 0) {
        return replaceWithPara(doc, this);
      } else {
        replaceNodes = getReplacementNodes(doc, div);
        html = '';
        _.each(replaceNodes, function (node) {
          if (node !== '')
            return html += '<p>' + node + '</p>';
        });
        div.empty();
        return doc(div).replaceWith('' + html);
      }
    });
  };
  cleanErrantLinebreaks = function (doc) {
    return doc('p').each(function () {
      var c, node;
      node = doc(this);
      c = node.contents();
      return doc(c).each(function () {
        var n;
        n = doc(this);
        if (n[0].type === 'text')
          return n.replaceWith(n.text().replace(/([^\n])\n([^\n])/g, '$1 $2'));
      });
    });
  };
}.call(this);

},{"lodash":101}],25:[function(require,module,exports){
// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var _, addSiblings, biggestTitleChunk, cleanText, cleanTitle, formatter, getObjectTag, getScore, getSiblingsContent, getSiblingsScore, getVideoAttrs, isBoostable, isHighlinkDensity, isNodescoreThresholdMet, isTableAndNoParaExist, postCleanup, rawTitle, stopwords, updateNodeCount, updateScore;
  _ = require('lodash');
  stopwords = require('./stopwords');
  formatter = require('./formatter');
  module.exports = {
    date: function (doc) {
      var cache$, cache$1, cache$2, cache$3, cache$4, dateCandidates;
      dateCandidates = doc("meta[property='article:published_time'],     meta[itemprop*='datePublished'], meta[name='dcterms.modified'],     meta[name='dcterms.date'],     meta[name='DC.date.issued'],  meta[name='dc.date.issued'],     meta[name='dc.date.modified'], meta[name='dc.date.created'],     meta[name='DC.date'],     meta[name='DC.Date'],     meta[name='dc.date'],     meta[name='date'],     time[itemprop*='pubDate'],     time[itemprop*='pubdate'],     span[itemprop*='datePublished'],     span[property*='datePublished'],     p[itemprop*='datePublished'],     p[property*='datePublished'],     div[itemprop*='datePublished'],     div[property*='datePublished'],     li[itemprop*='datePublished'],     li[property*='datePublished'],     time,     span[class*='date'],     p[class*='date'],     div[class*='date']");
      return (null != dateCandidates && null != (cache$ = dateCandidates.first()) && null != (cache$1 = cache$.attr('content')) ? cache$1.trim() : void 0) || (null != dateCandidates && null != (cache$2 = dateCandidates.first()) && null != (cache$3 = cache$2.attr('datetime')) ? cache$3.trim() : void 0) || cleanText(null != dateCandidates && null != (cache$4 = dateCandidates.first()) ? cache$4.text() : void 0) || null;
    },
    copyright: function (doc) {
      var cache$, copyright, copyrightCandidates, text;
      copyrightCandidates = doc("p[class*='copyright'], div[class*='copyright'], span[class*='copyright'], li[class*='copyright'],     p[id*='copyright'], div[id*='copyright'], span[id*='copyright'], li[id*='copyright']");
      text = null != copyrightCandidates && null != (cache$ = copyrightCandidates.first()) ? cache$.text() : void 0;
      if (!text) {
        text = doc('body').text().replace(/\s*[\r\n]+\s*/g, '. ');
        if (!(text.indexOf('\xa9') > 0))
          return null;
      }
      copyright = text.replace(/.*?©(\s*copyright)?([^,;:.|\r\n]+).*/gi, '$2').trim();
      return cleanText(copyright);
    },
    author: function (doc) {
      var authorCandidates, authorList, cache$, cache$1, cache$2, cache$3, cache$4, cache$5, fallbackAuthor;
      authorCandidates = doc("meta[property='article:author'],     meta[property='og:article:author'], meta[name='author'],     meta[name='dcterms.creator'],     meta[name='DC.creator'],     meta[name='DC.Creator'],     meta[name='dc.creator'],     meta[name='creator']");
      authorList = [];
      authorCandidates.each(function () {
        var author, cache$, cache$1;
        author = null != (cache$ = doc(this)) && null != (cache$1 = cache$.attr('content')) ? cache$1.trim() : void 0;
        if (author)
          return authorList.push(author);
      });
      if (authorList.length === 0) {
        fallbackAuthor = (null != (cache$ = doc("span[class*='author']").first()) ? cache$.text() : void 0) || (null != (cache$1 = doc("p[class*='author']").first()) ? cache$1.text() : void 0) || (null != (cache$2 = doc("div[class*='author']").first()) ? cache$2.text() : void 0) || (null != (cache$3 = doc("span[class*='byline']").first()) ? cache$3.text() : void 0) || (null != (cache$4 = doc("p[class*='byline']").first()) ? cache$4.text() : void 0) || (null != (cache$5 = doc("div[class*='byline']").first()) ? cache$5.text() : void 0);
        if (fallbackAuthor)
          authorList.push(cleanText(fallbackAuthor));
      }
      return authorList;
    },
    publisher: function (doc) {
      var cache$, cache$1, publisherCandidates;
      publisherCandidates = doc("meta[property='og:site_name'],     meta[name='dc.publisher'],     meta[name='DC.publisher'],     meta[name='DC.Publisher']");
      if (null != publisherCandidates && null != (cache$ = publisherCandidates.first()) && null != (cache$1 = cache$.attr('content')))
        return cache$1.trim();
    },
    title: function (doc) {
      var titleText;
      titleText = rawTitle(doc);
      return cleanTitle(titleText, [
        '|',
        ' - ',
        '\xbb',
        ':'
      ]);
    },
    softTitle: function (doc) {
      var titleText;
      titleText = rawTitle(doc);
      return cleanTitle(titleText, [
        '|',
        ' - ',
        '\xbb'
      ]);
    },
    text: function (doc, topNode, lang) {
      if (topNode) {
        topNode = postCleanup(doc, topNode, lang);
        return formatter(doc, topNode, lang);
      } else {
        return '';
      }
    },
    image: function (doc) {
      var images;
      images = doc("meta[property='og:image'], meta[itemprop=image], meta[name='twitter:image:src'], meta[name='twitter:image'], meta[name='twitter:image0']");
      if (images.length > 0 && images.first().attr('content'))
        return images.first().attr('content');
      return null;
    },
    links: function (doc, topNode, lang) {
      var gatherLinks, links;
      links = [];
      gatherLinks = function (doc, topNode) {
        var nodes;
        nodes = topNode.find('a');
        return nodes.each(function () {
          var href, text;
          href = doc(this).attr('href');
          text = doc(this).html();
          if (href && text)
            return links.push({
              text: text,
              href: href
            });
        });
      };
      if (topNode) {
        topNode = postCleanup(doc, topNode, lang);
        gatherLinks(doc, topNode);
      }
      return links;
    },
    videos: function (doc, topNode) {
      var candidates, results, urls, videoList;
      videoList = [];
      candidates = doc(topNode).find('iframe, embed, object, video');
      candidates.each(function () {
        var candidate, tag;
        candidate = doc(this);
        tag = candidate[0].name;
        if (tag === 'embed') {
          if (candidate.parent() && candidate.parent()[0].name === 'object') {
            return videoList.push(getObjectTag(doc, candidate));
          } else {
            return videoList.push(getVideoAttrs(doc, candidate));
          }
        } else if (tag === 'object') {
          return videoList.push(getObjectTag(doc, candidate));
        } else if (tag === 'iframe' || tag === 'video') {
          return videoList.push(getVideoAttrs(doc, candidate));
        }
      });
      urls = [];
      results = [];
      _.each(videoList, function (vid) {
        if (vid && vid.height && vid.width && urls.indexOf(vid.src) === -1) {
          results.push(vid);
          return urls.push(vid.src);
        }
      });
      return results;
    },
    favicon: function (doc) {
      var tag;
      tag = doc('link').filter(function () {
        var cache$;
        return (null != (cache$ = doc(this).attr('rel')) ? cache$.toLowerCase() : void 0) === 'shortcut icon';
      });
      return tag.attr('href');
    },
    lang: function (doc) {
      var cache$, l, tag, value;
      l = null != (cache$ = doc('html')) ? cache$.attr('lang') : void 0;
      if (!l) {
        tag = doc('meta[name=lang]') || doc('meta[http-equiv=content-language]');
        l = null != tag ? tag.attr('content') : void 0;
      }
      if (l) {
        value = l.slice(0, +1 + 1 || 9e9);
        if (/^[A-Za-z]{2}$/.test(value))
          return value.toLowerCase();
      }
      return null;
    },
    description: function (doc) {
      var cache$, cache$1, tag;
      tag = doc("meta[name=description], meta[property='og:description']");
      if (null != tag && null != (cache$ = tag.first()) && null != (cache$1 = cache$.attr('content')))
        return cache$1.trim();
    },
    keywords: function (doc) {
      var tag;
      tag = doc('meta[name=keywords]');
      if (null != tag)
        return tag.attr('content');
    },
    canonicalLink: function (doc) {
      var tag;
      tag = doc('link[rel=canonical]');
      if (null != tag)
        return tag.attr('href');
    },
    tags: function (doc) {
      var elements, tags;
      elements = doc("a[rel='tag']");
      if (elements.length === 0) {
        elements = doc("a[href*='/tag/'], a[href*='/tags/'], a[href*='/topic/'], a[href*='?keyword=']");
        if (elements.length === 0)
          return [];
      }
      tags = [];
      elements.each(function () {
        var el, tag;
        el = doc(this);
        tag = el.text().trim();
        tag.replace(/[\s\t\n]+/g, '');
        if (tag && tag.length > 0)
          return tags.push(tag);
      });
      return _.uniq(tags);
    },
    calculateBestNode: function (doc, lang) {
      var bottomNegativescoreNodes, cnt, i, negativeScoring, nodesNumber, nodesToCheck, nodesWithText, parentNodes, startingBoost, topNode, topNodeScore;
      topNode = null;
      nodesToCheck = doc('p, pre, td');
      startingBoost = 1;
      cnt = 0;
      i = 0;
      parentNodes = [];
      nodesWithText = [];
      nodesToCheck.each(function () {
        var highLinkDensity, node, textNode, wordStats;
        node = doc(this);
        textNode = node.text();
        wordStats = stopwords(textNode, lang);
        highLinkDensity = isHighlinkDensity(doc, node);
        if (wordStats.stopwordCount > 2 && !highLinkDensity)
          return nodesWithText.push(node);
      });
      nodesNumber = nodesWithText.length;
      negativeScoring = 0;
      bottomNegativescoreNodes = nodesNumber * .25;
      _.each(nodesWithText, function (node) {
        var booster, boostScore, negscore, parentNode, parentParentNode, textNode, upscore, wordStats;
        boostScore = 0;
        if (isBoostable(doc, node, lang) === true)
          if (cnt >= 0) {
            boostScore = 1 / startingBoost * 50;
            startingBoost += 1;
          }
        if (nodesNumber > 15)
          if (nodesNumber - i <= bottomNegativescoreNodes) {
            booster = bottomNegativescoreNodes - (nodesNumber - i);
            boostScore = -1 * Math.pow(booster, 2);
            negscore = Math.abs(boostScore) + negativeScoring;
            if (negscore > 40)
              boostScore = 5;
          }
        textNode = node.text();
        wordStats = stopwords(textNode, lang);
        upscore = Math.floor(wordStats.stopwordCount + boostScore);
        parentNode = node.parent();
        updateScore(parentNode, upscore);
        updateNodeCount(parentNode, 1);
        if (parentNodes.indexOf(parentNode[0]) === -1)
          parentNodes.push(parentNode[0]);
        parentParentNode = parentNode.parent();
        if (parentParentNode) {
          updateNodeCount(parentParentNode, 1);
          updateScore(parentParentNode, upscore / 2);
          if (parentNodes.indexOf(parentParentNode[0]) === -1)
            parentNodes.push(parentParentNode[0]);
        }
        cnt += 1;
        return i += 1;
      });
      topNodeScore = 0;
      _.each(parentNodes, function (e) {
        var score;
        score = getScore(doc(e));
        if (score > topNodeScore) {
          topNode = e;
          topNodeScore = score;
        }
        if (topNode === null)
          return topNode = e;
      });
      return doc(topNode);
    }
  };
  getVideoAttrs = function (doc, node) {
    var data, el;
    el = doc(node);
    return data = {
      src: el.attr('src'),
      height: el.attr('height'),
      width: el.attr('width')
    };
  };
  getObjectTag = function (doc, node) {
    var src, srcNode, video;
    srcNode = node.find('param[name=movie]');
    if (!(srcNode.length > 0))
      return null;
    src = srcNode.attr('value');
    video = getVideoAttrs(doc, node);
    video.src = src;
    return video;
  };
  biggestTitleChunk = function (title, splitter) {
    var largeTextIndex, largeTextLength, titlePieces;
    largeTextLength = 0;
    largeTextIndex = 0;
    titlePieces = title.split(splitter);
    _.each(titlePieces, function (piece, i) {
      if (piece.length > largeTextLength) {
        largeTextLength = piece.length;
        return largeTextIndex = i;
      }
    });
    return titlePieces[largeTextIndex];
  };
  isBoostable = function (doc, node, lang) {
    var boostable, maxStepsawayFromNode, minimumStopwordCount, nodes, stepsAway;
    stepsAway = 0;
    minimumStopwordCount = 5;
    maxStepsawayFromNode = 3;
    nodes = node.prevAll();
    boostable = false;
    nodes.each(function () {
      var currentNode, currentNodeTag, paraText, wordStats;
      currentNode = doc(this);
      currentNodeTag = currentNode[0].name;
      if (currentNodeTag === 'p') {
        if (stepsAway >= maxStepsawayFromNode) {
          boostable = false;
          return false;
        }
        paraText = currentNode.text();
        wordStats = stopwords(paraText, lang);
        if (wordStats.stopwordCount > minimumStopwordCount) {
          boostable = true;
          return false;
        }
        return stepsAway += 1;
      }
    });
    return boostable;
  };
  addSiblings = function (doc, topNode, lang) {
    var baselinescoreSiblingsPara, sibs;
    baselinescoreSiblingsPara = getSiblingsScore(doc, topNode, lang);
    sibs = topNode.prevAll();
    sibs.each(function () {
      var currentNode, ps;
      currentNode = doc(this);
      ps = getSiblingsContent(doc, lang, currentNode, baselinescoreSiblingsPara);
      return _.each(ps, function (p) {
        return topNode.prepend('<p>' + p + '</p>');
      });
    });
    return topNode;
  };
  getSiblingsContent = function (doc, lang, currentSibling, baselinescoreSiblingsPara) {
    var potentialParagraphs, ps;
    if (currentSibling[0].name === 'p' && currentSibling.text().length > 0) {
      return [currentSibling];
    } else {
      potentialParagraphs = currentSibling.find('p');
      if (potentialParagraphs === null) {
        return null;
      } else {
        ps = [];
        potentialParagraphs.each(function () {
          var firstParagraph, highLinkDensity, paragraphScore, score, siblingBaselineScore, txt, wordStats;
          firstParagraph = doc(this);
          txt = firstParagraph.text();
          if (txt.length > 0) {
            wordStats = stopwords(txt, lang);
            paragraphScore = wordStats.stopwordCount;
            siblingBaselineScore = .3;
            highLinkDensity = isHighlinkDensity(doc, firstParagraph);
            score = baselinescoreSiblingsPara * siblingBaselineScore;
            if (score < paragraphScore && !highLinkDensity)
              return ps.push(txt);
          }
        });
        return ps;
      }
    }
  };
  getSiblingsScore = function (doc, topNode, lang) {
    var base, nodesToCheck, paragraphsNumber, paragraphsScore;
    base = 1e5;
    paragraphsNumber = 0;
    paragraphsScore = 0;
    nodesToCheck = topNode.find('p');
    nodesToCheck.each(function () {
      var highLinkDensity, node, textNode, wordStats;
      node = doc(this);
      textNode = node.text();
      wordStats = stopwords(textNode, lang);
      highLinkDensity = isHighlinkDensity(doc, node);
      if (wordStats.stopwordCount > 2 && !highLinkDensity) {
        paragraphsNumber += 1;
        return paragraphsScore += wordStats.stopwordCount;
      }
    });
    if (paragraphsNumber > 0)
      base = paragraphsScore / paragraphsNumber;
    return base;
  };
  updateScore = function (node, addToScore) {
    var currentScore, newScore, scoreString;
    currentScore = 0;
    scoreString = node.attr('gravityScore');
    if (scoreString)
      currentScore = parseInt(scoreString);
    newScore = currentScore + addToScore;
    return node.attr('gravityScore', newScore);
  };
  updateNodeCount = function (node, addToCount) {
    var countString, currentScore, newScore;
    currentScore = 0;
    countString = node.attr('gravityNodes');
    if (countString)
      currentScore = parseInt(countString);
    newScore = currentScore + addToCount;
    return node.attr('gravityNodes', newScore);
  };
  isHighlinkDensity = function (doc, node) {
    var links, linkText, linkWords, numberOfLinks, numberOfLinkWords, numberOfWords, percentLinkWords, sb, score, txt, words;
    links = node.find('a');
    if (!(links.length > 0))
      return false;
    txt = node.text();
    words = txt.split(' ');
    numberOfWords = words.length;
    sb = [];
    links.each(function () {
      return sb.push(doc(this).text());
    });
    linkText = sb.join(' ');
    linkWords = linkText.split(' ');
    numberOfLinkWords = linkWords.length;
    numberOfLinks = links.length;
    percentLinkWords = numberOfLinkWords / numberOfWords;
    score = percentLinkWords * numberOfLinks;
    return score >= 1;
  };
  getScore = function (node) {
    var grvScoreString;
    grvScoreString = node.attr('gravityScore');
    if (!grvScoreString) {
      return 0;
    } else {
      return parseInt(grvScoreString);
    }
  };
  isTableAndNoParaExist = function (doc, e) {
    var subParagraphs, subParagraphs2;
    subParagraphs = e.find('p');
    subParagraphs.each(function () {
      var p, txt;
      p = doc(this);
      txt = p.text();
      if (txt.length < 25)
        return doc(p).remove();
    });
    subParagraphs2 = e.find('p');
    if (subParagraphs2.length === 0 && !(e[0].name === 'td' || e[0].name === 'ul' || e[0].name === 'ol')) {
      return true;
    } else {
      return false;
    }
  };
  isNodescoreThresholdMet = function (doc, node, e) {
    var currentNodeScore, thresholdScore, topNodeScore;
    topNodeScore = getScore(node);
    currentNodeScore = getScore(e);
    thresholdScore = topNodeScore * .08;
    if (currentNodeScore < thresholdScore && !(e[0].name === 'td' || e[0].name === 'ul' || e[0].name === 'ol' || e[0].name === 'blockquote')) {
      return false;
    } else {
      return true;
    }
  };
  postCleanup = function (doc, targetNode, lang) {
    var node;
    node = addSiblings(doc, targetNode, lang);
    node.children().each(function () {
      var e, eTag;
      e = doc(this);
      eTag = e[0].name;
      if (!(eTag === 'p' || eTag === 'a'))
        if (isHighlinkDensity(doc, e) || isTableAndNoParaExist(doc, e) || !isNodescoreThresholdMet(doc, node, e)) {
          return doc(e).remove();
        }
    });
    return node;
  };
  cleanText = function (text) {
    return text.replace(/[\r\n\t]/g, ' ').replace(/\s\s+/g, ' ').replace(/<!--.+?-->/g, '').replace(/�/g, '').trim();
  };
  cleanTitle = function (title, delimiters) {
    var titleText, usedDelimeter;
    titleText = title || '';
    usedDelimeter = false;
    _.each(delimiters, function (c) {
      if (titleText.indexOf(c) >= 0 && !usedDelimeter) {
        titleText = biggestTitleChunk(titleText, c);
        return usedDelimeter = true;
      }
    });
    return cleanText(titleText);
  };
  rawTitle = function (doc) {
    var cache$, cache$1, cache$2, cache$3, cache$4, cache$5, cache$6, cache$7, cache$8, cache$9, gotTitle, titleText;
    gotTitle = false;
    titleText = '';
    _.each([
      null != (cache$ = doc("meta[property='og:title']")) && null != (cache$1 = cache$.first()) ? cache$1.attr('content') : void 0,
      null != (cache$2 = doc("h1[class*='title']")) && null != (cache$3 = cache$2.first()) ? cache$3.text() : void 0,
      null != (cache$4 = doc('title')) && null != (cache$5 = cache$4.first()) ? cache$5.text() : void 0,
      null != (cache$6 = doc('h1')) && null != (cache$7 = cache$6.first()) ? cache$7.text() : void 0,
      null != (cache$8 = doc('h2')) && null != (cache$9 = cache$8.first()) ? cache$9.text() : void 0
    ], function (candidate) {
      if (candidate && candidate.trim() && !gotTitle) {
        titleText = candidate.trim();
        return gotTitle = true;
      }
    });
    return titleText;
  };
}.call(this);

},{"./formatter":26,"./stopwords":27,"lodash":101}],26:[function(require,module,exports){
// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var _, addNewlineToBr, cleanParagraphText, convertToText, formatter, linksToText, removeFewwordsParagraphs, removeNegativescoresNodes, replaceWithText, stopwords, ulToText, XRegExp;
  stopwords = require('./stopwords');
  _ = require('lodash');
  XRegExp = require('xregexp').XRegExp;
  module.exports = formatter = function (doc, topNode, language) {
    removeNegativescoresNodes(doc, topNode);
    linksToText(doc, topNode);
    addNewlineToBr(doc, topNode);
    replaceWithText(doc, topNode);
    removeFewwordsParagraphs(doc, topNode, language);
    return convertToText(doc, topNode);
  };
  linksToText = function (doc, topNode) {
    var nodes;
    nodes = topNode.find('a');
    return nodes.each(function () {
      return doc(this).replaceWith(doc(this).html());
    });
  };
  ulToText = function (doc, node) {
    var nodes, txt;
    nodes = node.find('li');
    txt = '';
    nodes.each(function () {
      return txt = txt + ('\n * ' + doc(this).text());
    });
    txt = txt + '\n';
    return txt;
  };
  replaceWithText = function (doc, topNode) {
    var nodes;
    nodes = topNode.find('b, strong, i, br, sup');
    return nodes.each(function () {
      return doc(this).replaceWith(doc(this).text());
    });
  };
  cleanParagraphText = function (rawText) {
    var txt;
    txt = rawText.trim();
    txt.replace(/[\s\t]+/g, ' ');
    return txt;
  };
  convertToText = function (doc, topNode) {
    var hangingText, nodes, regex, txt, txts;
    txts = [];
    nodes = topNode.contents();
    hangingText = '';
    nodes.each(function () {
      var node, nodeName, nodeType, txt;
      node = doc(this);
      nodeType = node[0].type;
      nodeName = node[0].name;
      if (nodeType === 'text') {
        hangingText += node.text();
        return true;
      } else if (nodeName === 'ul') {
        hangingText += ulToText(doc, node);
        return true;
      }
      if (hangingText.length > 0) {
        txt = cleanParagraphText(hangingText);
        txts = txts.concat(txt.split(/\r?\n/));
        hangingText = '';
      }
      txt = cleanParagraphText(node.text());
      return txts = txts.concat(txt.split(/\r?\n/));
    });
    if (hangingText.length > 0) {
      txt = cleanParagraphText(hangingText);
      txts = txts.concat(txt.split(/\r?\n/));
    }
    txts = _.map(txts, function (txt) {
      return txt.trim();
    });
    regex = XRegExp('[\\p{Number}\\p{Letter}]');
    txts = _.filter(txts, function (txt) {
      return regex.test(txt);
    });
    return txts.join('\n\n');
  };
  addNewlineToBr = function (doc, topNode) {
    var brs;
    brs = topNode.find('br');
    return brs.each(function () {
      var br;
      br = doc(this);
      return br.replaceWith('\n\n');
    });
  };
  removeNegativescoresNodes = function (doc, topNode) {
    var gravityItems;
    gravityItems = topNode.find('*[gravityScore]');
    return gravityItems.each(function () {
      var item, score;
      item = doc(this);
      score = parseInt(item.attr('gravityScore')) || 0;
      if (score < 1)
        return doc(item).remove();
    });
  };
  removeFewwordsParagraphs = function (doc, topNode, language) {
    var allNodes;
    allNodes = topNode.find('*');
    return allNodes.each(function () {
      var el, stopWords, tag, text, trimmed;
      el = doc(this);
      tag = el[0].name;
      text = el.text();
      stopWords = stopwords(text, language);
      if ((tag !== 'br' || text !== '\\r') && stopWords.stopwordCount < 3 && el.find('object').length === 0 && el.find('embed').length === 0) {
        return doc(el).remove();
      } else {
        trimmed = text.trim();
        if (trimmed[0] === '(' && trimmed[trimmed.length - 1] === ')')
          return doc(el).remove();
      }
    });
  };
}.call(this);

},{"./stopwords":27,"lodash":101,"xregexp":102}],27:[function(require,module,exports){
// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var _, cache, candiateWords, removePunctuation, stopwords, stopwordsData;
  _ = require('lodash');
  stopwordsData = require('./stopwordsdata');
  cache = {};
  module.exports = stopwords = function (content, language) {
    var count, overlappingStopwords, stopWords, strippedInput, words;
    if (null == language)
      language = 'en';
    stopWords = stopwordsData[language];
    if (!stopWords) {
      console.error("WARNING: No stopwords file found for '" + language + "' - defaulting to English!");
      stopWords = stopwordsData.en;
    }
    if (cache.hasOwnProperty(language)) {
      stopWords = cache[language];
    } else {
      cache[language] = stopWords;
    }
    strippedInput = removePunctuation(content);
    words = candiateWords(strippedInput);
    overlappingStopwords = [];
    count = 0;
    _.each(words, function (w) {
      count += 1;
      if (stopWords.indexOf(w.toLowerCase()) > -1)
        return overlappingStopwords.push(w.toLowerCase());
    });
    return {
      wordCount: count,
      stopwordCount: overlappingStopwords.length,
      stopWords: overlappingStopwords
    };
  };
  removePunctuation = function (content) {
    return content.replace(/[\|\@\<\>\[\]\"\'\.,-\/#\?!$%\^&\*\+;:{}=\-_`~()]/g, '');
  };
  candiateWords = function (strippedInput) {
    return strippedInput.split(' ');
  };
}.call(this);

},{"./stopwordsdata":28,"lodash":101}],28:[function(require,module,exports){
// Generated by CoffeeScript 2.0.0-beta7
module.exports = {
  ar: [
    '\u0641\u0649',
    '\u0641\u064a',
    '\u0643\u0644',
    '\u0644\u0645',
    '\u0644\u0646',
    '\u0644\u0647',
    '\u0645\u0646',
    '\u0647\u0648',
    '\u0647\u064a',
    '\u0642\u0648\u0629',
    '\u0643\u0645\u0627',
    '\u0644\u0647\u0627',
    '\u0645\u0646\u0630',
    '\u0648\u0642\u062f',
    '\u0648\u0644\u0627',
    '\u0646\u0641\u0633\u0647',
    '\u0644\u0642\u0627\u0621',
    '\u0645\u0642\u0627\u0628\u0644',
    '\u0647\u0646\u0627\u0643',
    '\u0648\u0642\u0627\u0644',
    '\u0648\u0643\u0627\u0646',
    '\u0646\u0647\u0627\u064a\u0629',
    '\u0648\u0642\u0627\u0644\u062a',
    '\u0648\u0643\u0627\u0646\u062a',
    '\u0644\u0644\u0627\u0645\u0645',
    '\u0641\u064a\u0647',
    '\u0643\u0644\u0645',
    '\u0644\u0643\u0646',
    '\u0648\u0641\u064a',
    '\u0648\u0642\u0641',
    '\u0648\u0644\u0645',
    '\u0648\u0645\u0646',
    '\u0648\u0647\u0648',
    '\u0648\u0647\u064a',
    '\u064a\u0648\u0645',
    '\u0641\u064a\u0647\u0627',
    '\u0645\u0646\u0647\u0627',
    '\u0645\u0644\u064a\u0627\u0631',
    '\u0644\u0648\u0643\u0627\u0644\u0629',
    '\u064a\u0643\u0648\u0646',
    '\u064a\u0645\u0643\u0646',
    '\u0645\u0644\u064a\u0648\u0646',
    '\u062d\u064a\u062b',
    '\u0627\u0643\u062f',
    '\u0627\u0644\u0627',
    '\u0627\u0645\u0627',
    '\u0627\u0645\u0633',
    '\u0627\u0644\u0633\u0627\u0628\u0642',
    '\u0627\u0644\u062a\u0649',
    '\u0627\u0644\u062a\u064a',
    '\u0627\u0643\u062b\u0631',
    '\u0627\u064a\u0627\u0631',
    '\u0627\u064a\u0636\u0627',
    '\u062b\u0644\u0627\u062b\u0629',
    '\u0627\u0644\u0630\u0627\u062a\u064a',
    '\u0627\u0644\u0627\u062e\u064a\u0631\u0629',
    '\u0627\u0644\u062b\u0627\u0646\u064a',
    '\u0627\u0644\u062b\u0627\u0646\u064a\u0629',
    '\u0627\u0644\u0630\u0649',
    '\u0627\u0644\u0630\u064a',
    '\u0627\u0644\u0627\u0646',
    '\u0627\u0645\u0627\u0645',
    '\u0627\u064a\u0627\u0645',
    '\u062e\u0644\u0627\u0644',
    '\u062d\u0648\u0627\u0644\u0649',
    '\u0627\u0644\u0630\u064a\u0646',
    '\u0627\u0644\u0627\u0648\u0644',
    '\u0627\u0644\u0627\u0648\u0644\u0649',
    '\u0628\u064a\u0646',
    '\u0630\u0644\u0643',
    '\u062f\u0648\u0646',
    '\u062d\u0648\u0644',
    '\u062d\u064a\u0646',
    '\u0627\u0644\u0641',
    '\u0627\u0644\u0649',
    '\u0627\u0646\u0647',
    '\u0627\u0648\u0644',
    '\u0636\u0645\u0646',
    '\u0627\u0646\u0647\u0627',
    '\u062c\u0645\u064a\u0639',
    '\u0627\u0644\u0645\u0627\u0636\u064a',
    '\u0627\u0644\u0648\u0642\u062a',
    '\u0627\u0644\u0645\u0642\u0628\u0644',
    '\u0627\u0644\u064a\u0648\u0645',
    '\u0640',
    '\u0641',
    '\u0648',
    '\u06486',
    '\u0642\u062f',
    '\u0644\u0627',
    '\u0645\u0627',
    '\u0645\u0639',
    '\u0645\u0633\u0627\u0621',
    '\u0647\u0630\u0627',
    '\u0648\u0627\u062d\u062f',
    '\u0648\u0627\u0636\u0627\u0641',
    '\u0648\u0627\u0636\u0627\u0641\u062a',
    '\u0641\u0627\u0646',
    '\u0642\u0628\u0644',
    '\u0642\u0627\u0644',
    '\u0643\u0627\u0646',
    '\u0644\u062f\u0649',
    '\u0646\u062d\u0648',
    '\u0647\u0630\u0647',
    '\u0648\u0627\u0646',
    '\u0648\u0627\u0643\u062f',
    '\u0643\u0627\u0646\u062a',
    '\u0648\u0627\u0648\u0636\u062d',
    '\u0645\u0627\u064a\u0648',
    '\u0628',
    '\u0627',
    '\u0623',
    '\u060c',
    '\u0639\u0634\u0631',
    '\u0639\u062f\u062f',
    '\u0639\u062f\u0629',
    '\u0639\u0634\u0631\u0629',
    '\u0639\u062f\u0645',
    '\u0639\u0627\u0645',
    '\u0639\u0627\u0645\u0627',
    '\u0639\u0646',
    '\u0639\u0646\u062f',
    '\u0639\u0646\u062f\u0645\u0627',
    '\u0639\u0644\u0649',
    '\u0639\u0644\u064a\u0647',
    '\u0639\u0644\u064a\u0647\u0627',
    '\u0632\u064a\u0627\u0631\u0629',
    '\u0633\u0646\u0629',
    '\u0633\u0646\u0648\u0627\u062a',
    '\u062a\u0645',
    '\u0636\u062f',
    '\u0628\u0639\u062f',
    '\u0628\u0639\u0636',
    '\u0627\u0639\u0627\u062f\u0629',
    '\u0627\u0639\u0644\u0646\u062a',
    '\u0628\u0633\u0628\u0628',
    '\u062d\u062a\u0649',
    '\u0627\u0630\u0627',
    '\u0627\u062d\u062f',
    '\u0627\u062b\u0631',
    '\u0628\u0631\u0633',
    '\u0628\u0627\u0633\u0645',
    '\u063a\u062f\u0627',
    '\u0634\u062e\u0635\u0627',
    '\u0635\u0628\u0627\u062d',
    '\u0627\u0637\u0627\u0631',
    '\u0627\u0631\u0628\u0639\u0629',
    '\u0627\u062e\u0631\u0649',
    '\u0628\u0627\u0646',
    '\u0627\u062c\u0644',
    '\u063a\u064a\u0631',
    '\u0628\u0634\u0643\u0644',
    '\u062d\u0627\u0644\u064a\u0627',
    '\u0628\u0646',
    '\u0628\u0647',
    '\u062b\u0645',
    '\u0627\u0641',
    '\u0627\u0646',
    '\u0627\u0648',
    '\u0627\u064a',
    '\u0628\u0647\u0627',
    '\u0635\u0641\u0631'
  ],
  bg: [
    '\u0430',
    '\u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0447\u0435\u043d',
    '\u0430\u0437',
    '\u0430\u043a\u043e',
    '\u0430\u043b\u0430',
    '\u0431\u0435',
    '\u0431\u0435\u0437',
    '\u0431\u0435\u0448\u0435',
    '\u0431\u0438',
    '\u0431\u0438\u0432\u0448',
    '\u0431\u0438\u0432\u0448\u0430',
    '\u0431\u0438\u0432\u0448\u043e',
    '\u0431\u0438\u043b',
    '\u0431\u0438\u043b\u0430',
    '\u0431\u0438\u043b\u0438',
    '\u0431\u0438\u043b\u043e',
    '\u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f',
    '\u0431\u043b\u0438\u0437\u043e',
    '\u0431\u044a\u0434\u0430\u0442',
    '\u0431\u044a\u0434\u0435',
    '\u0431\u044f\u0445\u0430',
    '\u0432',
    '\u0432\u0430\u0441',
    '\u0432\u0430\u0448',
    '\u0432\u0430\u0448\u0430',
    '\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e',
    '\u0432\u0435\u0447\u0435',
    '\u0432\u0437\u0435\u043c\u0430',
    '\u0432\u0438',
    '\u0432\u0438\u0435',
    '\u0432\u0438\u043d\u0430\u0433\u0438',
    '\u0432\u043d\u0438\u043c\u0430\u0432\u0430',
    '\u0432\u0440\u0435\u043c\u0435',
    '\u0432\u0441\u0435',
    '\u0432\u0441\u0435\u043a\u0438',
    '\u0432\u0441\u0438\u0447\u043a\u0438',
    '\u0432\u0441\u0438\u0447\u043a\u043e',
    '\u0432\u0441\u044f\u043a\u0430',
    '\u0432\u044a\u0432',
    '\u0432\u044a\u043f\u0440\u0435\u043a\u0438',
    '\u0432\u044a\u0440\u0445\u0443',
    '\u0433',
    '\u0433\u0438',
    '\u0433\u043b\u0430\u0432\u0435\u043d',
    '\u0433\u043b\u0430\u0432\u043d\u0430',
    '\u0433\u043b\u0430\u0432\u043d\u043e',
    '\u0433\u043b\u0430\u0441',
    '\u0433\u043e',
    '\u0433\u043e\u0434\u0438\u043d\u0430',
    '\u0433\u043e\u0434\u0438\u043d\u0438',
    '\u0433\u043e\u0434\u0438\u0448\u0435\u043d',
    '\u0434',
    '\u0434\u0430',
    '\u0434\u0430\u043b\u0438',
    '\u0434\u0432\u0430',
    '\u0434\u0432\u0430\u043c\u0430',
    '\u0434\u0432\u0430\u043c\u0430\u0442\u0430',
    '\u0434\u0432\u0435',
    '\u0434\u0432\u0435\u0442\u0435',
    '\u0434\u0435\u043d',
    '\u0434\u043d\u0435\u0441',
    '\u0434\u043d\u0438',
    '\u0434\u043e',
    '\u0434\u043e\u0431\u0440\u0430',
    '\u0434\u043e\u0431\u0440\u0435',
    '\u0434\u043e\u0431\u0440\u043e',
    '\u0434\u043e\u0431\u044a\u0440',
    '\u0434\u043e\u043a\u0430\u0442\u043e',
    '\u0434\u043e\u043a\u043e\u0433\u0430',
    '\u0434\u043e\u0440\u0438',
    '\u0434\u043e\u0441\u0435\u0433\u0430',
    '\u0434\u043e\u0441\u0442\u0430',
    '\u0434\u0440\u0443\u0433',
    '\u0434\u0440\u0443\u0433\u0430',
    '\u0434\u0440\u0443\u0433\u0438',
    '\u0435',
    '\u0435\u0432\u0442\u0438\u043d',
    '\u0435\u0434\u0432\u0430',
    '\u0435\u0434\u0438\u043d',
    '\u0435\u0434\u043d\u0430',
    '\u0435\u0434\u043d\u0430\u043a\u0432\u0430',
    '\u0435\u0434\u043d\u0430\u043a\u0432\u0438',
    '\u0435\u0434\u043d\u0430\u043a\u044a\u0432',
    '\u0435\u0434\u043d\u043e',
    '\u0435\u043a\u0438\u043f',
    '\u0435\u0442\u043e',
    '\u0436\u0438\u0432\u043e\u0442',
    '\u0437\u0430',
    '\u0437\u0430\u0431\u0430\u0432\u044f\u043c',
    '\u0437\u0430\u0434',
    '\u0437\u0430\u0435\u0434\u043d\u043e',
    '\u0437\u0430\u0440\u0430\u0434\u0438',
    '\u0437\u0430\u0441\u0435\u0433\u0430',
    '\u0437\u0430\u0441\u043f\u0430\u043b',
    '\u0437\u0430\u0442\u043e\u0432\u0430',
    '\u0437\u0430\u0449\u043e',
    '\u0437\u0430\u0449\u043e\u0442\u043e',
    '\u0438',
    '\u0438\u0437',
    '\u0438\u043b\u0438',
    '\u0438\u043c',
    '\u0438\u043c\u0430',
    '\u0438\u043c\u0430\u0442',
    '\u0438\u0441\u043a\u0430',
    '\u0439',
    '\u043a\u0430\u0437\u0430',
    '\u043a\u0430\u043a',
    '\u043a\u0430\u043a\u0432\u0430',
    '\u043a\u0430\u043a\u0432\u043e',
    '\u043a\u0430\u043a\u0442\u043e',
    '\u043a\u0430\u043a\u044a\u0432',
    '\u043a\u0430\u0442\u043e',
    '\u043a\u043e\u0433\u0430',
    '\u043a\u043e\u0433\u0430\u0442\u043e',
    '\u043a\u043e\u0435\u0442\u043e',
    '\u043a\u043e\u0438\u0442\u043e',
    '\u043a\u043e\u0439',
    '\u043a\u043e\u0439\u0442\u043e',
    '\u043a\u043e\u043b\u043a\u043e',
    '\u043a\u043e\u044f\u0442\u043e',
    '\u043a\u044a\u0434\u0435',
    '\u043a\u044a\u0434\u0435\u0442\u043e',
    '\u043a\u044a\u043c',
    '\u043b\u0435\u0441\u0435\u043d',
    '\u043b\u0435\u0441\u043d\u043e',
    '\u043b\u0438',
    '\u043b\u043e\u0448',
    '\u043c',
    '\u043c\u0430\u0439',
    '\u043c\u0430\u043b\u043a\u043e',
    '\u043c\u0435',
    '\u043c\u0435\u0436\u0434\u0443',
    '\u043c\u0435\u043a',
    '\u043c\u0435\u043d',
    '\u043c\u0435\u0441\u0435\u0446',
    '\u043c\u0438',
    '\u043c\u043d\u043e\u0433\u043e',
    '\u043c\u043d\u043e\u0437\u0438\u043d\u0430',
    '\u043c\u043e\u0433\u0430',
    '\u043c\u043e\u0433\u0430\u0442',
    '\u043c\u043e\u0436\u0435',
    '\u043c\u043e\u043a\u044a\u0440',
    '\u043c\u043e\u043b\u044f',
    '\u043c\u043e\u043c\u0435\u043d\u0442\u0430',
    '\u043c\u0443',
    '\u043d',
    '\u043d\u0430',
    '\u043d\u0430\u0434',
    '\u043d\u0430\u0437\u0430\u0434',
    '\u043d\u0430\u0439',
    '\u043d\u0430\u043f\u0440\u0430\u0432\u0438',
    '\u043d\u0430\u043f\u0440\u0435\u0434',
    '\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440',
    '\u043d\u0430\u0441',
    '\u043d\u0435',
    '\u043d\u0435\u0433\u043e',
    '\u043d\u0435\u0449\u043e',
    '\u043d\u0435\u044f',
    '\u043d\u0438',
    '\u043d\u0438\u0435',
    '\u043d\u0438\u043a\u043e\u0439',
    '\u043d\u0438\u0442\u043e',
    '\u043d\u0438\u0449\u043e',
    '\u043d\u043e',
    '\u043d\u043e\u0432',
    '\u043d\u043e\u0432\u0430',
    '\u043d\u043e\u0432\u0438',
    '\u043d\u043e\u0432\u0438\u043d\u0430',
    '\u043d\u044f\u043a\u043e\u0438',
    '\u043d\u044f\u043a\u043e\u0439',
    '\u043d\u044f\u043a\u043e\u043b\u043a\u043e',
    '\u043d\u044f\u043c\u0430',
    '\u043e\u0431\u0430\u0447\u0435',
    '\u043e\u043a\u043e\u043b\u043e',
    '\u043e\u0441\u0432\u0435\u043d',
    '\u043e\u0441\u043e\u0431\u0435\u043d\u043e',
    '\u043e\u0442',
    '\u043e\u0442\u0433\u043e\u0440\u0435',
    '\u043e\u0442\u043d\u043e\u0432\u043e',
    '\u043e\u0449\u0435',
    '\u043f\u0430\u043a',
    '\u043f\u043e',
    '\u043f\u043e\u0432\u0435\u0447\u0435',
    '\u043f\u043e\u0432\u0435\u0447\u0435\u0442\u043e',
    '\u043f\u043e\u0434',
    '\u043f\u043e\u043d\u0435',
    '\u043f\u043e\u0440\u0430\u0434\u0438',
    '\u043f\u043e\u0441\u043b\u0435',
    '\u043f\u043e\u0447\u0442\u0438',
    '\u043f\u0440\u0430\u0432\u0438',
    '\u043f\u0440\u0435\u0434',
    '\u043f\u0440\u0435\u0434\u0438',
    '\u043f\u0440\u0435\u0437',
    '\u043f\u0440\u0438',
    '\u043f\u044a\u043a',
    '\u043f\u044a\u0440\u0432\u0430\u0442\u0430',
    '\u043f\u044a\u0440\u0432\u0438',
    '\u043f\u044a\u0440\u0432\u043e',
    '\u043f\u044a\u0442\u0438',
    '\u0440\u0430\u0432\u0435\u043d',
    '\u0440\u0430\u0432\u043d\u0430',
    '\u0441',
    '\u0441\u0430',
    '\u0441\u0430\u043c',
    '\u0441\u0430\u043c\u043e',
    '\u0441\u0435',
    '\u0441\u0435\u0433\u0430',
    '\u0441\u0438',
    '\u0441\u0438\u043d',
    '\u0441\u043a\u043e\u0440\u043e',
    '\u0441\u043b\u0435\u0434',
    '\u0441\u043b\u0435\u0434\u0432\u0430\u0449',
    '\u0441\u043c\u0435',
    '\u0441\u043c\u044f\u0445',
    '\u0441\u043f\u043e\u0440\u0435\u0434',
    '\u0441\u0440\u0435\u0434',
    '\u0441\u0440\u0435\u0449\u0443',
    '\u0441\u0442\u0435',
    '\u0441\u044a\u043c',
    '\u0441\u044a\u0441',
    '\u0441\u044a\u0449\u043e',
    '\u0442',
    '\u0442\u0430\u0437\u0438',
    '\u0442\u0430\u043a\u0430',
    '\u0442\u0430\u043a\u0438\u0432\u0430',
    '\u0442\u0430\u043a\u044a\u0432',
    '\u0442\u0430\u043c',
    '\u0442\u0432\u043e\u0439',
    '\u0442\u0435',
    '\u0442\u0435\u0437\u0438',
    '\u0442\u0438',
    '\u0442.\u043d.',
    '\u0442\u043e',
    '\u0442\u043e\u0432\u0430',
    '\u0442\u043e\u0433\u0430\u0432\u0430',
    '\u0442\u043e\u0437\u0438',
    '\u0442\u043e\u0439',
    '\u0442\u043e\u043b\u043a\u043e\u0432\u0430',
    '\u0442\u043e\u0447\u043d\u043e',
    '\u0442\u0440\u0438',
    '\u0442\u0440\u044f\u0431\u0432\u0430',
    '\u0442\u0443\u043a',
    '\u0442\u044a\u0439',
    '\u0442\u044f',
    '\u0442\u044f\u0445',
    '\u0443',
    '\u0443\u0442\u0440\u0435',
    '\u0445\u0430\u0440\u0435\u0441\u0432\u0430',
    '\u0445\u0438\u043b\u044f\u0434\u0438',
    '\u0447',
    '\u0447\u0430\u0441\u0430',
    '\u0447\u0435',
    '\u0447\u0435\u0441\u0442\u043e',
    '\u0447\u0440\u0435\u0437',
    '\u0449\u0435',
    '\u0449\u043e\u043c',
    '\u044e\u043c\u0440\u0443\u043a',
    '\u044f',
    '\u044f\u043a'
  ],
  cs: [
    'a\u010dkoli',
    'ahoj',
    'ale',
    'anebo',
    'ano',
    'asi',
    'aspo\u0148',
    'b\u011bhem',
    'bez',
    'beze',
    'bl\xedzko',
    'bohu\u017eel',
    'brzo',
    'bude',
    'budeme',
    'bude\u0161',
    'budete',
    'budou',
    'budu',
    'byl',
    'byla',
    'byli',
    'bylo',
    'byly',
    'bys',
    '\u010dau',
    'chce',
    'chceme',
    'chce\u0161',
    'chcete',
    'chci',
    'cht\u011bj\xed',
    'cht\xedt',
    "chut'",
    'chuti',
    'co',
    '\u010dtrn\xe1ct',
    '\u010dty\u0159i',
    'd\xe1l',
    'd\xe1le',
    'daleko',
    'd\u011bkovat',
    'd\u011bkujeme',
    'd\u011bkuji',
    'den',
    'deset',
    'devaten\xe1ct',
    'dev\u011bt',
    'do',
    'dobr\xfd',
    'docela',
    'dva',
    'dvacet',
    'dvan\xe1ct',
    'dv\u011b',
    'hodn\u011b',
    'j\xe1',
    'jak',
    'jde',
    'je',
    'jeden',
    'jeden\xe1ct',
    'jedna',
    'jedno',
    'jednou',
    'jedou',
    'jeho',
    'jej\xed',
    'jejich',
    'jemu',
    'jen',
    'jenom',
    'je\u0161t\u011b',
    'jestli',
    'jestli\u017ee',
    'j\xed',
    'jich',
    'j\xedm',
    'jimi',
    'jinak',
    'jsem',
    'jsi',
    'jsme',
    'jsou',
    'jste',
    'kam',
    'kde',
    'kdo',
    'kdy',
    'kdy\u017e',
    'ke',
    'kolik',
    'krom\u011b',
    'kter\xe1',
    'kter\xe9',
    'kte\u0159\xed',
    'kter\xfd',
    'kv\u016fli',
    'm\xe1',
    'maj\xed',
    'm\xe1lo',
    'm\xe1m',
    'm\xe1me',
    'm\xe1\u0161',
    'm\xe1te',
    'm\xe9',
    'm\u011b',
    'mezi',
    'm\xed',
    'm\xedt',
    'mn\u011b',
    'mnou',
    'moc',
    'mohl',
    'mohou',
    'moje',
    'moji',
    'mo\u017en\xe1',
    'm\u016fj',
    'mus\xed',
    'm\u016f\u017ee',
    'my',
    'na',
    'nad',
    'nade',
    'n\xe1m',
    'n\xe1mi',
    'naproti',
    'n\xe1s',
    'n\xe1\u0161',
    'na\u0161e',
    'na\u0161i',
    'ne',
    'n\u011b',
    'nebo',
    'nebyl',
    'nebyla',
    'nebyli',
    'nebyly',
    'n\u011bco',
    'ned\u011bl\xe1',
    'ned\u011blaj\xed',
    'ned\u011bl\xe1m',
    'ned\u011bl\xe1me',
    'ned\u011bl\xe1\u0161',
    'ned\u011bl\xe1te',
    'n\u011bjak',
    'nejsi',
    'n\u011bkde',
    'n\u011bkdo',
    'nemaj\xed',
    'nem\xe1me',
    'nem\xe1te',
    'nem\u011bl',
    'n\u011bmu',
    'nen\xed',
    'nesta\u010d\xed',
    'nevad\xed',
    'ne\u017e',
    'nic',
    'nich',
    'n\xedm',
    'nimi',
    'nula',
    'od',
    'ode',
    'on',
    'ona',
    'oni',
    'ono',
    'ony',
    'osm',
    'osmn\xe1ct',
    'pak',
    'patn\xe1ct',
    'p\u011bt',
    'po',
    'po\u0159\xe1d',
    'potom',
    'pozd\u011b',
    'p\u0159ed',
    'p\u0159es',
    'p\u0159ese',
    'pro',
    'pro\u010d',
    'pros\xedm',
    'prost\u011b',
    'proti',
    'proto\u017ee',
    'rovn\u011b',
    'se',
    'sedm',
    'sedmn\xe1ct',
    '\u0161est',
    '\u0161estn\xe1ct',
    'skoro',
    'sm\u011bj\xed',
    'sm\xed',
    'snad',
    'spolu',
    'sta',
    'st\xe9',
    'sto',
    'ta',
    'tady',
    'tak',
    'takhle',
    'taky',
    'tam',
    'tamhle',
    'tamhleto',
    'tamto',
    't\u011b',
    'tebe',
    'tebou',
    "ted'",
    'tedy',
    'ten',
    'ti',
    'tis\xedc',
    'tis\xedce',
    'to',
    'tob\u011b',
    'tohle',
    'toto',
    't\u0159eba',
    't\u0159i',
    't\u0159in\xe1ct',
    'tro\u0161ku',
    'tv\xe1',
    'tv\xe9',
    'tvoje',
    'tv\u016fj',
    'ty',
    'ur\u010dit\u011b',
    'u\u017e',
    'v\xe1m',
    'v\xe1mi',
    'v\xe1s',
    'v\xe1\u0161',
    'va\u0161e',
    'va\u0161i',
    've',
    've\u010der',
    'vedle',
    'vlastn\u011b',
    'v\u0161echno',
    'v\u0161ichni',
    'v\u016fbec',
    'vy',
    'v\u017edy',
    'za',
    'za\u010d',
    'zat\xedmco',
    'ze',
    '\u017ee'
  ],
  da: [
    'af',
    'alle',
    'andet',
    'andre',
    'at',
    'begge',
    'da',
    'de',
    'den',
    'denne',
    'der',
    'deres',
    'det',
    'dette',
    'dig',
    'din',
    'dog',
    'du',
    'ej',
    'eller',
    'en',
    'end',
    'ene',
    'eneste',
    'enhver',
    'et',
    'fem',
    'fire',
    'flere',
    'fleste',
    'for',
    'fordi',
    'forrige',
    'fra',
    'f\xe5',
    'f\xf8r',
    'god',
    'han',
    'hans',
    'har',
    'hendes',
    'her',
    'hun',
    'hvad',
    'hvem',
    'hver',
    'hvilken',
    'hvis',
    'hvor',
    'hvordan',
    'hvorfor',
    'hvorn\xe5r',
    'i',
    'ikke',
    'ind',
    'ingen',
    'intet',
    'jeg',
    'jeres',
    'kan',
    'kom',
    'kommer',
    'lav',
    'lidt',
    'lille',
    'man',
    'mand',
    'mange',
    'med',
    'meget',
    'men',
    'mens',
    'mere',
    'mig',
    'ned',
    'ni',
    'nogen',
    'noget',
    'ny',
    'nyt',
    'n\xe6r',
    'n\xe6ste',
    'n\xe6sten',
    'og',
    'op',
    'otte',
    'over',
    'p\xe5',
    'se',
    'seks',
    'ses',
    'som',
    'stor',
    'store',
    'syv',
    'ti',
    'til',
    'to',
    'tre',
    'ud',
    'var'
  ],
  de: [
    'der',
    'die',
    'und',
    'in',
    'den',
    'von',
    'zu',
    'mit',
    'ist',
    'das',
    'des',
    'im',
    'f\xfcr',
    'auf',
    'sich',
    'dem',
    'Die',
    'nicht',
    'ein',
    'eine',
    'als',
    'auch',
    'an',
    'es',
    'er',
    'aus',
    'bei',
    'werden',
    'sie',
    'nach',
    'Der',
    'sind',
    'war',
    'wurde',
    'wird',
    'einer',
    'Das',
    'hat',
    'am',
    'wie',
    'um',
    'Sie',
    'zum',
    'oder',
    'einen',
    '\xfcber',
    'dass',
    'einem',
    'noch',
    'bis',
    'nur',
    'vor',
    'zur',
    'durch',
    'so',
    'haben',
    'aber',
    'ich',
    'In',
    'man',
    'mehr',
    'wir',
    'da\xdf',
    'kann',
    'sein',
    'vom',
    'Es',
    'unter',
    'Ich',
    'hatte',
    'gegen',
    'Im',
    'Er',
    'wenn',
    'dieser',
    'seine',
    'eines',
    'k\xf6nnen',
    'diese',
    'wieder',
    'wurden',
    'dann',
    'was',
    'schon',
    'Jahr',
    'zwei',
    'seiner',
    'Jahre',
    'Jahren',
    'ihre',
    'gibt',
    'zwischen',
    'Ein',
    'immer',
    'waren',
    'Zeit',
    'Uhr',
    'keine',
    'Wir',
    'sei',
    'habe',
    'sehr',
    'hier',
    'alle',
    'Nach',
    'ab',
    'sowie',
    'da',
    'beim',
    'heute',
    'seit',
    'diesem',
    'uns',
    'soll',
    'Und',
    'Deutschland',
    'Mit',
    'anderen',
    'jedoch',
    'ihr',
    'damit',
    'ersten',
    'drei',
    'Auch',
    'doch',
    'ihm',
    'seinen',
    'Stadt',
    'etwa',
    'sagte',
    'ihn',
    'Eine',
    'sondern',
    'bereits',
    'm\xfcssen',
    'ohne',
    'Menschen',
    'will',
    'Prozent',
    'ihrer',
    'worden',
    'Bei',
    'selbst',
    'jetzt',
    'of',
    'Als',
    'seinem',
    'neue',
    'muss',
    'allem',
    'neuen',
    'Ende',
    'nun',
    'Von',
    'geht',
    'ihren',
    'SPD',
    'So',
    'F\xfcr',
    'weil',
    'wo',
    'mich',
    'mir',
    'Aber',
    'Am',
    'Diese',
    'ganz',
    'dieses',
    'etwas',
    'andere',
    'Geschichte',
    'Frau',
    'liegt',
    'Wenn',
    'ins',
    'gut',
    'einmal',
    'konnte',
    'Euro',
    'du',
    'denn',
    'viele',
    'Auf',
    'machen',
    'Herr',
    'Leben',
    'the',
    'diesen',
    'erst',
    'lassen',
    'Wie',
    'dort',
    'beiden',
    'erste',
    'The',
    'Teil',
    'deutschen',
    'weiter',
    'also',
    'viel',
    'sollte',
    'dabei',
    'Millionen',
    'Was',
    'sp\xe4ter',
    'hatten',
    'w\xe4hrend',
    'Welt',
    'ISBN',
    'sagt',
    'denen',
    'wollen',
    'steht',
    'Da',
    'kommt',
    'kein',
    'vier',
    'nichts',
    'de',
    'allerdings',
    'Seite',
    'ob',
    'dazu',
    'gab',
    's',
    'letzten',
    'kam',
    'USA',
    'wegen',
    'dies',
    'zur\xfcck',
    'gro\xdfen',
    'kommen',
    'alles',
    'rund',
    'ja',
    'sollen',
    'deren',
    'daf\xfcr',
    'Doch',
    'Kinder',
    'w\xe4re',
    'Frage',
    'weitere',
    'w\xfcrde',
    'dessen',
    'gro\xdfe',
    'Januar',
    'zwar',
    'darauf',
    'Arbeit',
    'Beispiel',
    'September',
    'zusammen',
    'einige',
    'Land',
    'allen',
    'fast',
    'Frauen',
    'M\xe4rz',
    'Namen',
    'Unternehmen',
    'ihrem',
    'davon',
    'Mann',
    'Mai',
    'Platz',
    'deutsche',
    'werde',
    'Oktober',
    'mu\xdf',
    'Literatur',
    'Art',
    'ihnen',
    'Deutschen',
    'f\xfcnf',
    'gilt',
    'sehen',
    'k\xf6nnte',
    'Dezember',
    'stehen',
    'sogar',
    'seien',
    'Wer',
    'Seit',
    'August',
    'bin',
    'Beifall',
    'Fall',
    'Juni',
    'eigenen',
    'November',
    'mal',
    'Film',
    'finden',
    'sagen',
    'Regierung',
    'April',
    'M\xfcnchen',
    'oft',
    'Dies',
    'lange',
    'ebenfalls',
    'bekannt',
    'Pr\xe4sident',
    'wohl',
    'CDU/CSU',
    'Zu',
    'geh\xf6rt',
    'Man',
    'weniger',
    'gerade',
    'statt',
    'aller',
    'Juli',
    'm\xf6chte',
    'Weg',
    'Entwicklung',
    'zun\xe4chst',
    'ging',
    'Mark',
    'Bild',
    'm\xf6glich',
    'gar',
    'besonders',
    'h\xe4tte',
    'macht',
    'Politik',
    'geben',
    'Tag',
    'Ihnen',
    'Februar',
    'Hier',
    'Gemeinde',
    'wenig',
    'gewesen',
    'Europa',
    'gehen',
    'gemacht',
    'welche',
    'New',
    'gegen\xfcber',
    'hei\xdft',
    'Familie',
    'Union',
    'tun',
    'Jahrhundert',
    'einfach',
    'Frankfurt',
    'deutlich',
    'Dabei',
    'neben',
    'sollten',
    'Kirche',
    'keinen',
    'Artikel',
    'Ihre',
    'Peter',
    'Thema',
    'besteht',
    'vielen',
    'nie',
    'bzw.',
    'Aus',
    'Zeitung',
    'wollte',
    'Kommission',
    'seines',
    'Hamburg',
    'h\xe4tten',
    'Geld',
    'meine',
    'Dr',
    'kaum',
    'zweiten',
    'W\xe4hrend',
    'l\xe4sst',
    'Anfang',
    'Um',
    'Ort',
    'wei\xdf',
    'findet',
    'Bereich',
    'Haus',
    'anderem',
    'Mal',
    'deshalb',
    'alten',
    'erhalten',
    'zehn',
    'Zum',
    'bisher',
    'meisten',
    'dar\xfcber',
    'w\xfcrden',
    'hin',
    'Form',
    'An',
    'bleibt',
    'sieht',
    'Gesellschaft',
    'Berliner',
    'Den',
    'vergangenen',
    'bezeichnet',
    'Nr.',
    'Ziel',
    'je',
    'weit',
    'Grund',
    'sechs',
    'darf',
    'Rolle',
    'Deutsche',
    'wissen',
    'jeder',
    'zeigt',
    'Damit',
    'Denn',
    'mehrere',
    'n\xe4chsten',
    'Vor',
    'Dann',
    'schlie\xdflich',
    'kleinen',
    'Durch',
    'Michael',
    'km',
    'Lage',
    'Gruppe',
    'Band',
    'damals',
    'Spiel',
    'Sohn',
    'Dr.',
    'stark',
    'Universit\xe4t',
    'Hilfe',
    'besser',
    'hinter',
    'meist',
    'Seine',
    'St.',
    'stellt',
    'Tage',
    'unsere',
    'daher',
    'Nur',
    'wirklich',
    'f\xfchrt',
    'Dieser',
    'beispielsweise',
    'kurz',
    'Bericht',
    'gleich',
    'weiteren',
    'Stra\xdfe',
    'bleiben',
    'Wirtschaft',
    'Siehe',
    'Zukunft',
    'eher',
    'Bedeutung',
    'Recht',
    'insbesondere',
    'Bev\xf6lkerung',
    'schnell',
    'nehmen',
    'Verlag',
    'CDU',
    'Tod',
    'Alle',
    'solche',
    'neu',
    'Bundesregierung',
    'pro',
    'Frankreich',
    'Jahres',
    'konnten',
    'Ihr',
    'lie\xdf',
    'Du',
    'kleine',
    'Europ\xe4ischen',
    'Vater',
    'genannt',
    'lang',
    'Titel',
    'Rahmen',
    'Wort',
    'eigentlich',
    'erhielt',
    'einigen',
    'Woche',
    'FC',
    'Musik',
    'dagegen',
    'Sein',
    'allein',
    'Einsatz',
    'genau',
    'begann',
    'innerhalb',
    'unserer',
    'Partei',
    'Polizei',
    'Wasser',
    'bringen',
    'deutscher',
    'nat\xfcrlich',
    'eigene',
    'Wochen',
    'insgesamt',
    'Au\xdferdem',
    'Bis',
    'halten',
    'politischen',
    'musste',
    'Parlament',
    'Meter',
    'Hand',
    'Zahl',
    'stellen',
    'gesagt',
    'f\xfchren',
    'daran',
    'Erfolg',
    'befindet',
    'Zur',
    'verschiedenen',
    'Probleme',
    'Unter',
    'Abgeordneten',
    'Milliarden',
    'nahm',
    'stand',
    'geworden',
    'c',
    'liegen',
    'erstmals',
    'Sprache',
    'Fragen',
    'n\xe4mlich',
    'Ja',
    'Kollegen',
    'M\xe4nner',
    'Nicht',
    'Wolfgang',
    'Problem',
    'Mutter',
    'Minuten',
    'Weitere',
    'Mitte',
    'Mitglied',
    'Jahrhunderts',
    'Krieg',
    'Hans',
    'k\xf6nnten',
    'Thomas',
    '\xdcber',
    'Personen',
    'Friedrich',
    'ca.',
    'ebenso',
    'machte',
    'York',
    'vielleicht',
    'Stelle',
    'derzeit',
    'L\xe4ndern',
    'H\xf6he',
    'verwendet',
    'gute',
    '\xfcberhaupt',
    'L\xe4nder',
    'Angaben',
    'f\xfchrte',
    'gegeben',
    'Tel.',
    'klar',
    'Karl',
    'europ\xe4ischen',
    'sicher',
    'Saison',
    'Programm',
    'erreicht',
    'GR\xdcNEN',
    'beide',
    'Sonntag',
    'sowohl',
    'Region',
    'alte',
    'Staaten',
    'Paris',
    'Beginn',
    'Buch',
    'zweite',
    'ganze',
    'hinaus',
    'K\xf6nig',
    'Morgen',
    'handelt',
    'fand',
    'Schweiz',
    'jeweils',
    'Weise',
    'DM',
    'fest',
    'per',
    'blieb',
    'Mitglieder',
    'Richtung',
    'Heute',
    'Stunden',
    'leicht',
    'Leute',
    'wobei',
    'geh\xf6ren',
    'bietet',
    'Wien',
    'politische',
    'Folge',
    'Blick',
    'aufgrund',
    'Entscheidung',
    'Dort',
    'Neben',
    'h\xe4lt',
    'Gebiet',
    'gemeinsam',
    'erkl\xe4rt',
    'direkt',
    'k\xf6nne',
    'Daten',
    'recht',
    'schwer',
    'Bayern',
    'jeden',
    'Name',
    'Schule',
    'GmbH',
    'd\xfcrfen',
    'laut',
    'Seiten',
    'B\xfcrger',
    'Eltern',
    'dpa',
    'Meinung',
    'Werke',
    'Jetzt',
    'letzte',
    'Spieler',
    'bald',
    'London',
    'h\xe4ufig',
    'heutigen',
    'Einwohner',
    'acht',
    'eben',
    'Internet',
    'Markt',
    'dich',
    'Nein',
    'Situation',
    'System',
    'zuvor',
    'M\xf6glichkeit',
    'Freitag',
    'mein',
    'Mannheim',
    'Fenster',
    'Kosten',
    'inzwischen',
    'kamen',
    'John',
    'sieben',
    'bekommen',
    'erreichen',
    'unser',
    'Verf\xfcgung',
    'K\xf6ln',
    'Dazu',
    'besten',
    'Zusammenhang',
    'Reihe',
    'Kritik',
    'richtig',
    'Liste',
    'Herren',
    'Augen',
    'taz',
    'zeigen',
    'siehe',
    'hohen',
    'spielte',
    'leben',
    'v\xf6llig',
    'Neue',
    'ihres',
    'spielt',
    'Sicherheit',
    'weiterhin',
    'hoch',
    'nachdem',
    'gegr\xfcndet',
    'erneut',
    'sah',
    'z.',
    'wer',
    'Informationen',
    'anders',
    'spielen',
    'Dieses',
    'gleichen',
    'Kultur',
    'gr\xf6\xdften',
    'eingesetzt',
    'Unterst\xfctzung',
    'Beim',
    'erkl\xe4rte',
    'Allerdings',
    'Firma',
    'Amt',
    'Kopf',
    'trotz',
    'Erst',
    'gebracht',
    'gestellt',
    'l\xe4uft',
    'schlie\xdfen',
    'Bilder',
    'nimmt',
    'Mitarbeiter',
    'B\xdcNDNIS',
    'Deshalb',
    'verschiedene',
    'zudem',
    'Werk',
    'Ergebnis',
    'Heinrich',
    'Bau',
    'ehemaligen',
    'Preis',
    'Tochter',
    'Stuttgart',
    'Samstag',
    'Bad',
    'Verfahren',
    'Kind',
    'fr\xfcher',
    'Paul',
    'darin',
    'paar',
    'Punkt',
    'Weblinks',
    'Nun',
    'Ma\xdfnahmen',
    '\xd6sterreich',
    'Wilhelm',
    'Herrn',
    'z.B.',
    'Noch',
    'Staat',
    'Zusammenarbeit',
    'knapp',
    'Nacht',
    'einzelnen',
    'trat',
    'gestern',
    'Team',
    'Osten',
    'scheint',
    'Mannschaft',
    'Tagen',
    'internationalen',
    'jede',
    'mindestens',
    'teilweise',
    'einzige',
    'Soldaten',
    'setzt',
    'gefunden',
    'Kunst',
    'lediglich',
    '\xf6ffentlichen',
    'bedeutet',
    'Raum',
    'gewann',
    'Kampf',
    'Martin',
    'Ist',
    'Begriff',
    'Hause',
    'entwickelt',
    'Wahl',
    'Schon',
    'arbeiten',
    'gr\xf6\xdfte',
    'Donnerstag',
    'Ab',
    'Viele',
    'Quellen',
    'Nachdem',
    'dadurch',
    'Italien',
    'erster',
    'gekommen',
    'dir',
    'Mittwoch',
    'danach',
    'stellte',
    'her',
    'zahlreiche',
    'Landes',
    'Gesetz',
    'Monaten',
    'PDS',
    'Rat',
    'Franz',
    'Verein',
    'sonst',
    'Frankfurter',
    'Meine',
    'Klaus',
    'Karriere',
    'm\xfcsse',
    'meiner',
    'anderer',
    'zuletzt',
    'Monate',
    'Alter',
    'hohe',
    'Interesse',
    'Regie',
    'Montag',
    'genommen',
    'lag',
    'Sommer',
    'spricht',
    'Trainer',
    'Liebe',
    'jedem',
    '/DIE',
    'Westen',
    'guten',
    'Kilometer',
    'Johann',
    'gesehen',
    'darunter',
    'solchen',
    'indem',
    'Mittel',
    'oben',
    'Schweizer',
    'wichtig',
    'H\xe4lfte',
    'Regel',
    'obwohl',
    'B\xfcrgermeister',
    'Aufgabe',
    'Spiele',
    'folgenden',
    'Dienstag',
    'version',
    'Sache',
    'sprechen',
    'Gemeinden',
    'electronic',
    'for',
    'Norden',
    'au\xdferdem',
    'Antrag',
    'gleichzeitig',
    'ganzen',
    'Politiker',
    'geh\xf6rte',
    'gro\xdfer',
    'China',
    'N\xe4he',
    'bereit',
    'setzte',
    'Druck',
    'tats\xe4chlich',
    'Gott',
    'frei',
    'Gr\xfcnen',
    'zumindest',
    'Opfer',
    'genug',
    'versucht',
    'bevor'
  ],
  el: [
    '\u03b1\u03bb\u03bb\u03b1',
    '\u03b1\u03bd',
    '\u03b1\u03bd\u03c4\u03b9',
    '\u03b1\u03c0\u03bf',
    '\u03b1\u03c5\u03c4\u03b1',
    '\u03b1\u03c5\u03c4\u03b5\u03c3',
    '\u03b1\u03c5\u03c4\u03b7',
    '\u03b1\u03c5\u03c4\u03bf',
    '\u03b1\u03c5\u03c4\u03bf\u03b9',
    '\u03b1\u03c5\u03c4\u03bf\u03c3',
    '\u03b1\u03c5\u03c4\u03bf\u03c5\u03c3',
    '\u03b1\u03c5\u03c4\u03c9\u03bd',
    '\u03b3\u03b9\u03b1',
    '\u03b4\u03b5',
    '\u03b4\u03b5\u03bd',
    '\u03b5\u03b1\u03bd',
    '\u03b5\u03b9\u03bc\u03b1\u03b9',
    '\u03b5\u03b9\u03bc\u03b1\u03c3\u03c4\u03b5',
    '\u03b5\u03b9\u03bd\u03b1\u03b9',
    '\u03b5\u03b9\u03c3\u03b1\u03b9',
    '\u03b5\u03b9\u03c3\u03c4\u03b5',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03b1',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03b5\u03c3',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03b7',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03bf',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03bf\u03b9',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03bf\u03c3',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03bf\u03c5\u03c3',
    '\u03b5\u03ba\u03b5\u03b9\u03bd\u03c9\u03bd',
    '\u03b5\u03bd\u03c9',
    '\u03b5\u03c0\u03b9',
    '\u03b7',
    '\u03b8\u03b1',
    '\u03b9\u03c3\u03c9\u03c3',
    '\u03ba',
    '\u03ba\u03b1\u03b9',
    '\u03ba\u03b1\u03c4\u03b1',
    '\u03ba\u03b9',
    '\u03bc\u03b1',
    '\u03bc\u03b5',
    '\u03bc\u03b5\u03c4\u03b1',
    '\u03bc\u03b7',
    '\u03bc\u03b7\u03bd',
    '\u03bd\u03b1',
    '\u03bf',
    '\u03bf\u03b9',
    '\u03bf\u03bc\u03c9\u03c3',
    '\u03bf\u03c0\u03c9\u03c3',
    '\u03bf\u03c3\u03bf',
    '\u03bf\u03c4\u03b9',
    '\u03c0\u03b1\u03c1\u03b1',
    '\u03c0\u03bf\u03b9\u03b1',
    '\u03c0\u03bf\u03b9\u03b5\u03c3',
    '\u03c0\u03bf\u03b9\u03bf',
    '\u03c0\u03bf\u03b9\u03bf\u03b9',
    '\u03c0\u03bf\u03b9\u03bf\u03c3',
    '\u03c0\u03bf\u03b9\u03bf\u03c5\u03c3',
    '\u03c0\u03bf\u03b9\u03c9\u03bd',
    '\u03c0\u03bf\u03c5',
    '\u03c0\u03c1\u03bf\u03c3',
    '\u03c0\u03c9\u03c3',
    '\u03c3\u03b5',
    '\u03c3\u03c4\u03b7',
    '\u03c3\u03c4\u03b7\u03bd',
    '\u03c3\u03c4\u03bf',
    '\u03c3\u03c4\u03bf\u03bd',
    '\u03c4\u03b1',
    '\u03c4\u03b7\u03bd',
    '\u03c4\u03b7\u03c3',
    '\u03c4\u03bf',
    '\u03c4\u03bf\u03bd',
    '\u03c4\u03bf\u03c4\u03b5',
    '\u03c4\u03bf\u03c5',
    '\u03c4\u03c9\u03bd',
    '\u03c9\u03c3'
  ],
  en: [
    "a's",
    'able',
    'about',
    'above',
    'according',
    'accordingly',
    'across',
    'actually',
    'after',
    'afterwards',
    'again',
    'against',
    "ain't",
    'all',
    'allow',
    'allows',
    'almost',
    'alone',
    'along',
    'already',
    'also',
    'although',
    'always',
    'am',
    'among',
    'amongst',
    'an',
    'and',
    'another',
    'any',
    'anybody',
    'anyhow',
    'anyone',
    'anything',
    'anyway',
    'anyways',
    'anywhere',
    'apart',
    'appear',
    'appreciate',
    'appropriate',
    'are',
    "aren't",
    'around',
    'as',
    'aside',
    'ask',
    'asking',
    'associated',
    'at',
    'available',
    'away',
    'awfully',
    'be',
    'became',
    'because',
    'become',
    'becomes',
    'becoming',
    'been',
    'before',
    'beforehand',
    'behind',
    'being',
    'believe',
    'below',
    'beside',
    'besides',
    'best',
    'better',
    'between',
    'beyond',
    'both',
    'brief',
    'but',
    'by',
    'c',
    "c'mon",
    "c's",
    'came',
    'campaign',
    'can',
    "can't",
    'cannot',
    'cant',
    'cause',
    'causes',
    'certain',
    'certainly',
    'changes',
    'clearly',
    'co',
    'com',
    'come',
    'comes',
    'concerning',
    'consequently',
    'consider',
    'considering',
    'contain',
    'containing',
    'contains',
    'corresponding',
    'could',
    "couldn't",
    'course',
    'currently',
    'definitely',
    'described',
    'despite',
    'did',
    "didn't",
    'different',
    'do',
    'does',
    "doesn't",
    'doing',
    "don't",
    'done',
    'down',
    'downwards',
    'during',
    'each',
    'edu',
    'eight',
    'either',
    'else',
    'elsewhere',
    'enough',
    'endorsed',
    'entirely',
    'especially',
    'et',
    'etc',
    'even',
    'ever',
    'every',
    'everybody',
    'everyone',
    'everything',
    'everywhere',
    'ex',
    'exactly',
    'example',
    'except',
    'far',
    'few',
    'fifth',
    'first',
    'financial',
    'five',
    'followed',
    'following',
    'follows',
    'for',
    'former',
    'formerly',
    'forth',
    'four',
    'from',
    'further',
    'furthermore',
    'get',
    'gets',
    'getting',
    'given',
    'gives',
    'go',
    'goes',
    'going',
    'gone',
    'got',
    'gotten',
    'greetings',
    'had',
    "hadn't",
    'happens',
    'hardly',
    'has',
    "hasn't",
    'have',
    "haven't",
    'having',
    'he',
    "he's",
    'hello',
    'help',
    'hence',
    'her',
    'here',
    "here's",
    'hereafter',
    'hereby',
    'herein',
    'hereupon',
    'hers',
    'herself',
    'hi',
    'him',
    'himself',
    'his',
    'hither',
    'hopefully',
    'how',
    'howbeit',
    'however',
    "i'd",
    "i'll",
    "i'm",
    "i've",
    'if',
    'ignored',
    'immediate',
    'in',
    'inasmuch',
    'inc',
    'indeed',
    'indicate',
    'indicated',
    'indicates',
    'inner',
    'insofar',
    'instead',
    'into',
    'inward',
    'is',
    "isn't",
    'it',
    "it'd",
    "it'll",
    "it's",
    'its',
    'itself',
    'just',
    'keep',
    'keeps',
    'kept',
    'know',
    'knows',
    'known',
    'last',
    'lately',
    'later',
    'latter',
    'latterly',
    'least',
    'less',
    'lest',
    'let',
    "let's",
    'like',
    'liked',
    'likely',
    'little',
    'look',
    'looking',
    'looks',
    'ltd',
    'mainly',
    'many',
    'may',
    'maybe',
    'me',
    'mean',
    'meanwhile',
    'merely',
    'might',
    'more',
    'moreover',
    'most',
    'mostly',
    'much',
    'must',
    'my',
    'myself',
    'name',
    'namely',
    'nd',
    'near',
    'nearly',
    'necessary',
    'need',
    'needs',
    'neither',
    'never',
    'nevertheless',
    'new',
    'next',
    'nine',
    'no',
    'nobody',
    'non',
    'none',
    'noone',
    'nor',
    'normally',
    'not',
    'nothing',
    'novel',
    'now',
    'nowhere',
    'obviously',
    'of',
    'off',
    'often',
    'oh',
    'ok',
    'okay',
    'old',
    'on',
    'once',
    'one',
    'ones',
    'only',
    'onto',
    'or',
    'other',
    'others',
    'otherwise',
    'ought',
    'our',
    'ours',
    'ourselves',
    'out',
    'outside',
    'over',
    'overall',
    'own',
    'particular',
    'particularly',
    'per',
    'perhaps',
    'placed',
    'please',
    'plus',
    'possible',
    'presumably',
    'probably',
    'provides',
    'quite',
    'quote',
    'quarterly',
    'rather',
    'really',
    'reasonably',
    'regarding',
    'regardless',
    'regards',
    'relatively',
    'respectively',
    'right',
    'said',
    'same',
    'saw',
    'say',
    'saying',
    'says',
    'second',
    'secondly',
    'see',
    'seeing',
    'seem',
    'seemed',
    'seeming',
    'seems',
    'seen',
    'self',
    'selves',
    'sensible',
    'sent',
    'serious',
    'seriously',
    'seven',
    'several',
    'shall',
    'she',
    'should',
    "shouldn't",
    'since',
    'six',
    'so',
    'some',
    'somebody',
    'somehow',
    'someone',
    'something',
    'sometime',
    'sometimes',
    'somewhat',
    'somewhere',
    'soon',
    'sorry',
    'specified',
    'specify',
    'specifying',
    'still',
    'sub',
    'such',
    'sup',
    'sure',
    "t's",
    'take',
    'taken',
    'tell',
    'tends',
    'than',
    'thank',
    'thanks',
    'thanx',
    'that',
    "that's",
    'thats',
    'the',
    'their',
    'theirs',
    'them',
    'themselves',
    'then',
    'thence',
    'there',
    "there's",
    'thereafter',
    'thereby',
    'therefore',
    'therein',
    'theres',
    'thereupon',
    'these',
    'they',
    "they'd",
    "they'll",
    "they're",
    "they've",
    'think',
    'third',
    'this',
    'thorough',
    'thoroughly',
    'those',
    'though',
    'three',
    'through',
    'throughout',
    'thru',
    'thus',
    'to',
    'together',
    'too',
    'took',
    'toward',
    'towards',
    'tried',
    'tries',
    'truly',
    'try',
    'trying',
    'twice',
    'two',
    'under',
    'unfortunately',
    'unless',
    'unlikely',
    'until',
    'unto',
    'up',
    'upon',
    'us',
    'use',
    'used',
    'useful',
    'uses',
    'using',
    'usually',
    'uucp',
    'value',
    'various',
    'very',
    'via',
    'viz',
    'vs',
    'want',
    'wants',
    'was',
    "wasn't",
    'way',
    'we',
    "we'd",
    "we'll",
    "we're",
    "we've",
    'welcome',
    'well',
    'went',
    'were',
    "weren't",
    'what',
    "what's",
    'whatever',
    'when',
    'whence',
    'whenever',
    'where',
    "where's",
    'whereafter',
    'whereas',
    'whereby',
    'wherein',
    'whereupon',
    'wherever',
    'whether',
    'which',
    'while',
    'whither',
    'who',
    "who's",
    'whoever',
    'whole',
    'whom',
    'whose',
    'why',
    'will',
    'willing',
    'wish',
    'with',
    'within',
    'without',
    "won't",
    'wonder',
    'would',
    'would',
    "wouldn't",
    'yes',
    'yet',
    'you',
    "you'd",
    "you'll",
    "you're",
    "you've",
    'your',
    'yours',
    'yourself',
    'yourselves',
    'zero',
    'official',
    'sharply',
    'criticized'
  ],
  es: [
    'de',
    'la',
    'que',
    'el',
    'en',
    'y',
    'a',
    'los',
    'del',
    'se',
    'las',
    'por',
    'un',
    'para',
    'con',
    'no',
    'una',
    'su',
    'al',
    'lo',
    'como',
    'm\xe1s',
    'pero',
    'sus',
    'le',
    'ya',
    'o',
    'este',
    's\xed',
    'porque',
    'esta',
    'entre',
    'cuando',
    'muy',
    'sin',
    'sobre',
    'tambi\xe9n',
    'me',
    'hasta',
    'hay',
    'donde',
    'quien',
    'desde',
    'todo',
    'nos',
    'durante',
    'todos',
    'uno',
    'les',
    'ni',
    'contra',
    'otros',
    'ese',
    'eso',
    'ante',
    'ellos',
    'e',
    'esto',
    'm\xed',
    'antes',
    'algunos',
    'qu\xe9',
    'unos',
    'yo',
    'otro',
    'otras',
    'otra',
    '\xe9l',
    'tanto',
    'esa',
    'estos',
    'mucho',
    'quienes',
    'nada',
    'muchos',
    'cual',
    'poco',
    'ella',
    'estar',
    'estas',
    'algunas',
    'algo',
    'nosotros',
    'mi',
    'mis',
    't\xfa',
    'te',
    'ti',
    'tu',
    'tus',
    'ellas',
    'nosotras',
    'vosotros',
    'vosotras',
    'os',
    'm\xedo',
    'm\xeda',
    'm\xedos',
    'm\xedas',
    'tuyo',
    'tuya',
    'tuyos',
    'tuyas',
    'suyo',
    'suya',
    'suyos',
    'suyas',
    'nuestro',
    'nuestra',
    'nuestros',
    'nuestras',
    'vuestro',
    'vuestra',
    'vuestros',
    'vuestras',
    'esos',
    'esas',
    'estoy',
    'est\xe1s',
    'est\xe1',
    'estamos',
    'est\xe1is',
    'est\xe1n',
    'est\xe9',
    'est\xe9s',
    'estemos',
    'est\xe9is',
    'est\xe9n',
    'estar\xe9',
    'estar\xe1s',
    'estar\xe1',
    'estaremos',
    'estar\xe9is',
    'estar\xe1n',
    'estar\xeda',
    'estar\xedas',
    'estar\xedamos',
    'estar\xedais',
    'estar\xedan',
    'estaba',
    'estabas',
    'est\xe1bamos',
    'estabais',
    'estaban',
    'estuve',
    'estuviste',
    'estuvo',
    'estuvimos',
    'estuvisteis',
    'estuvieron',
    'estuviera',
    'estuvieras',
    'estuvi\xe9ramos',
    'estuvierais',
    'estuvieran',
    'estuviese',
    'estuvieses',
    'estuvi\xe9semos',
    'estuvieseis',
    'estuviesen',
    'estando',
    'estado',
    'estada',
    'estados',
    'estadas',
    'estad',
    'he',
    'has',
    'ha',
    'hemos',
    'hab\xe9is',
    'han',
    'haya',
    'hayas',
    'hayamos',
    'hay\xe1is',
    'hayan',
    'habr\xe9',
    'habr\xe1s',
    'habr\xe1',
    'habremos',
    'habr\xe9is',
    'habr\xe1n',
    'habr\xeda',
    'habr\xedas',
    'habr\xedamos',
    'habr\xedais',
    'habr\xedan',
    'hab\xeda',
    'hab\xedas',
    'hab\xedamos',
    'hab\xedais',
    'hab\xedan',
    'hube',
    'hubiste',
    'hubo',
    'hubimos',
    'hubisteis',
    'hubieron',
    'hubiera',
    'hubieras',
    'hubi\xe9ramos',
    'hubierais',
    'hubieran',
    'hubiese',
    'hubieses',
    'hubi\xe9semos',
    'hubieseis',
    'hubiesen',
    'habiendo',
    'habido',
    'habida',
    'habidos',
    'habidas',
    'soy',
    'eres',
    'es',
    'somos',
    'sois',
    'son',
    'sea',
    'seas',
    'seamos',
    'se\xe1is',
    'sean',
    'ser\xe9',
    'ser\xe1s',
    'ser\xe1',
    'seremos',
    'ser\xe9is',
    'ser\xe1n',
    'ser\xeda',
    'ser\xedas',
    'ser\xedamos',
    'ser\xedais',
    'ser\xedan',
    'era',
    'eras',
    '\xe9ramos',
    'erais',
    'eran',
    'fui',
    'fuiste',
    'fue',
    'fuimos',
    'fuisteis',
    'fueron',
    'fuera',
    'fueras',
    'fu\xe9ramos',
    'fuerais',
    'fueran',
    'fuese',
    'fueses',
    'fu\xe9semos',
    'fueseis',
    'fuesen',
    'siendo',
    'sido',
    'tengo',
    'tienes',
    'tiene',
    'tenemos',
    'ten\xe9is',
    'tienen',
    'tenga',
    'tengas',
    'tengamos',
    'teng\xe1is',
    'tengan',
    'tendr\xe9',
    'tendr\xe1s',
    'tendr\xe1',
    'tendremos',
    'tendr\xe9is',
    'tendr\xe1n',
    'tendr\xeda',
    'tendr\xedas',
    'tendr\xedamos',
    'tendr\xedais',
    'tendr\xedan',
    'ten\xeda',
    'ten\xedas',
    'ten\xedamos',
    'ten\xedais',
    'ten\xedan',
    'tuve',
    'tuviste',
    'tuvo',
    'tuvimos',
    'tuvisteis',
    'tuvieron',
    'tuviera',
    'tuvieras',
    'tuvi\xe9ramos',
    'tuvierais',
    'tuvieran',
    'tuviese',
    'tuvieses',
    'tuvi\xe9semos',
    'tuvieseis',
    'tuviesen',
    'teniendo',
    'tenido',
    'tenida',
    'tenidos',
    'tenidas',
    'tened'
  ],
  fi: [
    'alla',
    'ansiosta',
    'ehk\xe4',
    'ei',
    'enemm\xe4n',
    'ennen',
    'etessa',
    'f',
    'haikki',
    'he',
    'hitaasti',
    'hoikein',
    'hyvin',
    'h\xe4n',
    'ilman',
    'ja',
    'jos',
    'j\xe4lkeen',
    'kanssa',
    'kaukana',
    'kenties',
    'keskell\xe4',
    'kesken',
    'koskaan',
    'kuinkan',
    'kukka',
    'kylliksi',
    'kyll\xe4',
    'liian',
    'lla',
    'lla',
    'luona',
    'l\xe4hell\xe4',
    'l\xe4pi',
    'me',
    'miksi',
    'mik\xe4',
    'milloin',
    'milloinkan',
    'min\xe4',
    'miss\xe4',
    'miten',
    'nopeasti',
    'nyt',
    'oikea',
    'oikealla',
    'paljon',
    'siell\xe4',
    'sin\xe4',
    'ssa',
    'sta',
    'suoraan',
    'tai',
    'takana',
    'takia',
    'tarpeeksi',
    'te',
    't\xe4ss\xe4',
    'ulkopuolella',
    'vahemm\xe4n',
    'vasen',
    'vasenmalla',
    'vastan',
    'viel\xe4',
    'vieress\xe4',
    'v\xe4h\xe4n',
    'yhdess\xe4',
    'yl\xf6s'
  ],
  fr: [
    'au',
    'aux',
    'avec',
    'ce',
    'ces',
    'dans',
    'de',
    'des',
    'du',
    'elle',
    'en',
    'et',
    'eux',
    'il',
    'je',
    'la',
    'le',
    'leur',
    'lui',
    'ma',
    'mais',
    'me',
    'm\xeame',
    'mes',
    'moi',
    'mon',
    'ne',
    'nos',
    'notre',
    'nous',
    'on',
    'ou',
    'par',
    'pas',
    'pour',
    'qu',
    'que',
    'qui',
    'sa',
    'se',
    'ses',
    'son',
    'sur',
    'ta',
    'te',
    'tes',
    'toi',
    'ton',
    'tu',
    'un',
    'une',
    'vos',
    'votre',
    'vous',
    'c',
    'd',
    'j',
    'l',
    '\xe0',
    'm',
    'n',
    's',
    't',
    'y',
    '\xe9t\xe9',
    '\xe9t\xe9e',
    '\xe9t\xe9es',
    '\xe9t\xe9s',
    '\xe9tant',
    'suis',
    'es',
    'est',
    'sommes',
    '\xeates',
    'sont',
    'serai',
    'seras',
    'sera',
    'serons',
    'serez',
    'seront',
    'serais',
    'serait',
    'serions',
    'seriez',
    'seraient',
    '\xe9tais',
    '\xe9tait',
    '\xe9tions',
    '\xe9tiez',
    '\xe9taient',
    'fus',
    'fut',
    'f\xfbmes',
    'f\xfbtes',
    'furent',
    'sois',
    'soit',
    'soyons',
    'soyez',
    'soient',
    'fusse',
    'fusses',
    'f\xfbt',
    'fussions',
    'fussiez',
    'fussent',
    'ayant',
    'eu',
    'eue',
    'eues',
    'eus',
    'ai',
    'as',
    'avons',
    'avez',
    'ont',
    'aurai',
    'auras',
    'aura',
    'aurons',
    'aurez',
    'auront',
    'aurais',
    'aurait',
    'aurions',
    'auriez',
    'auraient',
    'avais',
    'avait',
    'avions',
    'aviez',
    'avaient',
    'eut',
    'e\xfbmes',
    'e\xfbtes',
    'eurent',
    'aie',
    'aies',
    'ait',
    'ayons',
    'ayez',
    'aient',
    'eusse',
    'eusses',
    'e\xfbt',
    'eussions',
    'eussiez',
    'eussent',
    'ceci',
    'cel\xe0',
    'cet',
    'cette',
    'ici',
    'ils',
    'les',
    'leurs',
    'quel',
    'quels',
    'quelle',
    'quelles',
    'sans',
    'soi'
  ],
  hu: [
    'a',
    '\xe1',
    'ahogy',
    'ahol',
    'aki',
    'akik',
    'akkor',
    'alatt',
    '\xe1ltal',
    '\xe1ltal\xe1ban',
    'amely',
    'amelyek',
    'amelyekben',
    'amelyeket',
    'amelyet',
    'amelynek',
    'ami',
    'amit',
    'amolyan',
    'amp',
    'am\xedg',
    'amikor',
    '\xe1t',
    'abban',
    'ahhoz',
    'annak',
    'arra',
    'arr\xf3l',
    'az',
    'azok',
    'azon',
    'azt',
    'azzal',
    'az\xe9rt',
    'azt\xe1n',
    'azut\xe1n',
    'azonban',
    'b',
    'b\xe1r',
    'be',
    'bel\xfcl',
    'benne',
    'c',
    'cikk',
    'cikkek',
    'cikkeket',
    'csak',
    'd',
    'de',
    'e',
    '\xe9',
    'eddig',
    'eg\xe9sz',
    'egy',
    'egyes',
    'egyetlen',
    'egy\xe9b',
    'egyik',
    'egyre',
    'ekkor',
    'el',
    'el\xe9g',
    'ellen',
    'el\u0151',
    'el\u0151sz\xf6r',
    'el\u0151tt',
    'els\u0151',
    '\xe9n',
    '\xe9ppen',
    'ebben',
    'ehhez',
    'emilyen',
    'ennek',
    'erre',
    'ez',
    'ezt',
    'ezek',
    'ezen',
    'ezzel',
    'ez\xe9rt',
    '\xe9s',
    'f',
    'fel',
    'fel\xe9',
    'g',
    'h',
    'hanem',
    'hiszen',
    'hogy',
    'hogyan',
    'i',
    '\xed',
    'igen',
    '\xedgy',
    'illetve',
    'ill.',
    'ill',
    'ilyen',
    'ilyenkor',
    'is',
    'ison',
    'ism\xe9t',
    'itt',
    'j',
    'j\xf3',
    'j\xf3l',
    'jobban',
    'k',
    'kell',
    'kellett',
    'kereszt\xfcl',
    'keress\xfcnk',
    'ki',
    'k\xedv\xfcl',
    'k\xf6z\xf6tt',
    'k\xf6z\xfcl',
    'l',
    'legal\xe1bb',
    'lehet',
    'lehetett',
    'legyen',
    'lenne',
    'lenni',
    'lesz',
    'lett',
    'm',
    'maga',
    'mag\xe1t',
    'majd',
    'majd',
    'm\xe1r',
    'm\xe1s',
    'm\xe1sik',
    'meg',
    'm\xe9g',
    'mellett',
    'mert',
    'mely',
    'melyek',
    'mi',
    'mit',
    'm\xedg',
    'mi\xe9rt',
    'milyen',
    'mikor',
    'minden',
    'mindent',
    'mindenki',
    'mindig',
    'mint',
    'mintha',
    'mivel',
    'most',
    'n',
    'nagy',
    'nagyobb',
    'nagyon',
    'ne',
    'n\xe9ha',
    'nekem',
    'neki',
    'nem',
    'n\xe9h\xe1ny',
    'n\xe9lk\xfcl',
    'nincs',
    'o',
    '\xf3',
    'olyan',
    'ott',
    '\xf6ssze',
    '\xf6',
    '\u0151',
    '\u0151k',
    '\u0151ket',
    'p',
    'pedig',
    'persze',
    'q',
    'r',
    'r\xe1',
    's',
    'saj\xe1t',
    'sem',
    'semmi',
    'sok',
    'sokat',
    'sokkal',
    'sz',
    'sz\xe1m\xe1ra',
    'szemben',
    'szerint',
    'szinte',
    't',
    'tal\xe1n',
    'teh\xe1t',
    'teljes',
    'tov\xe1bb',
    'tov\xe1bb\xe1',
    't\xf6bb',
    'u',
    '\xfa',
    '\xfagy',
    'ugyanis',
    '\xfaj',
    '\xfajabb',
    '\xfajra',
    'ut\xe1n',
    'ut\xe1na',
    'utols\xf3',
    '\xfc',
    '\u0171',
    'v',
    'vagy',
    'vagyis',
    'valaki',
    'valamely',
    'valami',
    'valamint',
    'val\xf3',
    'vagyok',
    'van',
    'vannak',
    'volt',
    'voltam',
    'voltak',
    'voltunk',
    'vissza',
    'vele',
    'viszont',
    'volna',
    'sz\xe1molnak',
    'sz\xf3lnak',
    'sz\xf3l',
    'w',
    'x',
    'y',
    'z',
    'zs',
    'a',
    'ahogy',
    'ahol',
    'aki',
    'akkor',
    'alatt',
    '\xe1ltal\xe1ban',
    '\xe1ltal',
    'amely',
    'am\xedg',
    'amikor',
    'ami',
    'amolyan',
    'arra',
    '\xe1t',
    'az',
    'az\xe9rt',
    'azonban',
    'azon',
    'azt\xe1n',
    'azt',
    'azut\xe1n',
    'azzal',
    'b\xe1r',
    'be',
    'bel\xfcl',
    'benne',
    'cikk',
    'csak',
    'de',
    'eddig',
    'eg\xe9sz',
    'egy',
    'egy\xe9b',
    'egyes',
    'egyetlen',
    'egyik',
    'egyre',
    'ekkor',
    'el',
    'el\xe9g',
    'ellen',
    'el\u0151',
    'el\u0151sz\xf6r',
    'el\u0151tt',
    'els\u0151',
    'emilyen',
    '\xe9n',
    '\xe9ppen',
    'erre',
    '\xe9s',
    'e',
    'ez',
    'ezen',
    'ez\xe9rt',
    'ezzel',
    'fel',
    'fel\xe9',
    'hanem',
    'hiszen',
    'hogy',
    'hogyan',
    'igen',
    '\xedgy',
    'ill.',
    'illetve',
    'ill',
    'ilyen',
    'ilyenkor',
    'ism\xe9t',
    'ison',
    'itt',
    'j\xf3',
    'jobban',
    'j\xf3l',
    'kell',
    'keres',
    'kereszt\xfcl',
    'ki',
    'k\xedv\xfcl',
    'k\xf6z\xf6tt',
    'k\xf6z\xfcl',
    'legal\xe1bb',
    'legyen',
    'lehet',
    'lenni',
    'lett',
    'maga',
    'maga',
    'majd',
    'm\xe1r',
    'm\xe1s',
    'm\xe1sik',
    'm\xe9g',
    'meg',
    'mellett',
    'mely',
    'mert',
    'mi\xe9rt',
    'm\xedg',
    'mikor',
    'milyen',
    'minden',
    'mindenki',
    'mindig',
    'mi',
    'mint',
    'mintha',
    'mivel',
    'most',
    'nagy',
    'nagyobb',
    'nagyon',
    'ne',
    'n\xe9ha',
    'n\xe9h\xe1ny',
    'neki',
    'n\xe9lk\xfcl',
    'nem',
    'nincs',
    '\u0151k',
    'olyan',
    '\u0151',
    '\xf6ssze',
    'ott',
    'pedig',
    'persze',
    'r\xe1',
    'saj\xe1t',
    's',
    'sem',
    'semmi',
    'sokkal',
    'sok',
    'sz\xe1m\xe1ra',
    'sz\xe1mol',
    'szemben',
    'szerint',
    'szinte',
    'sz\xf3l',
    'tal\xe1n',
    'teh\xe1t',
    'teljes',
    'tov\xe1bb\xe1',
    'tov\xe1bb',
    '\xfagy',
    'ugyanis',
    '\xfaj',
    '\xfajabb',
    '\xfajra',
    'ut\xe1na',
    'ut\xe1n',
    'utols\xf3',
    'vagy',
    'vagyis',
    'valaki',
    'valamely',
    'valami',
    'valamint',
    'val\xf3',
    'van',
    'vissza',
    'viszont',
    'volt'
  ],
  id: [
    'a',
    'abad',
    'acara',
    'aceh',
    'ada',
    'adalah',
    'adanya',
    'adapun',
    'agak',
    'agaknya',
    'agama',
    'agar',
    'agustus',
    'air',
    'akan',
    'akankah',
    'akhir',
    'akhiri',
    'akhirnya',
    'akibat',
    'aku',
    'akulah',
    'alam',
    'album',
    'amat',
    'amatlah',
    'amerika',
    'anak',
    'and',
    'anda',
    'andalah',
    'anggota',
    'antar',
    'antara',
    'antarabangsa',
    'antaranya',
    'apa',
    'apaan',
    'apabila',
    'apakah',
    'apalagi',
    'apatah',
    'api',
    'april',
    'artikel',
    'artinya',
    'as',
    'asal',
    'asalkan',
    'asas',
    'asia',
    'asing',
    'atas',
    'atau',
    'ataukah',
    'ataupun',
    'australia',
    'awal',
    'awalnya',
    'awam',
    'b',
    'badan',
    'bagai',
    'bagaikan',
    'bagaimana',
    'bagaimanakah',
    'bagaimanapun',
    'bagainamakah',
    'bagi',
    'bagian',
    'bahagian',
    'bahan',
    'baharu',
    'bahasa',
    'bahawa',
    'bahkan',
    'bahwa',
    'bahwasannya',
    'bahwasanya',
    'baik',
    'baiknya',
    'bakal',
    'bakalan',
    'balik',
    'bandar',
    'bangsa',
    'bank',
    'banyak',
    'bapak',
    'barang',
    'barangan',
    'barat',
    'baru',
    'baru-baru',
    'bawah',
    'beberapa',
    'begini',
    'beginian',
    'beginikah',
    'beginilah',
    'begitu',
    'begitukah',
    'begitulah',
    'begitupun',
    'bekas',
    'bekerja',
    'belakang',
    'belakangan',
    'belanda',
    'beli',
    'beliau',
    'belum',
    'belumlah',
    'benar',
    'benarkah',
    'benarlah',
    'bentuk',
    'berada',
    'berakhir',
    'berakhirlah',
    'berakhirnya',
    'berapa',
    'berapakah',
    'berapalah',
    'berapapun',
    'berarti',
    'berasal',
    'berat',
    'berawal',
    'berbagai',
    'berbanding',
    'berbeda',
    'berdasarkan',
    'berdatangan',
    'berharap',
    'berhasil',
    'beri',
    'berikan',
    'berikut',
    'berikutan',
    'berikutnya',
    'berita',
    'berjalan',
    'berjaya',
    'berjumlah',
    'berkaitan',
    'berkali',
    'berkali-kali',
    'berkata',
    'berkehendak',
    'berkeinginan',
    'berkenaan',
    'berlainan',
    'berlaku',
    'berlalu',
    'berlangsung',
    'berlebihan',
    'bermacam',
    'bermacam-macam',
    'bermain',
    'bermaksud',
    'bermula',
    'bernama',
    'bernilai',
    'bersama',
    'bersama-sama',
    'bersiap',
    'bertanya',
    'bertemu',
    'berturut',
    'bertutur',
    'berubah',
    'berujar',
    'berupa',
    'besar',
    'besok',
    'betul',
    'betulkah',
    'bhd',
    'biasa',
    'biasanya',
    'bidang',
    'bila',
    'bilakah',
    'bilion',
    'bintang',
    'bisa',
    'bisakah',
    'blog',
    'bn',
    'bola',
    'boleh',
    'bolehkah',
    'bolehlah',
    'buat',
    'bukan',
    'bukankah',
    'bukanlah',
    'bukannya',
    'buku',
    'bulan',
    'bumi',
    'bung',
    'bursa',
    'cadangan',
    'cara',
    'caranya',
    'catch',
    'china',
    'click',
    'code',
    'copyright',
    'cukup',
    'cukupkah',
    'cukuplah',
    'cuma',
    'daerah',
    'dagangan',
    'dahulu',
    'dalam',
    'dan',
    'dana',
    'dapat',
    'dari',
    'daripada',
    'dasar',
    'data',
    'datang',
    'datuk',
    'dekat',
    'demi',
    'demikian',
    'demikianlah',
    'dengan',
    'depan',
    'derivatives',
    'desa',
    'desember',
    'detik',
    'dewan',
    'di',
    'dia',
    'diadakan',
    'diakhiri',
    'diakhirinya',
    'dialah',
    'dianggap',
    'diantara',
    'diantaranya',
    'diberi',
    'diberikan',
    'diberikannya',
    'dibuat',
    'dibuatnya',
    'dibuka',
    'dicatatkan',
    'didapat',
    'didatangkan',
    'didirikan',
    'diduga',
    'digunakan',
    'diibaratkan',
    'diibaratkannya',
    'diingat',
    'diingatkan',
    'diinginkan',
    'dijangka',
    'dijawab',
    'dijelaskan',
    'dijelaskannya',
    'dikarenakan',
    'dikatakan',
    'dikatakannya',
    'dikenal',
    'dikerjakan',
    'diketahui',
    'diketahuinya',
    'dikira',
    'dilakukan',
    'dilalui',
    'dilihat',
    'dimaksud',
    'dimaksudkan',
    'dimaksudkannya',
    'dimaksudnya',
    'dimana',
    'diminta',
    'dimintai',
    'dimisalkan',
    'dimulai',
    'dimulailah',
    'dimulainya',
    'dimungkinkan',
    'dini',
    'diniagakan',
    'dipastikan',
    'diperbuat',
    'diperbuatnya',
    'dipergunakan',
    'diperkirakan',
    'diperlihatkan',
    'diperlukan',
    'diperlukannya',
    'dipersoalkan',
    'dipertanyakan',
    'dipunyai',
    'diri',
    'dirilis',
    'dirinya',
    'dis',
    'disampaikan',
    'disebut',
    'disebutkan',
    'disebutkannya',
    'disember',
    'disini',
    'disinilah',
    'distrik',
    'ditambahkan',
    'ditandaskan',
    'ditanya',
    'ditanyai',
    'ditanyakan',
    'ditegaskan',
    'ditemukan',
    'ditujukan',
    'ditunjuk',
    'ditunjuki',
    'ditunjukkan',
    'ditunjukkannya',
    'ditunjuknya',
    'ditutup',
    'dituturkan',
    'dituturkannya',
    'diucapkan',
    'diucapkannya',
    'diungkapkan',
    'document.write',
    'dolar',
    'dong',
    'dr',
    'dua',
    'dulu',
    'dunia',
    'effective',
    'ekonomi',
    'eksekutif',
    'eksport',
    'empat',
    'enam',
    'enggak',
    'enggaknya',
    'entah',
    'entahlah',
    'era',
    'eropa',
    'err',
    'faedah',
    'feb',
    'film',
    'gat',
    'gedung',
    'gelar',
    'gettracker',
    'global',
    'grup',
    'guna',
    'gunakan',
    'gunung',
    'hadap',
    'hadapan',
    'hal',
    'hampir',
    'hanya',
    'hanyalah',
    'harga',
    'hari',
    'harian',
    'harus',
    'haruslah',
    'harusnya',
    'hasil',
    'hendak',
    'hendaklah',
    'hendaknya',
    'hidup',
    'hingga',
    'https',
    'hubungan',
    'hukum',
    'hutan',
    'i',
    'ia',
    'iaitu',
    'ialah',
    'ibarat',
    'ibaratkan',
    'ibaratnya',
    'ibu',
    'ii',
    'iklan',
    'ikut',
    'ilmu',
    'indeks',
    'india',
    'indonesia',
    'industri',
    'informasi',
    'ingat',
    'inggris',
    'ingin',
    'inginkah',
    'inginkan',
    'ini',
    'inikah',
    'inilah',
    'internasional',
    'islam',
    'isnin',
    'isu',
    'italia',
    'itu',
    'itukah',
    'itulah',
    'jabatan',
    'jadi',
    'jadilah',
    'jadinya',
    'jakarta',
    'jalan',
    'jalur',
    'jaman',
    'jan',
    'jangan',
    'jangankan',
    'janganlah',
    'januari',
    'jauh',
    'jawa',
    'jawab',
    'jawaban',
    'jawabnya',
    'jawatan',
    'jawatankuasa',
    'jelas',
    'jelaskan',
    'jelaslah',
    'jelasnya',
    'jenis',
    'jepang',
    'jepun',
    'jerman',
    'jika',
    'jikalau',
    'jiwa',
    'jual',
    'jualan',
    'juga',
    'julai',
    'jumaat',
    'jumat',
    'jumlah',
    'jumlahnya',
    'jun',
    'juni',
    'justru',
    'juta',
    'kabar',
    'kabupaten',
    'kadar',
    'kala',
    'kalangan',
    'kalau',
    'kalaulah',
    'kalaupun',
    'kali',
    'kalian',
    'kalimantan',
    'kami',
    'kamilah',
    'kamis',
    'kamu',
    'kamulah',
    'kan',
    'kantor',
    'kapal',
    'kapan',
    'kapankah',
    'kapanpun',
    'karena',
    'karenanya',
    'karya',
    'kasus',
    'kata',
    'katakan',
    'katakanlah',
    'katanya',
    'kaunter',
    'kawasan',
    'ke',
    'keadaan',
    'kebetulan',
    'kebutuhan',
    'kecamatan',
    'kecil',
    'kedua',
    'kedua-dua',
    'keduanya',
    'kedudukan',
    'kegiatan',
    'kehidupan',
    'keinginan',
    'kejadian',
    'kekal',
    'kelamaan',
    'kelihatan',
    'kelihatannya',
    'kelima',
    'kelompok',
    'keluar',
    'keluarga',
    'kelurahan',
    'kembali',
    'kementerian',
    'kemudahan',
    'kemudian',
    'kemungkinan',
    'kemungkinannya',
    'kenaikan',
    'kenapa',
    'kenyataan',
    'kepada',
    'kepadanya',
    'kepala',
    'kepentingan',
    'keputusan',
    'kerajaan',
    'kerana',
    'kereta',
    'kerja',
    'kerjasama',
    'kes',
    'kesampaian',
    'keselamatan',
    'keseluruhan',
    'keseluruhannya',
    'kesempatan',
    'kesihatan',
    'keterangan',
    'keterlaluan',
    'ketiga',
    'ketika',
    'ketua',
    'keuntungan',
    'kewangan',
    'khamis',
    'khusus',
    'khususnya',
    'kini',
    'kinilah',
    'kira',
    'kira-kira',
    'kiranya',
    'kita',
    'kitalah',
    'klci',
    'klibor',
    'klik',
    'km',
    'kok',
    'komentar',
    'kompas',
    'komposit',
    'kondisi',
    'kontrak',
    'korban',
    'korea',
    'kos',
    'kota',
    'kuala',
    'kuasa',
    'kukuh',
    'kumpulan',
    'kurang',
    'kurangnya',
    'lagi',
    'lagian',
    'lagu',
    'lah',
    'lain',
    'lainnya',
    'laku',
    'lalu',
    'lama',
    'lamanya',
    'langkah',
    'langsung',
    'lanjut',
    'lanjutnya',
    'laporan',
    'laut',
    'lebih',
    'lembaga',
    'lepas',
    'lewat',
    'lima',
    'lingkungan',
    'login',
    'lokasi',
    'lot',
    'luar',
    'luas',
    'lumpur',
    'mac',
    'macam',
    'mahkamah',
    'mahu',
    'majlis',
    'maka',
    'makanan',
    'makanya',
    'makin',
    'maklumat',
    'malah',
    'malahan',
    'malam',
    'malaysia',
    'mampu',
    'mampukah',
    'mana',
    'manakala',
    'manalagi',
    'mantan',
    'manusia',
    'masa',
    'masalah',
    'masalahnya',
    'masih',
    'masihkah',
    'masing',
    'masing-masing',
    'masuk',
    'masyarakat',
    'mata',
    'mau',
    'maupun',
    'measure',
    'media',
    'mei',
    'melainkan',
    'melakukan',
    'melalui',
    'melawan',
    'melihat',
    'melihatnya',
    'memandangkan',
    'memang',
    'memastikan',
    'membantu',
    'membawa',
    'memberi',
    'memberikan',
    'membolehkan',
    'membuat',
    'memerlukan',
    'memihak',
    'memiliki',
    'meminta',
    'memintakan',
    'memisalkan',
    'memperbuat',
    'mempergunakan',
    'memperkirakan',
    'memperlihatkan',
    'mempersiapkan',
    'mempersoalkan',
    'mempertanyakan',
    'mempunyai',
    'memulai',
    'memungkinkan',
    'menaiki',
    'menambah',
    'menambahkan',
    'menandaskan',
    'menanti',
    'menantikan',
    'menanya',
    'menanyai',
    'menanyakan',
    'menarik',
    'menawarkan',
    'mencapai',
    'mencari',
    'mencatatkan',
    'mendapat',
    'mendapatkan',
    'mendatang',
    'mendatangi',
    'mendatangkan',
    'menegaskan',
    'menerima',
    'menerusi',
    'mengadakan',
    'mengakhiri',
    'mengaku',
    'mengalami',
    'mengambil',
    'mengapa',
    'mengatakan',
    'mengatakannya',
    'mengenai',
    'mengerjakan',
    'mengetahui',
    'menggalakkan',
    'menggunakan',
    'menghadapi',
    'menghendaki',
    'mengibaratkan',
    'mengibaratkannya',
    'mengikut',
    'mengingat',
    'mengingatkan',
    'menginginkan',
    'mengira',
    'mengucapkan',
    'mengucapkannya',
    'mengumumkan',
    'mengungkapkan',
    'mengurangkan',
    'meninggal',
    'meningkat',
    'meningkatkan',
    'menjadi',
    'menjalani',
    'menjawab',
    'menjelang',
    'menjelaskan',
    'menokok',
    'menteri',
    'menuju',
    'menunjuk',
    'menunjuki',
    'menunjukkan',
    'menunjuknya',
    'menurut',
    'menuturkan',
    'menyaksikan',
    'menyampaikan',
    'menyangkut',
    'menyatakan',
    'menyebabkan',
    'menyebutkan',
    'menyediakan',
    'menyeluruh',
    'menyiapkan',
    'merasa',
    'mereka',
    'merekalah',
    'merosot',
    'merupakan',
    'meski',
    'meskipun',
    'mesyuarat',
    'metrotv',
    'meyakini',
    'meyakinkan',
    'milik',
    'militer',
    'minat',
    'minggu',
    'minta',
    'minyak',
    'mirip',
    'misal',
    'misalkan',
    'misalnya',
    'mobil',
    'modal',
    'mohd',
    'mudah',
    'mula',
    'mulai',
    'mulailah',
    'mulanya',
    'muncul',
    'mungkin',
    'mungkinkah',
    'musik',
    'musim',
    'nah',
    'naik',
    'nama',
    'namun',
    'nanti',
    'nantinya',
    'nasional',
    'negara',
    'negara-negara',
    'negeri',
    'new',
    'niaga',
    'nilai',
    'nomor',
    'noun',
    'nov',
    'november',
    'numeral',
    'numeralia',
    'nya',
    'nyaris',
    'nyatanya',
    'of',
    'ogos',
    'okt',
    'oktober',
    'olah',
    'oleh',
    'olehnya',
    'operasi',
    'orang',
    'organisasi',
    'pada',
    'padahal',
    'padanya',
    'pagetracker',
    'pagi',
    'pak',
    'paling',
    'pameran',
    'panjang',
    'pantas',
    'papan',
    'para',
    'paras',
    'parlimen',
    'partai',
    'parti',
    'particle',
    'pasar',
    'pasaran',
    'password',
    'pasti',
    'pastilah',
    'pasukan',
    'paticle',
    'pegawai',
    'pejabat',
    'pekan',
    'pekerja',
    'pelabur',
    'pelaburan',
    'pelancongan',
    'pelanggan',
    'pelbagai',
    'peluang',
    'pemain',
    'pembangunan',
    'pemberita',
    'pembinaan',
    'pemerintah',
    'pemerintahan',
    'pemimpin',
    'pendapatan',
    'pendidikan',
    'penduduk',
    'penerbangan',
    'pengarah',
    'pengeluaran',
    'pengerusi',
    'pengguna',
    'penggunaan',
    'pengurusan',
    'peniaga',
    'peningkatan',
    'penting',
    'pentingnya',
    'per',
    'perancis',
    'perang',
    'peratus',
    'percuma',
    'perdagangan',
    'perdana',
    'peringkat',
    'perjanjian',
    'perkara',
    'perkhidmatan',
    'perladangan',
    'perlu',
    'perlukah',
    'perlunya',
    'permintaan',
    'pernah',
    'perniagaan',
    'persekutuan',
    'persen',
    'persidangan',
    'persoalan',
    'pertama',
    'pertandingan',
    'pertanyaan',
    'pertanyakan',
    'pertubuhan',
    'pertumbuhan',
    'perubahan',
    'perusahaan',
    'pesawat',
    'peserta',
    'petang',
    'pihak',
    'pihaknya',
    'pilihan',
    'pinjaman',
    'polis',
    'polisi',
    'politik',
    'pos',
    'posisi',
    'presiden',
    'prestasi',
    'produk',
    'program',
    'projek',
    'pronomia',
    'pronoun',
    'proses',
    'proton',
    'provinsi',
    'pt',
    'pubdate',
    'pukul',
    'pula',
    'pulau',
    'pun',
    'punya',
    'pusat',
    'rabu',
    'radio',
    'raja',
    'rakan',
    'rakyat',
    'ramai',
    'rantau',
    'rasa',
    'rasanya',
    'rata',
    'raya',
    'rendah',
    'republik',
    'resmi',
    'ribu',
    'ringgit',
    'root',
    'ruang',
    'rumah',
    'rupa',
    'rupanya',
    'saat',
    'saatnya',
    'sabah',
    'sabtu',
    'sahaja',
    'saham',
    'saja',
    'sajalah',
    'sakit',
    'salah',
    'saling',
    'sama',
    'sama-sama',
    'sambil',
    'sampai',
    'sampaikan',
    'sana',
    'sangat',
    'sangatlah',
    'sarawak',
    'satu',
    'sawit',
    'saya',
    'sayalah',
    'sdn',
    'se',
    'sebab',
    'sebabnya',
    'sebagai',
    'sebagaimana',
    'sebagainya',
    'sebagian',
    'sebahagian',
    'sebaik',
    'sebaiknya',
    'sebaliknya',
    'sebanyak',
    'sebarang',
    'sebegini',
    'sebegitu',
    'sebelah',
    'sebelum',
    'sebelumnya',
    'sebenarnya',
    'seberapa',
    'sebesar',
    'sebetulnya',
    'sebisanya',
    'sebuah',
    'sebut',
    'sebutlah',
    'sebutnya',
    'secara',
    'secukupnya',
    'sedang',
    'sedangkan',
    'sedemikian',
    'sedikit',
    'sedikitnya',
    'seenaknya',
    'segala',
    'segalanya',
    'segera',
    'segi',
    'seharusnya',
    'sehingga',
    'seingat',
    'sejak',
    'sejarah',
    'sejauh',
    'sejenak',
    'sejumlah',
    'sekadar',
    'sekadarnya',
    'sekali',
    'sekali-kali',
    'sekalian',
    'sekaligus',
    'sekalipun',
    'sekarang',
    'sekaranglah',
    'sekecil',
    'seketika',
    'sekiranya',
    'sekitar',
    'sekitarnya',
    'sekolah',
    'sektor',
    'sekurang',
    'sekurangnya',
    'sekuriti',
    'sela',
    'selagi',
    'selain',
    'selaku',
    'selalu',
    'selama',
    'selama-lamanya',
    'selamanya',
    'selanjutnya',
    'selasa',
    'selatan',
    'selepas',
    'seluruh',
    'seluruhnya',
    'semacam',
    'semakin',
    'semalam',
    'semampu',
    'semampunya',
    'semasa',
    'semasih',
    'semata',
    'semaunya',
    'sementara',
    'semisal',
    'semisalnya',
    'sempat',
    'semua',
    'semuanya',
    'semula',
    'sen',
    'sendiri',
    'sendirian',
    'sendirinya',
    'senin',
    'seolah',
    'seolah-olah',
    'seorang',
    'sepak',
    'sepanjang',
    'sepantasnya',
    'sepantasnyalah',
    'seperlunya',
    'seperti',
    'sepertinya',
    'sepihak',
    'sept',
    'september',
    'serangan',
    'serantau',
    'seri',
    'serikat',
    'sering',
    'seringnya',
    'serta',
    'serupa',
    'sesaat',
    'sesama',
    'sesampai',
    'sesegera',
    'sesekali',
    'seseorang',
    'sesi',
    'sesuai',
    'sesuatu',
    'sesuatunya',
    'sesudah',
    'sesudahnya',
    'setelah',
    'setempat',
    'setengah',
    'seterusnya',
    'setiap',
    'setiausaha',
    'setiba',
    'setibanya',
    'setidak',
    'setidaknya',
    'setinggi',
    'seusai',
    'sewaktu',
    'siap',
    'siapa',
    'siapakah',
    'siapapun',
    'siaran',
    'sidang',
    'singapura',
    'sini',
    'sinilah',
    'sistem',
    'soal',
    'soalnya',
    'sokongan',
    'sri',
    'stasiun',
    'suara',
    'suatu',
    'sudah',
    'sudahkah',
    'sudahlah',
    'sukan',
    'suku',
    'sumber',
    'sungai',
    'supaya',
    'surat',
    'susut',
    'syarikat',
    'syed',
    'tadi',
    'tadinya',
    'tahap',
    'tahu',
    'tahun',
    'tak',
    'tama',
    'tambah',
    'tambahnya',
    'tampak',
    'tampaknya',
    'tampil',
    'tan',
    'tanah',
    'tandas',
    'tandasnya',
    'tanggal',
    'tanpa',
    'tanya',
    'tanyakan',
    'tanyanya',
    'tapi',
    'tawaran',
    'tegas',
    'tegasnya',
    'teknologi',
    'telah',
    'televisi',
    'teman',
    'tempat',
    'tempatan',
    'tempo',
    'tempoh',
    'tenaga',
    'tengah',
    'tentang',
    'tentara',
    'tentu',
    'tentulah',
    'tentunya',
    'tepat',
    'terakhir',
    'terasa',
    'terbaik',
    'terbang',
    'terbanyak',
    'terbesar',
    'terbuka',
    'terdahulu',
    'terdapat',
    'terdiri',
    'terhadap',
    'terhadapnya',
    'teringat',
    'terjadi',
    'terjadilah',
    'terjadinya',
    'terkait',
    'terkenal',
    'terkira',
    'terlalu',
    'terlebih',
    'terletak',
    'terlihat',
    'termasuk',
    'ternyata',
    'tersampaikan',
    'tersebut',
    'tersebutlah',
    'tertentu',
    'tertuju',
    'terus',
    'terutama',
    'testimoni',
    'testimony',
    'tetap',
    'tetapi',
    'the',
    'tiada',
    'tiap',
    'tiba',
    'tidak',
    'tidakkah',
    'tidaklah',
    'tidaknya',
    'tiga',
    'tim',
    'timbalan',
    'timur',
    'tindakan',
    'tinggal',
    'tinggi',
    'tingkat',
    'toh',
    'tokoh',
    'try',
    'tun',
    'tunai',
    'tunjuk',
    'turun',
    'turut',
    'tutur',
    'tuturnya',
    'tv',
    'uang',
    'ucap',
    'ucapnya',
    'udara',
    'ujar',
    'ujarnya',
    'umum',
    'umumnya',
    'unescape',
    'ungkap',
    'ungkapnya',
    'unit',
    'universitas',
    'untuk',
    'untung',
    'upaya',
    'urus',
    'usah',
    'usaha',
    'usai',
    'user',
    'utama',
    'utara',
    'var',
    'versi',
    'waduh',
    'wah',
    'wahai',
    'wakil',
    'waktu',
    'waktunya',
    'walau',
    'walaupun',
    'wang',
    'wanita',
    'warga',
    'warta',
    'wib',
    'wilayah',
    'wong',
    'word',
    'ya',
    'yaitu',
    'yakin',
    'yakni',
    'yang',
    'zaman'
  ],
  it: [
    'ad',
    'al',
    'allo',
    'ai',
    'agli',
    'all',
    'agl',
    'alla',
    'alle',
    'con',
    'col',
    'coi',
    'da',
    'dal',
    'dallo',
    'dai',
    'dagli',
    'dall',
    'dagl',
    'dalla',
    'dalle',
    'di',
    'del',
    'dello',
    'dei',
    'degli',
    'dell',
    'degl',
    'della',
    'delle',
    'in',
    'nel',
    'nello',
    'nei',
    'negli',
    'nell',
    'negl',
    'nella',
    'nelle',
    'su',
    'sul',
    'sullo',
    'sui',
    'sugli',
    'sull',
    'sugl',
    'sulla',
    'sulle',
    'per',
    'tra',
    'contro',
    'io',
    'tu',
    'lui',
    'lei',
    'noi',
    'voi',
    'loro',
    'mio',
    'mia',
    'miei',
    'mie',
    'tuo',
    'tua',
    'tuoi',
    'tue',
    'suo',
    'sua',
    'suoi',
    'sue',
    'nostro',
    'nostra',
    'nostri',
    'nostre',
    'vostro',
    'vostra',
    'vostri',
    'vostre',
    'mi',
    'ti',
    'ci',
    'vi',
    'lo',
    'la',
    'li',
    'le',
    'gli',
    'ne',
    'il',
    'un',
    'uno',
    'una',
    'ma',
    'ed',
    'se',
    'perch\xe8',
    'perch\xe9',
    'perche',
    'anche',
    'come',
    'dov',
    'dove',
    'che',
    'chi',
    'cui',
    'non',
    'pi\xf9',
    'piu',
    'quale',
    'quanto',
    'quanti',
    'quanta',
    'quante',
    'quello',
    'quelli',
    'quella',
    'quelle',
    'questo',
    'questi',
    'questa',
    'queste',
    'si',
    'tutto',
    'tutti',
    'a',
    'c',
    'e',
    'i',
    'l',
    'o',
    'ho',
    'hai',
    'ha',
    'abbiamo',
    'avete',
    'hanno',
    'abbia',
    'abbiate',
    'abbiano',
    'avr\xf2',
    'avro',
    'avrai',
    'avr\xe0',
    'avra',
    'avremo',
    'avrete',
    'avranno',
    'avrei',
    'avresti',
    'avrebbe',
    'avremmo',
    'avreste',
    'avrebbero',
    'avevo',
    'avevi',
    'aveva',
    'avevamo',
    'avevate',
    'avevano',
    'ebbi',
    'avesti',
    'ebbe',
    'avemmo',
    'aveste',
    'ebbero',
    'avessi',
    'avesse',
    'avessimo',
    'avessero',
    'avendo',
    'avuto',
    'avuta',
    'avuti',
    'avute',
    'sono',
    'sei',
    '\xe8',
    '\xe9',
    'e',
    'siamo',
    'siete',
    'sia',
    'siate',
    'siano',
    'sar\xe0',
    'sarai',
    'sar\xf2',
    'saro',
    'saremo',
    'sarete',
    'saranno',
    'sarei',
    'saresti',
    'sarebbe',
    'saremmo',
    'sareste',
    'sarebbero',
    'ero',
    'eri',
    'era',
    'eravamo',
    'eravate',
    'erano',
    'fui',
    'fosti',
    'fu',
    'fummo',
    'foste',
    'furono',
    'fossi',
    'fosse',
    'fossimo',
    'fossero',
    'essendo',
    'faccio',
    'fai',
    'facciamo',
    'fanno',
    'faccia',
    'facciate',
    'facciano',
    'far\xe0',
    'farai',
    'far\xf2',
    'faremo',
    'farete',
    'faranno',
    'farei',
    'faresti',
    'farebbe',
    'faremmo',
    'fareste',
    'farebbero',
    'facevo',
    'facevi',
    'faceva',
    'facevamo',
    'facevate',
    'facevano',
    'feci',
    'facesti',
    'fece',
    'facemmo',
    'faceste',
    'fecero',
    'facessi',
    'facesse',
    'facessimo',
    'facessero',
    'facendo',
    'sto',
    'stai',
    'sta',
    'stiamo',
    'stanno',
    'stia',
    'stiate',
    'stiano',
    'star\xe0',
    'starai',
    'star\xf2',
    'staremo',
    'starete',
    'staranno',
    'starei',
    'staresti',
    'starebbe',
    'staremmo',
    'stareste',
    'starebbero',
    'stavo',
    'stavi',
    'stava',
    'stavamo',
    'stavate',
    'stavano',
    'stetti',
    'stesti',
    'stette',
    'stemmo',
    'steste',
    'stettero',
    'stessi',
    'stesse',
    'stessimo',
    'stessero',
    'stando'
  ],
  ko: [
    '\uc744',
    '\uc758',
    '\uc5d0',
    '\uc774',
    '\ub97c',
    '\uc73c\ub85c',
    '\uc740',
    '\ub294',
    '\uac00',
    '\ub85c',
    '\ud558\uace0',
    '\uacfc',
    '\uc5d0\uc11c',
    '\ub3c4',
    '\uc640',
    '\uc774\ub2e4',
    '\uace0',
    '\ubd80\ud130',
    '\uae4c\uc9c0',
    '\uaed8',
    '\uc5d0\ub294',
    '\uc774\ub77c\uace0',
    '\ub9cc',
    '\ub77c\uace0',
    '\ubcf4\ub2e4',
    '\uc5d0\ub3c4',
    '\ub2e4',
    '\ud1a0\ub85d',
    '\uc5d0\uac8c',
    '\ub098',
    '\ub300\ub85c',
    '\uc5d0\uc11c\ub294',
    '\uc774\ub098',
    '\uc774\uba70',
    '\uc694',
    '\ub4e0',
    '\uc73c\ub85c\uc368',
    '\uac19\uc774',
    '\ub85c\ub294',
    '\ubc16\uc5d0',
    '\uacfc\uc758',
    '\uba70',
    '\ub85c\ubd80\ud130',
    '\ucc98\ub7fc',
    '\uc544',
    '\ub77c',
    '\uc5ec',
    '\uc73c\ub85c\ub294',
    '\uc774\uace0',
    '\uc5d0\uc11c\uc758',
    '\uc774\ub77c\ub294',
    '\ub9cc\uc5d0',
    '\uc73c\ub85c\ubd80\ud130',
    '\uc5d0\uc11c\ub3c4',
    '\uc640\uc758',
    '\uc5d4',
    '\ub9cc\uc744',
    '\ubd80\ud130\ub294',
    '\ub9cc\uc758',
    '\uc57c',
    '\uae4c\uc9c0\uc758',
    '\uacfc\ub294',
    '\uce58\uace0',
    '\uacfc\ub97c',
    '\uc73c\ub85c\uc758',
    '\uae4c\uc9c0\ub294',
    '\ubcf4\ub2e4\ub294',
    '\ub9cc\uc774',
    '\uc5d0\ub9cc',
    '\ub85c\uc758'
  ],
  nb: [
    'alle',
    'andre',
    'arbeid',
    'av',
    'begge',
    'bort',
    'bra',
    'bruke',
    'da',
    'denne',
    'der',
    'deres',
    'det',
    'din',
    'disse',
    'du',
    'eller',
    'en',
    'ene',
    'eneste',
    'enhver',
    'enn',
    'er',
    'et',
    'folk',
    'for',
    'fordi',
    'fors\xdbke',
    'fra',
    'f\xc5',
    'f\xdbr',
    'f\xdbrst',
    'gjorde',
    'gj\xdbre',
    'god',
    'g\xc5',
    'ha',
    'hadde',
    'han',
    'hans',
    'hennes',
    'her',
    'hva',
    'hvem',
    'hver',
    'hvilken',
    'hvis',
    'hvor',
    'hvordan',
    'hvorfor',
    'ikke',
    'inn',
    'innen',
    'kan',
    'kunne',
    'lage',
    'lang',
    'lik',
    'like',
    'makt',
    'mange',
    'med',
    'meg',
    'meget',
    'men',
    'mens',
    'mer',
    'mest',
    'min',
    'mye',
    'm\xc5',
    'm\xc5te',
    'navn',
    'nei',
    'ny',
    'n\xc5',
    'n\xc5r',
    'og',
    'ogs\xc5',
    'om',
    'opp',
    'oss',
    'over',
    'part',
    'punkt',
    'p\xc5',
    'rett',
    'riktig',
    'samme',
    'sant',
    'si',
    'siden',
    'sist',
    'skulle',
    'slik',
    'slutt',
    'som',
    'start',
    'stille',
    'tid',
    'til',
    'tilbake',
    'tilstand',
    'under',
    'ut',
    'uten',
    'var',
    'ved',
    'verdi',
    'vi',
    'vil',
    'ville',
    'vite',
    'v\xc5r',
    'v\xd6re',
    'v\xd6rt',
    '\xc5'
  ],
  no: [
    'aan',
    'af',
    'al',
    'als',
    'bij',
    'dan',
    'dat',
    'die',
    'dit',
    'een',
    'en',
    'er',
    'had',
    'heb',
    'hem',
    'het',
    'hij',
    'hoe',
    'hun',
    'ik',
    'in',
    'is',
    'je',
    'kan',
    'me',
    'men',
    'met',
    'mij',
    'nog',
    'nu',
    'of',
    'ons',
    'ook',
    'te',
    'tot',
    'uit',
    'van',
    'was',
    'wat',
    'we',
    'wel',
    'wij',
    'zal',
    'ze',
    'zei',
    'zij',
    'zo',
    'zou'
  ],
  pl: [
    'a',
    'aby',
    'ach',
    'acz',
    'aczkolwiek',
    'aj',
    'albo',
    'ale',
    'ale\u017c',
    'ani',
    'a\u017c',
    'bardziej',
    'bardzo',
    'bo',
    'bowiem',
    'by',
    'byli',
    'bynajmniej',
    'by\u0107',
    'by\u0142',
    'by\u0142a',
    'by\u0142o',
    'by\u0142y',
    'b\u0119dzie',
    'b\u0119d\u0105',
    'cali',
    'ca\u0142a',
    'ca\u0142y',
    'ci',
    'ci\u0119',
    'ciebie',
    'co',
    'cokolwiek',
    'co\u015b',
    'czasami',
    'czasem',
    'czemu',
    'czy',
    'czyli',
    'daleko',
    'dla',
    'dlaczego',
    'dlatego',
    'do',
    'dobrze',
    'dok\u0105d',
    'do\u015b\u0107',
    'du\u017co',
    'dwa',
    'dwaj',
    'dwie',
    'dwoje',
    'dzi\u015b',
    'dzisiaj',
    'gdy',
    'gdyby',
    'gdy\u017c',
    'gdzie',
    'gdziekolwiek',
    'gdzie\u015b',
    'i',
    'ich',
    'ile',
    'im',
    'inna',
    'inne',
    'inny',
    'innych',
    'i\u017c',
    'ja',
    'j\u0105',
    'jak',
    'jaka\u015b',
    'jakby',
    'jaki',
    'jakich\u015b',
    'jakie',
    'jaki\u015b',
    'jaki\u017c',
    'jakkolwiek',
    'jako',
    'jako\u015b',
    'je',
    'jeden',
    'jedna',
    'jedno',
    'jednak',
    'jednak\u017ce',
    'jego',
    'jej',
    'jemu',
    'jest',
    'jestem',
    'jeszcze',
    'je\u015bli',
    'je\u017celi',
    'ju\u017c',
    'j\u0105',
    'ka\u017cdy',
    'kiedy',
    'kilka',
    'kim\u015b',
    'kto',
    'ktokolwiek',
    'kto\u015b',
    'kt\xf3ra',
    'kt\xf3re',
    'kt\xf3rego',
    'kt\xf3rej',
    'kt\xf3ry',
    'kt\xf3rych',
    'kt\xf3rym',
    'kt\xf3rzy',
    'ku',
    'lat',
    'lecz',
    'lub',
    'ma',
    'maj\u0105',
    'ma\u0142o',
    'mam',
    'mi',
    'mimo',
    'mi\u0119dzy',
    'mn\u0105',
    'mnie',
    'mog\u0105',
    'moi',
    'moim',
    'moja',
    'moje',
    'mo\u017ce',
    'mo\u017cliwe',
    'mo\u017cna',
    'm\xf3j',
    'mu',
    'musi',
    'my',
    'na',
    'nad',
    'nam',
    'nami',
    'nas',
    'nasi',
    'nasz',
    'nasza',
    'nasze',
    'naszego',
    'naszych',
    'natomiast',
    'natychmiast',
    'nawet',
    'ni\u0105',
    'nic',
    'nich',
    'nie',
    'niech',
    'niego',
    'niej',
    'niemu',
    'nigdy',
    'nim',
    'nimi',
    'ni\u017c',
    'no',
    'o',
    'obok',
    'od',
    'oko\u0142o',
    'on',
    'ona',
    'one',
    'oni',
    'ono',
    'oraz',
    'oto',
    'owszem',
    'pan',
    'pana',
    'pani',
    'po',
    'pod',
    'podczas',
    'pomimo',
    'ponad',
    'poniewa\u017c',
    'powinien',
    'powinna',
    'powinni',
    'powinno',
    'poza',
    'prawie',
    'przecie\u017c',
    'przed',
    'przede',
    'przedtem',
    'przez',
    'przy',
    'roku',
    'r\xf3wnie\u017c',
    'sam',
    'sama',
    's\u0105',
    'si\u0119',
    'sk\u0105d',
    'sobie',
    'sob\u0105',
    'spos\xf3b',
    'swoje',
    'ta',
    'tak',
    'taka',
    'taki',
    'takie',
    'tak\u017ce',
    'tam',
    'te',
    'tego',
    'tej',
    'temu',
    'ten',
    'teraz',
    'te\u017c',
    'to',
    'tob\u0105',
    'tobie',
    'tote\u017c',
    'trzeba',
    'tu',
    'tutaj',
    'twoi',
    'twoim',
    'twoja',
    'twoje',
    'twym',
    'tw\xf3j',
    'ty',
    'tych',
    'tylko',
    'tym',
    'u',
    'w',
    'wam',
    'wami',
    'was',
    'wasz',
    'wasza',
    'wasze',
    'we',
    'wed\u0142ug',
    'wiele',
    'wielu',
    'wi\u0119c',
    'wi\u0119cej',
    'wszyscy',
    'wszystkich',
    'wszystkie',
    'wszystkim',
    'wszystko',
    'wtedy',
    'wy',
    'w\u0142a\u015bnie',
    'z',
    'za',
    'zapewne',
    'zawsze',
    'ze',
    'z\u0142',
    'znowu',
    'zn\xf3w',
    'zosta\u0142',
    '\u017caden',
    '\u017cadna',
    '\u017cadne',
    '\u017cadnych',
    '\u017ce',
    '\u017ceby'
  ],
  pt: [
    'a',
    '\xe0',
    'abril',
    'agosto',
    'ainda',
    'ano',
    'anos',
    'ao',
    'aos',
    'apenas',
    'as',
    '\xe0s',
    'at\xe9',
    'brasil',
    'com',
    'como',
    'contra',
    'da',
    'das',
    'de',
    'depois',
    'deve',
    'dezembro',
    'dia',
    'disse',
    'diz',
    'do',
    'dois',
    'dos',
    'e',
    '\xe9',
    'ela',
    'ele',
    'em',
    'entre',
    'era',
    'est\xe1',
    'estado',
    'est\xe3o',
    'eu',
    'foi',
    'folha',
    'foram',
    'governo',
    'grande',
    'h\xe1',
    'hoje',
    'isso',
    'j\xe1',
    'local',
    'maio',
    'maior',
    'mais',
    'mas',
    'mercado',
    'mesmo',
    'mil',
    'milh\xf5es',
    'muito',
    'mundo',
    'na',
    'n\xe3o',
    'nas',
    'no',
    'nos',
    'o',
    'ontem',
    'os',
    'ou',
    'pa\xeds',
    'para',
    'paulo',
    'pela',
    'pelo',
    'pessoas',
    'pode',
    'por',
    'porque',
    'presidente',
    'quando',
    'que',
    'quem',
    'r',
    'rio',
    's\xe3o',
    'se',
    'segundo',
    'sem',
    'ser',
    'ser\xe1',
    'seu',
    'seus',
    's\xf3',
    'sobre',
    'sua',
    'tamb\xe9m',
    'tem',
    'ter',
    'todos',
    'tr\xeas',
    'um',
    'uma',
    'us',
    'vaia',
    '\xe0',
    'acordo',
    'afirmou',
    'agora',
    'ainda',
    'al\xe9m',
    'alguns',
    'ano',
    'anos',
    'antes',
    'ao',
    'aos',
    'apenas',
    'as',
    '\xe0s',
    'assim',
    'at\xe9',
    'banco',
    'bem',
    'brasil',
    'brasileira',
    'brasileiro',
    'bras\xedlia',
    'cada',
    'carlos',
    'casa',
    'caso',
    'cerca',
    'cidade',
    'com',
    'como',
    'congresso',
    'contra',
    'da',
    'das',
    'de',
    'depois',
    'desde',
    'deve',
    'dia',
    'dias',
    'dinheiro',
    'disse',
    'diz',
    'do',
    'dois',
    'dos',
    'duas',
    'durante',
    'e',
    '\xe9',
    'economia',
    'ela',
    'ele',
    'eles',
    'em',
    'empresa',
    'empresas',
    'entre',
    'era',
    'especial',
    'essa',
    'esse',
    'esta',
    'est\xe1',
    'estado',
    'est\xe3o',
    'estava',
    'este',
    'eu',
    'eua',
    'exemplo',
    'faz',
    'fazer',
    'federal',
    'fernando',
    'fevereiro',
    'fhc',
    'filme',
    'final',
    'foi',
    'folha',
    'foram',
    'forma',
    'governo',
    'grande',
    'grupo',
    'h\xe1',
    'henrique',
    'hist\xf3ria',
    'hoje',
    'infla\xe7\xe3o',
    'isso',
    'j\xe1',
    'janeiro',
    'jos\xe9',
    'lei',
    'local',
    'maior',
    'mais',
    'mar\xe7o',
    'mas',
    'me',
    'melhor',
    'menos',
    'mercado',
    'm\xeas',
    'meses',
    'mesmo',
    'mil',
    'milh\xf5es',
    'ministro',
    'muito',
    'mundo',
    'na',
    'nacional',
    'nada',
    'n\xe3o',
    'nas',
    'nem',
    'no',
    'nos',
    'nova',
    'novo',
    'o',
    'onde',
    'ontem',
    'os',
    'ou',
    'outra',
    'outro',
    'outros',
    'outubro',
    'pa\xeds',
    'para',
    'parte',
    'partir',
    'passado',
    'paulo',
    'pela',
    'pelo',
    'pelos',
    'pessoas',
    'plano',
    'pode',
    'pol\xedcia',
    'pol\xedtica',
    'por',
    'porque',
    'pre\xe7os',
    'presidente',
    'primeira',
    'primeiro',
    'programa',
    'projeto',
    'p\xfablico',
    'qual',
    'qualquer',
    'quando',
    'quatro',
    'que',
    'quem',
    'r',
    'real',
    'reportagem',
    'rio',
    's\xe3o',
    'se',
    'segundo',
    'seja',
    'sem',
    'semana',
    'sempre',
    'sendo',
    'ser',
    'ser\xe1',
    'seria',
    'seu',
    'seus',
    'sistema',
    's\xf3',
    'sobre',
    'sp',
    'sua',
    'suas',
    'tamb\xe9m',
    'tem',
    't\xeam',
    'tempo',
    'ter',
    'todo',
    'todos',
    'trabalho',
    'tr\xeas',
    'tudo',
    'um',
    'uma',
    'us',
    'vai',
    'vez',
    'vida',
    'voc\xeaa',
    '\xe0',
    'acordo',
    'afirma',
    'afirmou',
    'agora',
    'ainda',
    'al\xe9m',
    'alguns',
    'ano',
    'anos',
    'antes',
    'ao',
    'aos',
    'apenas',
    'ap\xf3s',
    'aqui',
    '\xe1rea',
    'as',
    '\xe0s',
    'assim',
    'at\xe9',
    'aumento',
    'banco',
    'bem',
    'bilh\xf5es',
    'bom',
    'brasil',
    'brasileira',
    'brasileiro',
    'bras\xedlia',
    'cada',
    'c\xe2mara',
    'campanha',
    'candidato',
    'carlos',
    'casa',
    'caso',
    'central',
    'centro',
    'cerca',
    'cidade',
    'cinco',
    'cinema',
    'coisa',
    'com',
    'como',
    'congresso',
    'conta',
    'contra',
    'da',
    'dar',
    'das',
    'de',
    'depois',
    'deputado',
    'desde',
    'deve',
    'dia',
    'dias',
    'dinheiro',
    'direito',
    'diretor',
    'disse',
    'diz',
    'do',
    'dois',
    'dos',
    'duas',
    'durante',
    'e',
    '\xe9',
    'economia',
    'econ\xf4mica',
    'ela',
    'ele',
    'eles',
    'em',
    'empresa',
    'empresas',
    'enquanto',
    'ent\xe3o',
    'entre',
    'equipe',
    'era',
    'especial',
    'essa',
    'esse',
    'esta',
    'est\xe1',
    'estado',
    'estados',
    'est\xe3o',
    'estava',
    'este',
    'eu',
    'eua',
    'exemplo',
    'falta',
    'fato',
    'faz',
    'fazer',
    'federal',
    'fernando',
    'fez',
    'fhc',
    'ficou',
    'filho',
    'filme',
    'fim',
    'final',
    'foi',
    'folha',
    'fora',
    'foram',
    'forma',
    'governo',
    'grande',
    'grupo',
    'h\xe1',
    'havia',
    'henrique',
    'hist\xf3ria',
    'hoje',
    'infla\xe7\xe3o',
    'in\xedcio',
    'isso',
    'j\xe1',
    'janeiro',
    'jogo',
    'jos\xe9',
    'junho',
    'julho',
    'juros',
    'justi\xe7a',
    'lado',
    'lei',
    'livro',
    'local',
    'lugar',
    'maior',
    'mais',
    'mas',
    'me',
    'm\xe9dia',
    'meio',
    'melhor',
    'menos',
    'mercado',
    'm\xeas',
    'meses',
    'mesma',
    'mesmo',
    'meu',
    'mil',
    'milh\xf5es',
    'minha',
    'minist\xe9rio',
    'ministro',
    'momento',
    'muito',
    'mulher',
    'mundo',
    'na',
    'nacional',
    'nada',
    'n\xe3o',
    'nas',
    'nem',
    'neste',
    'no',
    'noite',
    'nome',
    'nos',
    'n\xf3s',
    'nova',
    'novembro',
    'novo',
    'num',
    'numa',
    'n\xfamero',
    'o',
    'onde',
    'ontem',
    'os',
    'ou',
    'outra',
    'outras',
    'outro',
    'outros',
    'pa\xeds',
    'pa\xedses',
    'para',
    'parte',
    'partido',
    'partir',
    'passado',
    'paulo',
    'pela',
    'pelo',
    'pelos',
    'per\xedodo',
    'pesquisa',
    'pessoas',
    'plano',
    'pode',
    'podem',
    'poder',
    'pol\xedcia',
    'pol\xedtica',
    'pontos',
    'por',
    'porque',
    'pouco',
    'prazo',
    'pre\xe7o',
    'pre\xe7os',
    'presidente',
    'primeira',
    'primeiro',
    'problema',
    'problemas',
    'processo',
    'produ\xe7\xe3o',
    'produtos',
    'programa',
    'projeto',
    'pr\xf3prio',
    'pt',
    'p\xfablico',
    'qual',
    'qualquer',
    'quando',
    'quanto',
    'quase',
    'quatro',
    'que',
    'quem',
    'quer',
    'r',
    'real',
    'recursos',
    'regi\xe3o',
    'rela\xe7\xe3o',
    'reportagem',
    'rio',
    's\xe3o',
    'sa\xfade',
    'se',
    'segundo',
    'seja',
    'sem',
    'semana',
    'sempre',
    'sendo',
    'ser',
    'ser\xe1',
    'ser\xe3o',
    'seria',
    'setembro',
    'setor',
    'seu',
    'seus',
    'sido',
    'silva',
    'sistema',
    's\xf3',
    'sobre',
    'social',
    'sociedade',
    'sp',
    'sua',
    'suas',
    'sucursal',
    'sul',
    'tamb\xe9m',
    't\xe3o',
    'tel',
    'tem',
    't\xeam',
    'tempo',
    'ter',
    'teve',
    'tinha',
    'toda',
    'todas',
    'todo',
    'todos',
    'trabalho',
    'tr\xeas',
    'tudo',
    '\xfaltimo',
    'um',
    'uma',
    'us',
    'vai',
    'valor',
    'v\xe3o',
    'vem',
    'vez',
    'vezes',
    'vida',
    'voc\xea',
    'zona'
  ],
  ru: [
    '\u0430',
    '\u0435',
    '\u0438',
    '\u0436',
    '\u043c',
    '\u043e',
    '\u043d\u0430',
    '\u043d\u0435',
    '\u043d\u0438',
    '\u043e\u0431',
    '\u043d\u043e',
    '\u043e\u043d',
    '\u043c\u043d\u0435',
    '\u043c\u043e\u0438',
    '\u043c\u043e\u0436',
    '\u043e\u043d\u0430',
    '\u043e\u043d\u0438',
    '\u043e\u043d\u043e',
    '\u043c\u043d\u043e\u0439',
    '\u043c\u043d\u043e\u0433\u043e',
    '\u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435',
    '\u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u0430\u044f',
    '\u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435',
    '\u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439',
    '\u043c\u043d\u043e\u044e',
    '\u043c\u043e\u0439',
    '\u043c\u043e\u0433',
    '\u043c\u043e\u0433\u0443\u0442',
    '\u043c\u043e\u0436\u043d\u043e',
    '\u043c\u043e\u0436\u0435\u0442',
    '\u043c\u043e\u0436\u0445\u043e',
    '\u043c\u043e\u0440',
    '\u043c\u043e\u044f',
    '\u043c\u043e\u0451',
    '\u043c\u043e\u0447\u044c',
    '\u043d\u0430\u0434',
    '\u043d\u0435\u0435',
    '\u043e\u0431\u0430',
    '\u043d\u0430\u043c',
    '\u043d\u0435\u043c',
    '\u043d\u0430\u043c\u0438',
    '\u043d\u0438\u043c\u0438',
    '\u043c\u0438\u043c\u043e',
    '\u043d\u0435\u043c\u043d\u043e\u0433\u043e',
    '\u043e\u0434\u043d\u043e\u0439',
    '\u043e\u0434\u043d\u043e\u0433\u043e',
    '\u043c\u0435\u043d\u0435\u0435',
    '\u043e\u0434\u043d\u0430\u0436\u0434\u044b',
    '\u043e\u0434\u043d\u0430\u043a\u043e',
    '\u043c\u0435\u043d\u044f',
    '\u043d\u0435\u043c\u0443',
    '\u043c\u0435\u043d\u044c\u0448\u0435',
    '\u043d\u0435\u0439',
    '\u043d\u0430\u0432\u0435\u0440\u0445\u0443',
    '\u043d\u0435\u0433\u043e',
    '\u043d\u0438\u0436\u0435',
    '\u043c\u0430\u043b\u043e',
    '\u043d\u0430\u0434\u043e',
    '\u043e\u0434\u0438\u043d',
    '\u043e\u0434\u0438\u043d\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u043e\u0434\u0438\u043d\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u043d\u0430\u0437\u0430\u0434',
    '\u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435',
    '\u043d\u0435\u0434\u0430\u0432\u043d\u043e',
    '\u043c\u0438\u043b\u043b\u0438\u043e\u043d\u043e\u0432',
    '\u043d\u0435\u0434\u0430\u043b\u0435\u043a\u043e',
    '\u043c\u0435\u0436\u0434\u0443',
    '\u043d\u0438\u0437\u043a\u043e',
    '\u043c\u0435\u043b\u044f',
    '\u043d\u0435\u043b\u044c\u0437\u044f',
    '\u043d\u0438\u0431\u0443\u0434\u044c',
    '\u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e',
    '\u043d\u0430\u043a\u043e\u043d\u0435\u0446',
    '\u043d\u0438\u043a\u043e\u0433\u0434\u0430',
    '\u043d\u0438\u043a\u0443\u0434\u0430',
    '\u043d\u0430\u0441',
    '\u043d\u0430\u0448',
    '\u043d\u0435\u0442',
    '\u043d\u0435\u044e',
    '\u043d\u0435\u0451',
    '\u043d\u0438\u0445',
    '\u043c\u0438\u0440\u0430',
    '\u043d\u0430\u0448\u0430',
    '\u043d\u0430\u0448\u0435',
    '\u043d\u0430\u0448\u0438',
    '\u043d\u0438\u0447\u0435\u0433\u043e',
    '\u043d\u0430\u0447\u0430\u043b\u0430',
    '\u043d\u0435\u0440\u0435\u0434\u043a\u043e',
    '\u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e',
    '\u043e\u0431\u044b\u0447\u043d\u043e',
    '\u043e\u043f\u044f\u0442\u044c',
    '\u043e\u043a\u043e\u043b\u043e',
    '\u043c\u044b',
    '\u043d\u0443',
    '\u043d\u0445',
    '\u043e\u0442',
    '\u043e\u0442\u043e\u0432\u0441\u044e\u0434\u0443',
    '\u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e',
    '\u043d\u0443\u0436\u043d\u043e',
    '\u043e\u0447\u0435\u043d\u044c',
    '\u043e\u0442\u0441\u044e\u0434\u0430',
    '\u0432',
    '\u0432\u043e',
    '\u0432\u043e\u043d',
    '\u0432\u043d\u0438\u0437',
    '\u0432\u043d\u0438\u0437\u0443',
    '\u0432\u043e\u043a\u0440\u0443\u0433',
    '\u0432\u043e\u0442',
    '\u0432\u043e\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0432\u043e\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0432\u043e\u0441\u0435\u043c\u044c',
    '\u0432\u043e\u0441\u044c\u043c\u043e\u0439',
    '\u0432\u0432\u0435\u0440\u0445',
    '\u0432\u0430\u043c',
    '\u0432\u0430\u043c\u0438',
    '\u0432\u0430\u0436\u043d\u043e\u0435',
    '\u0432\u0430\u0436\u043d\u0430\u044f',
    '\u0432\u0430\u0436\u043d\u044b\u0435',
    '\u0432\u0430\u0436\u043d\u044b\u0439',
    '\u0432\u0434\u0430\u043b\u0438',
    '\u0432\u0435\u0437\u0434\u0435',
    '\u0432\u0435\u0434\u044c',
    '\u0432\u0430\u0441',
    '\u0432\u0430\u0448',
    '\u0432\u0430\u0448\u0430',
    '\u0432\u0430\u0448\u0435',
    '\u0432\u0430\u0448\u0438',
    '\u0432\u043f\u0440\u043e\u0447\u0435\u043c',
    '\u0432\u0435\u0441\u044c',
    '\u0432\u0434\u0440\u0443\u0433',
    '\u0432\u044b',
    '\u0432\u0441\u0435',
    '\u0432\u0442\u043e\u0440\u043e\u0439',
    '\u0432\u0441\u0435\u043c',
    '\u0432\u0441\u0435\u043c\u0438',
    '\u0432\u0440\u0435\u043c\u0435\u043d\u0438',
    '\u0432\u0440\u0435\u043c\u044f',
    '\u0432\u0441\u0435\u043c\u0443',
    '\u0432\u0441\u0435\u0433\u043e',
    '\u0432\u0441\u0435\u0433\u0434\u0430',
    '\u0432\u0441\u0435\u0445',
    '\u0432\u0441\u0435\u044e',
    '\u0432\u0441\u044e',
    '\u0432\u0441\u044f',
    '\u0432\u0441\u0451',
    '\u0432\u0441\u044e\u0434\u0443',
    '\u0433',
    '\u0433\u043e\u0434',
    '\u0433\u043e\u0432\u043e\u0440\u0438\u043b',
    '\u0433\u043e\u0432\u043e\u0440\u0438\u0442',
    '\u0433\u043e\u0434\u0430',
    '\u0433\u043e\u0434\u0443',
    '\u0433\u0434\u0435',
    '\u0434\u0430',
    '\u0435\u0435',
    '\u0437\u0430',
    '\u0438\u0437',
    '\u043b\u0438',
    '\u0436\u0435',
    '\u0438\u043c',
    '\u0434\u043e',
    '\u043f\u043e',
    '\u0438\u043c\u0438',
    '\u043f\u043e\u0434',
    '\u0438\u043d\u043e\u0433\u0434\u0430',
    '\u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e',
    '\u0438\u043c\u0435\u043d\u043d\u043e',
    '\u0434\u043e\u043b\u0433\u043e',
    '\u043f\u043e\u0437\u0436\u0435',
    '\u0431\u043e\u043b\u0435\u0435',
    '\u0434\u043e\u043b\u0436\u043d\u043e',
    '\u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430',
    '\u0437\u043d\u0430\u0447\u0438\u0442',
    '\u0438\u043c\u0435\u0442\u044c',
    '\u0431\u043e\u043b\u044c\u0448\u0435',
    '\u043f\u043e\u043a\u0430',
    '\u0435\u043c\u0443',
    '\u0438\u043c\u044f',
    '\u043f\u043e\u0440',
    '\u043f\u043e\u0440\u0430',
    '\u043f\u043e\u0442\u043e\u043c',
    '\u043f\u043e\u0442\u043e\u043c\u0443',
    '\u043f\u043e\u0441\u043b\u0435',
    '\u043f\u043e\u0447\u0435\u043c\u0443',
    '\u043f\u043e\u0447\u0442\u0438',
    '\u043f\u043e\u0441\u0440\u0435\u0434\u0438',
    '\u0435\u0439',
    '\u0434\u0432\u0430',
    '\u0434\u0432\u0435',
    '\u0434\u0432\u0435\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0434\u0432\u0435\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0434\u0432\u0443\u0445',
    '\u0435\u0433\u043e',
    '\u0434\u0435\u043b',
    '\u0438\u043b\u0438',
    '\u0431\u0435\u0437',
    '\u0434\u0435\u043d\u044c',
    '\u0437\u0430\u043d\u044f\u0442',
    '\u0437\u0430\u043d\u044f\u0442\u0430',
    '\u0437\u0430\u043d\u044f\u0442\u043e',
    '\u0437\u0430\u043d\u044f\u0442\u044b',
    '\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e',
    '\u0434\u0430\u0432\u043d\u043e',
    '\u0434\u0435\u0432\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0434\u0435\u0432\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0434\u0435\u0432\u044f\u0442\u044c',
    '\u0434\u0435\u0432\u044f\u0442\u044b\u0439',
    '\u0434\u0430\u0436\u0435',
    '\u0430\u043b\u043b\u043e',
    '\u0436\u0438\u0437\u043d\u044c',
    '\u0434\u0430\u043b\u0435\u043a\u043e',
    '\u0431\u043b\u0438\u0437\u043a\u043e',
    '\u0437\u0434\u0435\u0441\u044c',
    '\u0434\u0430\u043b\u044c\u0448\u0435',
    '\u0434\u043b\u044f',
    '\u043b\u0435\u0442',
    '\u0437\u0430\u0442\u043e',
    '\u0434\u0430\u0440\u043e\u043c',
    '\u043f\u0435\u0440\u0432\u044b\u0439',
    '\u043f\u0435\u0440\u0435\u0434',
    '\u0437\u0430\u0442\u0435\u043c',
    '\u0437\u0430\u0447\u0435\u043c',
    '\u043b\u0438\u0448\u044c',
    '\u0434\u0435\u0441\u044f\u0442\u044c',
    '\u0434\u0435\u0441\u044f\u0442\u044b\u0439',
    '\u0435\u044e',
    '\u0435\u0451',
    '\u0438\u0445',
    '\u0431\u044b',
    '\u0435\u0449\u0435',
    '\u043f\u0440\u0438',
    '\u0431\u044b\u043b',
    '\u043f\u0440\u043e',
    '\u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432',
    '\u043f\u0440\u043e\u0442\u0438\u0432',
    '\u043f\u0440\u043e\u0441\u0442\u043e',
    '\u0431\u044b\u0432\u0430\u0435\u0442',
    '\u0431\u044b\u0432\u044c',
    '\u0435\u0441\u043b\u0438',
    '\u043b\u044e\u0434\u0438',
    '\u0431\u044b\u043b\u0430',
    '\u0431\u044b\u043b\u0438',
    '\u0431\u044b\u043b\u043e',
    '\u0431\u0443\u0434\u0435\u043c',
    '\u0431\u0443\u0434\u0435\u0442',
    '\u0431\u0443\u0434\u0435\u0442\u0435',
    '\u0431\u0443\u0434\u0435\u0448\u044c',
    '\u043f\u0440\u0435\u043a\u0440\u0430\u0441\u043d\u043e',
    '\u0431\u0443\u0434\u0443',
    '\u0431\u0443\u0434\u044c',
    '\u0431\u0443\u0434\u0442\u043e',
    '\u0431\u0443\u0434\u0443\u0442',
    '\u0435\u0449\u0451',
    '\u043f\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u043f\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0434\u0440\u0443\u0433\u043e',
    '\u0434\u0440\u0443\u0433\u043e\u0435',
    '\u0434\u0440\u0443\u0433\u043e\u0439',
    '\u0434\u0440\u0443\u0433\u0438\u0435',
    '\u0434\u0440\u0443\u0433\u0430\u044f',
    '\u0434\u0440\u0443\u0433\u0438\u0445',
    '\u0435\u0441\u0442\u044c',
    '\u043f\u044f\u0442\u044c',
    '\u0431\u044b\u0442\u044c',
    '\u043b\u0443\u0447\u0448\u0435',
    '\u043f\u044f\u0442\u044b\u0439',
    '\u043a',
    '\u043a\u043e\u043c',
    '\u043a\u043e\u043d\u0435\u0447\u043d\u043e',
    '\u043a\u043e\u043c\u0443',
    '\u043a\u043e\u0433\u043e',
    '\u043a\u043e\u0433\u0434\u0430',
    '\u043a\u043e\u0442\u043e\u0440\u043e\u0439',
    '\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e',
    '\u043a\u043e\u0442\u043e\u0440\u0430\u044f',
    '\u043a\u043e\u0442\u043e\u0440\u044b\u0435',
    '\u043a\u043e\u0442\u043e\u0440\u044b\u0439',
    '\u043a\u043e\u0442\u043e\u0440\u044b\u0445',
    '\u043a\u0435\u043c',
    '\u043a\u0430\u0436\u0434\u043e\u0435',
    '\u043a\u0430\u0436\u0434\u0430\u044f',
    '\u043a\u0430\u0436\u0434\u044b\u0435',
    '\u043a\u0430\u0436\u0434\u044b\u0439',
    '\u043a\u0430\u0436\u0435\u0442\u0441\u044f',
    '\u043a\u0430\u043a',
    '\u043a\u0430\u043a\u043e\u0439',
    '\u043a\u0430\u043a\u0430\u044f',
    '\u043a\u0442\u043e',
    '\u043a\u0440\u043e\u043c\u0435',
    '\u043a\u0443\u0434\u0430',
    '\u043a\u0440\u0443\u0433\u043e\u043c',
    '\u0441',
    '\u0442',
    '\u0443',
    '\u044f',
    '\u0442\u0430',
    '\u0442\u0435',
    '\u0443\u0436',
    '\u0441\u043e',
    '\u0442\u043e',
    '\u0442\u043e\u043c',
    '\u0441\u043d\u043e\u0432\u0430',
    '\u0442\u043e\u043c\u0443',
    '\u0441\u043e\u0432\u0441\u0435\u043c',
    '\u0442\u043e\u0433\u043e',
    '\u0442\u043e\u0433\u0434\u0430',
    '\u0442\u043e\u0436\u0435',
    '\u0441\u043e\u0431\u043e\u0439',
    '\u0442\u043e\u0431\u043e\u0439',
    '\u0441\u043e\u0431\u043e\u044e',
    '\u0442\u043e\u0431\u043e\u044e',
    '\u0441\u043d\u0430\u0447\u0430\u043b\u0430',
    '\u0442\u043e\u043b\u044c\u043a\u043e',
    '\u0443\u043c\u0435\u0442\u044c',
    '\u0442\u043e\u0442',
    '\u0442\u043e\u044e',
    '\u0445\u043e\u0440\u043e\u0448\u043e',
    '\u0445\u043e\u0442\u0435\u0442\u044c',
    '\u0445\u043e\u0447\u0435\u0448\u044c',
    '\u0445\u043e\u0442\u044c',
    '\u0445\u043e\u0442\u044f',
    '\u0441\u0432\u043e\u0435',
    '\u0441\u0432\u043e\u0438',
    '\u0442\u0432\u043e\u0439',
    '\u0441\u0432\u043e\u0435\u0439',
    '\u0441\u0432\u043e\u0435\u0433\u043e',
    '\u0441\u0432\u043e\u0438\u0445',
    '\u0441\u0432\u043e\u044e',
    '\u0442\u0432\u043e\u044f',
    '\u0442\u0432\u043e\u0451',
    '\u0440\u0430\u0437',
    '\u0443\u0436\u0435',
    '\u0441\u0430\u043c',
    '\u0442\u0430\u043c',
    '\u0442\u0435\u043c',
    '\u0447\u0435\u043c',
    '\u0441\u0430\u043c\u0430',
    '\u0441\u0430\u043c\u0438',
    '\u0442\u0435\u043c\u0438',
    '\u0441\u0430\u043c\u043e',
    '\u0440\u0430\u043d\u043e',
    '\u0441\u0430\u043c\u043e\u043c',
    '\u0441\u0430\u043c\u043e\u043c\u0443',
    '\u0441\u0430\u043c\u043e\u0439',
    '\u0441\u0430\u043c\u043e\u0433\u043e',
    '\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0441\u0430\u043c\u0438\u043c',
    '\u0441\u0430\u043c\u0438\u043c\u0438',
    '\u0441\u0430\u043c\u0438\u0445',
    '\u0441\u0430\u043c\u0443',
    '\u0441\u0435\u043c\u044c',
    '\u0447\u0435\u043c\u0443',
    '\u0440\u0430\u043d\u044c\u0448\u0435',
    '\u0441\u0435\u0439\u0447\u0430\u0441',
    '\u0447\u0435\u0433\u043e',
    '\u0441\u0435\u0433\u043e\u0434\u043d\u044f',
    '\u0441\u0435\u0431\u0435',
    '\u0442\u0435\u0431\u0435',
    '\u0441\u0435\u0430\u043e\u0439',
    '\u0447\u0435\u043b\u043e\u0432\u0435\u043a',
    '\u0440\u0430\u0437\u0432\u0435',
    '\u0442\u0435\u043f\u0435\u0440\u044c',
    '\u0441\u0435\u0431\u044f',
    '\u0442\u0435\u0431\u044f',
    '\u0441\u0435\u0434\u044c\u043c\u043e\u0439',
    '\u0441\u043f\u0430\u0441\u0438\u0431\u043e',
    '\u0441\u043b\u0438\u0448\u043a\u043e\u043c',
    '\u0442\u0430\u043a',
    '\u0442\u0430\u043a\u043e\u0435',
    '\u0442\u0430\u043a\u043e\u0439',
    '\u0442\u0430\u043a\u0438\u0435',
    '\u0442\u0430\u043a\u0436\u0435',
    '\u0442\u0430\u043a\u0430\u044f',
    '\u0441\u0438\u0445',
    '\u0442\u0435\u0445',
    '\u0447\u0430\u0449\u0435',
    '\u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044b\u0439',
    '\u0447\u0435\u0440\u0435\u0437',
    '\u0447\u0430\u0441\u0442\u043e',
    '\u0448\u0435\u0441\u0442\u043e\u0439',
    '\u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0448\u0435\u0441\u0442\u044c',
    '\u0447\u0435\u0442\u044b\u0440\u0435',
    '\u0447\u0435\u0442\u044b\u0440\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0447\u0435\u0442\u044b\u0440\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u0441\u043a\u043e\u043b\u044c\u043a\u043e',
    '\u0441\u043a\u0430\u0437\u0430\u043b',
    '\u0441\u043a\u0430\u0437\u0430\u043b\u0430',
    '\u0441\u043a\u0430\u0437\u0430\u0442\u044c',
    '\u0442\u0443',
    '\u0442\u044b',
    '\u0442\u0440\u0438',
    '\u044d\u0442\u0430',
    '\u044d\u0442\u0438',
    '\u0447\u0442\u043e',
    '\u044d\u0442\u043e',
    '\u0447\u0442\u043e\u0431',
    '\u044d\u0442\u043e\u043c',
    '\u044d\u0442\u043e\u043c\u0443',
    '\u044d\u0442\u043e\u0439',
    '\u044d\u0442\u043e\u0433\u043e',
    '\u0447\u0442\u043e\u0431\u044b',
    '\u044d\u0442\u043e\u0442',
    '\u0441\u0442\u0430\u043b',
    '\u0442\u0443\u0434\u0430',
    '\u044d\u0442\u0438\u043c',
    '\u044d\u0442\u0438\u043c\u0438',
    '\u0440\u044f\u0434\u043e\u043c',
    '\u0442\u0440\u0438\u043d\u0430\u0434\u0446\u0430\u0442\u044c',
    '\u0442\u0440\u0438\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439',
    '\u044d\u0442\u0438\u0445',
    '\u0442\u0440\u0435\u0442\u0438\u0439',
    '\u0442\u0443\u0442',
    '\u044d\u0442\u0443',
    '\u0441\u0443\u0442\u044c',
    '\u0447\u0443\u0442\u044c',
    '\u0442\u044b\u0441\u044f\u0447'
  ],
  sv: [
    'kunna',
    'om',
    'ovan',
    'enligt',
    'i enlighet med detta',
    '\xf6ver',
    'faktiskt',
    'efter',
    'efter\xe5t',
    'igen',
    'mot',
    '\xe4r inte',
    'alla',
    'till\xe5ta',
    'till\xe5ter',
    'n\xe4stan',
    'ensam',
    'l\xe4ngs',
    'redan',
    'ocks\xe5',
    '\xe4ven om',
    'alltid',
    'am',
    'bland',
    'bland',
    'en',
    'och',
    'en annan',
    'n\xe5gon',
    'n\xe5gon',
    'hur som helst',
    'n\xe5gon',
    'n\xe5got',
    '\xe4nd\xe5',
    '\xe4nd\xe5',
    'var som helst',
    'is\xe4r',
    'visas',
    'uppskatta',
    'l\xe4mpligt',
    '\xe4r',
    'inte',
    'runt',
    'som',
    '\xe5t sidan',
    'be',
    'fr\xe5gar',
    'associerad',
    'vid',
    'tillg\xe4ngliga',
    'bort',
    'v\xe4ldigt',
    'vara',
    'blev',
    'eftersom',
    'bli',
    'blir',
    'blir',
    'varit',
    'innan',
    'f\xf6rhand',
    'bakom',
    'vara',
    'tro',
    'nedan',
    'bredvid',
    'f\xf6rutom',
    'b\xe4st',
    'b\xe4ttre',
    'mellan',
    'bortom',
    'b\xe5de',
    'kort',
    'men',
    'genom',
    'c',
    "c'mon",
    'c: s',
    'kom',
    'kampanj',
    'kan',
    'kan inte',
    'kan inte',
    'cant',
    'orsaka',
    'orsaker',
    'viss',
    's\xe4kerligen',
    'f\xf6r\xe4ndringar',
    'klart',
    'co',
    'com',
    'komma',
    'kommer',
    'om',
    'f\xf6ljaktligen',
    '\xf6verv\xe4ga',
    '\xf6verv\xe4ger',
    'inneh\xe5lla',
    'inneh\xe5llande',
    'inneh\xe5ller',
    'motsvarande',
    'kunde',
    'kunde inte',
    'kurs',
    'n\xe4rvarande',
    'definitivt',
    'beskrivits',
    'trots',
    'gjorde',
    'inte',
    'olika',
    'g\xf6ra',
    'g\xf6r',
    'inte',
    'g\xf6r',
    'inte',
    'gjort',
    'ned',
    'ned\xe5t',
    'under',
    'varje',
    'edu',
    '\xe5tta',
    'antingen',
    'annars',
    'n\xe5gon annanstans',
    'tillr\xe4ckligt',
    'godk\xe4ndes',
    'helt',
    'speciellt',
    'et',
    'etc',
    '\xe4ven',
    'n\xe5gonsin',
    'varje',
    'alla',
    'alla',
    'allt',
    '\xf6verallt',
    'ex',
    'exakt',
    'exempel',
    'utom',
    'l\xe5ngt',
    'f\xe5',
    'femte',
    'f\xf6rst',
    'finansiella',
    'fem',
    'f\xf6ljt',
    'efter',
    'f\xf6ljer',
    'f\xf6r',
    'fd',
    'tidigare',
    'fram\xe5t',
    'fyra',
    'fr\xe5n',
    'ytterligare',
    'dessutom',
    'f\xe5',
    'blir',
    'f\xe5',
    'given',
    'ger',
    'g\xe5',
    'g\xe5r',
    'g\xe5',
    'borta',
    'fick',
    'f\xe5tt',
    'h\xe4lsningar',
    'hade',
    'hade inte',
    'h\xe4nder',
    'knappast',
    'har',
    'har inte',
    'ha',
    'har inte',
    'med',
    'han',
    'han \xe4r',
    'hall\xe5',
    'hj\xe4lpa',
    'hence',
    'henne',
    'h\xe4r',
    'h\xe4r finns',
    'h\xe4refter',
    'h\xe4rmed',
    'h\xe4ri',
    'h\xe4rp\xe5',
    'hennes',
    'sj\xe4lv',
    'hej',
    'honom',
    'sj\xe4lv',
    'hans',
    'hit',
    'f\xf6rhoppningsvis',
    'hur',
    'howbeit',
    'dock',
    'jag skulle',
    'jag ska',
    'jag \xe4r',
    'jag har',
    'om',
    'ignoreras',
    'omedelbar',
    'i',
    'eftersom',
    'inc',
    'indeed',
    'indikera',
    'indikerade',
    'indikerar',
    'inre',
    'm\xe5n',
    'ist\xe4llet',
    'in',
    'in\xe5t',
    '\xe4r',
    '\xe4r inte',
    'den',
    'det skulle',
    'det ska',
    'det \xe4r',
    'dess',
    'sj\xe4lv',
    'bara',
    'h\xe5lla',
    'h\xe5ller',
    'h\xe5lls',
    'vet',
    'vet',
    'k\xe4nd',
    'sista',
    'nyligen',
    'senare',
    'senare',
    'latterly',
    'minst',
    'mindre',
    'lest',
    'l\xe5t',
    'l\xe5t oss',
    'liknande',
    'gillade',
    'sannolikt',
    'lite',
    'ser',
    'ser',
    'ser',
    'ltd',
    'huvudsakligen',
    'm\xe5nga',
    'kan',
    'kanske',
    'mig',
    'betyda',
    'under tiden',
    'endast',
    'kanske',
    'mer',
    'dessutom',
    'mest',
    'mestadels',
    'mycket',
    'm\xe5ste',
    'min',
    'sj\xe4lv',
    'namn',
    'n\xe4mligen',
    'nd',
    'n\xe4ra',
    'n\xe4stan',
    'n\xf6dv\xe4ndigt',
    'beh\xf6ver',
    'behov',
    'varken',
    'aldrig',
    '\xe4nd\xe5',
    'ny',
    'n\xe4sta',
    'nio',
    'ingen',
    'ingen',
    'icke',
    'ingen',
    'ingen',
    'eller',
    'normalt',
    'inte',
    'ingenting',
    'roman',
    'nu',
    'ingenstans',
    'uppenbarligen',
    'av',
    'off',
    'ofta',
    'oh',
    'ok',
    'okay',
    'gammal',
    'p\xe5',
    'en g\xe5ng',
    'ett',
    'ettor',
    'endast',
    'p\xe5',
    'eller',
    'andra',
    'andra',
    'annars',
    'borde',
    'v\xe5r',
    'v\xe5rt',
    'oss',
    'ut',
    'utanf\xf6r',
    '\xf6ver',
    '\xf6vergripande',
    'egen',
    's\xe4rskilt',
    's\xe4rskilt',
    'per',
    'kanske',
    'placeras',
    'v\xe4nligen',
    'plus',
    'm\xf6jligt',
    'f\xf6rmodligen',
    'f\xf6rmodligen',
    'ger',
    'ganska',
    'citera',
    'kvartalsvis',
    'snarare',
    'verkligen',
    'rimligen',
    'om',
    'oavsett',
    'g\xe4ller',
    'relativt',
    'respektive',
    'h\xf6ger',
    'sa',
    'samma',
    's\xe5g',
    's\xe4ga',
    's\xe4ger',
    's\xe4ger',
    'andra',
    'det andra',
    'se',
    'ser',
    'verkar',
    'verkade',
    'informationsproblem',
    'verkar',
    'sett',
    'sj\xe4lv',
    'sj\xe4lva',
    'f\xf6rnuftig',
    'skickas',
    'allvarlig',
    'allvarligt',
    'sju',
    'flera',
    'skall',
    'hon',
    'b\xf6r',
    'b\xf6r inte',
    'eftersom',
    'sex',
    's\xe5',
    'n\xe5gra',
    'n\xe5gon',
    'p\xe5 n\xe5got s\xe4tt',
    'n\xe5gon',
    'n\xe5got',
    'sometime',
    'ibland',
    'n\xe5got',
    'n\xe5gonstans',
    'snart',
    'sorry',
    'specificerade',
    'ange',
    'ange',
    'fortfarande',
    'sub',
    's\xe5dan',
    'sup',
    's\xe4ker',
    't s',
    'ta',
    'tas',
    'ber\xe4tta',
    'tenderar',
    '\xe4n',
    'tacka',
    'tack',
    'thanx',
    'att',
    'det \xe4r',
    'brinner',
    'den',
    'deras',
    'deras',
    'dem',
    'sj\xe4lva',
    'sedan',
    'd\xe4rifr\xe5n',
    'd\xe4r',
    'det finns',
    'd\xe4refter',
    'd\xe4rigenom',
    'd\xe4rf\xf6r',
    'd\xe4ri',
    'theres',
    'd\xe4rp\xe5',
    'dessa',
    'de',
    'de hade',
    'de kommer',
    'de \xe4r',
    'de har',
    'tror',
    'tredje',
    'detta',
    'grundlig',
    'grundligt',
    'de',
    'though',
    'tre',
    'genom',
    'hela',
    'thru',
    's\xe5lunda',
    'till',
    'tillsammans',
    'alltf\xf6r',
    'tog',
    'mot',
    'mot',
    'f\xf6rs\xf6kte',
    'f\xf6rs\xf6ker',
    'verkligt',
    'f\xf6rs\xf6k',
    'f\xf6rs\xf6ker',
    'tv\xe5 g\xe5nger',
    'tv\xe5',
    'enligt',
    'tyv\xe4rr',
    's\xe5vida inte',
    'osannolikt',
    'tills',
    '\xe5t',
    'upp',
    'p\xe5',
    'oss',
    'anv\xe4nda',
    'anv\xe4nds',
    'anv\xe4ndbar',
    'anv\xe4nder',
    'anv\xe4ndning',
    'vanligtvis',
    'uucp',
    'v\xe4rde',
    'olika',
    'mycket',
    'via',
    'viz',
    'vs',
    'vill',
    'vill',
    'var',
    'var inte',
    's\xe4tt',
    'vi',
    'vi skulle',
    'vi kommer',
    'vi \xe4r',
    'vi har',
    'v\xe4lkommen',
    'v\xe4l',
    'gick',
    'var',
    'var inte',
    'vad',
    'vad \xe4r',
    'oavsett',
    'n\xe4r',
    'varifr\xe5n',
    'n\xe4rhelst',
    'd\xe4r',
    'var \xe4r',
    'varefter',
    'medan',
    'varigenom',
    'vari',
    'varp\xe5',
    'varhelst',
    'huruvida',
    'som',
    'medan',
    'dit',
    'som',
    'vem \xe4r',
    'vem',
    'hela',
    'vem',
    'vars',
    'varf\xf6r',
    'kommer',
    'villig',
    '\xf6nskar',
    'med',
    'inom',
    'utan',
    'kommer inte',
    'undrar',
    'skulle',
    'skulle inte',
    'ja',
    '\xe4nnu',
    'ni',
    'du skulle',
    'kommer du',
    'du \xe4r',
    'du har',
    'din',
    'sj\xe4lv',
    'er',
    'noll',
    'tj\xe4nsteman',
    'skarpt',
    'kritiserade'
  ],
  th: [
    '\u0e40\u0e01\u0e47\u0e1a',
    '\u0e40\u0e01\u0e34\u0e14',
    '\u0e40\u0e01\u0e34\u0e19',
    '\u0e40\u0e01\u0e34\u0e19\u0e46',
    '\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07',
    '\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e19',
    '\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a',
    '\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07',
    '\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e46',
    '\u0e40\u0e01\u0e37\u0e2d\u0e1a',
    '\u0e40\u0e01\u0e37\u0e2d\u0e1a\u0e08\u0e30',
    '\u0e40\u0e01\u0e37\u0e2d\u0e1a\u0e46',
    '\u0e40\u0e02\u0e32',
    '\u0e40\u0e02\u0e49\u0e32',
    '\u0e40\u0e02\u0e49\u0e32\u0e43\u0e08',
    '\u0e40\u0e02\u0e35\u0e22\u0e19',
    '\u0e40\u0e04\u0e22',
    '\u0e40\u0e04\u0e22\u0e46',
    '\u0e40\u0e09\u0e01\u0e40\u0e0a\u0e48\u0e19',
    '\u0e40\u0e09\u0e1e\u0e32\u0e30',
    '\u0e40\u0e09\u0e22',
    '\u0e40\u0e09\u0e22\u0e46',
    '\u0e40\u0e0a\u0e48\u0e19',
    '\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e04\u0e22',
    '\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19',
    '\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e1a',
    '\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e40\u0e0a\u0e48\u0e19\u0e43\u0e14',
    '\u0e40\u0e0a\u0e48\u0e19\u0e44\u0e23',
    '\u0e40\u0e0a\u0e48\u0e19\u0e01\u0e48\u0e2d\u0e19',
    '\u0e40\u0e0a\u0e48\u0e19\u0e01\u0e31\u0e19',
    '\u0e40\u0e0a\u0e48\u0e19\u0e14\u0e31\u0e07',
    '\u0e40\u0e0a\u0e48\u0e19\u0e14\u0e31\u0e07\u0e40\u0e01\u0e48\u0e32',
    '\u0e40\u0e0a\u0e48\u0e19\u0e14\u0e31\u0e07\u0e01\u0e48\u0e2d\u0e19',
    '\u0e40\u0e0a\u0e48\u0e19\u0e14\u0e31\u0e07\u0e17\u0e35\u0e48',
    '\u0e40\u0e0a\u0e48\u0e19\u0e14\u0e31\u0e07\u0e27\u0e48\u0e32',
    '\u0e40\u0e0a\u0e48\u0e19\u0e17\u0e35\u0e48',
    '\u0e40\u0e0a\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e04\u0e22',
    '\u0e40\u0e0a\u0e48\u0e19\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32',
    '\u0e40\u0e0a\u0e48\u0e19\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e0a\u0e48\u0e19\u0e19\u0e31\u0e49\u0e19\u0e40\u0e2d\u0e07',
    '\u0e40\u0e0a\u0e48\u0e19\u0e19\u0e35\u0e49',
    '\u0e40\u0e0a\u0e37\u0e48\u0e2d',
    '\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e16\u0e37\u0e2d',
    '\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e31\u0e48\u0e19',
    '\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32',
    '\u0e40\u0e14\u0e34\u0e21',
    '\u0e40\u0e14\u0e34\u0e21\u0e17\u0e35',
    '\u0e40\u0e14\u0e34\u0e21\u0e46',
    '\u0e40\u0e14\u0e35\u0e22\u0e27',
    '\u0e40\u0e14\u0e35\u0e4b\u0e22\u0e27',
    '\u0e40\u0e14\u0e35\u0e4b\u0e22\u0e27\u0e01\u0e48\u0e2d\u0e19',
    '\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19',
    '\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e1a',
    '\u0e40\u0e14\u0e35\u0e4b\u0e22\u0e27\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e14\u0e35\u0e4b\u0e22\u0e27\u0e19\u0e35\u0e49',
    '\u0e40\u0e15\u0e47\u0e21\u0e44\u0e1b\u0e14\u0e49\u0e27\u0e22',
    '\u0e40\u0e15\u0e47\u0e21\u0e44\u0e1b\u0e2b\u0e21\u0e14',
    '\u0e40\u0e15\u0e47\u0e21\u0e46',
    '\u0e40\u0e16\u0e2d\u0e30',
    '\u0e40\u0e16\u0e34\u0e14',
    '\u0e40\u0e17\u0e48\u0e32',
    '\u0e40\u0e17\u0e48\u0e32\u0e43\u0e14',
    '\u0e40\u0e17\u0e48\u0e32\u0e44\u0e23',
    '\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48',
    '\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19',
    '\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a',
    '\u0e40\u0e17\u0e48\u0e32\u0e17\u0e35\u0e48',
    '\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e17\u0e48\u0e32\u0e19\u0e35\u0e49',
    '\u0e40\u0e18\u0e2d',
    '\u0e40\u0e19\u0e49\u0e19',
    '\u0e40\u0e19\u0e35\u0e48\u0e22',
    '\u0e40\u0e19\u0e35\u0e48\u0e22\u0e40\u0e2d\u0e07',
    '\u0e40\u0e1b\u0e47\u0e19',
    '\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e1e\u0e37\u0e48\u0e2d',
    '\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e15\u0e48',
    '\u0e40\u0e1b\u0e47\u0e19\u0e14\u0e49\u0e27\u0e22',
    '\u0e40\u0e1b\u0e47\u0e19\u0e14\u0e31\u0e07',
    '\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e19',
    '\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19',
    '\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e21\u0e32\u0e01',
    '\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e32\u0e17\u0e34',
    '\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19',
    '\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07',
    '\u0e40\u0e1c\u0e37\u0e48\u0e2d',
    '\u0e40\u0e1c\u0e37\u0e48\u0e2d\u0e08\u0e30',
    '\u0e40\u0e1c\u0e37\u0e48\u0e2d\u0e17\u0e35\u0e48',
    '\u0e40\u0e1c\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32',
    '\u0e40\u0e1e\u0e23\u0e32\u0e30',
    '\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e09\u0e30\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32',
    '\u0e40\u0e1e\u0e34\u0e48\u0e07',
    '\u0e40\u0e1e\u0e34\u0e48\u0e07\u0e08\u0e30',
    '\u0e40\u0e1e\u0e34\u0e48\u0e21',
    '\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21',
    '\u0e40\u0e1e\u0e35',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e40\u0e1e\u0e37\u0e48\u0e2d',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e41\u0e04\u0e48',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e41\u0e15\u0e48',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e43\u0e14',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e44\u0e2b\u0e19',
    '\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e1e\u0e2d',
    '\u0e40\u0e1e\u0e37\u0e48\u0e2d',
    '\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49',
    '\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e17\u0e35\u0e48',
    '\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e0a\u0e49\u0e32',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e22\u0e47\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e14',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e23',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e2b\u0e23\u0e48',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e01\u0e48\u0e2d\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e23\u0e31\u0e49\u0e07',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e23\u0e31\u0e49\u0e07\u0e01\u0e48\u0e2d\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e23\u0e32\u0e27',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e23\u0e32\u0e27\u0e01\u0e48\u0e2d\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e23\u0e32\u0e27\u0e17\u0e35\u0e48',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e37\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e19\u0e35\u0e49',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e31\u0e19\u0e27\u0e32\u0e19',
    '\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e32\u0e19',
    '\u0e40\u0e22\u0e2d\u0e30',
    '\u0e40\u0e22\u0e2d\u0e30\u0e41\u0e22\u0e30',
    '\u0e40\u0e23\u0e47\u0e27',
    '\u0e40\u0e23\u0e47\u0e27\u0e46',
    '\u0e40\u0e23\u0e32',
    '\u0e40\u0e23\u0e32\u0e46',
    '\u0e40\u0e23\u0e34\u0e48\u0e21',
    '\u0e40\u0e23\u0e35\u0e22\u0e01',
    '\u0e40\u0e23\u0e35\u0e22\u0e1a',
    '\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22',
    '\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46',
    '\u0e40\u0e25\u0e47\u0e01',
    '\u0e40\u0e25\u0e47\u0e01\u0e19\u0e49\u0e2d\u0e22',
    '\u0e40\u0e25\u0e47\u0e01\u0e46',
    '\u0e40\u0e25\u0e22',
    '\u0e40\u0e25\u0e48\u0e32\u0e27\u0e48\u0e32',
    '\u0e40\u0e2a\u0e23\u0e47\u0e08',
    '\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e41\u0e25\u0e49\u0e27',
    '\u0e40\u0e2a\u0e35\u0e22\u0e41\u0e25\u0e49\u0e27',
    '\u0e40\u0e2a\u0e35\u0e22\u0e08\u0e19',
    '\u0e40\u0e2a\u0e35\u0e22\u0e14\u0e49\u0e27\u0e22',
    '\u0e40\u0e2a\u0e35\u0e22\u0e19\u0e35\u0e48',
    '\u0e40\u0e2b\u0e15\u0e38',
    '\u0e40\u0e2b\u0e15\u0e38\u0e44\u0e23',
    '\u0e40\u0e2b\u0e15\u0e38\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e2b\u0e15\u0e38\u0e19\u0e35\u0e49',
    '\u0e40\u0e2b\u0e15\u0e38\u0e21\u0e14',
    '\u0e40\u0e2b\u0e47\u0e19\u0e41\u0e01\u0e48',
    '\u0e40\u0e2b\u0e47\u0e19\u0e04\u0e27\u0e23',
    '\u0e40\u0e2b\u0e47\u0e19\u0e08\u0e30',
    '\u0e40\u0e2b\u0e47\u0e19\u0e27\u0e48\u0e32',
    '\u0e40\u0e2b\u0e25\u0e48\u0e32',
    '\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19',
    '\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49',
    '\u0e40\u0e2b\u0e25\u0e37\u0e2d',
    '\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e40\u0e01\u0e34\u0e19',
    '\u0e40\u0e2d\u0e07',
    '\u0e40\u0e2d\u0e47\u0e07',
    '\u0e40\u0e2d\u0e32',
    '\u0e41\u0e01',
    '\u0e41\u0e01\u0e48',
    '\u0e41\u0e01\u0e49\u0e44\u0e02',
    '\u0e41\u0e04\u0e48',
    '\u0e41\u0e04\u0e48\u0e40\u0e1e\u0e35\u0e22\u0e07',
    '\u0e41\u0e04\u0e48\u0e44\u0e2b\u0e19',
    '\u0e41\u0e04\u0e48\u0e08\u0e30',
    '\u0e41\u0e04\u0e48\u0e19\u0e31\u0e49\u0e19',
    '\u0e41\u0e04\u0e48\u0e19\u0e35\u0e49',
    '\u0e41\u0e04\u0e48\u0e27\u0e48\u0e32',
    '\u0e41\u0e14\u0e48',
    '\u0e41\u0e15\u0e48',
    '\u0e41\u0e15\u0e48\u0e40\u0e14\u0e34\u0e21',
    '\u0e41\u0e15\u0e48\u0e40\u0e1e\u0e35\u0e22\u0e07',
    '\u0e41\u0e15\u0e48\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e41\u0e15\u0e48\u0e44\u0e23',
    '\u0e41\u0e15\u0e48\u0e44\u0e2b\u0e19',
    '\u0e41\u0e15\u0e48\u0e01\u0e47',
    '\u0e41\u0e15\u0e48\u0e01\u0e48\u0e2d\u0e19',
    '\u0e41\u0e15\u0e48\u0e08\u0e30',
    '\u0e41\u0e15\u0e48\u0e15\u0e49\u0e2d\u0e07',
    '\u0e41\u0e15\u0e48\u0e16\u0e49\u0e32',
    '\u0e41\u0e15\u0e48\u0e17\u0e27\u0e48\u0e32',
    '\u0e41\u0e15\u0e48\u0e17\u0e35\u0e48',
    '\u0e41\u0e15\u0e48\u0e19\u0e31\u0e49\u0e19',
    '\u0e41\u0e15\u0e48\u0e25\u0e30',
    '\u0e41\u0e15\u0e48\u0e27\u0e48\u0e32',
    '\u0e41\u0e15\u0e48\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e14',
    '\u0e41\u0e17\u0e49',
    '\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07',
    '\u0e41\u0e1a\u0e1a',
    '\u0e41\u0e21\u0e49',
    '\u0e41\u0e21\u0e49\u0e41\u0e15\u0e48',
    '\u0e41\u0e21\u0e49\u0e01\u0e23\u0e30\u0e17\u0e31\u0e48\u0e07',
    '\u0e41\u0e21\u0e49\u0e19\u0e27\u0e48\u0e32',
    '\u0e41\u0e21\u0e49\u0e27\u0e48\u0e32',
    '\u0e41\u0e22\u0e30',
    '\u0e41\u0e25\u0e49\u0e27',
    '\u0e41\u0e25\u0e49\u0e27\u0e40\u0e2a\u0e23\u0e47\u0e08',
    '\u0e41\u0e25\u0e49\u0e27\u0e41\u0e15\u0e48',
    '\u0e41\u0e25\u0e49\u0e27\u0e01\u0e31\u0e19',
    '\u0e41\u0e2a\u0e14\u0e07',
    '\u0e41\u0e2a\u0e14\u0e07\u0e27\u0e48\u0e32',
    '\u0e41\u0e2b\u0e48\u0e07',
    '\u0e41\u0e2b\u0e48\u0e07\u0e42\u0e19\u0e49\u0e19',
    '\u0e41\u0e2b\u0e48\u0e07\u0e43\u0e14',
    '\u0e41\u0e2b\u0e48\u0e07\u0e44\u0e2b\u0e19',
    '\u0e41\u0e2b\u0e48\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e41\u0e2b\u0e48\u0e07\u0e19\u0e35\u0e49',
    '\u0e41\u0e2b\u0e25\u0e30',
    '\u0e42\u0e14\u0e22',
    '\u0e42\u0e14\u0e22\u0e40\u0e09\u0e1e\u0e32\u0e30',
    '\u0e42\u0e14\u0e22\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e2d\u0e22\u0e48\u0e32\u0e07',
    '\u0e42\u0e14\u0e22\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e42\u0e14\u0e22\u0e40\u0e23\u0e47\u0e27',
    '\u0e42\u0e14\u0e22\u0e41\u0e17\u0e49',
    '\u0e42\u0e14\u0e22\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07',
    '\u0e42\u0e14\u0e22\u0e07\u0e48\u0e32\u0e22',
    '\u0e42\u0e14\u0e22\u0e14\u0e35',
    '\u0e42\u0e14\u0e22\u0e14\u0e38\u0e29\u0e0e\u0e35',
    '\u0e42\u0e14\u0e22\u0e15\u0e25\u0e2d\u0e14',
    '\u0e42\u0e14\u0e22\u0e17\u0e31\u0e48\u0e27',
    '\u0e42\u0e14\u0e22\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b',
    '\u0e42\u0e14\u0e22\u0e17\u0e31\u0e48\u0e27\u0e01\u0e31\u0e19',
    '\u0e42\u0e14\u0e22\u0e17\u0e31\u0e48\u0e27\u0e16\u0e36\u0e07',
    '\u0e42\u0e14\u0e22\u0e17\u0e35\u0e48',
    '\u0e42\u0e14\u0e22\u0e19\u0e31\u0e22',
    '\u0e42\u0e14\u0e22\u0e1b\u0e01\u0e15\u0e34',
    '\u0e42\u0e14\u0e22\u0e21\u0e31\u0e01',
    '\u0e42\u0e14\u0e22\u0e21\u0e31\u0e01\u0e08\u0e30',
    '\u0e42\u0e14\u0e22\u0e21\u0e32\u0e01',
    '\u0e42\u0e14\u0e22\u0e23\u0e27\u0e21',
    '\u0e42\u0e14\u0e22\u0e23\u0e27\u0e21\u0e46',
    '\u0e42\u0e14\u0e22\u0e25\u0e30\u0e21\u0e48\u0e2d\u0e21',
    '\u0e42\u0e14\u0e22\u0e25\u0e4d\u0e32\u0e14\u0e31\u0e1a',
    '\u0e42\u0e14\u0e22\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48',
    '\u0e42\u0e14\u0e22\u0e2a\u0e48\u0e27\u0e19\u0e21\u0e32\u0e01',
    '\u0e42\u0e14\u0e22\u0e2a\u0e48\u0e27\u0e19\u0e23\u0e27\u0e21',
    '\u0e42\u0e15',
    '\u0e42\u0e15\u0e46',
    '\u0e43\u0e01\u0e25\u0e49',
    '\u0e43\u0e01\u0e25\u0e49\u0e46',
    '\u0e43\u0e04\u0e23',
    '\u0e43\u0e04\u0e23\u0e48',
    '\u0e43\u0e04\u0e23\u0e48\u0e08\u0e30',
    '\u0e43\u0e0a\u0e48',
    '\u0e43\u0e0a\u0e49',
    '\u0e43\u0e0a\u0e48\u0e44\u0e2b\u0e21',
    '\u0e43\u0e14',
    '\u0e43\u0e14\u0e46',
    '\u0e43\u0e15\u0e49',
    '\u0e43\u0e19',
    '\u0e43\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e43\u0e19\u0e0a\u0e48\u0e27\u0e07',
    '\u0e43\u0e19\u0e17\u0e35\u0e48',
    '\u0e43\u0e19\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07',
    '\u0e43\u0e2b\u0e49',
    '\u0e43\u0e2b\u0e49\u0e41\u0e01\u0e48',
    '\u0e43\u0e2b\u0e0d\u0e48',
    '\u0e43\u0e2b\u0e0d\u0e48\u0e42\u0e15',
    '\u0e44\u0e01\u0e25',
    '\u0e44\u0e01\u0e25\u0e46',
    '\u0e44\u0e07',
    '\u0e44\u0e09\u0e19',
    '\u0e44\u0e14\u0e49',
    '\u0e44\u0e14\u0e49\u0e41\u0e01\u0e48',
    '\u0e44\u0e14\u0e49\u0e41\u0e15\u0e48',
    '\u0e44\u0e14\u0e49\u0e17\u0e35\u0e48',
    '\u0e44\u0e14\u0e49\u0e21\u0e32',
    '\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a',
    '\u0e44\u0e1b',
    '\u0e44\u0e21\u0e48',
    '\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e23',
    '\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48',
    '\u0e44\u0e21\u0e48\u0e04\u0e48\u0e2d\u0e22',
    '\u0e44\u0e21\u0e48\u0e04\u0e48\u0e2d\u0e22\u0e40\u0e1b\u0e47\u0e19',
    '\u0e44\u0e21\u0e48\u0e04\u0e48\u0e2d\u0e22\u0e08\u0e30',
    '\u0e44\u0e21\u0e48\u0e27\u0e48\u0e32',
    '\u0e44\u0e23',
    '\u0e44\u0e2b\u0e19',
    '\u0e44\u0e2b\u0e19\u0e46',
    '\u0e01\u0e47',
    '\u0e01\u0e47\u0e41\u0e04\u0e48',
    '\u0e01\u0e47\u0e41\u0e25\u0e49\u0e27\u0e41\u0e15\u0e48',
    '\u0e01\u0e47\u0e44\u0e14\u0e49',
    '\u0e01\u0e47\u0e04\u0e37\u0e2d',
    '\u0e01\u0e47\u0e08\u0e30',
    '\u0e01\u0e47\u0e14\u0e35',
    '\u0e01\u0e47\u0e15\u0e48\u0e2d\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e01\u0e47\u0e15\u0e32\u0e21',
    '\u0e01\u0e47\u0e15\u0e32\u0e21\u0e41\u0e15\u0e48',
    '\u0e01\u0e47\u0e15\u0e32\u0e21\u0e17\u0e35',
    '\u0e01\u0e23\u0e30\u0e17\u0e31\u0e48\u0e07',
    '\u0e01\u0e23\u0e30\u0e17\u0e4d\u0e32',
    '\u0e01\u0e23\u0e30\u0e19\u0e31\u0e49\u0e19',
    '\u0e01\u0e23\u0e30\u0e1c\u0e21',
    '\u0e01\u0e25\u0e31\u0e1a',
    '\u0e01\u0e25\u0e48\u0e32\u0e27',
    '\u0e01\u0e25\u0e48\u0e32\u0e27\u0e04\u0e37\u0e2d',
    '\u0e01\u0e25\u0e38\u0e48\u0e21',
    '\u0e01\u0e25\u0e38\u0e48\u0e21\u0e01\u0e49\u0e2d\u0e19',
    '\u0e01\u0e25\u0e38\u0e48\u0e21\u0e46',
    '\u0e01\u0e27\u0e48\u0e32',
    '\u0e01\u0e27\u0e49\u0e32\u0e07',
    '\u0e01\u0e27\u0e49\u0e32\u0e07\u0e02\u0e27\u0e32\u0e07',
    '\u0e01\u0e27\u0e49\u0e32\u0e07\u0e46',
    '\u0e01\u0e48\u0e2d\u0e19',
    '\u0e01\u0e48\u0e2d\u0e19\u0e2b\u0e19\u0e49\u0e32',
    '\u0e01\u0e48\u0e2d\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e19\u0e35\u0e49',
    '\u0e01\u0e48\u0e2d\u0e19\u0e46',
    '\u0e01\u0e31\u0e19',
    '\u0e01\u0e31\u0e19\u0e40\u0e16\u0e2d\u0e30',
    '\u0e01\u0e31\u0e19\u0e40\u0e2d\u0e07',
    '\u0e01\u0e31\u0e19\u0e41\u0e25\u0e30\u0e01\u0e31\u0e19',
    '\u0e01\u0e31\u0e19\u0e44\u0e2b\u0e21',
    '\u0e01\u0e31\u0e19\u0e14\u0e35\u0e44\u0e2b\u0e21',
    '\u0e01\u0e31\u0e19\u0e14\u0e35\u0e01\u0e27\u0e48\u0e32',
    '\u0e01\u0e31\u0e19\u0e19\u0e30',
    '\u0e01\u0e31\u0e1a',
    '\u0e01\u0e32\u0e23',
    '\u0e01\u0e4d\u0e32\u0e25\u0e31\u0e07',
    '\u0e01\u0e4d\u0e32\u0e25\u0e31\u0e07\u0e08\u0e30',
    '\u0e01\u0e4d\u0e32\u0e2b\u0e19\u0e14',
    '\u0e01\u0e39',
    '\u0e02\u0e13\u0e30',
    '\u0e02\u0e13\u0e30\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19',
    '\u0e02\u0e13\u0e30\u0e43\u0e14',
    '\u0e02\u0e13\u0e30\u0e43\u0e14\u0e46',
    '\u0e02\u0e13\u0e30\u0e17\u0e35\u0e48',
    '\u0e02\u0e13\u0e30\u0e19\u0e31\u0e49\u0e19',
    '\u0e02\u0e13\u0e30\u0e19\u0e35\u0e49',
    '\u0e02\u0e13\u0e30\u0e2b\u0e19\u0e36\u0e48\u0e07',
    '\u0e02\u0e27\u0e32\u0e07',
    '\u0e02\u0e27\u0e32\u0e07\u0e46',
    '\u0e02\u0e2d',
    '\u0e02\u0e2d\u0e07',
    '\u0e02\u0e31\u0e49\u0e19',
    '\u0e02\u0e49\u0e32',
    '\u0e02\u0e49\u0e32\u0e07',
    '\u0e02\u0e49\u0e32\u0e07\u0e40\u0e04\u0e35\u0e22\u0e07',
    '\u0e02\u0e49\u0e32\u0e07\u0e15\u0e49\u0e19',
    '\u0e02\u0e49\u0e32\u0e07\u0e1a\u0e19',
    '\u0e02\u0e49\u0e32\u0e07\u0e25\u0e48\u0e32\u0e07',
    '\u0e02\u0e49\u0e32\u0e07\u0e46',
    '\u0e02\u0e32\u0e14',
    '\u0e02\u0e49\u0e32\u0e1e\u0e40\u0e08\u0e49\u0e32',
    '\u0e02\u0e49\u0e32\u0e2f',
    '\u0e02\u0e36\u0e49\u0e19',
    '\u0e04\u0e07',
    '\u0e04\u0e07\u0e08\u0e30',
    '\u0e04\u0e07\u0e2d\u0e22\u0e39\u0e48',
    '\u0e04\u0e23\u0e1a',
    '\u0e04\u0e23\u0e1a\u0e04\u0e23\u0e31\u0e19',
    '\u0e04\u0e23\u0e1a\u0e16\u0e49\u0e27\u0e19',
    '\u0e04\u0e23\u0e31\u0e49\u0e07',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e43\u0e14',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e44\u0e2b\u0e19',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e01\u0e23\u0e30\u0e19\u0e31\u0e49\u0e19',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e01\u0e48\u0e2d\u0e19',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e04\u0e23\u0e32',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e04\u0e23\u0e32\u0e27',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e19\u0e35\u0e49',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e25\u0e30',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e2b\u0e19\u0e36\u0e48\u0e07',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e2b\u0e25\u0e31\u0e07',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e2b\u0e25\u0e31\u0e07\u0e2a\u0e38\u0e14',
    '\u0e04\u0e23\u0e31\u0e49\u0e07\u0e46',
    '\u0e04\u0e23\u0e31\u0e19',
    '\u0e04\u0e23\u0e31\u0e1a',
    '\u0e04\u0e23\u0e32',
    '\u0e04\u0e23\u0e32\u0e43\u0e14',
    '\u0e04\u0e23\u0e32\u0e44\u0e2b\u0e19',
    '\u0e04\u0e23\u0e32\u0e17\u0e35\u0e48',
    '\u0e04\u0e23\u0e32\u0e19\u0e31\u0e49\u0e19',
    '\u0e04\u0e23\u0e32\u0e19\u0e35\u0e49',
    '\u0e04\u0e23\u0e32\u0e27',
    '\u0e04\u0e23\u0e32\u0e27\u0e42\u0e19\u0e49\u0e19',
    '\u0e04\u0e23\u0e32\u0e27\u0e43\u0e14',
    '\u0e04\u0e23\u0e32\u0e27\u0e44\u0e2b\u0e19',
    '\u0e04\u0e23\u0e32\u0e27\u0e01\u0e48\u0e2d\u0e19',
    '\u0e04\u0e23\u0e32\u0e27\u0e17\u0e35\u0e48',
    '\u0e04\u0e23\u0e32\u0e27\u0e19\u0e31\u0e49\u0e19',
    '\u0e04\u0e23\u0e32\u0e27\u0e19\u0e35\u0e49',
    '\u0e04\u0e23\u0e32\u0e27\u0e25\u0e30',
    '\u0e04\u0e23\u0e32\u0e27\u0e2b\u0e19\u0e49\u0e32',
    '\u0e04\u0e23\u0e32\u0e27\u0e2b\u0e19\u0e36\u0e48\u0e07',
    '\u0e04\u0e23\u0e32\u0e27\u0e2b\u0e25\u0e31\u0e07',
    '\u0e04\u0e23\u0e32\u0e27\u0e46',
    '\u0e04\u0e23\u0e32\u0e2b\u0e19\u0e36\u0e48\u0e07',
    '\u0e04\u0e25\u0e49\u0e32\u0e22',
    '\u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e19',
    '\u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a',
    '\u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e1a',
    '\u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e1a\u0e27\u0e48\u0e32',
    '\u0e04\u0e25\u0e49\u0e32\u0e22\u0e27\u0e48\u0e32',
    '\u0e04\u0e27\u0e23',
    '\u0e04\u0e27\u0e32\u0e21',
    '\u0e04\u0e48\u0e2d\u0e19',
    '\u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07',
    '\u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07\u0e08\u0e30',
    '\u0e04\u0e48\u0e2d\u0e19\u0e21\u0e32\u0e17\u0e32\u0e07',
    '\u0e04\u0e48\u0e2d\u0e22',
    '\u0e04\u0e48\u0e2d\u0e22\u0e44\u0e1b\u0e17\u0e32\u0e07',
    '\u0e04\u0e48\u0e2d\u0e22\u0e46',
    '\u0e04\u0e30',
    '\u0e04\u0e48\u0e30',
    '\u0e04\u0e4d\u0e32',
    '\u0e04\u0e34\u0e14',
    '\u0e04\u0e34\u0e14\u0e27\u0e48\u0e32',
    '\u0e04\u0e37\u0e2d',
    '\u0e04\u0e38\u0e13',
    '\u0e04\u0e38\u0e13\u0e46',
    '\u0e07\u0e48\u0e32\u0e22',
    '\u0e07\u0e48\u0e32\u0e22\u0e46',
    '\u0e08\u0e07',
    '\u0e08\u0e14',
    '\u0e08\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e08\u0e19\u0e41\u0e21\u0e49',
    '\u0e08\u0e19\u0e41\u0e21\u0e49\u0e19',
    '\u0e08\u0e19\u0e01\u0e23\u0e30\u0e17\u0e31\u0e48\u0e07',
    '\u0e08\u0e19\u0e01\u0e27\u0e48\u0e32',
    '\u0e08\u0e19\u0e02\u0e13\u0e30\u0e19\u0e35\u0e49',
    '\u0e08\u0e19\u0e15\u0e25\u0e2d\u0e14',
    '\u0e08\u0e19\u0e16\u0e36\u0e07',
    '\u0e08\u0e19\u0e17\u0e31\u0e48\u0e27',
    '\u0e08\u0e19\u0e1a\u0e31\u0e14\u0e19\u0e35\u0e49',
    '\u0e08\u0e23\u0e14',
    '\u0e08\u0e23\u0e14\u0e01\u0e31\u0e1a',
    '\u0e08\u0e23\u0e34\u0e07',
    '\u0e08\u0e23\u0e34\u0e07\u0e08\u0e31\u0e07',
    '\u0e08\u0e23\u0e34\u0e07\u0e46',
    '\u0e08\u0e23\u0e34\u0e07\u0e46',
    '\u0e08\u0e27\u0e19',
    '\u0e08\u0e27\u0e19\u0e40\u0e08\u0e35\u0e22\u0e19',
    '\u0e08\u0e27\u0e19\u0e08\u0e30',
    '\u0e08\u0e27\u0e1a',
    '\u0e08\u0e27\u0e1a\u0e01\u0e31\u0e1a',
    '\u0e08\u0e27\u0e1a\u0e08\u0e19',
    '\u0e08\u0e30',
    '\u0e08\u0e49\u0e30',
    '\u0e08\u0e4a\u0e30',
    '\u0e08\u0e30\u0e44\u0e14\u0e49',
    '\u0e08\u0e31\u0e07',
    '\u0e08\u0e31\u0e07\u0e46',
    '\u0e08\u0e31\u0e07\u0e46',
    '\u0e08\u0e31\u0e14',
    '\u0e08\u0e31\u0e14\u0e41\u0e08\u0e07',
    '\u0e08\u0e31\u0e14\u0e43\u0e2b\u0e49',
    '\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23',
    '\u0e08\u0e31\u0e14\u0e07\u0e32\u0e19',
    '\u0e08\u0e31\u0e14\u0e15\u0e31\u0e49\u0e07',
    '\u0e08\u0e31\u0e14\u0e17\u0e4d\u0e32',
    '\u0e08\u0e31\u0e14\u0e2b\u0e32',
    '\u0e08\u0e31\u0e1a',
    '\u0e08\u0e49\u0e32',
    '\u0e08\u0e49\u0e32',
    '\u0e08\u0e4d\u0e32',
    '\u0e08\u0e4d\u0e32\u0e40\u0e1b\u0e47\u0e19',
    '\u0e08\u0e32\u0e01',
    '\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19',
    '\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49',
    '\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49\u0e44\u0e1b',
    '\u0e08\u0e4d\u0e32\u0e1e\u0e27\u0e01',
    '\u0e08\u0e36\u0e07',
    '\u0e08\u0e36\u0e07\u0e40\u0e1b\u0e47\u0e19',
    '\u0e08\u0e36\u0e07\u0e08\u0e30',
    '\u0e08\u0e39\u0e48\u0e46',
    '\u0e09\u0e30\u0e19\u0e31\u0e49\u0e19',
    '\u0e09\u0e30\u0e19\u0e35\u0e49',
    '\u0e09\u0e31\u0e19',
    '\u0e0a\u0e48\u0e27\u0e07',
    '\u0e0a\u0e48\u0e27\u0e07\u0e41\u0e23\u0e01',
    '\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e48\u0e2d\u0e19',
    '\u0e0a\u0e48\u0e27\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b',
    '\u0e0a\u0e48\u0e27\u0e07\u0e16\u0e31\u0e14\u0e44\u0e1b',
    '\u0e0a\u0e48\u0e27\u0e07\u0e17\u0e49\u0e32\u0e22',
    '\u0e0a\u0e48\u0e27\u0e07\u0e17\u0e35\u0e48',
    '\u0e0a\u0e48\u0e27\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e0a\u0e48\u0e27\u0e07\u0e19\u0e35\u0e49',
    '\u0e0a\u0e48\u0e27\u0e07\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07',
    '\u0e0a\u0e48\u0e27\u0e07\u0e2b\u0e19\u0e49\u0e32',
    '\u0e0a\u0e48\u0e27\u0e07\u0e2b\u0e25\u0e31\u0e07',
    '\u0e0a\u0e48\u0e27\u0e07\u0e46',
    '\u0e0a\u0e48\u0e27\u0e22',
    '\u0e0a\u0e49\u0e32',
    '\u0e0a\u0e49\u0e32\u0e19\u0e32\u0e19',
    '\u0e0a\u0e32\u0e27',
    '\u0e0a\u0e49\u0e32\u0e46',
    '\u0e0b\u0e30',
    '\u0e0b\u0e30\u0e01\u0e48\u0e2d\u0e19',
    '\u0e0b\u0e30\u0e08\u0e19',
    '\u0e0b\u0e30\u0e08\u0e19\u0e01\u0e23\u0e30\u0e17\u0e31\u0e48\u0e07',
    '\u0e0b\u0e30\u0e08\u0e19\u0e16\u0e36\u0e07',
    '\u0e0b\u0e36\u0e48\u0e07',
    '\u0e0b\u0e36\u0e48\u0e07\u0e44\u0e14\u0e49\u0e41\u0e01\u0e48',
    '\u0e0b\u0e36\u0e48\u0e07\u0e01\u0e47',
    '\u0e0b\u0e36\u0e48\u0e07\u0e01\u0e47\u0e04\u0e37\u0e2d',
    '\u0e0b\u0e36\u0e48\u0e07\u0e01\u0e31\u0e19',
    '\u0e0b\u0e36\u0e48\u0e07\u0e01\u0e31\u0e19\u0e41\u0e25\u0e30\u0e01\u0e31\u0e19',
    '\u0e0b\u0e36\u0e48\u0e07\u0e46',
    '\u0e13',
    '\u0e14\u0e49\u0e27\u0e22',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e0a\u0e48\u0e19\u0e01\u0e31\u0e19',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e1e\u0e23\u0e32\u0e30',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e2b\u0e15\u0e38\u0e40\u0e1e\u0e23\u0e32\u0e30',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e2b\u0e15\u0e38\u0e17\u0e35\u0e48',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e2b\u0e15\u0e38\u0e19\u0e31\u0e49\u0e19',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e2b\u0e15\u0e38\u0e19\u0e35\u0e49',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e2b\u0e15\u0e38\u0e27\u0e48\u0e32',
    '\u0e14\u0e49\u0e27\u0e22\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19',
    '\u0e14\u0e49\u0e27\u0e22\u0e01\u0e31\u0e19',
    '\u0e14\u0e49\u0e27\u0e22\u0e17\u0e35\u0e48',
    '\u0e14\u0e49\u0e27\u0e22\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e09\u0e30\u0e19\u0e35\u0e49',
    '\u0e14\u0e49\u0e27\u0e22\u0e27\u0e48\u0e32',
    '\u0e14\u0e31\u0e07',
    '\u0e14\u0e31\u0e48\u0e07',
    '\u0e14\u0e31\u0e07\u0e40\u0e01\u0e48\u0e32',
    '\u0e14\u0e31\u0e48\u0e07\u0e40\u0e01\u0e48\u0e32',
    '\u0e14\u0e31\u0e07\u0e40\u0e04\u0e22',
    '\u0e14\u0e31\u0e48\u0e07\u0e40\u0e04\u0e22',
    '\u0e14\u0e31\u0e07\u0e40\u0e0a\u0e48\u0e19',
    '\u0e14\u0e31\u0e48\u0e07\u0e40\u0e0a\u0e48\u0e19',
    '\u0e14\u0e31\u0e07\u0e40\u0e0a\u0e48\u0e19\u0e17\u0e35\u0e48',
    '\u0e14\u0e31\u0e48\u0e07\u0e40\u0e0a\u0e48\u0e19\u0e17\u0e35\u0e48',
    '\u0e14\u0e31\u0e07\u0e40\u0e14\u0e34\u0e21',
    '\u0e14\u0e31\u0e48\u0e07\u0e40\u0e14\u0e34\u0e21',
    '\u0e14\u0e31\u0e07\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19',
    '\u0e14\u0e31\u0e48\u0e07\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19',
    '\u0e14\u0e31\u0e07\u0e41\u0e15\u0e48\u0e01\u0e48\u0e2d\u0e19',
    '\u0e14\u0e31\u0e48\u0e07\u0e41\u0e15\u0e48\u0e01\u0e48\u0e2d\u0e19',
    '\u0e14\u0e31\u0e07\u0e41\u0e21\u0e49',
    '\u0e14\u0e31\u0e48\u0e07\u0e41\u0e21\u0e49',
    '\u0e14\u0e31\u0e07\u0e01\u0e25\u0e48\u0e32\u0e27',
    '\u0e14\u0e31\u0e07\u0e01\u0e31\u0e1a',
    '\u0e14\u0e31\u0e48\u0e07\u0e01\u0e31\u0e1a',
    '\u0e14\u0e31\u0e07\u0e01\u0e31\u0e1a\u0e27\u0e48\u0e32',
    '\u0e14\u0e31\u0e48\u0e07\u0e01\u0e31\u0e1a\u0e27\u0e48\u0e32',
    '\u0e14\u0e31\u0e07\u0e08\u0e30',
    '\u0e14\u0e31\u0e48\u0e07\u0e08\u0e30',
    '\u0e14\u0e31\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49',
    '\u0e14\u0e31\u0e07\u0e17\u0e35\u0e48',
    '\u0e14\u0e31\u0e48\u0e07\u0e17\u0e35\u0e48',
    '\u0e14\u0e31\u0e07\u0e17\u0e35\u0e48\u0e40\u0e04\u0e22',
    '\u0e14\u0e31\u0e07\u0e17\u0e35\u0e48\u0e01\u0e25\u0e48\u0e32\u0e27',
    '\u0e14\u0e31\u0e07\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19',
    '\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49',
    '\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\u0e40\u0e0a\u0e48\u0e19',
    '\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\u0e40\u0e1e\u0e23\u0e32\u0e30',
    '\u0e14\u0e31\u0e07\u0e27\u0e48\u0e32',
    '\u0e14\u0e31\u0e48\u0e07\u0e27\u0e48\u0e32',
    '\u0e14\u0e4d\u0e32\u0e40\u0e19\u0e34\u0e19',
    '\u0e14\u0e4d\u0e32\u0e40\u0e19\u0e34\u0e19\u0e44\u0e1b',
    '\u0e14\u0e4d\u0e32\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23',
    '\u0e14\u0e4d\u0e32\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19',
    '\u0e14\u0e49\u0e32\u0e19',
    '\u0e14\u0e49\u0e32\u0e19\u0e46',
    '\u0e14\u0e34\u0e09\u0e31\u0e19',
    '\u0e14\u0e35',
    '\u0e14\u0e35\u0e46',
    '\u0e14\u0e39',
    '\u0e14\u0e39\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19',
    '\u0e14\u0e39\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e27\u0e48\u0e32',
    '\u0e14\u0e39\u0e41\u0e25',
    '\u0e14\u0e39\u0e41\u0e25\u0e49\u0e27',
    '\u0e14\u0e39\u0e08\u0e30',
    '\u0e14\u0e39\u0e27\u0e48\u0e32',
    '\u0e14\u0e39\u0e46',
    '\u0e15\u0e19',
    '\u0e15\u0e19\u0e40\u0e2d\u0e07',
    '\u0e15\u0e19\u0e2f',
    '\u0e15\u0e23\u0e07',
    '\u0e15\u0e23\u0e07\u0e46',
    '\u0e15\u0e25\u0e2d\u0e14',
    '\u0e15\u0e25\u0e2d\u0e14\u0e40\u0e27\u0e25\u0e32',
    '\u0e15\u0e25\u0e2d\u0e14\u0e44\u0e1b',
    '\u0e15\u0e25\u0e2d\u0e14\u0e01\u0e32\u0e25',
    '\u0e15\u0e25\u0e2d\u0e14\u0e01\u0e32\u0e25\u0e19\u0e32\u0e19',
    '\u0e15\u0e25\u0e2d\u0e14\u0e08\u0e19',
    '\u0e15\u0e25\u0e2d\u0e14\u0e16\u0e36\u0e07',
    '\u0e15\u0e25\u0e2d\u0e14\u0e17\u0e31\u0e49\u0e07',
    '\u0e15\u0e25\u0e2d\u0e14\u0e17\u0e31\u0e48\u0e27',
    '\u0e15\u0e25\u0e2d\u0e14\u0e17\u0e31\u0e48\u0e27\u0e16\u0e36\u0e07',
    '\u0e15\u0e25\u0e2d\u0e14\u0e17\u0e31\u0e48\u0e27\u0e17\u0e31\u0e49\u0e07',
    '\u0e15\u0e25\u0e2d\u0e14\u0e1b\u0e35',
    '\u0e15\u0e25\u0e2d\u0e14\u0e21\u0e32',
    '\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32',
    '\u0e15\u0e25\u0e2d\u0e14\u0e27\u0e31\u0e19',
    '\u0e15\u0e25\u0e2d\u0e14\u0e28\u0e01',
    '\u0e15\u0e48\u0e2d',
    '\u0e15\u0e48\u0e2d\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e15\u0e48\u0e2d\u0e43\u0e2b\u0e49',
    '\u0e15\u0e48\u0e2d\u0e44\u0e1b',
    '\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49',
    '\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e19',
    '\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e1a',
    '\u0e15\u0e49\u0e2d\u0e07',
    '\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23',
    '\u0e15\u0e48\u0e2d\u0e08\u0e32\u0e01',
    '\u0e15\u0e2d\u0e19',
    '\u0e15\u0e2d\u0e19\u0e41\u0e23\u0e01',
    '\u0e15\u0e2d\u0e19\u0e43\u0e14',
    '\u0e15\u0e2d\u0e19\u0e44\u0e2b\u0e19',
    '\u0e15\u0e2d\u0e19\u0e01\u0e48\u0e2d\u0e19',
    '\u0e15\u0e2d\u0e19\u0e15\u0e48\u0e2d',
    '\u0e15\u0e2d\u0e19\u0e15\u0e48\u0e2d\u0e44\u0e1b',
    '\u0e15\u0e2d\u0e19\u0e15\u0e48\u0e2d\u0e21\u0e32',
    '\u0e15\u0e2d\u0e19\u0e16\u0e31\u0e14\u0e44\u0e1b',
    '\u0e15\u0e2d\u0e19\u0e16\u0e31\u0e14\u0e21\u0e32',
    '\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48',
    '\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e41\u0e25\u0e49\u0e27',
    '\u0e15\u0e2d\u0e19\u0e19\u0e31\u0e49\u0e19',
    '\u0e15\u0e2d\u0e19\u0e19\u0e35\u0e49',
    '\u0e15\u0e2d\u0e19\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22',
    '\u0e15\u0e2d\u0e19\u0e2b\u0e19\u0e49\u0e32',
    '\u0e15\u0e2d\u0e19\u0e2b\u0e25\u0e31\u0e07',
    '\u0e15\u0e2d\u0e19\u0e46',
    '\u0e15\u0e48\u0e2d\u0e21\u0e32',
    '\u0e15\u0e48\u0e2d\u0e27\u0e48\u0e32',
    '\u0e15\u0e48\u0e2d\u0e46',
    '\u0e15\u0e30\u0e2b\u0e32\u0e01',
    '\u0e15\u0e31\u0e49\u0e07',
    '\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48',
    '\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e41\u0e23\u0e01',
    '\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e19\u0e31\u0e49\u0e19',
    '\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e19\u0e35\u0e49',
    '\u0e15\u0e31\u0e49\u0e07\u0e15\u0e49\u0e19',
    '\u0e15\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48',
    '\u0e15\u0e31\u0e49\u0e07\u0e2d\u0e22\u0e39\u0e48',
    '\u0e15\u0e31\u0e27',
    '\u0e15\u0e31\u0e27\u0e40\u0e2d\u0e07',
    '\u0e15\u0e31\u0e27\u0e42\u0e19\u0e49\u0e19',
    '\u0e15\u0e31\u0e27\u0e43\u0e14',
    '\u0e15\u0e31\u0e27\u0e44\u0e2b\u0e19',
    '\u0e15\u0e31\u0e27\u0e17\u0e35\u0e48',
    '\u0e15\u0e31\u0e27\u0e19\u0e31\u0e49\u0e19',
    '\u0e15\u0e31\u0e27\u0e19\u0e35\u0e49',
    '\u0e15\u0e31\u0e27\u0e25\u0e30',
    '\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e0a\u0e48\u0e19',
    '\u0e15\u0e31\u0e27\u0e46',
    '\u0e15\u0e48\u0e32\u0e07',
    '\u0e15\u0e48\u0e32\u0e07\u0e01\u0e47',
    '\u0e15\u0e48\u0e32\u0e07\u0e2b\u0e32\u0e01',
    '\u0e15\u0e48\u0e32\u0e07\u0e46',
    '\u0e15\u0e32\u0e21',
    '\u0e15\u0e32\u0e21\u0e41\u0e15\u0e48',
    '\u0e15\u0e32\u0e21\u0e14\u0e49\u0e27\u0e22',
    '\u0e15\u0e32\u0e21\u0e17\u0e35\u0e48',
    '\u0e15\u0e32\u0e21\u0e46',
    '\u0e16\u0e49\u0e32',
    '\u0e16\u0e49\u0e32\u0e08\u0e30',
    '\u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01',
    '\u0e16\u0e36\u0e07',
    '\u0e16\u0e36\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e16\u0e36\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e14',
    '\u0e16\u0e36\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e23',
    '\u0e16\u0e36\u0e07\u0e41\u0e01\u0e48',
    '\u0e16\u0e36\u0e07\u0e41\u0e21\u0e49',
    '\u0e16\u0e36\u0e07\u0e41\u0e21\u0e49\u0e08\u0e30',
    '\u0e16\u0e36\u0e07\u0e41\u0e21\u0e49\u0e27\u0e48\u0e32',
    '\u0e16\u0e36\u0e07\u0e08\u0e30',
    '\u0e16\u0e36\u0e07\u0e1a\u0e31\u0e14\u0e19\u0e31\u0e49\u0e19',
    '\u0e16\u0e36\u0e07\u0e1a\u0e31\u0e14\u0e19\u0e35\u0e49',
    '\u0e16\u0e36\u0e07\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23',
    '\u0e16\u0e37\u0e2d',
    '\u0e16\u0e37\u0e2d\u0e27\u0e48\u0e32',
    '\u0e16\u0e39\u0e01',
    '\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07',
    '\u0e16\u0e39\u0e01\u0e46',
    '\u0e17\u0e23\u0e07',
    '\u0e17\u0e27\u0e48\u0e32',
    '\u0e17\u0e31\u0e49\u0e07',
    '\u0e17\u0e31\u0e49\u0e07\u0e40\u0e1b\u0e47\u0e19',
    '\u0e17\u0e31\u0e49\u0e07\u0e04\u0e19',
    '\u0e17\u0e31\u0e49\u0e07\u0e15\u0e31\u0e27',
    '\u0e17\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48',
    '\u0e17\u0e31\u0e49\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e17\u0e31\u0e49\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e1e\u0e23\u0e32\u0e30',
    '\u0e17\u0e31\u0e49\u0e07\u0e19\u0e31\u0e49\u0e19\u0e14\u0e49\u0e27\u0e22',
    '\u0e17\u0e31\u0e49\u0e07\u0e19\u0e35\u0e49',
    '\u0e17\u0e31\u0e49\u0e07\u0e1b\u0e27\u0e07',
    '\u0e17\u0e31\u0e49\u0e07\u0e21\u0e27\u0e25',
    '\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e34\u0e49\u0e19',
    '\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14',
    '\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e25\u0e32\u0e22',
    '\u0e17\u0e31\u0e49\u0e07\u0e46',
    '\u0e17\u0e31\u0e49\u0e07\u0e46',
    '\u0e17\u0e31\u0e19',
    '\u0e17\u0e31\u0e19\u0e43\u0e14\u0e19\u0e31\u0e49\u0e19',
    '\u0e17\u0e31\u0e19\u0e17\u0e35',
    '\u0e17\u0e31\u0e19\u0e17\u0e35\u0e17\u0e31\u0e19\u0e43\u0e14',
    '\u0e17\u0e31\u0e48\u0e27',
    '\u0e17\u0e4d\u0e32\u0e43\u0e2b\u0e49',
    '\u0e17\u0e4d\u0e32\u0e44\u0e21',
    '\u0e17\u0e4d\u0e32\u0e44\u0e23',
    '\u0e17\u0e4d\u0e32\u0e46',
    '\u0e17\u0e35',
    '\u0e17\u0e35\u0e48',
    '\u0e17\u0e35\u0e48',
    '\u0e17\u0e35\u0e40\u0e14\u0e35\u0e22\u0e27',
    '\u0e17\u0e35\u0e40\u0e16\u0e2d\u0e30',
    '\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49',
    '\u0e17\u0e35\u0e48\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07',
    '\u0e17\u0e35\u0e48\u0e41\u0e25\u0e49\u0e27',
    '\u0e17\u0e35\u0e48\u0e41\u0e2b\u0e48\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e17\u0e35\u0e43\u0e14',
    '\u0e17\u0e35\u0e48\u0e43\u0e14',
    '\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49',
    '\u0e17\u0e35\u0e44\u0e23',
    '\u0e17\u0e35\u0e48\u0e44\u0e2b\u0e19',
    '\u0e17\u0e35\u0e48\u0e08\u0e23\u0e34\u0e07',
    '\u0e17\u0e35\u0e48\u0e0b\u0e36\u0e48\u0e07',
    '\u0e17\u0e35\u0e48\u0e19\u0e31\u0e49\u0e19',
    '\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49',
    '\u0e17\u0e35\u0e25\u0e30',
    '\u0e17\u0e35\u0e48\u0e25\u0e30',
    '\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32',
    '\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14',
    '\u0e17\u0e35\u0e46',
    '\u0e17\u0e35\u0e48\u0e46',
    '\u0e17\u0e38\u0e01',
    '\u0e17\u0e38\u0e01\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e17\u0e38\u0e01\u0e41\u0e2b\u0e48\u0e07',
    '\u0e17\u0e38\u0e01\u0e04\u0e19',
    '\u0e17\u0e38\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07',
    '\u0e17\u0e38\u0e01\u0e04\u0e23\u0e32',
    '\u0e17\u0e38\u0e01\u0e04\u0e23\u0e32\u0e27',
    '\u0e17\u0e38\u0e01\u0e0a\u0e34\u0e49\u0e19',
    '\u0e17\u0e38\u0e01\u0e15\u0e31\u0e27',
    '\u0e17\u0e38\u0e01\u0e17\u0e32\u0e07',
    '\u0e17\u0e38\u0e01\u0e17\u0e35',
    '\u0e17\u0e38\u0e01\u0e17\u0e35\u0e48',
    '\u0e17\u0e38\u0e01\u0e27\u0e31\u0e19',
    '\u0e17\u0e38\u0e01\u0e27\u0e31\u0e19\u0e19\u0e35\u0e49',
    '\u0e17\u0e38\u0e01\u0e2a\u0e34\u0e48\u0e07',
    '\u0e17\u0e38\u0e01\u0e2b\u0e19',
    '\u0e17\u0e38\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07',
    '\u0e17\u0e38\u0e01\u0e2d\u0e31\u0e19',
    '\u0e17\u0e38\u0e01\u0e46',
    '\u0e19\u0e2d\u0e01',
    '\u0e19\u0e2d\u0e01\u0e40\u0e2b\u0e19\u0e37\u0e2d',
    '\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01',
    '\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e17\u0e35\u0e48',
    '\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19',
    '\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49',
    '\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e27\u0e48\u0e32',
    '\u0e19\u0e2d\u0e01\u0e19\u0e31\u0e49\u0e19',
    '\u0e19\u0e49\u0e2d\u0e22',
    '\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32',
    '\u0e19\u0e49\u0e2d\u0e22\u0e46',
    '\u0e19\u0e30',
    '\u0e19\u0e48\u0e30',
    '\u0e19\u0e31\u0e01',
    '\u0e19\u0e31\u0e48\u0e19',
    '\u0e19\u0e31\u0e49\u0e19\u0e44\u0e27',
    '\u0e19\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e19\u0e35\u0e49',
    '\u0e19\u0e31\u0e1a\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19',
    '\u0e19\u0e31\u0e1a\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49',
    '\u0e19\u0e48\u0e32',
    '\u0e19\u0e4d\u0e32',
    '\u0e19\u0e32\u0e07',
    '\u0e19\u0e32\u0e07\u0e2a\u0e32\u0e27',
    '\u0e19\u0e48\u0e32\u0e08\u0e30',
    '\u0e19\u0e32\u0e19',
    '\u0e19\u0e32\u0e19\u0e46',
    '\u0e19\u0e4d\u0e32\u0e1e\u0e32',
    '\u0e19\u0e4d\u0e32\u0e21\u0e32',
    '\u0e19\u0e32\u0e22',
    '\u0e19\u0e34\u0e14',
    '\u0e19\u0e34\u0e14\u0e2b\u0e19\u0e48\u0e2d\u0e22',
    '\u0e19\u0e34\u0e14\u0e46',
    '\u0e19\u0e35\u0e48',
    '\u0e19\u0e35\u0e49',
    '\u0e19\u0e35\u0e48\u0e40\u0e2d\u0e07',
    '\u0e19\u0e35\u0e49\u0e40\u0e2d\u0e07',
    '\u0e19\u0e35\u0e48\u0e41\u0e19\u0e48\u0e30',
    '\u0e19\u0e35\u0e49\u0e41\u0e2b\u0e25\u0e48',
    '\u0e19\u0e35\u0e48\u0e41\u0e2b\u0e25\u0e30',
    '\u0e19\u0e35\u0e48\u0e44\u0e07',
    '\u0e19\u0e35\u0e48\u0e19\u0e32',
    '\u0e19\u0e39\u0e48\u0e19',
    '\u0e19\u0e39\u0e49\u0e19',
    '\u0e1a\u0e19',
    '\u0e1a\u0e2d\u0e01',
    '\u0e1a\u0e2d\u0e01\u0e41\u0e25\u0e49\u0e27',
    '\u0e1a\u0e2d\u0e01\u0e27\u0e48\u0e32',
    '\u0e1a\u0e48\u0e2d\u0e22',
    '\u0e1a\u0e48\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32',
    '\u0e1a\u0e48\u0e2d\u0e22\u0e04\u0e23\u0e31\u0e49\u0e07',
    '\u0e1a\u0e48\u0e2d\u0e22\u0e46',
    '\u0e1a\u0e31\u0e14\u0e40\u0e14\u0e35\u0e4b\u0e22\u0e27\u0e19\u0e35\u0e49',
    '\u0e1a\u0e31\u0e14\u0e14\u0e25',
    '\u0e1a\u0e31\u0e14\u0e19\u0e31\u0e49\u0e19',
    '\u0e1a\u0e31\u0e14\u0e19\u0e35\u0e49',
    '\u0e1a\u0e32\u0e07',
    '\u0e1a\u0e49\u0e32\u0e07',
    '\u0e1a\u0e32\u0e07\u0e41\u0e2b\u0e48\u0e07',
    '\u0e1a\u0e32\u0e07\u0e01\u0e27\u0e48\u0e32',
    '\u0e1a\u0e32\u0e07\u0e02\u0e13\u0e30',
    '\u0e1a\u0e32\u0e07\u0e04\u0e23\u0e31\u0e49\u0e07',
    '\u0e1a\u0e32\u0e07\u0e04\u0e23\u0e32',
    '\u0e1a\u0e32\u0e07\u0e04\u0e23\u0e32\u0e27',
    '\u0e1a\u0e32\u0e07\u0e17\u0e35',
    '\u0e1a\u0e32\u0e07\u0e17\u0e35\u0e48',
    '\u0e1a\u0e32\u0e07\u0e46',
    '\u0e1b\u0e0f\u0e34\u0e1a\u0e31\u0e15\u0e34',
    '\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a',
    '\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23',
    '\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e43\u0e14',
    '\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e09\u0e30\u0e19\u0e35\u0e49',
    '\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e2b\u0e19\u0e36\u0e48\u0e07',
    '\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13',
    '\u0e1b\u0e23\u0e30\u0e2a\u0e1a',
    '\u0e1b\u0e23\u0e31\u0e1a',
    '\u0e1b\u0e23\u0e32\u0e01\u0e0f',
    '\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e27\u0e48\u0e32',
    '\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19',
    '\u0e1b\u0e34\u0e14',
    '\u0e1c\u0e48\u0e32\u0e19',
    '\u0e1c\u0e48\u0e32\u0e19\u0e46',
    '\u0e1c\u0e34\u0e14',
    '\u0e1c\u0e34\u0e14\u0e46',
    '\u0e1c\u0e39\u0e49',
    '\u0e1c\u0e39\u0e49\u0e43\u0e14',
    '\u0e1d\u0e48\u0e32\u0e22',
    '\u0e1d\u0e48\u0e32\u0e22\u0e43\u0e14',
    '\u0e1e\u0e1a',
    '\u0e1e\u0e1a\u0e27\u0e48\u0e32',
    '\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e40\u0e1e\u0e35\u0e22\u0e07',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e19',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e1a',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e14\u0e49\u0e27\u0e22',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e17\u0e31\u0e49\u0e07',
    '\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e17\u0e35\u0e48',
    '\u0e1e\u0e27\u0e01',
    '\u0e1e\u0e27\u0e01\u0e40\u0e02\u0e32',
    '\u0e1e\u0e27\u0e01\u0e40\u0e18\u0e2d',
    '\u0e1e\u0e27\u0e01\u0e41\u0e01',
    '\u0e1e\u0e27\u0e01\u0e42\u0e19\u0e49\u0e19',
    '\u0e1e\u0e27\u0e01\u0e01\u0e31\u0e19',
    '\u0e1e\u0e27\u0e01\u0e01\u0e39',
    '\u0e1e\u0e27\u0e01\u0e04\u0e38\u0e13',
    '\u0e1e\u0e27\u0e01\u0e09\u0e31\u0e19',
    '\u0e1e\u0e27\u0e01\u0e17\u0e48\u0e32\u0e19',
    '\u0e1e\u0e27\u0e01\u0e17\u0e35\u0e48',
    '\u0e1e\u0e27\u0e01\u0e19\u0e31\u0e49\u0e19',
    '\u0e1e\u0e27\u0e01\u0e19\u0e35\u0e49',
    '\u0e1e\u0e27\u0e01\u0e19\u0e39\u0e49\u0e19',
    '\u0e1e\u0e27\u0e01\u0e21\u0e31\u0e19',
    '\u0e1e\u0e27\u0e01\u0e21\u0e36\u0e07',
    '\u0e1e\u0e2d',
    '\u0e1e\u0e2d\u0e40\u0e1e\u0e35\u0e22\u0e07',
    '\u0e1e\u0e2d\u0e40\u0e2b\u0e21\u0e32\u0e30',
    '\u0e1e\u0e2d\u0e41\u0e25\u0e49\u0e27',
    '\u0e1e\u0e2d\u0e01\u0e31\u0e19',
    '\u0e1e\u0e2d\u0e04\u0e27\u0e23',
    '\u0e1e\u0e2d\u0e08\u0e30',
    '\u0e1e\u0e2d\u0e14\u0e35',
    '\u0e1e\u0e2d\u0e15\u0e31\u0e27',
    '\u0e1e\u0e2d\u0e17\u0e35',
    '\u0e1e\u0e2d\u0e17\u0e35\u0e48',
    '\u0e1e\u0e2d\u0e2a\u0e21',
    '\u0e1e\u0e2d\u0e2a\u0e21\u0e04\u0e27\u0e23',
    '\u0e1e\u0e2d\u0e46',
    '\u0e1e\u0e32',
    '\u0e1e\u0e36\u0e07',
    '\u0e1e\u0e36\u0e48\u0e07',
    '\u0e1e\u0e37\u0e49\u0e19\u0e46',
    '\u0e1e\u0e39\u0e14',
    '\u0e20\u0e32\u0e04',
    '\u0e20\u0e32\u0e22',
    '\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49',
    '\u0e20\u0e32\u0e22\u0e19\u0e2d\u0e01',
    '\u0e20\u0e32\u0e22\u0e2b\u0e25\u0e31\u0e07',
    '\u0e21\u0e2d\u0e07',
    '\u0e21\u0e2d\u0e07\u0e27\u0e48\u0e32',
    '\u0e21\u0e31\u0e01',
    '\u0e21\u0e31\u0e01\u0e08\u0e30',
    '\u0e21\u0e31\u0e19',
    '\u0e21\u0e31\u0e4a\u0e22',
    '\u0e21\u0e32',
    '\u0e21\u0e32\u0e01',
    '\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32',
    '\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22',
    '\u0e21\u0e34',
    '\u0e21\u0e34\u0e43\u0e0a\u0e48',
    '\u0e21\u0e34\u0e44\u0e14\u0e49',
    '\u0e21\u0e34\u0e09\u0e30\u0e19\u0e31\u0e49\u0e19',
    '\u0e21\u0e35',
    '\u0e21\u0e35\u0e41\u0e15\u0e48',
    '\u0e21\u0e36\u0e07',
    '\u0e21\u0e38\u0e48\u0e07',
    '\u0e21\u0e38\u0e48\u0e07\u0e40\u0e19\u0e49\u0e19',
    '\u0e21\u0e38\u0e48\u0e07\u0e2b\u0e21\u0e32\u0e22',
    '\u0e22\u0e01',
    '\u0e22\u0e01\u0e43\u0e2b\u0e49',
    '\u0e22\u0e07\u0e40\u0e1e\u0e23\u0e32\u0e30',
    '\u0e22\u0e2d\u0e21',
    '\u0e22\u0e48\u0e2d\u0e21',
    '\u0e22\u0e2d\u0e21\u0e23\u0e31\u0e1a',
    '\u0e22\u0e48\u0e2d\u0e22',
    '\u0e22\u0e31\u0e07',
    '\u0e22\u0e31\u0e07\u0e41\u0e15\u0e48',
    '\u0e22\u0e31\u0e07\u0e42\u0e07\u0e49\u0e19',
    '\u0e22\u0e31\u0e07\u0e44\u0e07',
    '\u0e22\u0e31\u0e07\u0e04\u0e07',
    '\u0e22\u0e31\u0e07\u0e07\u0e31\u0e49\u0e19',
    '\u0e22\u0e31\u0e07\u0e07\u0e35\u0e49',
    '\u0e22\u0e31\u0e07\u0e08\u0e30',
    '\u0e22\u0e32\u0e01',
    '\u0e22\u0e32\u0e27',
    '\u0e22\u0e32\u0e27\u0e19\u0e32\u0e19',
    '\u0e22\u0e34\u0e48\u0e07',
    '\u0e22\u0e34\u0e48\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d',
    '\u0e22\u0e34\u0e48\u0e07\u0e41\u0e25\u0e49\u0e27',
    '\u0e22\u0e34\u0e48\u0e07\u0e43\u0e2b\u0e0d\u0e48',
    '\u0e22\u0e34\u0e48\u0e07\u0e01\u0e27\u0e48\u0e32',
    '\u0e22\u0e34\u0e48\u0e07\u0e02\u0e36\u0e49\u0e19',
    '\u0e22\u0e34\u0e48\u0e07\u0e02\u0e36\u0e49\u0e19\u0e44\u0e1b',
    '\u0e22\u0e34\u0e48\u0e07\u0e08\u0e19',
    '\u0e22\u0e34\u0e48\u0e07\u0e08\u0e30',
    '\u0e22\u0e34\u0e48\u0e07\u0e19\u0e31\u0e01',
    '\u0e23\u0e27\u0e14',
    '\u0e23\u0e27\u0e14\u0e40\u0e23\u0e47\u0e27',
    '\u0e23\u0e27\u0e21',
    '\u0e23\u0e48\u0e27\u0e21',
    '\u0e23\u0e27\u0e21\u0e01\u0e31\u0e19',
    '\u0e23\u0e48\u0e27\u0e21\u0e01\u0e31\u0e19',
    '\u0e23\u0e27\u0e21\u0e14\u0e49\u0e27\u0e22',
    '\u0e23\u0e48\u0e27\u0e21\u0e14\u0e49\u0e27\u0e22',
    '\u0e23\u0e27\u0e21\u0e16\u0e36\u0e07',
    '\u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07',
    '\u0e23\u0e30\u0e22\u0e30',
    '\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07',
    '\u0e23\u0e31\u0e1a',
    '\u0e23\u0e36',
    '\u0e23\u0e37\u0e2d',
    '\u0e23\u0e37\u0e2d\u0e27\u0e48\u0e32',
    '\u0e25\u0e49\u0e27\u0e19',
    '\u0e25\u0e49\u0e27\u0e19\u0e41\u0e15\u0e48',
    '\u0e25\u0e49\u0e27\u0e19\u0e08\u0e19',
    '\u0e25\u0e30',
    '\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14',
    '\u0e27\u0e31\u0e19\u0e43\u0e14',
    '\u0e27\u0e31\u0e19\u0e44\u0e2b\u0e19',
    '\u0e27\u0e31\u0e19\u0e19\u0e31\u0e49\u0e19',
    '\u0e27\u0e31\u0e19\u0e19\u0e35\u0e49',
    '\u0e2a\u0e1a\u0e32\u0e22',
    '\u0e2a\u0e21\u0e31\u0e22',
    '\u0e2a\u0e21\u0e31\u0e22\u0e42\u0e19\u0e49\u0e19',
    '\u0e2a\u0e21\u0e31\u0e22\u0e01\u0e48\u0e2d\u0e19',
    '\u0e2a\u0e21\u0e31\u0e22\u0e19\u0e31\u0e49\u0e19',
    '\u0e2a\u0e21\u0e31\u0e22\u0e19\u0e35\u0e49',
    '\u0e2a\u0e48\u0e27\u0e19',
    '\u0e2a\u0e48\u0e27\u0e19\u0e40\u0e01\u0e34\u0e19',
    '\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e14',
    '\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48',
    '\u0e2a\u0e48\u0e27\u0e19\u0e14\u0e49\u0e2d\u0e22',
    '\u0e2a\u0e48\u0e27\u0e19\u0e14\u0e35',
    '\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48',
    '\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e49\u0e2d\u0e22',
    '\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e31\u0e49\u0e19',
    '\u0e2a\u0e48\u0e27\u0e19\u0e21\u0e32\u0e01',
    '\u0e2a\u0e31\u0e49\u0e19',
    '\u0e2a\u0e31\u0e49\u0e19\u0e46',
    '\u0e2a\u0e4d\u0e32\u0e04\u0e31\u0e0d',
    '\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16',
    '\u0e2a\u0e34\u0e48\u0e07',
    '\u0e2a\u0e34\u0e48\u0e07\u0e43\u0e14',
    '\u0e2a\u0e34\u0e48\u0e07\u0e44\u0e2b\u0e19',
    '\u0e2a\u0e34\u0e48\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e2a\u0e34\u0e48\u0e07\u0e19\u0e35\u0e49',
    '\u0e2a\u0e34\u0e49\u0e19',
    '\u0e2a\u0e38\u0e14',
    '\u0e2b\u0e19',
    '\u0e2b\u0e19\u0e2d',
    '\u0e2b\u0e19\u0e2d\u0e22',
    '\u0e2b\u0e19\u0e48\u0e2d\u0e22',
    '\u0e2b\u0e21\u0e14',
    '\u0e2b\u0e21\u0e14\u0e01\u0e31\u0e19',
    '\u0e2b\u0e21\u0e14\u0e2a\u0e34\u0e49\u0e19',
    '\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e1b\u0e25\u0e48\u0e32',
    '\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e07',
    '\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48',
    '\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e23',
    '\u0e2b\u0e23\u0e37\u0e2d\u0e22\u0e31\u0e07',
    '\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01',
    '\u0e2b\u0e32\u0e43\u0e0a\u0e48',
    '\u0e2b\u0e32\u0e01',
    '\u0e2b\u0e32\u0e01\u0e41\u0e21\u0e49',
    '\u0e2b\u0e32\u0e01\u0e41\u0e21\u0e49\u0e19',
    '\u0e2b\u0e32\u0e01\u0e41\u0e21\u0e49\u0e19\u0e27\u0e48\u0e32',
    '\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32',
    '\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21',
    '\u0e2b\u0e32\u0e23\u0e37\u0e2d',
    '\u0e2d\u0e14\u0e35\u0e15',
    '\u0e2d\u0e19\u0e36\u0e48\u0e07',
    '\u0e2d\u0e22\u0e32\u0e01',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e0a\u0e48\u0e19',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e14\u0e35\u0e22\u0e27',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e42\u0e19\u0e49\u0e19',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e14',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e40\u0e2a\u0e35\u0e22',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e44\u0e14\u0e49',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e2b\u0e19',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e14\u0e35',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e31\u0e49\u0e19',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e21\u0e32\u0e01',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e22\u0e34\u0e48\u0e07',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e25\u0e30',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e2b\u0e19\u0e36\u0e48\u0e07',
    '\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e46',
    '\u0e2d\u0e31\u0e19',
    '\u0e2d\u0e31\u0e19\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e32\u0e08\u0e32\u0e01',
    '\u0e2d\u0e31\u0e19\u0e43\u0e14',
    '\u0e2d\u0e31\u0e19\u0e44\u0e14\u0e49\u0e41\u0e01\u0e48',
    '\u0e2d\u0e31\u0e19\u0e44\u0e2b\u0e19',
    '\u0e2d\u0e31\u0e19\u0e08\u0e30',
    '\u0e2d\u0e31\u0e19\u0e17\u0e35\u0e48',
    '\u0e2d\u0e31\u0e19\u0e17\u0e35\u0e48\u0e08\u0e23\u0e34\u0e07',
    '\u0e2d\u0e31\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30',
    '\u0e2d\u0e31\u0e19\u0e25\u0e30',
    '\u0e2d\u0e31\u0e19\u0e46',
    '\u0e2d\u0e32\u0e08',
    '\u0e2d\u0e32\u0e08\u0e40\u0e1b\u0e47\u0e19',
    '\u0e2d\u0e32\u0e08\u0e40\u0e1b\u0e47\u0e19\u0e14\u0e49\u0e27\u0e22',
    '\u0e2d\u0e32\u0e08\u0e08\u0e30',
    '\u0e2d\u0e35\u0e01',
    '\u0e2d\u0e37\u0e48\u0e19',
    '\u0e2d\u0e37\u0e48\u0e19\u0e46',
    '\u0e2f',
    '\u0e2f\u0e1e\u0e13\u0e2f',
    '\u0e2f\u0e25'
  ],
  tr: [
    'a',
    'acaba',
    'alt\u0131',
    'ama',
    'ancak',
    'art\u0131k',
    'asla',
    'asl\u0131nda',
    'az',
    'b',
    'bana',
    'bazen',
    'baz\u0131',
    'baz\u0131lar\u0131',
    'baz\u0131s\u0131',
    'belki',
    'ben',
    'beni',
    'benim',
    'be\u015f',
    'bile',
    'bir',
    'bir\xe7o\u011fu',
    'bir\xe7ok',
    'bir\xe7oklar\u0131',
    'biri',
    'birisi',
    'birka\xe7',
    'birka\xe7\u0131',
    'bir\u015fey',
    'bir\u015feyi',
    'biz',
    'bize',
    'bizi',
    'bizim',
    'b\xf6yle',
    'b\xf6ylece',
    'bu',
    'buna',
    'bunda',
    'bundan',
    'bunu',
    'bunun',
    'burada',
    'b\xfct\xfcn',
    'c',
    '\xe7',
    '\xe7o\u011fu',
    '\xe7o\u011funa',
    '\xe7o\u011funu',
    '\xe7ok',
    '\xe7\xfcnk\xfc',
    'd',
    'da',
    'daha',
    'de',
    'de\u011fil',
    'demek',
    'di\u011fer',
    'di\u011feri',
    'di\u011ferleri',
    'diye',
    'dokuz',
    'dolay\u0131',
    'd\xf6rt',
    'e',
    'elbette',
    'en',
    'f',
    'fakat',
    'falan',
    'felan',
    'filan',
    'g',
    'gene',
    'gibi',
    '\u011f',
    'h',
    'h\xe2l\xe2',
    'hangi',
    'hangisi',
    'hani',
    'hatta',
    'hem',
    'hen\xfcz',
    'hep',
    'hepsi',
    'hepsine',
    'hepsini',
    'her',
    'her biri',
    'herkes',
    'herkese',
    'herkesi',
    'hi\xe7',
    'hi\xe7 kimse',
    'hi\xe7biri',
    'hi\xe7birine',
    'hi\xe7birini',
    '\u0131',
    'i',
    'i\xe7in',
    'i\xe7inde',
    'iki',
    'ile',
    'ise',
    'i\u015fte',
    'j',
    'k',
    'ka\xe7',
    'kadar',
    'kendi',
    'kendine',
    'kendini',
    'ki',
    'kim',
    'kime',
    'kimi',
    'kimin',
    'kimisi',
    'l',
    'm',
    'madem',
    'm\u0131',
    'm\u0131',
    'mi',
    'mu',
    'mu',
    'm\xfc',
    'm\xfc',
    'n',
    'nas\u0131l',
    'ne',
    'ne kadar',
    'ne zaman',
    'neden',
    'nedir',
    'nerde',
    'nerede',
    'nereden',
    'nereye',
    'nesi',
    'neyse',
    'ni\xe7in',
    'niye',
    'o',
    'on',
    'ona',
    'ondan',
    'onlar',
    'onlara',
    'onlardan',
    'onlar\u0131n',
    'onlar\u0131n',
    'onu',
    'onun',
    'orada',
    'oysa',
    'oysaki',
    '\xf6',
    '\xf6b\xfcr\xfc',
    '\xf6n',
    '\xf6nce',
    '\xf6t\xfcr\xfc',
    '\xf6yle',
    'p',
    'r',
    'ra\u011fmen',
    's',
    'sana',
    'sekiz',
    'sen',
    'senden',
    'seni',
    'senin',
    'siz',
    'sizden',
    'size',
    'sizi',
    'sizin',
    'son',
    'sonra',
    '\u015f',
    '\u015fayet',
    '\u015fey',
    '\u015feyden',
    '\u015feye',
    '\u015feyi',
    '\u015feyler',
    '\u015fimdi',
    '\u015f\xf6yle',
    '\u015fu',
    '\u015funa',
    '\u015funda',
    '\u015fundan',
    '\u015funlar',
    '\u015funu',
    '\u015funun',
    't',
    'tabi',
    'tamam',
    't\xfcm',
    't\xfcm\xfc',
    'u',
    '\xfc',
    '\xfc\xe7',
    '\xfczere',
    'v',
    'var',
    've',
    'veya',
    'veyahut',
    'y',
    'ya',
    'ya da',
    'yani',
    'yedi',
    'yerine',
    'yine',
    'yoksa',
    'z',
    'zaten',
    'zira'
  ],
  zh: [
    '\u7684',
    '\u4e00',
    '\u4e0d',
    '\u5728',
    '\u4eba',
    '\u6709',
    '\u662f',
    '\u4e3a',
    '\u4ee5',
    '\u4e8e',
    '\u4e0a',
    '\u4ed6',
    '\u800c',
    '\u540e',
    '\u4e4b',
    '\u6765',
    '\u53ca',
    '\u4e86',
    '\u56e0',
    '\u4e0b',
    '\u53ef',
    '\u5230',
    '\u7531',
    '\u8fd9',
    '\u4e0e',
    '\u4e5f',
    '\u6b64',
    '\u4f46',
    '\u5e76',
    '\u4e2a',
    '\u5176',
    '\u5df2',
    '\u65e0',
    '\u5c0f',
    '\u6211',
    '\u4eec',
    '\u8d77',
    '\u6700',
    '\u518d',
    '\u4eca',
    '\u53bb',
    '\u597d',
    '\u53ea',
    '\u53c8',
    '\u6216',
    '\u5f88',
    '\u4ea6',
    '\u67d0',
    '\u628a',
    '\u90a3',
    '\u4f60',
    '\u4e43',
    '\u5b83',
    '\u5427',
    '\u88ab',
    '\u6bd4',
    '\u522b',
    '\u8d81',
    '\u5f53',
    '\u4ece',
    '\u5230',
    '\u5f97',
    '\u6253',
    '\u51e1',
    '\u513f',
    '\u5c14',
    '\u8be5',
    '\u5404',
    '\u7ed9',
    '\u8ddf',
    '\u548c',
    '\u4f55',
    '\u8fd8',
    '\u5373',
    '\u51e0',
    '\u65e2',
    '\u770b',
    '\u636e',
    '\u8ddd',
    '\u9760',
    '\u5566',
    '\u4e86',
    '\u53e6',
    '\u4e48',
    '\u6bcf',
    '\u4eec',
    '\u561b',
    '\u62ff',
    '\u54ea',
    '\u90a3',
    '\u60a8',
    '\u51ed',
    '\u4e14',
    '\u5374',
    '\u8ba9',
    '\u4ecd',
    '\u5565',
    '\u5982',
    '\u82e5',
    '\u4f7f',
    '\u8c01',
    '\u867d',
    '\u968f',
    '\u540c',
    '\u6240',
    '\u5979',
    '\u54c7',
    '\u55e1',
    '\u5f80',
    '\u54ea',
    '\u4e9b',
    '\u5411',
    '\u6cbf',
    '\u54df',
    '\u7528',
    '\u4e8e',
    '\u54b1',
    '\u5219',
    '\u600e',
    '\u66fe',
    '\u81f3',
    '\u81f4',
    '\u7740',
    '\u8bf8',
    '\u81ea'
  ]
};

},{}],29:[function(require,module,exports){
// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var cheerio, cleaner, extractor, getCleanedDoc, getParsedDoc, getTopNode, unfluff;
  cheerio = require('cheerio');
  extractor = require('./extractor');
  cleaner = require('./cleaner');
  module.exports = unfluff = function (html, language) {
    var doc, lng, pageData, topNode;
    doc = cheerio.load(html);
    lng = language || extractor.lang(doc);
    pageData = {
      title: extractor.title(doc),
      softTitle: extractor.softTitle(doc),
      date: extractor.date(doc),
      author: extractor.author(doc),
      publisher: extractor.publisher(doc),
      copyright: extractor.copyright(doc),
      favicon: extractor.favicon(doc),
      description: extractor.description(doc),
      keywords: extractor.keywords(doc),
      lang: lng,
      canonicalLink: extractor.canonicalLink(doc),
      tags: extractor.tags(doc),
      image: extractor.image(doc)
    };
    cleaner(doc);
    topNode = extractor.calculateBestNode(doc, lng);
    pageData.videos = extractor.videos(doc, topNode);
    pageData.links = extractor.links(doc, topNode, lng);
    pageData.text = extractor.text(doc, topNode, lng);
    return pageData;
  };
  unfluff.lazy = function (html, language) {
    return {
      title: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.title_ ? this.title_ : this.title_ = extractor.title(doc);
      },
      softTitle: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.softTitle_ ? this.softTitle_ : this.softTitle_ = extractor.softTitle(doc);
      },
      date: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.date_ ? this.date_ : this.date_ = extractor.date(doc);
      },
      copyright: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.copyright_ ? this.copyright_ : this.copyright_ = extractor.copyright(doc);
      },
      author: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.author_ ? this.author_ : this.author_ = extractor.author(doc);
      },
      publisher: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.publisher_ ? this.publisher_ : this.publisher_ = extractor.publisher(doc);
      },
      favicon: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.favicon_ ? this.favicon_ : this.favicon_ = extractor.favicon(doc);
      },
      description: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.description_ ? this.description_ : this.description_ = extractor.description(doc);
      },
      keywords: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.keywords_ ? this.keywords_ : this.keywords_ = extractor.keywords(doc);
      },
      lang: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.language_ ? this.language_ : this.language_ = language || extractor.lang(doc);
      },
      canonicalLink: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.canonicalLink_ ? this.canonicalLink_ : this.canonicalLink_ = extractor.canonicalLink(doc);
      },
      tags: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.tags_ ? this.tags_ : this.tags_ = extractor.tags(doc);
      },
      image: function () {
        var doc;
        doc = getParsedDoc.call(this, html);
        return null != this.image_ ? this.image_ : this.image_ = extractor.image(doc);
      },
      videos: function () {
        var doc, topNode;
        if (null != this.videos_)
          return this.videos_;
        doc = getCleanedDoc.call(this, html);
        topNode = getTopNode.call(this, doc, this.lang());
        return this.videos_ = extractor.videos(doc, topNode);
      },
      text: function () {
        var doc, topNode;
        if (null != this.text_)
          return this.text_;
        doc = getCleanedDoc.call(this, html);
        topNode = getTopNode.call(this, doc, this.lang());
        return this.text_ = extractor.text(doc, topNode, this.lang());
      },
      links: function () {
        var doc, topNode;
        if (null != this.links_)
          return this.links_;
        doc = getCleanedDoc.call(this, html);
        topNode = getTopNode.call(this, doc, this.lang());
        return this.links_ = extractor.links(doc, topNode, this.lang());
      }
    };
  };
  getParsedDoc = function (html) {
    return null != this.doc_ ? this.doc_ : this.doc_ = cheerio.load(html);
  };
  getTopNode = function (doc, lng) {
    return null != this.topNode_ ? this.topNode_ : this.topNode_ = extractor.calculateBestNode(doc, lng);
  };
  getCleanedDoc = function (html) {
    var doc;
    if (null != this.cleanedDoc_)
      return this.cleanedDoc_;
    doc = getParsedDoc.call(this, html);
    this.cleanedDoc_ = cleaner(doc);
    return this.cleanedDoc_;
  };
}.call(this);

},{"./cleaner":24,"./extractor":25,"cheerio":30}],30:[function(require,module,exports){
/**
 * Export cheerio (with )
 */

exports = module.exports = require('./lib/cheerio');

/*
  Export the version
*/

exports.version = require('./package').version;

},{"./lib/cheerio":35,"./package":100}],31:[function(require,module,exports){
var _ = require('lodash'),
  utils = require('../utils'),
  isTag = utils.isTag,
  domEach = utils.domEach,
  hasOwn = Object.prototype.hasOwnProperty,
  camelCase = utils.camelCase,
  cssCase = utils.cssCase,
  rspace = /\s+/,
  dataAttrPrefix = 'data-',

  // Lookup table for coercing string data-* attributes to their corresponding
  // JavaScript primitives
  primitives = {
    null: null,
    true: true,
    false: false
  },

  // Attributes that are booleans
  rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
  // Matches strings that look like JSON objects or arrays
  rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;


var getAttr = function(elem, name) {
  if (!elem || !isTag(elem)) return;

  if (!elem.attribs) {
    elem.attribs = {};
  }

  // Return the entire attribs object if no attribute specified
  if (!name) {
    return elem.attribs;
  }

  if (hasOwn.call(elem.attribs, name)) {
    // Get the (decoded) attribute
    return elem.attribs[name];
  }
};

var setAttr = function(el, name, value) {

  if (value === null) {
    removeAttribute(el, name);
  } else {
    el.attribs[name] = value+'';
  }
};

var attr = exports.attr = function(name, value) {
  // Set the value (with attr map support)
  if (typeof name === 'object' || value !== undefined) {
    if (typeof value === 'function') {
      return domEach(this, function(i, el) {
        setAttr(el, name, value.call(el, i, el.attribs[name]));
      });
    }
    return domEach(this, function(i, el) {
      if (!isTag(el)) return;

      if (typeof name === 'object') {
        _.each(name, function(name, key) {
          el.attribs[key] = name+'';
        });
      } else {
        setAttr(el, name, value);
      }
    });
  }

  return getAttr(this[0], name);
};

var setData = function(el, name, value) {
  if (typeof name === 'object') return _.extend(el.data, name);
  if (typeof name === 'string' && value !== undefined) {
    el.data[name] = value;
  } else if (typeof name === 'object') {
    _.exend(el.data, name);
  }
};

// Read the specified attribute from the equivalent HTML5 `data-*` attribute,
// and (if present) cache the value in the node's internal data store. If no
// attribute name is specified, read *all* HTML5 `data-*` attributes in this
// manner.
var readData = function(el, name) {
  var readAll = arguments.length === 1;
  var domNames, domName, jsNames, jsName, value, idx, length;

  if (readAll) {
    domNames = Object.keys(el.attribs).filter(function(attrName) {
      return attrName.slice(0, dataAttrPrefix.length) === dataAttrPrefix;
    });
    jsNames = domNames.map(function(domName) {
      return camelCase(domName.slice(dataAttrPrefix.length));
    });
  } else {
    domNames = [dataAttrPrefix + cssCase(name)];
    jsNames = [name];
  }

  for (idx = 0, length = domNames.length; idx < length; ++idx) {
    domName = domNames[idx];
    jsName = jsNames[idx];
    if (hasOwn.call(el.attribs, domName)) {
      value = el.attribs[domName];

      if (hasOwn.call(primitives, value)) {
        value = primitives[value];
      } else if (value === String(Number(value))) {
        value = Number(value);
      } else if (rbrace.test(value)) {
        value = JSON.parse(value);
      }

      el.data[jsName] = value;
    }
  }

  return readAll ? el.data : value;
};

var data = exports.data = function(name, value) {
  var elem = this[0];

  if (!elem || !isTag(elem)) return;

  if (!elem.data) {
    elem.data = {};
  }

  // Return the entire data object if no data specified
  if (!name) {
    return readData(elem);
  }

  // Set the value (with attr map support)
  if (typeof name === 'object' || value !== undefined) {
    domEach(this, function(i, el) {
      setData(el, name, value);
    });
    return this;
  } else if (hasOwn.call(elem.data, name)) {
    return elem.data[name];
  }

  return readData(elem, name);
};

/**
 * Get the value of an element
 */

var val = exports.val = function(value) {
  var querying = arguments.length === 0,
      element = this[0];

  if(!element) return;

  switch (element.name) {
    case 'textarea':
      return this.text(value);
    case 'input':
      switch (this.attr('type')) {
        case 'radio':
          var queryString = 'input[type=radio][name=' + this.attr('name') + ']:checked';
          var parentEl, root;

          // Go up until we hit a form or root
          parentEl = this.closest('form');
          if (parentEl.length === 0) {
            root = (this.parents().last()[0] || this[0]).root;
            parentEl = this._make(root);
          }

          if (querying) {
            return parentEl.find(queryString).attr('value');
          } else {
            parentEl.find(':checked').removeAttr('checked');
            parentEl.find('input[type=radio][value="' + value + '"]').attr('checked', '');
            return this;
          }
          break;
        default:
          return this.attr('value', value);
      }
      return;
    case 'select':
      var option = this.find('option:selected'),
          returnValue;
      if (option === undefined) return undefined;
      if (!querying) {
        if (!this.attr().hasOwnProperty('multiple') && typeof value == 'object') {
          return this;
        }
        if (typeof value != 'object') {
          value = [value];
        }
        this.find('option').removeAttr('selected');
        for (var i = 0; i < value.length; i++) {
          this.find('option[value="' + value[i] + '"]').attr('selected', '');
        }
        return this;
      }
      returnValue = option.attr('value');
      if (this.attr().hasOwnProperty('multiple')) {
        returnValue = [];
        domEach(option, function(i, el) {
          returnValue.push(el.attribs.value);
        });
      }
      return returnValue;
    case 'option':
      if (!querying) {
        this.attr('value', value);
        return this;
      }
      return this.attr('value');
  }
};

/**
 * Remove an attribute
 */

var removeAttribute = function(elem, name) {
  if (!elem.attribs || !hasOwn.call(elem.attribs, name))
    return;

  if (name === elem.attribs[name] && rboolean.test(elem.attribs[name]))
    elem.attribs[name] = false;
  else
    delete elem.attribs[name];
};


var removeAttr = exports.removeAttr = function(name) {
  domEach(this, function(i, elem) {
    removeAttribute(elem, name);
  });

  return this;
};

var hasClass = exports.hasClass = function(className) {
  return _.any(this, function(elem) {
    var attrs = elem.attribs,
        clazz = attrs && attrs['class'],
        idx = -1,
        end;

    if (clazz) {
      while ((idx = clazz.indexOf(className, idx+1)) > -1) {
        end = idx + className.length;

        if ((idx === 0 || rspace.test(clazz[idx-1]))
            && (end === clazz.length || rspace.test(clazz[end]))) {
          return true;
        }
      }
    }
  });
};

var addClass = exports.addClass = function(value) {
  // Support functions
  if (typeof value === 'function') {
    return domEach(this, function(i, el) {
      var className = el.attribs['class'] || '';
      addClass.call([el], value.call(el, i, className));
    });
  }

  // Return if no value or not a string or function
  if (!value || typeof value !== 'string') return this;

  var classNames = value.split(rspace),
      numElements = this.length;


  for (var i = 0; i < numElements; i++) {
    // If selected element isn't a tag, move on
    if (!isTag(this[i])) continue;

    // If we don't already have classes
    var className = getAttr(this[i], 'class'),
        numClasses,
        setClass;

    if (!className) {
      setAttr(this[i], 'class', classNames.join(' ').trim());
    } else {
      setClass = ' ' + className + ' ';
      numClasses = classNames.length;

      // Check if class already exists
      for (var j = 0; j < numClasses; j++) {
        var appendClass = classNames[j] + ' ';
        if (!~setClass.indexOf(' ' + appendClass))
          setClass += appendClass;
      }

      setAttr(this[i], 'class', setClass.trim());
    }
  }

  return this;
};

var splitClass = function(className) {
  return className ? className.trim().split(rspace) : [];
};

var removeClass = exports.removeClass = function(value) {
  var classes,
      numClasses,
      removeAll;

  // Handle if value is a function
  if (typeof value === 'function') {
    return domEach(this, function(i, el) {
      removeClass.call([el], value.call(el, i, el.attribs['class'] || ''));
    });
  }

  classes = splitClass(value);
  numClasses = classes.length;
  removeAll = arguments.length === 0;

  return domEach(this, function(i, el) {
    if (!isTag(el)) return;

    if (removeAll) {
      // Short circuit the remove all case as this is the nice one
      el.attribs.class = '';
    } else {
      var elClasses = splitClass(el.attribs.class),
          index,
          changed;

      for (var j = 0; j < numClasses; j++) {
        index = elClasses.indexOf(classes[j]);

        if (index >= 0) {
          elClasses.splice(index, 1);
          changed = true;

          // We have to do another pass to ensure that there are not duplicate
          // classes listed
          j--;
        }
      }
      if (changed) {
        el.attribs.class = elClasses.join(' ');
      }
    }
  });
};

var toggleClass = exports.toggleClass = function(value, stateVal) {
  // Support functions
  if (typeof value === 'function') {
    return domEach(this, function(i, el) {
      toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);
    });
  }

  // Return if no value or not a string or function
  if (!value || typeof value !== 'string') return this;

  var classNames = value.split(rspace),
    numClasses = classNames.length,
    state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0,
    numElements = this.length,
    elementClasses,
    index;

  for (var i = 0; i < numElements; i++) {
    // If selected element isn't a tag, move on
    if (!isTag(this[i])) continue;

    elementClasses = splitClass(this[i].attribs.class);

    // Check if class already exists
    for (var j = 0; j < numClasses; j++) {
      // Check if the class name is currently defined
      index = elementClasses.indexOf(classNames[j]);

      // Add if stateValue === true or we are toggling and there is no value
      if (state >= 0 && index < 0) {
        elementClasses.push(classNames[j]);
      } else if (state <= 0 && index >= 0) {
        // Otherwise remove but only if the item exists
        elementClasses.splice(index, 1);
      }
    }

    this[i].attribs.class = elementClasses.join(' ');
  }

  return this;
};

var is = exports.is = function (selector) {
  if (selector) {
    return this.filter(selector).length > 0;
  }
  return false;
};


},{"../utils":38,"lodash":101}],32:[function(require,module,exports){
var _ = require('lodash'),
    domEach = require('../utils').domEach;
var toString = Object.prototype.toString;

/**
 * Set / Get css.
 *
 * @param {String|Object} prop
 * @param {String} val
 * @return {self}
 * @api public
 */

exports.css = function(prop, val) {
  if (arguments.length === 2 ||
    // When `prop` is a "plain" object
    (toString.call(prop) === '[object Object]')) {
    return domEach(this, function(idx, el) {
      setCss(el, prop, val, idx);
    });
  } else {
    return getCss(this[0], prop);
  }
};

/**
 * Set styles of all elements.
 *
 * @param {String|Object} prop
 * @param {String} val
 * @param {Number} idx - optional index within the selection
 * @return {self}
 * @api private
 */

function setCss(el, prop, val, idx) {
  if ('string' == typeof prop) {
    var styles = getCss(el);
    if (typeof val === 'function') {
      val = val.call(el, idx, el);
    }

    if (val === '') {
      delete styles[prop];
    } else if (val != null) {
      styles[prop] = val;
    }

    el.attribs.style = stringify(styles);
  } else if ('object' == typeof prop) {
    Object.keys(prop).forEach(function(k){
      setCss(el, k, prop[k]);
    });
  }
}

/**
 * Get parsed styles of the first element.
 *
 * @param {String} prop
 * @return {Object}
 * @api private
 */

function getCss(el, prop) {
  var styles = parse(el.attribs.style);
  if (typeof prop === 'string') {
    return styles[prop];
  } else if (Array.isArray(prop)) {
    return _.pick(styles, prop);
  } else {
    return styles;
  }
}

/**
 * Stringify `obj` to styles.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function stringify(obj) {
  return Object.keys(obj || {})
    .reduce(function(str, prop){
      return str += ''
        + (str ? ' ' : '')
        + prop
        + ': '
        + obj[prop]
        + ';';
    }, '');
}

/**
 * Parse `styles`.
 *
 * @param {String} styles
 * @return {Object}
 * @api private
 */

function parse(styles) {
  styles = (styles || '').trim();

  if (!styles) return {};

  return styles
    .split(';')
    .reduce(function(obj, str){
      var n = str.indexOf(':');
      // skip if there is no :, or if it is the first/last character
      if (n < 1 || n === str.length-1) return obj;
      obj[str.slice(0,n).trim()] = str.slice(n+1).trim();
      return obj;
    }, {});
}

},{"../utils":38,"lodash":101}],33:[function(require,module,exports){
var _ = require('lodash'),
    parse = require('../parse'),
    $ = require('../static'),
    updateDOM = parse.update,
    evaluate = parse.evaluate,
    utils = require('../utils'),
    domEach = utils.domEach,
    encode = utils.encode,
    slice = Array.prototype.slice;

// Create an array of nodes, recursing into arrays and parsing strings if
// necessary
exports._makeDomArray = function makeDomArray(elem) {
  if (elem == null) {
    return [];
  } else if (elem.cheerio) {
    return elem.get();
  } else if (Array.isArray(elem)) {
    return _.flatten(elem.map(makeDomArray, this));
  } else if (typeof elem === 'string') {
    return evaluate(elem, this.options);
  } else {
    return [elem];
  }
};

var _insert = function(concatenator) {
  return function() {
    var self = this,
        elems = slice.call(arguments),
        dom = this._makeDomArray(elems);

    if (typeof elems[0] === 'function') {
      return domEach(this, function(i, el) {
        dom = self._makeDomArray(elems[0].call(el, i, $.html(el.children)));
        concatenator(dom, el.children, el);
      });
    } else {
      return domEach(this, function(i, el) {
        concatenator(dom, el.children, el);
      });
    }
  };
};

/*
 * Modify an array in-place, removing some number of elements and adding new
 * elements directly following them.
 *
 * @param {Array} array Target array to splice.
 * @param {Number} spliceIdx Index at which to begin changing the array.
 * @param {Number} spliceCount Number of elements to remove from the array.
 * @param {Array} newElems Elements to insert into the array.
 *
 * @api private
 */
var uniqueSplice = function(array, spliceIdx, spliceCount, newElems, parent) {
  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),
      prev = array[spliceIdx - 1] || null,
      next = array[spliceIdx] || null;
  var idx, len, prevIdx, node, oldParent;

  // Before splicing in new elements, ensure they do not already appear in the
  // current array.
  for (idx = 0, len = newElems.length; idx < len; ++idx) {
    node = newElems[idx];
    oldParent = node.parent || node.root;
    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);

    if (oldParent && prevIdx > -1) {
      oldParent.children.splice(prevIdx, 1);
      if (parent === oldParent && spliceIdx > prevIdx) {
        spliceArgs[0]--;
      }
    }

    node.root = null;
    node.parent = parent;

    if (node.prev) {
      node.prev.next = node.next || null;
    }

    if (node.next) {
      node.next.prev = node.prev || null;
    }

    node.prev = newElems[idx - 1] || prev;
    node.next = newElems[idx + 1] || next;
  }

  if (prev) {
    prev.next = newElems[0];
  }
  if (next) {
    next.prev = newElems[newElems.length - 1];
  }

  return array.splice.apply(array, spliceArgs);
};

var append = exports.append = _insert(function(dom, children, parent) {
  uniqueSplice(children, children.length, 0, dom, parent);
});

var prepend = exports.prepend = _insert(function(dom, children, parent) {
  uniqueSplice(children, 0, 0, dom, parent);
});

var after = exports.after = function() {
  var elems = slice.call(arguments),
      dom = this._makeDomArray(elems),
      self = this;

  domEach(this, function(i, el) {
    var parent = el.parent || el.root;
    if (!parent) {
      return;
    }

    var siblings = parent.children,
        index = siblings.indexOf(el);

    // If not found, move on
    if (!~index) return;

    if (typeof elems[0] === 'function') {
      dom = self._makeDomArray(elems[0].call(el, i));
    }

    // Add element after `this` element
    uniqueSplice(siblings, ++index, 0, dom, parent);
  });

  return this;
};

var before = exports.before = function() {
  var elems = slice.call(arguments),
      dom = this._makeDomArray(elems),
      self = this;

  domEach(this, function(i, el) {
    var parent = el.parent || el.root;
    if (!parent) {
      return;
    }

    var siblings = parent.children,
        index = siblings.indexOf(el);

    // If not found, move on
    if (!~index) return;

    if (typeof elems[0] === 'function') {
      dom = self._makeDomArray(elems[0].call(el, i));
    }

    // Add element before `el` element
    uniqueSplice(siblings, index, 0, dom, parent);
  });

  return this;
};

/*
  remove([selector])
*/
var remove = exports.remove = function(selector) {
  var elems = this;

  // Filter if we have selector
  if (selector)
    elems = elems.filter(selector);

  domEach(elems, function(i, el) {
    var parent = el.parent || el.root;
    if (!parent) {
      return;
    }

    var siblings = parent.children,
        index = siblings.indexOf(el);

    if (!~index) return;


    siblings.splice(index, 1);
    if (el.prev) {
      el.prev.next = el.next;
    }
    if (el.next) {
      el.next.prev = el.prev;
    }
    el.prev = el.next = el.parent = el.root = null;
  });

  return this;
};

var replaceWith = exports.replaceWith = function(content) {
  var self = this;

  domEach(this, function(i, el) {
    var parent = el.parent || el.root;
    if (!parent) {
      return;
    }

    var siblings = parent.children,
        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),
        index;

    // In the case that `dom` contains nodes that already exist in other
    // structures, ensure those nodes are properly removed.
    updateDOM(dom, null);

    index = siblings.indexOf(el);

    // Completely remove old element
    uniqueSplice(siblings, index, 1, dom, parent);
    el.parent = el.prev = el.next = el.root = null;
  });

  return this;
};

var empty = exports.empty = function() {
  domEach(this, function(i, el) {
    _.each(el.children, function(el) {
      el.next = el.prev = el.parent = null;
    });

    el.children.length = 0;
  });
  return this;
};

/**
 * Set/Get the HTML
 */
var html = exports.html = function(str) {
  if (str === undefined) {
    if (!this[0] || !this[0].children) return null;
    return $.html(this[0].children, this.options);
  }

  var opts = this.options;

  domEach(this, function(i, el) {
    _.each(el.children, function(el) {
      el.next = el.prev = el.parent = null;
    });

    var content = str.cheerio ? str.clone().get() : evaluate(str, opts);

    updateDOM(content, el);
  });

  return this;
};

var toString = exports.toString = function() {
  return $.html(this);
};

var text = exports.text = function(str) {
  // If `str` is undefined, act as a "getter"
  if (str === undefined) {
    return $.text(this);
  } else if (typeof str === 'function') {
    // Function support
    return domEach(this, function(i, el) {
      var $el = [el];
      return text.call($el, str.call(el, i, $.text($el)));
    });
  }

  // Append text node to each selected elements
  domEach(this, function(i, el) {
    _.each(el.children, function(el) {
      el.next = el.prev = el.parent = null;
    });

    var elem = {
      data: str,
      type: 'text',
      parent: el,
      prev: null,
      next: null,
      children: []
    };

    updateDOM(elem, el);
  });

  return this;
};

var clone = exports.clone = function() {
  // Turn it into HTML, then recreate it,
  // Seems to be the easiest way to reconnect everything correctly
  return this._make($.html(this));
};

},{"../parse":36,"../static":37,"../utils":38,"lodash":101}],34:[function(require,module,exports){
var _ = require('lodash'),
    select = require('CSSselect'),
    utils = require('../utils'),
    domEach = utils.domEach,
    uniqueSort = require('htmlparser2').DomUtils.uniqueSort,
    isTag = utils.isTag;

var find = exports.find = function(selector) {
  var elems = _.reduce(this, function(memo, elem) {
    return memo.concat(_.filter(elem.children, isTag));
  }, []);

  return this._make(select(selector, elems, this.options));
};

// Get the parent of each element in the current set of matched elements,
// optionally filtered by a selector.
var parent = exports.parent = function(selector) {
  var set = [];
  var $set;

  domEach(this, function(idx, elem) {
    var parentElem = elem.parent;
    if (parentElem && set.indexOf(parentElem) < 0) {
      set.push(parentElem);
    }
  });

  if (arguments.length) {
    set = filter.call(set, selector, this);
  }

  return this._make(set);
};

var parents = exports.parents = function(selector) {
  var parentNodes = [];

  // When multiple DOM elements are in the original set, the resulting set will
  // be in *reverse* order of the original elements as well, with duplicates
  // removed.
  this.get().reverse().forEach(function(elem) {
    traverseParents(this, elem.parent, selector, Infinity)
      .forEach(function(node) {
        if (parentNodes.indexOf(node) === -1) {
          parentNodes.push(node);
        }
      }
    );
  }, this);

  return this._make(parentNodes);
};

var parentsUntil = exports.parentsUntil = function(selector, filter) {
  var parentNodes = [], untilNode, untilNodes;

  if (typeof selector === 'string') {
    untilNode = select(selector, this.parents().toArray(), this.options)[0];
  } else if (selector && selector.cheerio) {
    untilNodes = selector.toArray();
  } else if (selector) {
    untilNode = selector;
  }

  // When multiple DOM elements are in the original set, the resulting set will
  // be in *reverse* order of the original elements as well, with duplicates
  // removed.

  this.toArray().reverse().forEach(function(elem) {
    while ((elem = elem.parent)) {
      if ((untilNode && elem !== untilNode) ||
        (untilNodes && untilNodes.indexOf(elem) === -1) ||
        (!untilNode && !untilNodes)) {
        if (isTag(elem) && parentNodes.indexOf(elem) === -1) { parentNodes.push(elem); }
      } else {
        break;
      }
    }
  }, this);

  return this._make(filter ? select(filter, parentNodes, this.options) : parentNodes);
};

// For each element in the set, get the first element that matches the selector
// by testing the element itself and traversing up through its ancestors in the
// DOM tree.
var closest = exports.closest = function(selector) {
  var set = [];

  if (!selector) {
    return this._make(set);
  }

  domEach(this, function(idx, elem) {
    var closestElem = traverseParents(this, elem, selector, 1)[0];

    // Do not add duplicate elements to the set
    if (closestElem && set.indexOf(closestElem) < 0) {
      set.push(closestElem);
    }
  }.bind(this));

  return this._make(set);
};

var next = exports.next = function(selector) {
  if (!this[0]) { return this; }
  var elems = [];

  _.forEach(this, function(elem) {
    while ((elem = elem.next)) {
      if (isTag(elem)) {
        elems.push(elem);
        return;
      }
    }
  });

  return selector ? filter.call(elems, selector, this) : this._make(elems);
};

var nextAll = exports.nextAll = function(selector) {
  if (!this[0]) { return this; }
  var elems = [];

  _.forEach(this, function(elem) {
    while ((elem = elem.next)) {
      if (isTag(elem) && elems.indexOf(elem) === -1) {
        elems.push(elem);
      }
    }
  });

  return selector ? filter.call(elems, selector, this) : this._make(elems);
};

var nextUntil = exports.nextUntil = function(selector, filterSelector) {
  if (!this[0]) { return this; }
  var elems = [], untilNode, untilNodes;

  if (typeof selector === 'string') {
    untilNode = select(selector, this.nextAll().get(), this.options)[0];
  } else if (selector && selector.cheerio) {
    untilNodes = selector.get();
  } else if (selector) {
    untilNode = selector;
  }

  _.forEach(this, function(elem) {
    while ((elem = elem.next)) {
      if ((untilNode && elem !== untilNode) ||
        (untilNodes && untilNodes.indexOf(elem) === -1) ||
        (!untilNode && !untilNodes)) {
        if (isTag(elem) && elems.indexOf(elem) === -1) {
          elems.push(elem);
        }
      } else {
        break;
      }
    }
  });

  return filterSelector ?
    filter.call(elems, filterSelector, this) :
    this._make(elems);
};

var prev = exports.prev = function(selector) {
  if (!this[0]) { return this; }
  var elems = [];

  _.forEach(this, function(elem) {
    while ((elem = elem.prev)) {
      if (isTag(elem)) {
        elems.push(elem);
        return;
      }
    }
  });

  return selector ? filter.call(elems, selector, this) : this._make(elems);
};

var prevAll = exports.prevAll = function(selector) {
  if (!this[0]) { return this; }
  var elems = [];

  _.forEach(this, function(elem) {
    while ((elem = elem.prev)) {
      if (isTag(elem) && elems.indexOf(elem) === -1) {
        elems.push(elem);
      }
    }
  });

  return selector ? filter.call(elems, selector, this) : this._make(elems);
};

var prevUntil = exports.prevUntil = function(selector, filterSelector) {
  if (!this[0]) { return this; }
  var elems = [], untilNode, untilNodes;

  if (typeof selector === 'string') {
    untilNode = select(selector, this.prevAll().get(), this.options)[0];
  } else if (selector && selector.cheerio) {
    untilNodes = selector.get();
  } else if (selector) {
    untilNode = selector;
  }

  _.forEach(this, function(elem) {
    while ((elem = elem.prev)) {
      if ((untilNode && elem !== untilNode) ||
        (untilNodes && untilNodes.indexOf(elem) === -1) ||
        (!untilNode && !untilNodes)) {
        if (isTag(elem) && elems.indexOf(elem) === -1) {
          elems.push(elem);
        }
      } else {
        break;
      }
    }
  });

  return filterSelector ?
    filter.call(elems, filterSelector, this) :
    this._make(elems);
};

var siblings = exports.siblings = function(selector) {
  var parent = this.parent();

  var elems = _.filter(
    parent ? parent.children() : this.siblingsAndMe(),
    function(elem) { return isTag(elem) && !this.is(elem); },
    this
  );

  if (selector !== undefined) {
    return filter.call(elems, selector, this);
  } else {
    return this._make(elems);
  }
};

var children = exports.children = function(selector) {

  var elems = _.reduce(this, function(memo, elem) {
    return memo.concat(_.filter(elem.children, isTag));
  }, []);

  if (selector === undefined) return this._make(elems);
  else if (typeof selector === 'number') return this._make(elems[selector]);

  return filter.call(elems, selector, this);
};

var contents = exports.contents = function() {
  return this._make(_.reduce(this, function(all, elem) {
    all.push.apply(all, elem.children);
    return all;
  }, []));
};

var each = exports.each = function(fn) {
  var i = 0, len = this.length;
  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;
  return this;
};

var map = exports.map = function(fn) {
  return this._make(_.reduce(this, function(memo, el, i) {
    var val = fn.call(el, i, el);
    return val == null ? memo : memo.concat(val);
  }, []));
};

var filter = exports.filter = function(match, container) {
  container = container || this;

  var make = _.bind(container._make, container);
  var filterFn;

  if (typeof match === 'string') {
    filterFn = select.compile(match, container.options);
  } else if (typeof match === 'function') {
    filterFn = function(el, i) {
      return match.call(el, i, el);
    };
  } else if (match.cheerio) {
    filterFn = match.is.bind(match);
  } else {
    filterFn = function(el) {
      return match === el;
    };
  }

  return make(_.filter(this, filterFn));
};

var first = exports.first = function() {
  return this.length > 1 ? this._make(this[0]) : this;
};

var last = exports.last = function() {
  return this.length > 1 ? this._make(this[this.length - 1]) : this;
};

// Reduce the set of matched elements to the one at the specified index.
var eq = exports.eq = function(i) {
  i = +i;

  // Use the first identity optimization if possible
  if (i === 0 && this.length <= 1) return this;

  if (i < 0) i = this.length + i;
  return this[i] ? this._make(this[i]) : this._make([]);
};

// Retrieve the DOM elements matched by the jQuery object.
var get = exports.get = function(i) {
  if (i == null) {
    return Array.prototype.slice.call(this);
  } else {
    return this[i < 0 ? (this.length + i) : i];
  }
};

var slice = exports.slice = function() {
  return this._make([].slice.apply(this, arguments));
};

function traverseParents(self, elem, selector, limit) {
  var elems = [];
  while (elem && elems.length < limit) {
    if (!selector || filter.call([elem], selector, self).length) {
      elems.push(elem);
    }
    elem = elem.parent;
  }
  return elems;
}

// End the most recent filtering operation in the current chain and return the
// set of matched elements to its previous state.
var end = exports.end = function() {
  return this.prevObject || this._make([]);
};

var add = exports.add = function(other, context) {
  var selection = this._make(other, context);
  var contents = uniqueSort(selection.get().concat(this.get()));

  for (var i = 0; i < contents.length; ++i) {
    selection[i] = contents[i];
  }
  selection.length = contents.length;

  return selection;
};

},{"../utils":38,"CSSselect":39,"htmlparser2":73,"lodash":101}],35:[function(require,module,exports){
/*
  Module dependencies
*/

var path = require('path'),
    parse = require('./parse'),
    _ = require('lodash');

/*
 * The API
 */

var api = [
  require('./api/attributes'),
  require('./api/traversing'),
  require('./api/manipulation'),
  require('./api/css')
];

/*
 * A simple way to check for HTML strings or ID strings
 */

var quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;

/*
 * Instance of cheerio
 */

var Cheerio = module.exports = function(selector, context, root, options) {
  if (!(this instanceof Cheerio)) return new Cheerio(selector, context, root, options);

  this.options = _.defaults(options || {}, this.options);

  // $(), $(null), $(undefined), $(false)
  if (!selector) return this;

  if (root) {
    if (typeof root === 'string') root = parse(root, this.options);
    this._root = Cheerio.call(this, root);
  }

  // $($)
  if (selector.cheerio) return selector;

  // $(dom)
  if (isNode(selector))
    selector = [selector];

  // $([dom])
  if (Array.isArray(selector)) {
    _.forEach(selector, function(elem, idx) {
      this[idx] = elem;
    }, this);
    this.length = selector.length;
    return this;
  }

  // $(<html>)
  if (typeof selector === 'string' && isHtml(selector)) {
    return Cheerio.call(this, parse(selector, this.options).children);
  }

  // If we don't have a context, maybe we have a root, from loading
  if (!context) {
    context = this._root;
  } else if (typeof context === 'string') {
    if (isHtml(context)) {
      // $('li', '<ul>...</ul>')
      context = parse(context, this.options);
      context = Cheerio.call(this, context);
    } else {
      // $('li', 'ul')
      selector = [context, selector].join(' ');
      context = this._root;
    }
  // $('li', node), $('li', [nodes])
  } else if (!context.cheerio) {
    context = Cheerio.call(this, context);
  }

  // If we still don't have a context, return
  if (!context) return this;

  // #id, .class, tag
  return context.find(selector);
};

/**
 * Mix in `static`
 */

_.extend(Cheerio, require('./static'));

/*
 * Set a signature of the object
 */

Cheerio.prototype.cheerio = '[cheerio object]';

/*
 * Cheerio default options
 */

Cheerio.prototype.options = {
  normalizeWhitespace: false,
  xmlMode: false,
  decodeEntities: true
};

/*
 * Make cheerio an array-like object
 */

Cheerio.prototype.length = 0;
Cheerio.prototype.splice = Array.prototype.splice;

/*
 * Check if string is HTML
 */
var isHtml = function(str) {
  // Faster than running regex, if str starts with `<` and ends with `>`, assume it's HTML
  if (str.charAt(0) === '<' && str.charAt(str.length - 1) === '>' && str.length >= 3) return true;

  // Run the regex
  var match = quickExpr.exec(str);
  return !!(match && match[1]);
};

/*
 * Make a cheerio object
 *
 * @api private
 */

Cheerio.prototype._make = function(dom, context) {
  var cheerio = new Cheerio(dom, context, this._root, this.options);
  cheerio.prevObject = this;
  return cheerio;
};

/**
 * Turn a cheerio object into an array
 *
 * @deprecated
 */

Cheerio.prototype.toArray = function() {
  return this.get();
};

/**
 * Plug in the API
 */
api.forEach(function(mod) {
  _.extend(Cheerio.prototype, mod);
});

var isNode = function(obj) {
  return obj.name || obj.type === 'text' || obj.type === 'comment';
};

},{"./api/attributes":31,"./api/css":32,"./api/manipulation":33,"./api/traversing":34,"./parse":36,"./static":37,"lodash":101,"path":114}],36:[function(require,module,exports){
(function (Buffer){
/*
  Module Dependencies
*/
var htmlparser = require('htmlparser2'),
    utils = require('./utils');

/*
  Parser
*/
exports = module.exports = function(content, options) {
  var dom = evaluate(content, options);

  // Generic root element
  var root = {
    type: 'root',
    name: 'root',
    parent: null,
    prev: null,
    next: null,
    children: []
  };

  // Update the dom using the root
  update(dom, root);

  return root;
};

var evaluate = exports.evaluate = function(content, options) {
  // options = options || $.fn.options;

  var dom;

  if (typeof content === 'string' || Buffer.isBuffer(content)) {
    dom = htmlparser.parseDOM(content, options);
  } else {
    dom = content;
  }

  return dom;
};

/*
  Update the dom structure, for one changed layer
*/
var update = exports.update = function(arr, parent) {
  // normalize
  if (!Array.isArray(arr)) arr = [arr];

  // Update parent
  if (parent) {
    parent.children = arr;
  } else {
    parent = null;
  }

  // Update neighbors
  for (var i = 0; i < arr.length; i++) {
    var node = arr[i];

    // Cleanly remove existing nodes from their previous structures.
    var oldParent = node.parent || node.root,
        oldSiblings = oldParent && oldParent.children;
    if (oldSiblings && oldSiblings !== arr) {
      oldSiblings.splice(oldSiblings.indexOf(node), 1);
      if (node.prev) {
        node.prev.next = node.next;
      }
      if (node.next) {
        node.next.prev = node.prev;
      }
    }

    if (parent) {
      node.prev = arr[i - 1] || null;
      node.next = arr[i + 1] || null;
    } else {
      node.prev = node.next = null;
    }

    if (parent && parent.type === 'root') {
      node.root = parent;
      node.parent = null;
    } else {
      node.root = null;
      node.parent = parent;
    }
  }

  return parent;
};

// module.exports = $.extend(exports);

}).call(this,{"isBuffer":require("../../../../../../../../../../../../usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js")})
},{"../../../../../../../../../../../../usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js":113,"./utils":38,"htmlparser2":73}],37:[function(require,module,exports){
/**
 * Module dependencies
 */

var select = require('CSSselect'),
    parse = require('./parse'),
    render = require('dom-serializer'),
    _ = require('lodash');

/**
 * $.load(str)
 */

var load = exports.load = function(content, options) {
  var Cheerio = require('./cheerio');

  options = _.defaults(options || {}, Cheerio.prototype.options);

  var root = parse(content, options);

  var initialize = function(selector, context, r, opts) {
    opts = _.defaults(opts || {}, options);
    return new Cheerio(selector, context, r || root, opts);
  };

  // Add in the static methods
  initialize.__proto__ = exports;

  // Add in the root
  initialize._root = root;
  // store options
  initialize._options = options;

  return initialize;
};

/**
 * $.html([selector | dom])
 */

var html = exports.html = function(dom, options) {
  var Cheerio = require('./cheerio');

  // be flexible about parameters, sometimes we call html(),
  // with options as only parameter
  // check dom argument for dom element specific properties
  // assume there is no 'length' or 'type' properties in the options object
  if (Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom))
  {
    options = dom;
    dom = undefined;
  }

  // sometimes $.html() used without preloading html
  // so fallback non existing options to the default ones
  options = _.defaults(options || {}, this._options, Cheerio.prototype.options);

  if (dom) {
    dom = (typeof dom === 'string') ? select(dom, this._root, options) : dom;
    return render(dom, options);
  } else if (this._root && this._root.children) {
    return render(this._root.children, options);
  } else {
    return '';
  }
};

/**
 * $.xml([selector | dom])
 */

var xml = exports.xml = function(dom) {
  if (dom) {
    dom = (typeof dom === 'string') ? select(dom, this._root, this.options) : dom;
    return render(dom, { xmlMode: true });
  } else if (this._root && this._root.children) {
    return render(this._root.children, { xmlMode: true });
  } else {
    return '';
  }
};

/**
 * $.text(dom)
 */

var text = exports.text = function(elems) {
  if (!elems) return '';

  var ret = '',
      len = elems.length,
      elem;

  for (var i = 0; i < len; i ++) {
    elem = elems[i];
    if (elem.type === 'text') ret += elem.data;
    else if (elem.children && elem.type !== 'comment') {
      ret += text(elem.children);
    }
  }

  return ret;
};

/**
 * $.parseHTML(data [, context ] [, keepScripts ])
 * Parses a string into an array of DOM nodes. The `context` argument has no
 * meaning for Cheerio, but it is maintained for API compatibility with jQuery.
 */
var parseHTML = exports.parseHTML = function(data, context, keepScripts) {
  var parsed;

  if (!data || typeof data !== 'string') {
    return null;
  }

  if (typeof context === 'boolean') {
    keepScripts = context;
  }

  parsed = this.load(data);
  if (!keepScripts) {
    parsed('script').remove();
  }

  return parsed.root()[0].children;
};

/**
 * $.root()
 */
var root = exports.root = function() {
  return this(this._root);
};

/**
 * $.contains()
 */
var contains = exports.contains = function(container, contained) {

  // According to the jQuery API, an element does not "contain" itself
  if (contained === container) {
    return false;
  }

  // Step up the descendants, stopping when the root element is reached
  // (signaled by `.parent` returning a reference to the same object)
  while (contained && contained !== contained.parent) {
    contained = contained.parent;
    if (contained === container) {
      return true;
    }
  }

  return false;
};

},{"./cheerio":35,"./parse":36,"CSSselect":39,"dom-serializer":56,"lodash":101}],38:[function(require,module,exports){
/**
 * HTML Tags
 */

var tags = { tag: true, script: true, style: true };

/**
 * Check if the DOM element is a tag
 *
 * isTag(type) includes <script> and <style> tags
 */

exports.isTag = function(type) {
  if (type.type) type = type.type;
  return tags[type] || false;
};

/**
 * Convert a string to camel case notation.
 * @param  {String} str String to be converted.
 * @return {String}     String in camel case notation.
 */

exports.camelCase = function(str) {
  return str.replace(/[_.-](\w|$)/g, function(_, x) {
    return x.toUpperCase();
  });
};

/**
 * Convert a string from camel case to "CSS case", where word boundaries are
 * described by hyphens ("-") and all characters are lower-case.
 * @param  {String} str String to be converted.
 * @return {string}     String in "CSS case".
 */
exports.cssCase = function(str) {
  return str.replace(/[A-Z]/g, '-$&').toLowerCase();
};

/**
 * Iterate over each DOM element without creating intermediary Cheerio instances.
 *
 * This is indented for use internally to avoid otherwise unnecessary memory pressure introduced
 * by _make.
 */

exports.domEach = function(cheerio, fn) {
  var i = 0, len = cheerio.length;
  while (i < len && fn(i, cheerio[i]) !== false) ++i;
  return cheerio;
};

},{}],39:[function(require,module,exports){
"use strict";

module.exports = CSSselect;

var Pseudos       = require("./lib/pseudos.js"),
    DomUtils      = require("domutils"),
    findOne       = DomUtils.findOne,
    findAll       = DomUtils.findAll,
    getChildren   = DomUtils.getChildren,
    removeSubsets = DomUtils.removeSubsets,
    falseFunc     = require("./lib/basefunctions.js").falseFunc,
    compile       = require("./lib/compile.js"),
    compileUnsafe = compile.compileUnsafe;

function getSelectorFunc(searchFunc){
	return function select(query, elems, options){
		if(typeof query !== "function") query = compileUnsafe(query, options);
		if(!Array.isArray(elems)) elems = getChildren(elems);
		else elems = removeSubsets(elems);
		return searchFunc(query, elems);
	};
}

var selectAll = getSelectorFunc(function selectAll(query, elems){
	return (query === falseFunc || !elems || elems.length === 0) ? [] : findAll(query, elems);
});

var selectOne = getSelectorFunc(function selectOne(query, elems){
	return (query === falseFunc || !elems || elems.length === 0) ? null : findOne(query, elems);
});

function is(elem, query, options){
	return (typeof query === "function" ? query : compile(query, options))(elem);
}

/*
	the exported interface
*/
function CSSselect(query, elems, options){
	return selectAll(query, elems, options);
}

CSSselect.compile = compile;
CSSselect.filters = Pseudos.filters;
CSSselect.pseudos = Pseudos.pseudos;

CSSselect.selectAll = selectAll;
CSSselect.selectOne = selectOne;

CSSselect.is = is;

//legacy methods (might be removed)
CSSselect.parse = compile;
CSSselect.iterate = selectAll;

},{"./lib/basefunctions.js":41,"./lib/compile.js":42,"./lib/pseudos.js":45,"domutils":48}],40:[function(require,module,exports){
var DomUtils  = require("domutils"),
    hasAttrib = DomUtils.hasAttrib,
    getAttributeValue = DomUtils.getAttributeValue,
    falseFunc = require("./basefunctions.js").falseFunc;

//https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469
var reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;

/*
	attribute selectors
*/

var attributeRules = {
	__proto__: null,
	equals: function(next, data){
		var name  = data.name,
		    value = data.value;

		if(data.ignoreCase){
			value = value.toLowerCase();

			return function equalsIC(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.toLowerCase() === value && next(elem);
			};
		}

		return function equals(elem){
			return getAttributeValue(elem, name) === value && next(elem);
		};
	},
	hyphen: function(next, data){
		var name  = data.name,
		    value = data.value,
		    len = value.length;

		if(data.ignoreCase){
			value = value.toLowerCase();

			return function hyphenIC(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null &&
						(attr.length === len || attr.charAt(len) === "-") &&
						attr.substr(0, len).toLowerCase() === value &&
						next(elem);
			};
		}

		return function hyphen(elem){
			var attr = getAttributeValue(elem, name);
			return attr != null &&
					attr.substr(0, len) === value &&
					(attr.length === len || attr.charAt(len) === "-") &&
					next(elem);
		};
	},
	element: function(next, data){
		var name = data.name,
		    value = data.value;

		if(/\s/.test(value)){
			return falseFunc;
		}

		value = value.replace(reChars, "\\$&");

		var pattern = "(?:^|\\s)" + value + "(?:$|\\s)",
		    flags = data.ignoreCase ? "i" : "",
		    regex = new RegExp(pattern, flags);

		return function element(elem){
			var attr = getAttributeValue(elem, name);
			return attr != null && regex.test(attr) && next(elem);
		};
	},
	exists: function(next, data){
		var name = data.name;
		return function exists(elem){
			return hasAttrib(elem, name) && next(elem);
		};
	},
	start: function(next, data){
		var name  = data.name,
		    value = data.value,
		    len = value.length;

		if(len === 0){
			return falseFunc;
		}
		
		if(data.ignoreCase){
			value = value.toLowerCase();

			return function startIC(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);
			};
		}

		return function start(elem){
			var attr = getAttributeValue(elem, name);
			return attr != null && attr.substr(0, len) === value && next(elem);
		};
	},
	end: function(next, data){
		var name  = data.name,
		    value = data.value,
		    len   = -value.length;

		if(len === 0){
			return falseFunc;
		}

		if(data.ignoreCase){
			value = value.toLowerCase();

			return function endIC(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.substr(len).toLowerCase() === value && next(elem);
			};
		}

		return function end(elem){
			var attr = getAttributeValue(elem, name);
			return attr != null && attr.substr(len) === value && next(elem);
		};
	},
	any: function(next, data){
		var name  = data.name,
		    value = data.value;

		if(value === ""){
			return falseFunc;
		}

		if(data.ignoreCase){
			var regex = new RegExp(value.replace(reChars, "\\$&"), "i");

			return function anyIC(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && regex.test(attr) && next(elem);
			};
		}

		return function any(elem){
			var attr = getAttributeValue(elem, name);
			return attr != null && attr.indexOf(value) >= 0 && next(elem);
		};
	},
	not: function(next, data){
		var name  = data.name,
		    value = data.value;

		if(value === ""){
			return function notEmpty(elem){
				return !!getAttributeValue(elem, name) && next(elem);
			};
		} else if(data.ignoreCase){
			value = value.toLowerCase();

			return function notIC(elem){
				var attr = getAttributeValue(elem, name);
				return attr != null && attr.toLowerCase() !== value && next(elem);
			};
		}

		return function not(elem){
			return getAttributeValue(elem, name) !== value && next(elem);
		};
	}
};

module.exports = {
	compile: function(next, data){
		return attributeRules[data.action](next, data);
	},
	rules: attributeRules
};

},{"./basefunctions.js":41,"domutils":48}],41:[function(require,module,exports){
module.exports = {
	trueFunc: function trueFunc(){
		return true;
	},
	falseFunc: function falseFunc(){
		return false;
	}
};
},{}],42:[function(require,module,exports){
/*
	compiles a selector to an executable function
*/

module.exports = compile;
module.exports.compileUnsafe = compileUnsafe;

var parse       = require("CSSwhat"),
    DomUtils    = require("domutils"),
    isTag       = DomUtils.isTag,
    Rules       = require("./general.js"),
    sortRules   = require("./sort.js"),
    BaseFuncs   = require("./basefunctions.js"),
    trueFunc    = BaseFuncs.trueFunc,
    falseFunc   = BaseFuncs.falseFunc;

function compile(selector, options){
	var next = compileUnsafe(selector, options);

	return function base(elem){
		return isTag(elem) && next(elem);
	};
}

function compileUnsafe(selector, options){
	return parse(selector, options)
		.map(compileRules)
		.reduce(reduceRules, falseFunc);
}

function compileRules(arr){
	if(arr.length === 0) return falseFunc;
	return sortRules(arr).reduce(function(func, rule){
		if(func === falseFunc) return func;
		return Rules[rule.type](func, rule);
	}, trueFunc);
}

function reduceRules(a, b){
	if(b === falseFunc || a === trueFunc){
		return a;
	}
	if(a === falseFunc || b === trueFunc){
		return b;
	}

	return function combine(elem){
		return a(elem) || b(elem);
	};	
}

//:not and :has have to compile selectors
//doing this in lib/pseudos.js would lead to circular dependencies,
//so we add them here

var Pseudos     = require("./pseudos.js"),
    filters     = Pseudos.filters,
    isParent    = Pseudos.pseudos.parent,
    existsOne   = DomUtils.existsOne,
    getChildren = DomUtils.getChildren;

filters.not = function(next, select){
	var func = compileUnsafe(select);

	if(func === falseFunc) return next;
	if(func === trueFunc)  return falseFunc;

	return function(elem){
		return !func(elem) && next(elem);
	};
};

filters.has = function(next, selector){
	var func = compile(selector);

	if(func === falseFunc) return falseFunc;
	if(func === trueFunc)  return function(elem){
			return isParent(elem) && next(elem);
		};

	return function has(elem){
		return next(elem) && existsOne(func, getChildren(elem));
	};
};

},{"./basefunctions.js":41,"./general.js":43,"./pseudos.js":45,"./sort.js":46,"CSSwhat":47,"domutils":48}],43:[function(require,module,exports){
var DomUtils    = require("domutils"),
    isTag       = DomUtils.isTag,
    getParent   = DomUtils.getParent,
    getChildren = DomUtils.getChildren,
    getSiblings = DomUtils.getSiblings,
    getName     = DomUtils.getName;

/*
	all available rules
*/
module.exports = {
	__proto__: null,

	attribute: require("./attributes.js").compile,
	pseudo: require("./pseudos.js").compile,

	//tags
	tag: function(next, data){
		var name = data.name;
		return function tag(elem){
			return getName(elem) === name && next(elem);
		};
	},

	//traversal
	descendant: function(next){
		return function descendant(elem){
			var found = false;

			while(!found && (elem = getParent(elem))){
				found = next(elem);
			}

			return found;
		};
	},
	parent: function(next){
		return function parent(elem){
			return getChildren(elem).some(next);
		};
	},
	child: function(next){
		return function child(elem){
			var parent = getParent(elem);
			return !!parent && next(parent);
		};
	},
	sibling: function(next){
		return function sibling(elem){
			var siblings = getSiblings(elem);

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) break;
					if(next(siblings[i])) return true;
				}
			}

			return false;
		};
	},
	adjacent: function(next){
		return function adjacent(elem){
			var siblings = getSiblings(elem),
			    lastElement;

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) break;
					lastElement = siblings[i];
				}
			}

			return !!lastElement && next(lastElement);
		};
	},
	universal: function(next){
		return next;
	}
};
},{"./attributes.js":40,"./pseudos.js":45,"domutils":48}],44:[function(require,module,exports){
var BaseFuncs = require("./basefunctions.js"),
    trueFunc  = BaseFuncs.trueFunc,
    falseFunc = BaseFuncs.falseFunc;

module.exports = function nthCheck(formula){
	return compile(parse(formula));
};

module.exports.parse = parse;
module.exports.compile = compile;

//following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo

//[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?
var re_nthElement = /^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;

/*
	parses a nth-check formula, returns an array of two numbers
*/
function parse(formula){
	formula = formula.trim().toLowerCase();

	if(formula === "even"){
		return [2, 0];
	} else if(formula === "odd"){
		return [2, 1];
	} else {
		var parsed = formula.match(re_nthElement);

		if(!parsed){
			throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");
		}

		var a;

		if(parsed[1]){
			a = parseInt(parsed[1], 10);
			if(!a){
				if(parsed[1].charAt(0) === "-") a = -1;
				else a = 1;
			}
		} else a = 0;

		return [
			a,
			parsed[3] ? parseInt((parsed[2] || "") + parsed[3], 10) : 0
		];
	}
}

/*
	returns a function that checks if an elements index matches the given rule
	highly optimized to return the fastest solution
*/
function compile(parsed){
	var a = parsed[0],
	    b = parsed[1] - 1;

	//when b <= 0, a*n won't be possible for any matches when a < 0
	//besides, the specification says that no element is matched when a and b are 0
	if(b < 0 && a <= 0) return falseFunc;

	//when a is in the range -1..1, it matches any element (so only b is checked)
	if(a ===-1) return function(pos){ return pos <= b; };
	if(a === 0) return function(pos){ return pos === b; };
	//when b <= 0 and a === 1, they match any element
	if(a === 1) return b < 0 ? trueFunc : function(pos){ return pos >= b; };

	//when a > 0, modulo can be used to check if there is a match
	var bMod = b % a;
	if(bMod < 0) bMod += a;

	if(a > 1){
		return function(pos){
			return pos >= b && pos % a === bMod;
		};
	}

	a *= -1; //make `a` positive

	return function(pos){
		return pos <= b && pos % a === bMod;
	};
}
},{"./basefunctions.js":41}],45:[function(require,module,exports){
/*
	pseudo selectors
	
	---
	
	they are available in two forms:
	* filters called when the selector 
	  is compiled and return a function
	  that needs to return next()
	* pseudos get called on execution
	  they need to return a boolean
*/

var DomUtils    = require("domutils"),
    isTag       = DomUtils.isTag,
    getText     = DomUtils.getText,
    getParent   = DomUtils.getParent,
    getChildren = DomUtils.getChildren,
    getSiblings = DomUtils.getSiblings,
    hasAttrib   = DomUtils.hasAttrib,
    getName     = DomUtils.getName,
    getAttribute= DomUtils.getAttributeValue,
    getNCheck   = require("./nth-check.js"),
    checkAttrib = require("./attributes.js").rules.equals,
    BaseFuncs   = require("./basefunctions.js"),
    trueFunc    = BaseFuncs.trueFunc,
    falseFunc   = BaseFuncs.falseFunc;

//helper methods
function getFirstElement(elems){
	for(var i = 0; elems && i < elems.length; i++){
		if(isTag(elems[i])) return elems[i];
	}
}

function getAttribFunc(name, value){
	var data = {name: name, value: value};
	return function attribFunc(next){
		return checkAttrib(next, data);
	};
}

function getChildFunc(next){
	return function(elem){
		return !!getParent(elem) && next(elem);
	};
}

var filters = {
	contains: function(next, text){
		if(
			(text.charAt(0) === "\"" || text.charAt(0) === "'") &&
			text.charAt(0) === text.substr(-1)
		){
			text = text.slice(1, -1);
		}
		return function contains(elem){
			return getText(elem).indexOf(text) >= 0 && next(elem);
		};
	},

	//location specific methods
	//first- and last-child methods return as soon as they find another element
	"first-child": function(next){
		return function firstChild(elem){
			return getFirstElement(getSiblings(elem)) === elem && next(elem);
		};
	},
	"last-child": function(next){
		return function lastChild(elem){
			var siblings = getSiblings(elem);

			for(var i = siblings.length - 1; i >= 0; i--){
				if(siblings[i] === elem) return next(elem);
				if(isTag(siblings[i])) break;
			}

			return false;
		};
	},
	"first-of-type": function(next){
		return function firstOfType(elem){
			var siblings = getSiblings(elem);

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) return next(elem);
					if(getName(siblings[i]) === getName(elem)) break;
				}
			}

			return false;
		};
	},
	"last-of-type": function(next){
		return function lastOfType(elem){
			var siblings = getSiblings(elem);

			for(var i = siblings.length-1; i >= 0; i--){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) return next(elem);
					if(getName(siblings[i]) === getName(elem)) break;
				}
			}

			return false;
		};
	},
	"only-of-type": function(next){
		return function onlyOfType(elem){
			var siblings = getSiblings(elem);

			for(var i = 0, j = siblings.length; i < j; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) continue;
					if(getName(siblings[i]) === getName(elem)) return false;
				}
			}

			return next(elem);
		};
	},
	"only-child": function(next){
		return function onlyChild(elem){
			var siblings = getSiblings(elem);

			for(var i = 0; i < siblings.length; i++){
				if(isTag(siblings[i]) && siblings[i] !== elem) return false;
			}

			return next(elem);
		};
	},
	"nth-child": function(next, rule){
		var func = getNCheck(rule);

		if(func === falseFunc) return func;
		if(func === trueFunc)  return getChildFunc(next);

		return function nthChild(elem){
			var siblings = getSiblings(elem);

			for(var i = 0, pos = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) break;
					else pos++;
				}
			}

			return func(pos) && next(elem);
		};
	},
	"nth-last-child": function(next, rule){
		var func = getNCheck(rule);

		if(func === falseFunc) return func;
		if(func === trueFunc)  return getChildFunc(next);

		return function nthLastChild(elem){
			var siblings = getSiblings(elem);

			for(var pos = 0, i = siblings.length - 1; i >= 0; i--){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) break;
					else pos++;
				}
			}

			return func(pos) && next(elem);
		};
	},
	"nth-of-type": function(next, rule){
		var func = getNCheck(rule);

		if(func === falseFunc) return func;
		if(func === trueFunc)  return getChildFunc(next);

		return function nthOfType(elem){
			var siblings = getSiblings(elem);

			for(var pos = 0, i = 0; i < siblings.length; i++){
				if(isTag(siblings[i])){
					if(siblings[i] === elem) break;
					if(getName(siblings[i]) === getName(elem)) pos++;
				}
			}

			return func(pos) && next(elem);
		};
	},
	"nth-last-of-type": function(next, rule){
		var func = getNCheck(rule);

		if(func === falseFunc) return func;
		if(func === trueFunc)  return getChildFunc(next);

		return function nthLastOfType(elem){
			var siblings = getSiblings(elem);

			for(var pos = 0, i = siblings.length - 1; i >= 0; i--){
				if(siblings[i] === elem) break;
				if(getName(siblings[i]) === getName(elem)) pos++;
			}

			return func(pos) && next(elem);
		};
	},

	//jQuery extensions (others follow as pseudos)
	checkbox: getAttribFunc("type", "checkbox"),
	file: getAttribFunc("type", "file"),
	password: getAttribFunc("type", "password"),
	radio: getAttribFunc("type", "radio"),
	reset: getAttribFunc("type", "reset"),
	image: getAttribFunc("type", "image"),
	submit: getAttribFunc("type", "submit")
};

//while filters are precompiled, pseudos get called when they are needed
var pseudos = {
	root: function(elem){
		return !getParent(elem);
	},
	empty: function(elem){
		return !getChildren(elem).some(function(elem){
			return isTag(elem) || elem.type === "text";
		});
	},

	//forms
	//to consider: :target, :enabled
	selected: function(elem){
		if(hasAttrib(elem, "selected")) return true;
		else if(getName(elem) !== "option") return false;

		//the first <option> in a <select> is also selected
		var parent = getParent(elem);

		if(!parent || getName(parent) !== "select") return false;

		var siblings = getChildren(parent),
			sawElem  = false;

		for(var i = 0; i < siblings.length; i++){
			if(isTag(siblings[i])){
				if(siblings[i] === elem){
					sawElem = true;
				} else if(!sawElem){
					return false;
				} else if(hasAttrib(siblings[i], "selected")){
					return false;
				}
			}
		}

		return sawElem;
	},
	disabled: function(elem){
		return hasAttrib(elem, "disabled");
	},
	enabled: function(elem){
		return !hasAttrib(elem, "disabled");
	},
	checked: function(elem){
		return hasAttrib(elem, "checked") || pseudos.selected(elem);
	},

	//jQuery extensions

	//:parent is the inverse of :empty
	parent: function(elem){
		return !pseudos.empty(elem);
	},
	header: function(elem){
		var name = getName(elem);
		return name === "h1" ||
		       name === "h2" ||
		       name === "h3" ||
		       name === "h4" ||
		       name === "h5" ||
		       name === "h6";
	},

	button: function(elem){
		var name = getName(elem);
		return name === "button" ||
		       name === "input" &&
		       getAttribute(elem, "type") === "button";
	},
	input: function(elem){
		var name = getName(elem);
		return name === "input" ||
		       name === "textarea" ||
		       name === "select" ||
		       name === "button";
	},
	text: function(elem){
		var attr;
		return getName(elem) === "input" && (
			!(attr = getAttribute(elem, "type")) ||
			attr.toLowerCase() === "text"
		);
	}
};

function verifyArgs(func, name, subselect){
	if(subselect === null){
		if(func.length > 1){
			throw new SyntaxError("pseudo-selector :" + name + " requires an argument");
		}
	} else {
		if(func.length === 1){
			throw new SyntaxError("pseudo-selector :" + name + " doesn't have any arguments");
		}	
	}
}

module.exports = {
	compile: function(next, data){
		var name = data.name,
			subselect = data.data;

		if(typeof filters[name] === "function"){
			verifyArgs(filters[name], name,  subselect);
			return filters[name](next, subselect);
		} else if(typeof pseudos[name] === "function"){
			var func = pseudos[name];
			verifyArgs(func, name, subselect);
			return function pseudoArgs(elem){
				return func(elem, subselect) && next(elem);
			};
		} else {
			throw new SyntaxError("unmatched pseudo-class :" + name);
		}
	},
	filters: filters,
	pseudos: pseudos
};

},{"./attributes.js":40,"./basefunctions.js":41,"./nth-check.js":44,"domutils":48}],46:[function(require,module,exports){
module.exports = sortByProcedure;

/*
	sort the parts of the passed selector,
	as there is potential for optimization
	(some types of selectors are faster than others)
*/

var ATTRIBUTE = 1;

var procedure = {
	__proto__: null,
	universal: 5, //should be last so that it can be ignored
	tag: 3, //very quick test
	attribute: ATTRIBUTE,
	pseudo: 0, //can be pretty expensive (especially :has)

	//everything else shouldn't be moved
	descendant: -1,
	child: -1,
	parent: -1,
	sibling: -1,
	adjacent: -1
};

var attributes = {
	__proto__: null,
	exists: 8,
	equals: 7,
	not: 6,
	start: 5,
	end: 4,
	any: 3,
	hyphen: 2,
	element: 1
};

function sortByProcedure(arr){
	for(var i = 1; i < arr.length; i++){
		var procNew = procedure[arr[i].type];

		if(procNew < 0) continue;

		for(var j = i - 1; j >= 0; j--){
			if(
				procNew > procedure[arr[j].type] || !(
					procNew === ATTRIBUTE &&
					procedure[arr[j].type] === ATTRIBUTE &&
					attributes[arr[i].action] <= attributes[arr[j].action]
				)
			) break;

			var tmp = arr[j + 1];
			arr[j + 1] = arr[j];
			arr[j] = tmp;
		}
	}
	return arr;
}
},{}],47:[function(require,module,exports){
"use strict";

module.exports = parse;

var re_ws = /^\s/,
    re_name = /^(?:\\.|[\w\-\u00c0-\uFFFF])+/,
    re_escape = /\\([\da-f]{1,6}\s?|(\s)|.)/ig,
    //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87
    re_attr = /^\s*((?:\\.|[\w\u00c0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])(.*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF\-])*)|)|)\s*(i)?\]/;

var actionTypes = {
	__proto__: null,
	"undefined": "exists",
	"":  "equals",
	"~": "element",
	"^": "start",
	"$": "end",
	"*": "any",
	"!": "not",
	"|": "hyphen"
};

var simpleSelectors = {
	__proto__: null,
	">": "child",
	"<": "parent",
	"~": "sibling",
	"+": "adjacent"
};

var attribSelectors = {
	__proto__: null,
	"#": ["id", "equals"],
	".": ["class", "element"]
};

//unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L139
function funescape( _, escaped, escapedWhitespace ) {
	var high = "0x" + escaped - 0x10000;
	// NaN means non-codepoint
	// Support: Firefox
	// Workaround erroneous numeric interpretation of +"0x"
	return high !== high || escapedWhitespace ?
		escaped :
		// BMP codepoint
		high < 0 ?
			String.fromCharCode( high + 0x10000 ) :
			// Supplemental Plane codepoint (surrogate pair)
			String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
}

function unescapeCSS(str){
	return str.replace(re_escape, funescape);
}

function getClosingPos(selector){
	var pos = 1, counter = 1, len = selector.length;

	for(; counter > 0 && pos < len; pos++){
		if(selector.charAt(pos) === "(") counter++;
		else if(selector.charAt(pos) === ")") counter--;
	}

	return pos;
}

function parse(selector, options){
	selector = (selector + "").trimLeft();

	var subselects = [],
	    tokens = [],
	    sawWS = false,
	    data, firstChar, name;
	
	function getName(){
		var sub = selector.match(re_name)[0];
		selector = selector.substr(sub.length);
		return unescapeCSS(sub);
	}

	while(selector !== ""){
		if(re_name.test(selector)){
			if(sawWS){
				tokens.push({type: "descendant"});
				sawWS = false;
			}

			name = getName();

			if(!options || ("lowerCaseTags" in options ? options.lowerCaseTags : !options.xmlMode)){
				name = name.toLowerCase();
			}

			tokens.push({type: "tag", name: name});
		} else if(re_ws.test(selector)){
			sawWS = true;
			selector = selector.trimLeft();
		} else {
			firstChar = selector.charAt(0);
			selector = selector.substr(1);

			if(firstChar in simpleSelectors){
				tokens.push({type: simpleSelectors[firstChar]});
				selector = selector.trimLeft();
				sawWS = false;
				continue;
			} else if(firstChar === ","){
				if(tokens.length === 0){
					throw new SyntaxError("empty sub-selector");
				}
				subselects.push(tokens);
				tokens = [];

				selector = selector.trimLeft();
				sawWS = false;
				continue;
			} else if(sawWS){
				tokens.push({type: "descendant"});
				sawWS = false;
			}

			if(firstChar === "*"){
				tokens.push({type: "universal"});
			} else if(firstChar in attribSelectors){
				tokens.push({
					type: "attribute",
					name: attribSelectors[firstChar][0],
					action: attribSelectors[firstChar][1],
					value: getName(),
					ignoreCase: false
				});
			} else if(firstChar === "["){
				data = selector.match(re_attr);
				if(!data){
					throw new SyntaxError("Malformed attribute selector: " + selector);
				}
				selector = selector.substr(data[0].length);
				name = unescapeCSS(data[1]);

				if(
					!options || (
						"lowerCaseAttributeNames" in options ?
							options.lowerCaseAttributeNames :
							!options.xmlMode
					)
				){
					name = name.toLowerCase();
				}

				tokens.push({
					type: "attribute",
					name: name,
					action: actionTypes[data[2]],
					value: unescapeCSS(data[4] || data[5] || ""),
					ignoreCase: !!data[6]
				});
				
			} else if(firstChar === ":"){
				//if(selector.charAt(0) === ":"){} //TODO pseudo-element
				name = getName().toLowerCase();
				data = null;
				
				if(selector.charAt(0) === "("){
					var pos = getClosingPos(selector);
					data = selector.substr(1, pos - 2);
					selector = selector.substr(pos);
				}
				
				tokens.push({type: "pseudo", name: name, data: data});
			} else {
				//otherwise, the parser needs to throw or it would enter an infinite loop
				throw new SyntaxError("Unmatched selector: " + firstChar + selector);
			}
		}
	}
	
	if(subselects.length > 0 && tokens.length === 0){
		throw new SyntaxError("empty sub-selector");
	}
	subselects.push(tokens);
	return subselects;
}
},{}],48:[function(require,module,exports){
var DomUtils = module.exports;

[
	require("./lib/stringify"),
	require("./lib/traversal"),
	require("./lib/manipulation"),
	require("./lib/querying"),
	require("./lib/legacy"),
	require("./lib/helpers")
].forEach(function(ext){
	Object.keys(ext).forEach(function(key){
		DomUtils[key] = ext[key].bind(DomUtils);
	});
});

},{"./lib/helpers":49,"./lib/legacy":50,"./lib/manipulation":51,"./lib/querying":52,"./lib/stringify":53,"./lib/traversal":54}],49:[function(require,module,exports){
// removeSubsets
// Given an array of nodes, remove any member that is contained by another.
exports.removeSubsets = function(nodes) {
	var idx = nodes.length, node, ancestor, replace;

	// Check if each node (or one of its ancestors) is already contained in the
	// array.
	while (--idx > -1) {
		node = ancestor = nodes[idx];

		// Temporarily remove the node under consideration
		nodes[idx] = null;
		replace = true;

		while (ancestor) {
			if (nodes.indexOf(ancestor) > -1) {
				replace = false;
				nodes.splice(idx, 1);
				break;
			}
			ancestor = ancestor.parent;
		}

		// If the node has been found to be unique, re-insert it.
		if (replace) {
			nodes[idx] = node;
		}
	}

	return nodes;
};

},{}],50:[function(require,module,exports){
var ElementType = require("domelementtype");
var isTag = exports.isTag = ElementType.isTag;

exports.testElement = function(options, element){
	for(var key in options){
		if(!options.hasOwnProperty(key));
		else if(key === "tag_name"){
			if(!isTag(element) || !options.tag_name(element.name)){
				return false;
			}
		} else if(key === "tag_type"){
			if(!options.tag_type(element.type)) return false;
		} else if(key === "tag_contains"){
			if(isTag(element) || !options.tag_contains(element.data)){
				return false;
			}
		} else if(!element.attribs || !options[key](element.attribs[key])){
			return false;
		}
	}
	return true;
};

var Checks = {
	tag_name: function(name){
		if(typeof name === "function"){
			return function(elem){ return isTag(elem) && name(elem.name); };
		} else if(name === "*"){
			return isTag;
		} else {
			return function(elem){ return isTag(elem) && elem.name === name; };
		}
	},
	tag_type: function(type){
		if(typeof type === "function"){
			return function(elem){ return type(elem.type); };
		} else {
			return function(elem){ return elem.type === type; };
		}
	},
	tag_contains: function(data){
		if(typeof data === "function"){
			return function(elem){ return !isTag(elem) && data(elem.data); };
		} else {
			return function(elem){ return !isTag(elem) && elem.data === data; };
		}
	}
};

function getAttribCheck(attrib, value){
	if(typeof value === "function"){
		return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
	} else {
		return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
	}
}

function combineFuncs(a, b){
	return function(elem){
		return a(elem) || b(elem);
	};
}

exports.getElements = function(options, element, recurse, limit){
	var funcs = Object.keys(options).map(function(key){
		var value = options[key];
		return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
	});

	return funcs.length === 0 ? [] : this.filter(
		funcs.reduce(combineFuncs),
		element, recurse, limit
	);
};

exports.getElementById = function(id, element, recurse){
	if(!Array.isArray(element)) element = [element];
	return this.findOne(getAttribCheck("id", id), element, recurse !== false);
};

exports.getElementsByTagName = function(name, element, recurse, limit){
	return this.filter(Checks.tag_name(name), element, recurse, limit);
};

exports.getElementsByTagType = function(type, element, recurse, limit){
	return this.filter(Checks.tag_type(type), element, recurse, limit);
};

},{"domelementtype":55}],51:[function(require,module,exports){
exports.removeElement = function(elem){
	if(elem.prev) elem.prev.next = elem.next;
	if(elem.next) elem.next.prev = elem.prev;

	if(elem.parent){
		var childs = elem.parent.children;
		childs.splice(childs.lastIndexOf(elem), 1);
	}
};

exports.replaceElement = function(elem, replacement){
	var prev = replacement.prev = elem.prev;
	if(prev){
		prev.next = replacement;
	}

	var next = replacement.next = elem.next;
	if(next){
		next.prev = replacement;
	}

	var parent = replacement.parent = elem.parent;
	if(parent){
		var childs = parent.children;
		childs[childs.lastIndexOf(elem)] = replacement;
	}
};

exports.appendChild = function(elem, child){
	child.parent = elem;

	if(elem.children.push(child) !== 1){
		var sibling = elem.children[elem.children.length - 2];
		sibling.next = child;
		child.prev = sibling;
		child.next = null;
	}
};

exports.append = function(elem, next){
	var parent = elem.parent,
		currNext = elem.next;

	next.next = currNext;
	next.prev = elem;
	elem.next = next;
	next.parent = parent;

	if(currNext){
		currNext.prev = next;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(currNext), 0, next);
		}
	} else if(parent){
		parent.children.push(next);
	}
};

exports.prepend = function(elem, prev){
	var parent = elem.parent;
	if(parent){
		var childs = parent.children;
		childs.splice(childs.lastIndexOf(elem), 0, prev);
	}

	if(elem.prev){
		elem.prev.next = prev;
	}
	
	prev.parent = parent;
	prev.prev = elem.prev;
	prev.next = elem;
	elem.prev = prev;
};



},{}],52:[function(require,module,exports){
var isTag = require("domelementtype").isTag;

module.exports = {
	filter: filter,
	find: find,
	findOneChild: findOneChild,
	findOne: findOne,
	existsOne: existsOne,
	findAll: findAll
};

function filter(test, element, recurse, limit){
	if(!Array.isArray(element)) element = [element];

	if(typeof limit !== "number" || !isFinite(limit)){
		limit = Infinity;
	}
	return find(test, element, recurse !== false, limit);
}

function find(test, elems, recurse, limit){
	var result = [], childs;

	for(var i = 0, j = elems.length; i < j; i++){
		if(test(elems[i])){
			result.push(elems[i]);
			if(--limit <= 0) break;
		}

		childs = elems[i].children;
		if(recurse && childs && childs.length > 0){
			childs = find(test, childs, recurse, limit);
			result = result.concat(childs);
			limit -= childs.length;
			if(limit <= 0) break;
		}
	}

	return result;
}

function findOneChild(test, elems){
	for(var i = 0, l = elems.length; i < l; i++){
		if(test(elems[i])) return elems[i];
	}

	return null;
}

function findOne(test, elems){
	var elem = null;

	for(var i = 0, l = elems.length; i < l && !elem; i++){
		if(!isTag(elems[i])){
			continue;
		} else if(test(elems[i])){
			elem = elems[i];
		} else if(elems[i].children.length > 0){
			elem = findOne(test, elems[i].children);
		}
	}

	return elem;
}

function existsOne(test, elems){
	for(var i = 0, l = elems.length; i < l; i++){
		if(
			isTag(elems[i]) && (
				test(elems[i]) || (
					elems[i].children.length > 0 &&
					existsOne(test, elems[i].children)
				)
			)
		){
			return true;
		}
	}

	return false;
}

function findAll(test, elems){
	var result = [];
	for(var i = 0, j = elems.length; i < j; i++){
		if(!isTag(elems[i])) continue;
		if(test(elems[i])) result.push(elems[i]);

		if(elems[i].children.length > 0){
			result = result.concat(findAll(test, elems[i].children));
		}
	}
	return result;
}

},{"domelementtype":55}],53:[function(require,module,exports){
var ElementType = require("domelementtype"),
    isTag = ElementType.isTag;

module.exports = {
	getInnerHTML: getInnerHTML,
	getOuterHTML: getOuterHTML,
	getText: getText
};

function getInnerHTML(elem){
	return elem.children ? elem.children.map(getOuterHTML).join("") : "";
}

//boolean attributes without a value (taken from MatthewMueller/cheerio)
var booleanAttribs = {
	__proto__: null,
	async: true,
	autofocus: true,
	autoplay: true,
	checked: true,
	controls: true,
	defer: true,
	disabled: true,
	hidden: true,
	loop: true,
	multiple: true,
	open: true,
	readonly: true,
	required: true,
	scoped: true,
	selected: true
};

var emptyTags = {
	__proto__: null,
	area: true,
	base: true,
	basefont: true,
	br: true,
	col: true,
	frame: true,
	hr: true,
	img: true,
	input: true,
	isindex: true,
	link: true,
	meta: true,
	param: true,
	embed: true
};

function getOuterHTML(elem){
	switch(elem.type){
	case ElementType.Text:
		return elem.data;
	case ElementType.Comment:
		return "<!--" + elem.data + "-->";
	case ElementType.Directive:
		return "<" + elem.data + ">";
	case ElementType.CDATA:
		return "<!CDATA " + getInnerHTML(elem) + "]]>";
	}

	var ret = "<" + elem.name;
	if("attribs" in elem){
		for(var attr in elem.attribs){
			if(elem.attribs.hasOwnProperty(attr)){
				ret += " " + attr;
				var value = elem.attribs[attr];
				if(value == null){
					if( !(attr in booleanAttribs) ){
						ret += "=\"\"";
					}
				} else {
					ret += "=\"" + value + "\"";
				}
			}
		}
	}

	if (elem.name in emptyTags && elem.children.length === 0) {
		return ret + " />";
	} else {
		return ret + ">" + getInnerHTML(elem) + "</" + elem.name + ">";
	}
}

function getText(elem){
	if(Array.isArray(elem)) return elem.map(getText).join("");
	if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
	if(elem.type === ElementType.Text) return elem.data;
	return "";
}
},{"domelementtype":55}],54:[function(require,module,exports){
var getChildren = exports.getChildren = function(elem){
	return elem.children;
};

var getParent = exports.getParent = function(elem){
	return elem.parent;
};

exports.getSiblings = function(elem){
	var parent = getParent(elem);
	return parent ? getChildren(parent) : [elem];
};

exports.getAttributeValue = function(elem, name){
	return elem.attribs && elem.attribs[name];
};

exports.hasAttrib = function(elem, name){
	return hasOwnProperty.call(elem.attribs, name);
};

exports.getName = function(elem){
	return elem.name;
};

},{}],55:[function(require,module,exports){
//Types of elements found in the DOM
module.exports = {
	Text: "text", //Text
	Directive: "directive", //<? ... ?>
	Comment: "comment", //<!-- ... -->
	Script: "script", //<script> tags
	Style: "style", //<style> tags
	Tag: "tag", //Any tag
	CDATA: "cdata", //<![CDATA[ ... ]]>
	Doctype: "doctype",

	isTag: function(elem){
		return elem.type === "tag" || elem.type === "script" || elem.type === "style";
	}
};

},{}],56:[function(require,module,exports){
/*
  Module dependencies
*/
var ElementType = require('domelementtype');
var entities = require('entities');

/*
  Boolean Attributes
*/
var booleanAttributes = {
  __proto__: null,
  allowfullscreen: true,
  async: true,
  autofocus: true,
  autoplay: true,
  checked: true,
  controls: true,
  default: true,
  defer: true,
  disabled: true,
  hidden: true,
  ismap: true,
  loop: true,
  multiple: true,
  muted: true,
  open: true,
  readonly: true,
  required: true,
  reversed: true,
  scoped: true,
  seamless: true,
  selected: true,
  typemustmatch: true
};

var unencodedElements = {
  __proto__: null,
  style: true,
  script: true,
  xmp: true,
  iframe: true,
  noembed: true,
  noframes: true,
  plaintext: true,
  noscript: true
};

/*
  Format attributes
*/
function formatAttrs(attributes, opts) {
  if (!attributes) return;

  var output = '',
      value;

  // Loop through the attributes
  for (var key in attributes) {
    value = attributes[key];
    if (output) {
      output += ' ';
    }

    if (!value && booleanAttributes[key]) {
      output += key;
    } else {
      output += key + '="' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '"';
    }
  }

  return output;
}

/*
  Self-enclosing tags (stolen from node-htmlparser)
*/
var singleTag = {
  __proto__: null,
  area: true,
  base: true,
  basefont: true,
  br: true,
  col: true,
  command: true,
  embed: true,
  frame: true,
  hr: true,
  img: true,
  input: true,
  isindex: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true,

  //common self closing svg elements
  path: true,
  circle: true,
  ellipse: true,
  line: true,
  rect: true,
  use: true
};

var render = module.exports = function(dom, opts) {
  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
  opts = opts || {};

  var output = '';

  for(var i = 0; i < dom.length; i++){
    var elem = dom[i];

    if (elem.type === 'root')
      output += render(elem.children, opts);
    else if (ElementType.isTag(elem))
      output += renderTag(elem, opts);
    else if (elem.type === ElementType.Directive)
      output += renderDirective(elem);
    else if (elem.type === ElementType.Comment)
      output += renderComment(elem);
    else if (elem.type === ElementType.CDATA)
      output += renderCdata(elem);
    else
      output += renderText(elem, opts);
  }

  return output;
};

function renderTag(elem, opts) {
  var tag = '<' + elem.name,
      attribs = formatAttrs(elem.attribs, opts);

  if (attribs) {
    tag += ' ' + attribs;
  }

  if (
    opts.xmlMode &&
    (!elem.children || elem.children.length === 0)
  ) {
    tag += '/>';
  } else {
    tag += '>';
    tag += render(elem.children, opts);

    if (!singleTag[elem.name] || opts.xmlMode) {
      tag += '</' + elem.name + '>';
    }
  }



  return tag;
}

function renderDirective(elem) {
  return '<' + elem.data + '>';
}

function renderText(elem, opts) {
  var data = elem.data || '';

  // if entities weren't decoded, no need to encode them back
  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
    data = entities.encodeXML(data);
  }

  return data;
}

function renderCdata(elem) {
  return '<![CDATA[' + elem.children[0].data + ']]>';
}

function renderComment(elem) {
  return '<!--' + elem.data + '-->';
}

},{"domelementtype":57,"entities":58}],57:[function(require,module,exports){
//Types of elements found in the DOM
module.exports = {
	Text: "text", //Text
	Directive: "directive", //<? ... ?>
	Comment: "comment", //<!-- ... -->
	Script: "script", //<script> tags
	Style: "style", //<style> tags
	Tag: "tag", //Any tag
	CDATA: "cdata", //<![CDATA[ ... ]]>

	isTag: function(elem){
		return elem.type === "tag" || elem.type === "script" || elem.type === "style";
	}
};
},{}],58:[function(require,module,exports){
var encode = require("./lib/encode.js"),
    decode = require("./lib/decode.js");

exports.decode = function(data, level){
	return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
};

exports.decodeStrict = function(data, level){
	return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
};

exports.encode = function(data, level){
	return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
};

exports.encodeXML = encode.XML;

exports.encodeHTML4 =
exports.encodeHTML5 =
exports.encodeHTML  = encode.HTML;

exports.decodeXML =
exports.decodeXMLStrict = decode.XML;

exports.decodeHTML4 =
exports.decodeHTML5 =
exports.decodeHTML = decode.HTML;

exports.decodeHTML4Strict =
exports.decodeHTML5Strict =
exports.decodeHTMLStrict = decode.HTMLStrict;

exports.escape = encode.escape;

},{"./lib/decode.js":59,"./lib/encode.js":61}],59:[function(require,module,exports){
var entityMap = require("../maps/entities.json"),
    legacyMap = require("../maps/legacy.json"),
    xmlMap    = require("../maps/xml.json"),
    decodeCodePoint = require("./decode_codepoint.js");

var decodeXMLStrict  = getStrictDecoder(xmlMap),
    decodeHTMLStrict = getStrictDecoder(entityMap);

function getStrictDecoder(map){
	var keys = Object.keys(map).join("|"),
	    replace = getReplacer(map);

	keys += "|#[xX][\\da-fA-F]+|#\\d+";

	var re = new RegExp("&(?:" + keys + ");", "g");

	return function(str){
		return String(str).replace(re, replace);
	};
}

var decodeHTML = (function(){
	var legacy = Object.keys(legacyMap)
		.sort(sorter);

	var keys = Object.keys(entityMap)
		.sort(sorter);

	for(var i = 0, j = 0; i < keys.length; i++){
		if(legacy[j] === keys[i]){
			keys[i] += ";?";
			j++;
		} else {
			keys[i] += ";";
		}
	}

	var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"),
	    replace = getReplacer(entityMap);

	function replacer(str){
		if(str.substr(-1) !== ";") str += ";";
		return replace(str);
	}

	//TODO consider creating a merged map
	return function(str){
		return String(str).replace(re, replacer);
	};
}());

function sorter(a, b){
	return a < b ? 1 : -1;
}

function getReplacer(map){
	return function replace(str){
		if(str.charAt(1) === "#"){
			if(str.charAt(2) === "X" || str.charAt(2) === "x"){
				return decodeCodePoint(parseInt(str.substr(3), 16));
			}
			return decodeCodePoint(parseInt(str.substr(2), 10));
		}
		return map[str.slice(1, -1)];
	};
}

module.exports = {
	XML: decodeXMLStrict,
	HTML: decodeHTML,
	HTMLStrict: decodeHTMLStrict
};
},{"../maps/entities.json":63,"../maps/legacy.json":64,"../maps/xml.json":65,"./decode_codepoint.js":60}],60:[function(require,module,exports){
var decodeMap = require("../maps/decode.json");

module.exports = decodeCodePoint;

// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
function decodeCodePoint(codePoint){

	if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
		return "\uFFFD";
	}

	if(codePoint in decodeMap){
		codePoint = decodeMap[codePoint];
	}

	var output = "";

	if(codePoint > 0xFFFF){
		codePoint -= 0x10000;
		output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
		codePoint = 0xDC00 | codePoint & 0x3FF;
	}

	output += String.fromCharCode(codePoint);
	return output;
}

},{"../maps/decode.json":62}],61:[function(require,module,exports){
var inverseXML = getInverseObj(require("../maps/xml.json")),
    xmlReplacer = getInverseReplacer(inverseXML);

exports.XML = getInverse(inverseXML, xmlReplacer);

var inverseHTML = getInverseObj(require("../maps/entities.json")),
    htmlReplacer = getInverseReplacer(inverseHTML);

exports.HTML = getInverse(inverseHTML, htmlReplacer);

function getInverseObj(obj){
	return Object.keys(obj).sort().reduce(function(inverse, name){
		inverse[obj[name]] = "&" + name + ";";
		return inverse;
	}, {});
}

function getInverseReplacer(inverse){
	var single = [],
	    multiple = [];

	Object.keys(inverse).forEach(function(k){
		if(k.length === 1){
			single.push("\\" + k);
		} else {
			multiple.push(k);
		}
	});

	//TODO add ranges
	multiple.unshift("[" + single.join("") + "]");

	return new RegExp(multiple.join("|"), "g");
}

var re_nonASCII = /[^\0-\x7F]/g,
    re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function singleCharReplacer(c){
	return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";
}

function astralReplacer(c){
	// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
	var high = c.charCodeAt(0);
	var low  = c.charCodeAt(1);
	var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
	return "&#x" + codePoint.toString(16).toUpperCase() + ";";
}

function getInverse(inverse, re){
	function func(name){
		return inverse[name];
	}

	return function(data){
		return data
				.replace(re, func)
				.replace(re_astralSymbols, astralReplacer)
				.replace(re_nonASCII, singleCharReplacer);
	};
}

var re_xmlChars = getInverseReplacer(inverseXML);

function escapeXML(data){
	return data
			.replace(re_xmlChars, singleCharReplacer)
			.replace(re_astralSymbols, astralReplacer)
			.replace(re_nonASCII, singleCharReplacer);
}

exports.escape = escapeXML;

},{"../maps/entities.json":63,"../maps/xml.json":65}],62:[function(require,module,exports){
module.exports={"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376}
},{}],63:[function(require,module,exports){
module.exports={"Aacute":"\u00C1","aacute":"\u00E1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223E","acd":"\u223F","acE":"\u223E\u0333","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","Acy":"\u0410","acy":"\u0430","AElig":"\u00C6","aelig":"\u00E6","af":"\u2061","Afr":"\uD835\uDD04","afr":"\uD835\uDD1E","Agrave":"\u00C0","agrave":"\u00E0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03B1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2A3F","amp":"&","AMP":"&","andand":"\u2A55","And":"\u2A53","and":"\u2227","andd":"\u2A5C","andslope":"\u2A58","andv":"\u2A5A","ang":"\u2220","ange":"\u29A4","angle":"\u2220","angmsdaa":"\u29A8","angmsdab":"\u29A9","angmsdac":"\u29AA","angmsdad":"\u29AB","angmsdae":"\u29AC","angmsdaf":"\u29AD","angmsdag":"\u29AE","angmsdah":"\u29AF","angmsd":"\u2221","angrt":"\u221F","angrtvb":"\u22BE","angrtvbd":"\u299D","angsph":"\u2222","angst":"\u00C5","angzarr":"\u237C","Aogon":"\u0104","aogon":"\u0105","Aopf":"\uD835\uDD38","aopf":"\uD835\uDD52","apacir":"\u2A6F","ap":"\u2248","apE":"\u2A70","ape":"\u224A","apid":"\u224B","apos":"'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224A","Aring":"\u00C5","aring":"\u00E5","Ascr":"\uD835\uDC9C","ascr":"\uD835\uDCB6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224D","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","awconint":"\u2233","awint":"\u2A11","backcong":"\u224C","backepsilon":"\u03F6","backprime":"\u2035","backsim":"\u223D","backsimeq":"\u22CD","Backslash":"\u2216","Barv":"\u2AE7","barvee":"\u22BD","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23B5","bbrktbrk":"\u23B6","bcong":"\u224C","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201E","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29B0","bepsi":"\u03F6","bernou":"\u212C","Bernoullis":"\u212C","Beta":"\u0392","beta":"\u03B2","beth":"\u2136","between":"\u226C","Bfr":"\uD835\uDD05","bfr":"\uD835\uDD1F","bigcap":"\u22C2","bigcirc":"\u25EF","bigcup":"\u22C3","bigodot":"\u2A00","bigoplus":"\u2A01","bigotimes":"\u2A02","bigsqcup":"\u2A06","bigstar":"\u2605","bigtriangledown":"\u25BD","bigtriangleup":"\u25B3","biguplus":"\u2A04","bigvee":"\u22C1","bigwedge":"\u22C0","bkarow":"\u290D","blacklozenge":"\u29EB","blacksquare":"\u25AA","blacktriangle":"\u25B4","blacktriangledown":"\u25BE","blacktriangleleft":"\u25C2","blacktriangleright":"\u25B8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20E5","bnequiv":"\u2261\u20E5","bNot":"\u2AED","bnot":"\u2310","Bopf":"\uD835\uDD39","bopf":"\uD835\uDD53","bot":"\u22A5","bottom":"\u22A5","bowtie":"\u22C8","boxbox":"\u29C9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250C","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252C","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229F","boxplus":"\u229E","boxtimes":"\u22A0","boxul":"\u2518","boxuL":"\u255B","boxUl":"\u255C","boxUL":"\u255D","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255A","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253C","boxvH":"\u256A","boxVh":"\u256B","boxVH":"\u256C","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251C","boxvR":"\u255E","boxVr":"\u255F","boxVR":"\u2560","bprime":"\u2035","breve":"\u02D8","Breve":"\u02D8","brvbar":"\u00A6","bscr":"\uD835\uDCB7","Bscr":"\u212C","bsemi":"\u204F","bsim":"\u223D","bsime":"\u22CD","bsolb":"\u29C5","bsol":"\\","bsolhsub":"\u27C8","bull":"\u2022","bullet":"\u2022","bump":"\u224E","bumpE":"\u2AAE","bumpe":"\u224F","Bumpeq":"\u224E","bumpeq":"\u224F","Cacute":"\u0106","cacute":"\u0107","capand":"\u2A44","capbrcup":"\u2A49","capcap":"\u2A4B","cap":"\u2229","Cap":"\u22D2","capcup":"\u2A47","capdot":"\u2A40","CapitalDifferentialD":"\u2145","caps":"\u2229\uFE00","caret":"\u2041","caron":"\u02C7","Cayleys":"\u212D","ccaps":"\u2A4D","Ccaron":"\u010C","ccaron":"\u010D","Ccedil":"\u00C7","ccedil":"\u00E7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2A4C","ccupssm":"\u2A50","Cdot":"\u010A","cdot":"\u010B","cedil":"\u00B8","Cedilla":"\u00B8","cemptyv":"\u29B2","cent":"\u00A2","centerdot":"\u00B7","CenterDot":"\u00B7","cfr":"\uD835\uDD20","Cfr":"\u212D","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03A7","chi":"\u03C7","circ":"\u02C6","circeq":"\u2257","circlearrowleft":"\u21BA","circlearrowright":"\u21BB","circledast":"\u229B","circledcirc":"\u229A","circleddash":"\u229D","CircleDot":"\u2299","circledR":"\u00AE","circledS":"\u24C8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25CB","cirE":"\u29C3","cire":"\u2257","cirfnint":"\u2A10","cirmid":"\u2AEF","cirscir":"\u29C2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201D","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2A74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2A6D","Congruent":"\u2261","conint":"\u222E","Conint":"\u222F","ContourIntegral":"\u222E","copf":"\uD835\uDD54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\u00A9","COPY":"\u00A9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21B5","cross":"\u2717","Cross":"\u2A2F","Cscr":"\uD835\uDC9E","cscr":"\uD835\uDCB8","csub":"\u2ACF","csube":"\u2AD1","csup":"\u2AD0","csupe":"\u2AD2","ctdot":"\u22EF","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22DE","cuesc":"\u22DF","cularr":"\u21B6","cularrp":"\u293D","cupbrcap":"\u2A48","cupcap":"\u2A46","CupCap":"\u224D","cup":"\u222A","Cup":"\u22D3","cupcup":"\u2A4A","cupdot":"\u228D","cupor":"\u2A45","cups":"\u222A\uFE00","curarr":"\u21B7","curarrm":"\u293C","curlyeqprec":"\u22DE","curlyeqsucc":"\u22DF","curlyvee":"\u22CE","curlywedge":"\u22CF","curren":"\u00A4","curvearrowleft":"\u21B6","curvearrowright":"\u21B7","cuvee":"\u22CE","cuwed":"\u22CF","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232D","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21A1","dArr":"\u21D3","dash":"\u2010","Dashv":"\u2AE4","dashv":"\u22A3","dbkarow":"\u290F","dblac":"\u02DD","Dcaron":"\u010E","dcaron":"\u010F","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21CA","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2A77","deg":"\u00B0","Del":"\u2207","Delta":"\u0394","delta":"\u03B4","demptyv":"\u29B1","dfisht":"\u297F","Dfr":"\uD835\uDD07","dfr":"\uD835\uDD21","dHar":"\u2965","dharl":"\u21C3","dharr":"\u21C2","DiacriticalAcute":"\u00B4","DiacriticalDot":"\u02D9","DiacriticalDoubleAcute":"\u02DD","DiacriticalGrave":"`","DiacriticalTilde":"\u02DC","diam":"\u22C4","diamond":"\u22C4","Diamond":"\u22C4","diamondsuit":"\u2666","diams":"\u2666","die":"\u00A8","DifferentialD":"\u2146","digamma":"\u03DD","disin":"\u22F2","div":"\u00F7","divide":"\u00F7","divideontimes":"\u22C7","divonx":"\u22C7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231E","dlcrop":"\u230D","dollar":"$","Dopf":"\uD835\uDD3B","dopf":"\uD835\uDD55","Dot":"\u00A8","dot":"\u02D9","DotDot":"\u20DC","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22A1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222F","DoubleDot":"\u00A8","DoubleDownArrow":"\u21D3","DoubleLeftArrow":"\u21D0","DoubleLeftRightArrow":"\u21D4","DoubleLeftTee":"\u2AE4","DoubleLongLeftArrow":"\u27F8","DoubleLongLeftRightArrow":"\u27FA","DoubleLongRightArrow":"\u27F9","DoubleRightArrow":"\u21D2","DoubleRightTee":"\u22A8","DoubleUpArrow":"\u21D1","DoubleUpDownArrow":"\u21D5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21D3","DownArrowUpArrow":"\u21F5","DownBreve":"\u0311","downdownarrows":"\u21CA","downharpoonleft":"\u21C3","downharpoonright":"\u21C2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295E","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21BD","DownRightTeeVector":"\u295F","DownRightVectorBar":"\u2957","DownRightVector":"\u21C1","DownTeeArrow":"\u21A7","DownTee":"\u22A4","drbkarow":"\u2910","drcorn":"\u231F","drcrop":"\u230C","Dscr":"\uD835\uDC9F","dscr":"\uD835\uDCB9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29F6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22F1","dtri":"\u25BF","dtrif":"\u25BE","duarr":"\u21F5","duhar":"\u296F","dwangle":"\u29A6","DZcy":"\u040F","dzcy":"\u045F","dzigrarr":"\u27FF","Eacute":"\u00C9","eacute":"\u00E9","easter":"\u2A6E","Ecaron":"\u011A","ecaron":"\u011B","Ecirc":"\u00CA","ecirc":"\u00EA","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042D","ecy":"\u044D","eDDot":"\u2A77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\uD835\uDD08","efr":"\uD835\uDD22","eg":"\u2A9A","Egrave":"\u00C8","egrave":"\u00E8","egs":"\u2A96","egsdot":"\u2A98","el":"\u2A99","Element":"\u2208","elinters":"\u23E7","ell":"\u2113","els":"\u2A95","elsdot":"\u2A97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25FB","emptyv":"\u2205","EmptyVerySmallSquare":"\u25AB","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014A","eng":"\u014B","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\uD835\uDD3C","eopf":"\uD835\uDD56","epar":"\u22D5","eparsl":"\u29E3","eplus":"\u2A71","epsi":"\u03B5","Epsilon":"\u0395","epsilon":"\u03B5","epsiv":"\u03F5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2A96","eqslantless":"\u2A95","Equal":"\u2A75","equals":"=","EqualTilde":"\u2242","equest":"\u225F","Equilibrium":"\u21CC","equiv":"\u2261","equivDD":"\u2A78","eqvparsl":"\u29E5","erarr":"\u2971","erDot":"\u2253","escr":"\u212F","Escr":"\u2130","esdot":"\u2250","Esim":"\u2A73","esim":"\u2242","Eta":"\u0397","eta":"\u03B7","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","euro":"\u20AC","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\uFB03","fflig":"\uFB00","ffllig":"\uFB04","Ffr":"\uD835\uDD09","ffr":"\uD835\uDD23","filig":"\uFB01","FilledSmallSquare":"\u25FC","FilledVerySmallSquare":"\u25AA","fjlig":"fj","flat":"\u266D","fllig":"\uFB02","fltns":"\u25B1","fnof":"\u0192","Fopf":"\uD835\uDD3D","fopf":"\uD835\uDD57","forall":"\u2200","ForAll":"\u2200","fork":"\u22D4","forkv":"\u2AD9","Fouriertrf":"\u2131","fpartint":"\u2A0D","frac12":"\u00BD","frac13":"\u2153","frac14":"\u00BC","frac15":"\u2155","frac16":"\u2159","frac18":"\u215B","frac23":"\u2154","frac25":"\u2156","frac34":"\u00BE","frac35":"\u2157","frac38":"\u215C","frac45":"\u2158","frac56":"\u215A","frac58":"\u215D","frac78":"\u215E","frasl":"\u2044","frown":"\u2322","fscr":"\uD835\uDCBB","Fscr":"\u2131","gacute":"\u01F5","Gamma":"\u0393","gamma":"\u03B3","Gammad":"\u03DC","gammad":"\u03DD","gap":"\u2A86","Gbreve":"\u011E","gbreve":"\u011F","Gcedil":"\u0122","Gcirc":"\u011C","gcirc":"\u011D","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2A8C","gel":"\u22DB","geq":"\u2265","geqq":"\u2267","geqslant":"\u2A7E","gescc":"\u2AA9","ges":"\u2A7E","gesdot":"\u2A80","gesdoto":"\u2A82","gesdotol":"\u2A84","gesl":"\u22DB\uFE00","gesles":"\u2A94","Gfr":"\uD835\uDD0A","gfr":"\uD835\uDD24","gg":"\u226B","Gg":"\u22D9","ggg":"\u22D9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2AA5","gl":"\u2277","glE":"\u2A92","glj":"\u2AA4","gnap":"\u2A8A","gnapprox":"\u2A8A","gne":"\u2A88","gnE":"\u2269","gneq":"\u2A88","gneqq":"\u2269","gnsim":"\u22E7","Gopf":"\uD835\uDD3E","gopf":"\uD835\uDD58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22DB","GreaterFullEqual":"\u2267","GreaterGreater":"\u2AA2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2A7E","GreaterTilde":"\u2273","Gscr":"\uD835\uDCA2","gscr":"\u210A","gsim":"\u2273","gsime":"\u2A8E","gsiml":"\u2A90","gtcc":"\u2AA7","gtcir":"\u2A7A","gt":">","GT":">","Gt":"\u226B","gtdot":"\u22D7","gtlPar":"\u2995","gtquest":"\u2A7C","gtrapprox":"\u2A86","gtrarr":"\u2978","gtrdot":"\u22D7","gtreqless":"\u22DB","gtreqqless":"\u2A8C","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\uFE00","gvnE":"\u2269\uFE00","Hacek":"\u02C7","hairsp":"\u200A","half":"\u00BD","hamilt":"\u210B","HARDcy":"\u042A","hardcy":"\u044A","harrcir":"\u2948","harr":"\u2194","hArr":"\u21D4","harrw":"\u21AD","Hat":"^","hbar":"\u210F","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22B9","hfr":"\uD835\uDD25","Hfr":"\u210C","HilbertSpace":"\u210B","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21FF","homtht":"\u223B","hookleftarrow":"\u21A9","hookrightarrow":"\u21AA","hopf":"\uD835\uDD59","Hopf":"\u210D","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\uD835\uDCBD","Hscr":"\u210B","hslash":"\u210F","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224E","HumpEqual":"\u224F","hybull":"\u2043","hyphen":"\u2010","Iacute":"\u00CD","iacute":"\u00ED","ic":"\u2063","Icirc":"\u00CE","icirc":"\u00EE","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\u00A1","iff":"\u21D4","ifr":"\uD835\uDD26","Ifr":"\u2111","Igrave":"\u00CC","igrave":"\u00EC","ii":"\u2148","iiiint":"\u2A0C","iiint":"\u222D","iinfin":"\u29DC","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012A","imacr":"\u012B","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22B7","imped":"\u01B5","Implies":"\u21D2","incare":"\u2105","in":"\u2208","infin":"\u221E","infintie":"\u29DD","inodot":"\u0131","intcal":"\u22BA","int":"\u222B","Int":"\u222C","integers":"\u2124","Integral":"\u222B","intercal":"\u22BA","Intersection":"\u22C2","intlarhk":"\u2A17","intprod":"\u2A3C","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012E","iogon":"\u012F","Iopf":"\uD835\uDD40","iopf":"\uD835\uDD5A","Iota":"\u0399","iota":"\u03B9","iprod":"\u2A3C","iquest":"\u00BF","iscr":"\uD835\uDCBE","Iscr":"\u2110","isin":"\u2208","isindot":"\u22F5","isinE":"\u22F9","isins":"\u22F4","isinsv":"\u22F3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\u00CF","iuml":"\u00EF","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\uD835\uDD0D","jfr":"\uD835\uDD27","jmath":"\u0237","Jopf":"\uD835\uDD41","jopf":"\uD835\uDD5B","Jscr":"\uD835\uDCA5","jscr":"\uD835\uDCBF","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039A","kappa":"\u03BA","kappav":"\u03F0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041A","kcy":"\u043A","Kfr":"\uD835\uDD0E","kfr":"\uD835\uDD28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040C","kjcy":"\u045C","Kopf":"\uD835\uDD42","kopf":"\uD835\uDD5C","Kscr":"\uD835\uDCA6","kscr":"\uD835\uDCC0","lAarr":"\u21DA","Lacute":"\u0139","lacute":"\u013A","laemptyv":"\u29B4","lagran":"\u2112","Lambda":"\u039B","lambda":"\u03BB","lang":"\u27E8","Lang":"\u27EA","langd":"\u2991","langle":"\u27E8","lap":"\u2A85","Laplacetrf":"\u2112","laquo":"\u00AB","larrb":"\u21E4","larrbfs":"\u291F","larr":"\u2190","Larr":"\u219E","lArr":"\u21D0","larrfs":"\u291D","larrhk":"\u21A9","larrlp":"\u21AB","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21A2","latail":"\u2919","lAtail":"\u291B","lat":"\u2AAB","late":"\u2AAD","lates":"\u2AAD\uFE00","lbarr":"\u290C","lBarr":"\u290E","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298B","lbrksld":"\u298F","lbrkslu":"\u298D","Lcaron":"\u013D","lcaron":"\u013E","Lcedil":"\u013B","lcedil":"\u013C","lceil":"\u2308","lcub":"{","Lcy":"\u041B","lcy":"\u043B","ldca":"\u2936","ldquo":"\u201C","ldquor":"\u201E","ldrdhar":"\u2967","ldrushar":"\u294B","ldsh":"\u21B2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27E8","LeftArrowBar":"\u21E4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21D0","LeftArrowRightArrow":"\u21C6","leftarrowtail":"\u21A2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27E6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21C3","LeftFloor":"\u230A","leftharpoondown":"\u21BD","leftharpoonup":"\u21BC","leftleftarrows":"\u21C7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21D4","leftrightarrows":"\u21C6","leftrightharpoons":"\u21CB","leftrightsquigarrow":"\u21AD","LeftRightVector":"\u294E","LeftTeeArrow":"\u21A4","LeftTee":"\u22A3","LeftTeeVector":"\u295A","leftthreetimes":"\u22CB","LeftTriangleBar":"\u29CF","LeftTriangle":"\u22B2","LeftTriangleEqual":"\u22B4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21BF","LeftVectorBar":"\u2952","LeftVector":"\u21BC","lEg":"\u2A8B","leg":"\u22DA","leq":"\u2264","leqq":"\u2266","leqslant":"\u2A7D","lescc":"\u2AA8","les":"\u2A7D","lesdot":"\u2A7F","lesdoto":"\u2A81","lesdotor":"\u2A83","lesg":"\u22DA\uFE00","lesges":"\u2A93","lessapprox":"\u2A85","lessdot":"\u22D6","lesseqgtr":"\u22DA","lesseqqgtr":"\u2A8B","LessEqualGreater":"\u22DA","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2AA1","lesssim":"\u2272","LessSlantEqual":"\u2A7D","LessTilde":"\u2272","lfisht":"\u297C","lfloor":"\u230A","Lfr":"\uD835\uDD0F","lfr":"\uD835\uDD29","lg":"\u2276","lgE":"\u2A91","lHar":"\u2962","lhard":"\u21BD","lharu":"\u21BC","lharul":"\u296A","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21C7","ll":"\u226A","Ll":"\u22D8","llcorner":"\u231E","Lleftarrow":"\u21DA","llhard":"\u296B","lltri":"\u25FA","Lmidot":"\u013F","lmidot":"\u0140","lmoustache":"\u23B0","lmoust":"\u23B0","lnap":"\u2A89","lnapprox":"\u2A89","lne":"\u2A87","lnE":"\u2268","lneq":"\u2A87","lneqq":"\u2268","lnsim":"\u22E6","loang":"\u27EC","loarr":"\u21FD","lobrk":"\u27E6","longleftarrow":"\u27F5","LongLeftArrow":"\u27F5","Longleftarrow":"\u27F8","longleftrightarrow":"\u27F7","LongLeftRightArrow":"\u27F7","Longleftrightarrow":"\u27FA","longmapsto":"\u27FC","longrightarrow":"\u27F6","LongRightArrow":"\u27F6","Longrightarrow":"\u27F9","looparrowleft":"\u21AB","looparrowright":"\u21AC","lopar":"\u2985","Lopf":"\uD835\uDD43","lopf":"\uD835\uDD5D","loplus":"\u2A2D","lotimes":"\u2A34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25CA","lozenge":"\u25CA","lozf":"\u29EB","lpar":"(","lparlt":"\u2993","lrarr":"\u21C6","lrcorner":"\u231F","lrhar":"\u21CB","lrhard":"\u296D","lrm":"\u200E","lrtri":"\u22BF","lsaquo":"\u2039","lscr":"\uD835\uDCC1","Lscr":"\u2112","lsh":"\u21B0","Lsh":"\u21B0","lsim":"\u2272","lsime":"\u2A8D","lsimg":"\u2A8F","lsqb":"[","lsquo":"\u2018","lsquor":"\u201A","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2AA6","ltcir":"\u2A79","lt":"<","LT":"<","Lt":"\u226A","ltdot":"\u22D6","lthree":"\u22CB","ltimes":"\u22C9","ltlarr":"\u2976","ltquest":"\u2A7B","ltri":"\u25C3","ltrie":"\u22B4","ltrif":"\u25C2","ltrPar":"\u2996","lurdshar":"\u294A","luruhar":"\u2966","lvertneqq":"\u2268\uFE00","lvnE":"\u2268\uFE00","macr":"\u00AF","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21A6","mapsto":"\u21A6","mapstodown":"\u21A7","mapstoleft":"\u21A4","mapstoup":"\u21A5","marker":"\u25AE","mcomma":"\u2A29","Mcy":"\u041C","mcy":"\u043C","mdash":"\u2014","mDDot":"\u223A","measuredangle":"\u2221","MediumSpace":"\u205F","Mellintrf":"\u2133","Mfr":"\uD835\uDD10","mfr":"\uD835\uDD2A","mho":"\u2127","micro":"\u00B5","midast":"*","midcir":"\u2AF0","mid":"\u2223","middot":"\u00B7","minusb":"\u229F","minus":"\u2212","minusd":"\u2238","minusdu":"\u2A2A","MinusPlus":"\u2213","mlcp":"\u2ADB","mldr":"\u2026","mnplus":"\u2213","models":"\u22A7","Mopf":"\uD835\uDD44","mopf":"\uD835\uDD5E","mp":"\u2213","mscr":"\uD835\uDCC2","Mscr":"\u2133","mstpos":"\u223E","Mu":"\u039C","mu":"\u03BC","multimap":"\u22B8","mumap":"\u22B8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20D2","nap":"\u2249","napE":"\u2A70\u0338","napid":"\u224B\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266E","naturals":"\u2115","natur":"\u266E","nbsp":"\u00A0","nbump":"\u224E\u0338","nbumpe":"\u224F\u0338","ncap":"\u2A43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2A6D\u0338","ncup":"\u2A42","Ncy":"\u041D","ncy":"\u043D","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21D7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200B","NegativeThickSpace":"\u200B","NegativeThinSpace":"\u200B","NegativeVeryThinSpace":"\u200B","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226B","NestedLessLess":"\u226A","NewLine":"\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\uD835\uDD11","nfr":"\uD835\uDD2B","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2A7E\u0338","nges":"\u2A7E\u0338","nGg":"\u22D9\u0338","ngsim":"\u2275","nGt":"\u226B\u20D2","ngt":"\u226F","ngtr":"\u226F","nGtv":"\u226B\u0338","nharr":"\u21AE","nhArr":"\u21CE","nhpar":"\u2AF2","ni":"\u220B","nis":"\u22FC","nisd":"\u22FA","niv":"\u220B","NJcy":"\u040A","njcy":"\u045A","nlarr":"\u219A","nlArr":"\u21CD","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219A","nLeftarrow":"\u21CD","nleftrightarrow":"\u21AE","nLeftrightarrow":"\u21CE","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2A7D\u0338","nles":"\u2A7D\u0338","nless":"\u226E","nLl":"\u22D8\u0338","nlsim":"\u2274","nLt":"\u226A\u20D2","nlt":"\u226E","nltri":"\u22EA","nltrie":"\u22EC","nLtv":"\u226A\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\u00A0","nopf":"\uD835\uDD5F","Nopf":"\u2115","Not":"\u2AEC","not":"\u00AC","NotCongruent":"\u2262","NotCupCap":"\u226D","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226F","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226B\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2A7E\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224E\u0338","NotHumpEqual":"\u224F\u0338","notin":"\u2209","notindot":"\u22F5\u0338","notinE":"\u22F9\u0338","notinva":"\u2209","notinvb":"\u22F7","notinvc":"\u22F6","NotLeftTriangleBar":"\u29CF\u0338","NotLeftTriangle":"\u22EA","NotLeftTriangleEqual":"\u22EC","NotLess":"\u226E","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226A\u0338","NotLessSlantEqual":"\u2A7D\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2AA2\u0338","NotNestedLessLess":"\u2AA1\u0338","notni":"\u220C","notniva":"\u220C","notnivb":"\u22FE","notnivc":"\u22FD","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2AAF\u0338","NotPrecedesSlantEqual":"\u22E0","NotReverseElement":"\u220C","NotRightTriangleBar":"\u29D0\u0338","NotRightTriangle":"\u22EB","NotRightTriangleEqual":"\u22ED","NotSquareSubset":"\u228F\u0338","NotSquareSubsetEqual":"\u22E2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22E3","NotSubset":"\u2282\u20D2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2AB0\u0338","NotSucceedsSlantEqual":"\u22E1","NotSucceedsTilde":"\u227F\u0338","NotSuperset":"\u2283\u20D2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2AFD\u20E5","npart":"\u2202\u0338","npolint":"\u2A14","npr":"\u2280","nprcue":"\u22E0","nprec":"\u2280","npreceq":"\u2AAF\u0338","npre":"\u2AAF\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219B","nrArr":"\u21CF","nrarrw":"\u219D\u0338","nrightarrow":"\u219B","nRightarrow":"\u21CF","nrtri":"\u22EB","nrtrie":"\u22ED","nsc":"\u2281","nsccue":"\u22E1","nsce":"\u2AB0\u0338","Nscr":"\uD835\uDCA9","nscr":"\uD835\uDCC3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22E2","nsqsupe":"\u22E3","nsub":"\u2284","nsubE":"\u2AC5\u0338","nsube":"\u2288","nsubset":"\u2282\u20D2","nsubseteq":"\u2288","nsubseteqq":"\u2AC5\u0338","nsucc":"\u2281","nsucceq":"\u2AB0\u0338","nsup":"\u2285","nsupE":"\u2AC6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20D2","nsupseteq":"\u2289","nsupseteqq":"\u2AC6\u0338","ntgl":"\u2279","Ntilde":"\u00D1","ntilde":"\u00F1","ntlg":"\u2278","ntriangleleft":"\u22EA","ntrianglelefteq":"\u22EC","ntriangleright":"\u22EB","ntrianglerighteq":"\u22ED","Nu":"\u039D","nu":"\u03BD","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224D\u20D2","nvdash":"\u22AC","nvDash":"\u22AD","nVdash":"\u22AE","nVDash":"\u22AF","nvge":"\u2265\u20D2","nvgt":">\u20D2","nvHarr":"\u2904","nvinfin":"\u29DE","nvlArr":"\u2902","nvle":"\u2264\u20D2","nvlt":"<\u20D2","nvltrie":"\u22B4\u20D2","nvrArr":"\u2903","nvrtrie":"\u22B5\u20D2","nvsim":"\u223C\u20D2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21D6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\u00D3","oacute":"\u00F3","oast":"\u229B","Ocirc":"\u00D4","ocirc":"\u00F4","ocir":"\u229A","Ocy":"\u041E","ocy":"\u043E","odash":"\u229D","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2A38","odot":"\u2299","odsold":"\u29BC","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29BF","Ofr":"\uD835\uDD12","ofr":"\uD835\uDD2C","ogon":"\u02DB","Ograve":"\u00D2","ograve":"\u00F2","ogt":"\u29C1","ohbar":"\u29B5","ohm":"\u03A9","oint":"\u222E","olarr":"\u21BA","olcir":"\u29BE","olcross":"\u29BB","oline":"\u203E","olt":"\u29C0","Omacr":"\u014C","omacr":"\u014D","Omega":"\u03A9","omega":"\u03C9","Omicron":"\u039F","omicron":"\u03BF","omid":"\u29B6","ominus":"\u2296","Oopf":"\uD835\uDD46","oopf":"\uD835\uDD60","opar":"\u29B7","OpenCurlyDoubleQuote":"\u201C","OpenCurlyQuote":"\u2018","operp":"\u29B9","oplus":"\u2295","orarr":"\u21BB","Or":"\u2A54","or":"\u2228","ord":"\u2A5D","order":"\u2134","orderof":"\u2134","ordf":"\u00AA","ordm":"\u00BA","origof":"\u22B6","oror":"\u2A56","orslope":"\u2A57","orv":"\u2A5B","oS":"\u24C8","Oscr":"\uD835\uDCAA","oscr":"\u2134","Oslash":"\u00D8","oslash":"\u00F8","osol":"\u2298","Otilde":"\u00D5","otilde":"\u00F5","otimesas":"\u2A36","Otimes":"\u2A37","otimes":"\u2297","Ouml":"\u00D6","ouml":"\u00F6","ovbar":"\u233D","OverBar":"\u203E","OverBrace":"\u23DE","OverBracket":"\u23B4","OverParenthesis":"\u23DC","para":"\u00B6","parallel":"\u2225","par":"\u2225","parsim":"\u2AF3","parsl":"\u2AFD","part":"\u2202","PartialD":"\u2202","Pcy":"\u041F","pcy":"\u043F","percnt":"%","period":".","permil":"\u2030","perp":"\u22A5","pertenk":"\u2031","Pfr":"\uD835\uDD13","pfr":"\uD835\uDD2D","Phi":"\u03A6","phi":"\u03C6","phiv":"\u03D5","phmmat":"\u2133","phone":"\u260E","Pi":"\u03A0","pi":"\u03C0","pitchfork":"\u22D4","piv":"\u03D6","planck":"\u210F","planckh":"\u210E","plankv":"\u210F","plusacir":"\u2A23","plusb":"\u229E","pluscir":"\u2A22","plus":"+","plusdo":"\u2214","plusdu":"\u2A25","pluse":"\u2A72","PlusMinus":"\u00B1","plusmn":"\u00B1","plussim":"\u2A26","plustwo":"\u2A27","pm":"\u00B1","Poincareplane":"\u210C","pointint":"\u2A15","popf":"\uD835\uDD61","Popf":"\u2119","pound":"\u00A3","prap":"\u2AB7","Pr":"\u2ABB","pr":"\u227A","prcue":"\u227C","precapprox":"\u2AB7","prec":"\u227A","preccurlyeq":"\u227C","Precedes":"\u227A","PrecedesEqual":"\u2AAF","PrecedesSlantEqual":"\u227C","PrecedesTilde":"\u227E","preceq":"\u2AAF","precnapprox":"\u2AB9","precneqq":"\u2AB5","precnsim":"\u22E8","pre":"\u2AAF","prE":"\u2AB3","precsim":"\u227E","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2AB9","prnE":"\u2AB5","prnsim":"\u22E8","prod":"\u220F","Product":"\u220F","profalar":"\u232E","profline":"\u2312","profsurf":"\u2313","prop":"\u221D","Proportional":"\u221D","Proportion":"\u2237","propto":"\u221D","prsim":"\u227E","prurel":"\u22B0","Pscr":"\uD835\uDCAB","pscr":"\uD835\uDCC5","Psi":"\u03A8","psi":"\u03C8","puncsp":"\u2008","Qfr":"\uD835\uDD14","qfr":"\uD835\uDD2E","qint":"\u2A0C","qopf":"\uD835\uDD62","Qopf":"\u211A","qprime":"\u2057","Qscr":"\uD835\uDCAC","qscr":"\uD835\uDCC6","quaternions":"\u210D","quatint":"\u2A16","quest":"?","questeq":"\u225F","quot":"\"","QUOT":"\"","rAarr":"\u21DB","race":"\u223D\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221A","raemptyv":"\u29B3","rang":"\u27E9","Rang":"\u27EB","rangd":"\u2992","range":"\u29A5","rangle":"\u27E9","raquo":"\u00BB","rarrap":"\u2975","rarrb":"\u21E5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21A0","rArr":"\u21D2","rarrfs":"\u291E","rarrhk":"\u21AA","rarrlp":"\u21AC","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21A3","rarrw":"\u219D","ratail":"\u291A","rAtail":"\u291C","ratio":"\u2236","rationals":"\u211A","rbarr":"\u290D","rBarr":"\u290F","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298C","rbrksld":"\u298E","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201D","rdquor":"\u201D","rdsh":"\u21B3","real":"\u211C","realine":"\u211B","realpart":"\u211C","reals":"\u211D","Re":"\u211C","rect":"\u25AD","reg":"\u00AE","REG":"\u00AE","ReverseElement":"\u220B","ReverseEquilibrium":"\u21CB","ReverseUpEquilibrium":"\u296F","rfisht":"\u297D","rfloor":"\u230B","rfr":"\uD835\uDD2F","Rfr":"\u211C","rHar":"\u2964","rhard":"\u21C1","rharu":"\u21C0","rharul":"\u296C","Rho":"\u03A1","rho":"\u03C1","rhov":"\u03F1","RightAngleBracket":"\u27E9","RightArrowBar":"\u21E5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21D2","RightArrowLeftArrow":"\u21C4","rightarrowtail":"\u21A3","RightCeiling":"\u2309","RightDoubleBracket":"\u27E7","RightDownTeeVector":"\u295D","RightDownVectorBar":"\u2955","RightDownVector":"\u21C2","RightFloor":"\u230B","rightharpoondown":"\u21C1","rightharpoonup":"\u21C0","rightleftarrows":"\u21C4","rightleftharpoons":"\u21CC","rightrightarrows":"\u21C9","rightsquigarrow":"\u219D","RightTeeArrow":"\u21A6","RightTee":"\u22A2","RightTeeVector":"\u295B","rightthreetimes":"\u22CC","RightTriangleBar":"\u29D0","RightTriangle":"\u22B3","RightTriangleEqual":"\u22B5","RightUpDownVector":"\u294F","RightUpTeeVector":"\u295C","RightUpVectorBar":"\u2954","RightUpVector":"\u21BE","RightVectorBar":"\u2953","RightVector":"\u21C0","ring":"\u02DA","risingdotseq":"\u2253","rlarr":"\u21C4","rlhar":"\u21CC","rlm":"\u200F","rmoustache":"\u23B1","rmoust":"\u23B1","rnmid":"\u2AEE","roang":"\u27ED","roarr":"\u21FE","robrk":"\u27E7","ropar":"\u2986","ropf":"\uD835\uDD63","Ropf":"\u211D","roplus":"\u2A2E","rotimes":"\u2A35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2A12","rrarr":"\u21C9","Rrightarrow":"\u21DB","rsaquo":"\u203A","rscr":"\uD835\uDCC7","Rscr":"\u211B","rsh":"\u21B1","Rsh":"\u21B1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22CC","rtimes":"\u22CA","rtri":"\u25B9","rtrie":"\u22B5","rtrif":"\u25B8","rtriltri":"\u29CE","RuleDelayed":"\u29F4","ruluhar":"\u2968","rx":"\u211E","Sacute":"\u015A","sacute":"\u015B","sbquo":"\u201A","scap":"\u2AB8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2ABC","sc":"\u227B","sccue":"\u227D","sce":"\u2AB0","scE":"\u2AB4","Scedil":"\u015E","scedil":"\u015F","Scirc":"\u015C","scirc":"\u015D","scnap":"\u2ABA","scnE":"\u2AB6","scnsim":"\u22E9","scpolint":"\u2A13","scsim":"\u227F","Scy":"\u0421","scy":"\u0441","sdotb":"\u22A1","sdot":"\u22C5","sdote":"\u2A66","searhk":"\u2925","searr":"\u2198","seArr":"\u21D8","searrow":"\u2198","sect":"\u00A7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\uD835\uDD16","sfr":"\uD835\uDD30","sfrown":"\u2322","sharp":"\u266F","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\u00AD","Sigma":"\u03A3","sigma":"\u03C3","sigmaf":"\u03C2","sigmav":"\u03C2","sim":"\u223C","simdot":"\u2A6A","sime":"\u2243","simeq":"\u2243","simg":"\u2A9E","simgE":"\u2AA0","siml":"\u2A9D","simlE":"\u2A9F","simne":"\u2246","simplus":"\u2A24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2A33","smeparsl":"\u29E4","smid":"\u2223","smile":"\u2323","smt":"\u2AAA","smte":"\u2AAC","smtes":"\u2AAC\uFE00","SOFTcy":"\u042C","softcy":"\u044C","solbar":"\u233F","solb":"\u29C4","sol":"/","Sopf":"\uD835\uDD4A","sopf":"\uD835\uDD64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\uFE00","sqcup":"\u2294","sqcups":"\u2294\uFE00","Sqrt":"\u221A","sqsub":"\u228F","sqsube":"\u2291","sqsubset":"\u228F","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25A1","Square":"\u25A1","SquareIntersection":"\u2293","SquareSubset":"\u228F","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25AA","squ":"\u25A1","squf":"\u25AA","srarr":"\u2192","Sscr":"\uD835\uDCAE","sscr":"\uD835\uDCC8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22C6","Star":"\u22C6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03F5","straightphi":"\u03D5","strns":"\u00AF","sub":"\u2282","Sub":"\u22D0","subdot":"\u2ABD","subE":"\u2AC5","sube":"\u2286","subedot":"\u2AC3","submult":"\u2AC1","subnE":"\u2ACB","subne":"\u228A","subplus":"\u2ABF","subrarr":"\u2979","subset":"\u2282","Subset":"\u22D0","subseteq":"\u2286","subseteqq":"\u2AC5","SubsetEqual":"\u2286","subsetneq":"\u228A","subsetneqq":"\u2ACB","subsim":"\u2AC7","subsub":"\u2AD5","subsup":"\u2AD3","succapprox":"\u2AB8","succ":"\u227B","succcurlyeq":"\u227D","Succeeds":"\u227B","SucceedsEqual":"\u2AB0","SucceedsSlantEqual":"\u227D","SucceedsTilde":"\u227F","succeq":"\u2AB0","succnapprox":"\u2ABA","succneqq":"\u2AB6","succnsim":"\u22E9","succsim":"\u227F","SuchThat":"\u220B","sum":"\u2211","Sum":"\u2211","sung":"\u266A","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","sup":"\u2283","Sup":"\u22D1","supdot":"\u2ABE","supdsub":"\u2AD8","supE":"\u2AC6","supe":"\u2287","supedot":"\u2AC4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27C9","suphsub":"\u2AD7","suplarr":"\u297B","supmult":"\u2AC2","supnE":"\u2ACC","supne":"\u228B","supplus":"\u2AC0","supset":"\u2283","Supset":"\u22D1","supseteq":"\u2287","supseteqq":"\u2AC6","supsetneq":"\u228B","supsetneqq":"\u2ACC","supsim":"\u2AC8","supsub":"\u2AD4","supsup":"\u2AD6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21D9","swarrow":"\u2199","swnwar":"\u292A","szlig":"\u00DF","Tab":"\t","target":"\u2316","Tau":"\u03A4","tau":"\u03C4","tbrk":"\u23B4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20DB","telrec":"\u2315","Tfr":"\uD835\uDD17","tfr":"\uD835\uDD31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03B8","thetasym":"\u03D1","thetav":"\u03D1","thickapprox":"\u2248","thicksim":"\u223C","ThickSpace":"\u205F\u200A","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223C","THORN":"\u00DE","thorn":"\u00FE","tilde":"\u02DC","Tilde":"\u223C","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2A31","timesb":"\u22A0","times":"\u00D7","timesd":"\u2A30","tint":"\u222D","toea":"\u2928","topbot":"\u2336","topcir":"\u2AF1","top":"\u22A4","Topf":"\uD835\uDD4B","topf":"\uD835\uDD65","topfork":"\u2ADA","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25B5","triangledown":"\u25BF","triangleleft":"\u25C3","trianglelefteq":"\u22B4","triangleq":"\u225C","triangleright":"\u25B9","trianglerighteq":"\u22B5","tridot":"\u25EC","trie":"\u225C","triminus":"\u2A3A","TripleDot":"\u20DB","triplus":"\u2A39","trisb":"\u29CD","tritime":"\u2A3B","trpezium":"\u23E2","Tscr":"\uD835\uDCAF","tscr":"\uD835\uDCC9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040B","tshcy":"\u045B","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226C","twoheadleftarrow":"\u219E","twoheadrightarrow":"\u21A0","Uacute":"\u00DA","uacute":"\u00FA","uarr":"\u2191","Uarr":"\u219F","uArr":"\u21D1","Uarrocir":"\u2949","Ubrcy":"\u040E","ubrcy":"\u045E","Ubreve":"\u016C","ubreve":"\u016D","Ucirc":"\u00DB","ucirc":"\u00FB","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21C5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296E","ufisht":"\u297E","Ufr":"\uD835\uDD18","ufr":"\uD835\uDD32","Ugrave":"\u00D9","ugrave":"\u00F9","uHar":"\u2963","uharl":"\u21BF","uharr":"\u21BE","uhblk":"\u2580","ulcorn":"\u231C","ulcorner":"\u231C","ulcrop":"\u230F","ultri":"\u25F8","Umacr":"\u016A","umacr":"\u016B","uml":"\u00A8","UnderBar":"_","UnderBrace":"\u23DF","UnderBracket":"\u23B5","UnderParenthesis":"\u23DD","Union":"\u22C3","UnionPlus":"\u228E","Uogon":"\u0172","uogon":"\u0173","Uopf":"\uD835\uDD4C","uopf":"\uD835\uDD66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21D1","UpArrowDownArrow":"\u21C5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21D5","UpEquilibrium":"\u296E","upharpoonleft":"\u21BF","upharpoonright":"\u21BE","uplus":"\u228E","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03C5","Upsi":"\u03D2","upsih":"\u03D2","Upsilon":"\u03A5","upsilon":"\u03C5","UpTeeArrow":"\u21A5","UpTee":"\u22A5","upuparrows":"\u21C8","urcorn":"\u231D","urcorner":"\u231D","urcrop":"\u230E","Uring":"\u016E","uring":"\u016F","urtri":"\u25F9","Uscr":"\uD835\uDCB0","uscr":"\uD835\uDCCA","utdot":"\u22F0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25B5","utrif":"\u25B4","uuarr":"\u21C8","Uuml":"\u00DC","uuml":"\u00FC","uwangle":"\u29A7","vangrt":"\u299C","varepsilon":"\u03F5","varkappa":"\u03F0","varnothing":"\u2205","varphi":"\u03D5","varpi":"\u03D6","varpropto":"\u221D","varr":"\u2195","vArr":"\u21D5","varrho":"\u03F1","varsigma":"\u03C2","varsubsetneq":"\u228A\uFE00","varsubsetneqq":"\u2ACB\uFE00","varsupsetneq":"\u228B\uFE00","varsupsetneqq":"\u2ACC\uFE00","vartheta":"\u03D1","vartriangleleft":"\u22B2","vartriangleright":"\u22B3","vBar":"\u2AE8","Vbar":"\u2AEB","vBarv":"\u2AE9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22A2","vDash":"\u22A8","Vdash":"\u22A9","VDash":"\u22AB","Vdashl":"\u2AE6","veebar":"\u22BB","vee":"\u2228","Vee":"\u22C1","veeeq":"\u225A","vellip":"\u22EE","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200A","Vfr":"\uD835\uDD19","vfr":"\uD835\uDD33","vltri":"\u22B2","vnsub":"\u2282\u20D2","vnsup":"\u2283\u20D2","Vopf":"\uD835\uDD4D","vopf":"\uD835\uDD67","vprop":"\u221D","vrtri":"\u22B3","Vscr":"\uD835\uDCB1","vscr":"\uD835\uDCCB","vsubnE":"\u2ACB\uFE00","vsubne":"\u228A\uFE00","vsupnE":"\u2ACC\uFE00","vsupne":"\u228B\uFE00","Vvdash":"\u22AA","vzigzag":"\u299A","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2A5F","wedge":"\u2227","Wedge":"\u22C0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\uD835\uDD1A","wfr":"\uD835\uDD34","Wopf":"\uD835\uDD4E","wopf":"\uD835\uDD68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\uD835\uDCB2","wscr":"\uD835\uDCCC","xcap":"\u22C2","xcirc":"\u25EF","xcup":"\u22C3","xdtri":"\u25BD","Xfr":"\uD835\uDD1B","xfr":"\uD835\uDD35","xharr":"\u27F7","xhArr":"\u27FA","Xi":"\u039E","xi":"\u03BE","xlarr":"\u27F5","xlArr":"\u27F8","xmap":"\u27FC","xnis":"\u22FB","xodot":"\u2A00","Xopf":"\uD835\uDD4F","xopf":"\uD835\uDD69","xoplus":"\u2A01","xotime":"\u2A02","xrarr":"\u27F6","xrArr":"\u27F9","Xscr":"\uD835\uDCB3","xscr":"\uD835\uDCCD","xsqcup":"\u2A06","xuplus":"\u2A04","xutri":"\u25B3","xvee":"\u22C1","xwedge":"\u22C0","Yacute":"\u00DD","yacute":"\u00FD","YAcy":"\u042F","yacy":"\u044F","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042B","ycy":"\u044B","yen":"\u00A5","Yfr":"\uD835\uDD1C","yfr":"\uD835\uDD36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\uD835\uDD50","yopf":"\uD835\uDD6A","Yscr":"\uD835\uDCB4","yscr":"\uD835\uDCCE","YUcy":"\u042E","yucy":"\u044E","yuml":"\u00FF","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017A","Zcaron":"\u017D","zcaron":"\u017E","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017B","zdot":"\u017C","zeetrf":"\u2128","ZeroWidthSpace":"\u200B","Zeta":"\u0396","zeta":"\u03B6","zfr":"\uD835\uDD37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21DD","zopf":"\uD835\uDD6B","Zopf":"\u2124","Zscr":"\uD835\uDCB5","zscr":"\uD835\uDCCF","zwj":"\u200D","zwnj":"\u200C"}
},{}],64:[function(require,module,exports){
module.exports={"Aacute":"\u00C1","aacute":"\u00E1","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","AElig":"\u00C6","aelig":"\u00E6","Agrave":"\u00C0","agrave":"\u00E0","amp":"&","AMP":"&","Aring":"\u00C5","aring":"\u00E5","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","brvbar":"\u00A6","Ccedil":"\u00C7","ccedil":"\u00E7","cedil":"\u00B8","cent":"\u00A2","copy":"\u00A9","COPY":"\u00A9","curren":"\u00A4","deg":"\u00B0","divide":"\u00F7","Eacute":"\u00C9","eacute":"\u00E9","Ecirc":"\u00CA","ecirc":"\u00EA","Egrave":"\u00C8","egrave":"\u00E8","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","frac12":"\u00BD","frac14":"\u00BC","frac34":"\u00BE","gt":">","GT":">","Iacute":"\u00CD","iacute":"\u00ED","Icirc":"\u00CE","icirc":"\u00EE","iexcl":"\u00A1","Igrave":"\u00CC","igrave":"\u00EC","iquest":"\u00BF","Iuml":"\u00CF","iuml":"\u00EF","laquo":"\u00AB","lt":"<","LT":"<","macr":"\u00AF","micro":"\u00B5","middot":"\u00B7","nbsp":"\u00A0","not":"\u00AC","Ntilde":"\u00D1","ntilde":"\u00F1","Oacute":"\u00D3","oacute":"\u00F3","Ocirc":"\u00D4","ocirc":"\u00F4","Ograve":"\u00D2","ograve":"\u00F2","ordf":"\u00AA","ordm":"\u00BA","Oslash":"\u00D8","oslash":"\u00F8","Otilde":"\u00D5","otilde":"\u00F5","Ouml":"\u00D6","ouml":"\u00F6","para":"\u00B6","plusmn":"\u00B1","pound":"\u00A3","quot":"\"","QUOT":"\"","raquo":"\u00BB","reg":"\u00AE","REG":"\u00AE","sect":"\u00A7","shy":"\u00AD","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","szlig":"\u00DF","THORN":"\u00DE","thorn":"\u00FE","times":"\u00D7","Uacute":"\u00DA","uacute":"\u00FA","Ucirc":"\u00DB","ucirc":"\u00FB","Ugrave":"\u00D9","ugrave":"\u00F9","uml":"\u00A8","Uuml":"\u00DC","uuml":"\u00FC","Yacute":"\u00DD","yacute":"\u00FD","yen":"\u00A5","yuml":"\u00FF"}
},{}],65:[function(require,module,exports){
module.exports={"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}

},{}],66:[function(require,module,exports){
module.exports = CollectingHandler;

function CollectingHandler(cbs){
	this._cbs = cbs || {};
	this.events = [];
}

var EVENTS = require("./").EVENTS;
Object.keys(EVENTS).forEach(function(name){
	if(EVENTS[name] === 0){
		name = "on" + name;
		CollectingHandler.prototype[name] = function(){
			this.events.push([name]);
			if(this._cbs[name]) this._cbs[name]();
		};
	} else if(EVENTS[name] === 1){
		name = "on" + name;
		CollectingHandler.prototype[name] = function(a){
			this.events.push([name, a]);
			if(this._cbs[name]) this._cbs[name](a);
		};
	} else if(EVENTS[name] === 2){
		name = "on" + name;
		CollectingHandler.prototype[name] = function(a, b){
			this.events.push([name, a, b]);
			if(this._cbs[name]) this._cbs[name](a, b);
		};
	} else {
		throw Error("wrong number of arguments");
	}
});

CollectingHandler.prototype.onreset = function(){
	this.events = [];
	if(this._cbs.onreset) this._cbs.onreset();
};

CollectingHandler.prototype.restart = function(){
	if(this._cbs.onreset) this._cbs.onreset();

	for(var i = 0, len = this.events.length; i < len; i++){
		if(this._cbs[this.events[i][0]]){

			var num = this.events[i].length;

			if(num === 1){
				this._cbs[this.events[i][0]]();
			} else if(num === 2){
				this._cbs[this.events[i][0]](this.events[i][1]);
			} else {
				this._cbs[this.events[i][0]](this.events[i][1], this.events[i][2]);
			}
		}
	}
};

},{"./":73}],67:[function(require,module,exports){
var index = require("./index.js"),
    DomHandler = index.DomHandler,
	DomUtils = index.DomUtils;

//TODO: make this a streamable handler
function FeedHandler(callback, options){
	this.init(callback, options);
}

require("util").inherits(FeedHandler, DomHandler);

FeedHandler.prototype.init = DomHandler;

function getElements(what, where){
	return DomUtils.getElementsByTagName(what, where, true);
}
function getOneElement(what, where){
	return DomUtils.getElementsByTagName(what, where, true, 1)[0];
}
function fetch(what, where, recurse){
	return DomUtils.getText(
		DomUtils.getElementsByTagName(what, where, recurse, 1)
	).trim();
}

function addConditionally(obj, prop, what, where, recurse){
	var tmp = fetch(what, where, recurse);
	if(tmp) obj[prop] = tmp;
}

var isValidFeed = function(value) {
	return value === "rss" || value === "feed" || value === "rdf:RDF";
};

FeedHandler.prototype.onend = function() {
	var feed = {},
		feedRoot = getOneElement(isValidFeed, this.dom),
		tmp, childs;

	if(feedRoot){
		if(feedRoot.name === "feed"){
			childs = feedRoot.children;

			feed.type = "atom";
			addConditionally(feed, "id", "id", childs);
			addConditionally(feed, "title", "title", childs);
			if((tmp = getOneElement("link", childs)) && (tmp = tmp.attribs) && (tmp = tmp.href)) feed.link = tmp;
			addConditionally(feed, "description", "subtitle", childs);
			if((tmp = fetch("updated", childs))) feed.updated = new Date(tmp);
			addConditionally(feed, "author", "email", childs, true);

			feed.items = getElements("entry", childs).map(function(item){
				var entry = {}, tmp;

				item = item.children;

				addConditionally(entry, "id", "id", item);
				addConditionally(entry, "title", "title", item);
				if((tmp = getOneElement("link", item)) && (tmp = tmp.attribs) && (tmp = tmp.href)) entry.link = tmp;
				addConditionally(entry, "description", "summary", item);
				if((tmp = fetch("updated", item))) entry.pubDate = new Date(tmp);
				return entry;
			});
		} else {
			childs = getOneElement("channel", feedRoot.children).children;

			feed.type = feedRoot.name.substr(0, 3);
			feed.id = "";
			addConditionally(feed, "title", "title", childs);
			addConditionally(feed, "link", "link", childs);
			addConditionally(feed, "description", "description", childs);
			if((tmp = fetch("lastBuildDate", childs))) feed.updated = new Date(tmp);
			addConditionally(feed, "author", "managingEditor", childs, true);

			feed.items = getElements("item", feedRoot.children).map(function(item){
				var entry = {}, tmp;

				item = item.children;

				addConditionally(entry, "id", "guid", item);
				addConditionally(entry, "title", "title", item);
				addConditionally(entry, "link", "link", item);
				addConditionally(entry, "description", "description", item);
				if((tmp = fetch("pubDate", item))) entry.pubDate = new Date(tmp);
				return entry;
			});
		}
	}
	this.dom = feed;
	DomHandler.prototype._handleCallback.call(
		this, feedRoot ? null : Error("couldn't find root of feed")
	);
};

module.exports = FeedHandler;

},{"./index.js":73,"util":136}],68:[function(require,module,exports){
var Tokenizer = require("./Tokenizer.js");

/*
	Options:

	xmlMode: Special behavior for script/style tags (true by default)
	lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
	lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
*/

/*
	Callbacks:

	oncdataend,
	oncdatastart,
	onclosetag,
	oncomment,
	oncommentend,
	onerror,
	onopentag,
	onprocessinginstruction,
	onreset,
	ontext
*/

var formTags = {
	input: true,
	option: true,
	optgroup: true,
	select: true,
	button: true,
	datalist: true,
	textarea: true
};

var openImpliesClose = {
	tr      : { tr:true, th:true, td:true },
	th      : { th:true },
	td      : { thead:true, td:true },
	body    : { head:true, link:true, script:true },
	li      : { li:true },
	p       : { p:true },
	select  : formTags,
	input   : formTags,
	output  : formTags,
	button  : formTags,
	datalist: formTags,
	textarea: formTags,
	option  : { option:true },
	optgroup: { optgroup:true }
};

var voidElements = {
	__proto__: null,
	area: true,
	base: true,
	basefont: true,
	br: true,
	col: true,
	command: true,
	embed: true,
	frame: true,
	hr: true,
	img: true,
	input: true,
	isindex: true,
	keygen: true,
	link: true,
	meta: true,
	param: true,
	source: true,
	track: true,
	wbr: true,

	//common self closing svg elements
	path: true,
	circle: true,
	ellipse: true,
	line: true,
	rect: true,
	use: true
};

var re_nameEnd = /\s|\//;

function Parser(cbs, options){
	this._options = options || {};
	this._cbs = cbs || {};

	this._tagname = "";
	this._attribname = "";
	this._attribvalue = "";
	this._attribs = null;
	this._stack = [];

	this.startIndex = 0;
	this.endIndex = null;

	this._lowerCaseTagNames = "lowerCaseTags" in this._options ?
									!!this._options.lowerCaseTags :
									!this._options.xmlMode;
	this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options ?
									!!this._options.lowerCaseAttributeNames :
									!this._options.xmlMode;

	this._tokenizer = new Tokenizer(this._options, this);
}

require("util").inherits(Parser, require("events").EventEmitter);

Parser.prototype._updatePosition = function(initialOffset){
	if(this.endIndex === null){
		if(this._tokenizer._sectionStart <= initialOffset){
			this.startIndex = 0;
		} else {
			this.startIndex = this._tokenizer._sectionStart - initialOffset;
		}
	}
	else this.startIndex = this.endIndex + 1;
	this.endIndex = this._tokenizer._index;
};

//Tokenizer event handlers
Parser.prototype.ontext = function(data){
	this._updatePosition(1);
	this.endIndex--;

	if(this._cbs.ontext) this._cbs.ontext(data);
};

Parser.prototype.onopentagname = function(name){
	if(this._lowerCaseTagNames){
		name = name.toLowerCase();
	}

	this._tagname = name;

	if (!this._options.xmlMode && name in openImpliesClose) {
		for(
			var el;
			(el = this._stack[this._stack.length-1]) in openImpliesClose[name];
			this.onclosetag(el)
		);
	}

	if(this._options.xmlMode || !(name in voidElements)){
		this._stack.push(name);
	}

	if(this._cbs.onopentagname) this._cbs.onopentagname(name);
	if(this._cbs.onopentag) this._attribs = {};
};

Parser.prototype.onopentagend = function(){
	this._updatePosition(1);

	if(this._attribs){
		if(this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);
		this._attribs = null;
	}

	if(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){
		this._cbs.onclosetag(this._tagname);
	}

	this._tagname = "";
};

Parser.prototype.onclosetag = function(name){
	this._updatePosition(1);

	if(this._lowerCaseTagNames){
		name = name.toLowerCase();
	}

	if(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){
		var pos = this._stack.lastIndexOf(name);
		if(pos !== -1){
			if(this._cbs.onclosetag){
				pos = this._stack.length - pos;
				while(pos--) this._cbs.onclosetag(this._stack.pop());
			}
			else this._stack.length = pos;
		} else if(name === "p" && !this._options.xmlMode){
			this.onopentagname(name);
			this._closeCurrentTag();
		}
	} else if(!this._options.xmlMode && (name === "br" || name === "p")){
		this.onopentagname(name);
		this._closeCurrentTag();
	}
};

Parser.prototype.onselfclosingtag = function(){
	if(this._options.xmlMode || this._options.recognizeSelfClosing){
		this._closeCurrentTag();
	} else {
		this.onopentagend();
	}
};

Parser.prototype._closeCurrentTag = function(){
	var name = this._tagname;

	this.onopentagend();

	//self-closing tags will be on the top of the stack
	//(cheaper check than in onclosetag)
	if(this._stack[this._stack.length-1] === name){
		if(this._cbs.onclosetag){
			this._cbs.onclosetag(name);
		}
		this._stack.pop();
	}
};

Parser.prototype.onattribname = function(name){
	if(this._lowerCaseAttributeNames){
		name = name.toLowerCase();
	}
	this._attribname = name;
};

Parser.prototype.onattribdata = function(value){
	this._attribvalue += value;
};

Parser.prototype.onattribend = function(){
	if(this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);
	if(
		this._attribs &&
		!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
	){
		this._attribs[this._attribname] = this._attribvalue;
	}
	this._attribname = "";
	this._attribvalue = "";
};

Parser.prototype._getInstructionName = function(value){
	var idx = value.search(re_nameEnd),
	    name = idx < 0 ? value : value.substr(0, idx);

	if(this._lowerCaseTagNames){
		name = name.toLowerCase();
	}

	return name;
};

Parser.prototype.ondeclaration = function(value){
	if(this._cbs.onprocessinginstruction){
		var name = this._getInstructionName(value);
		this._cbs.onprocessinginstruction("!" + name, "!" + value);
	}
};

Parser.prototype.onprocessinginstruction = function(value){
	if(this._cbs.onprocessinginstruction){
		var name = this._getInstructionName(value);
		this._cbs.onprocessinginstruction("?" + name, "?" + value);
	}
};

Parser.prototype.oncomment = function(value){
	this._updatePosition(4);

	if(this._cbs.oncomment) this._cbs.oncomment(value);
	if(this._cbs.oncommentend) this._cbs.oncommentend();
};

Parser.prototype.oncdata = function(value){
	this._updatePosition(1);

	if(this._options.xmlMode || this._options.recognizeCDATA){
		if(this._cbs.oncdatastart) this._cbs.oncdatastart();
		if(this._cbs.ontext) this._cbs.ontext(value);
		if(this._cbs.oncdataend) this._cbs.oncdataend();
	} else {
		this.oncomment("[CDATA[" + value + "]]");
	}
};

Parser.prototype.onerror = function(err){
	if(this._cbs.onerror) this._cbs.onerror(err);
};

Parser.prototype.onend = function(){
	if(this._cbs.onclosetag){
		for(
			var i = this._stack.length;
			i > 0;
			this._cbs.onclosetag(this._stack[--i])
		);
	}
	if(this._cbs.onend) this._cbs.onend();
};


//Resets the parser to a blank state, ready to parse a new HTML document
Parser.prototype.reset = function(){
	if(this._cbs.onreset) this._cbs.onreset();
	this._tokenizer.reset();

	this._tagname = "";
	this._attribname = "";
	this._attribs = null;
	this._stack = [];
};

//Parses a complete HTML document and pushes it to the handler
Parser.prototype.parseComplete = function(data){
	this.reset();
	this.end(data);
};

Parser.prototype.write = function(chunk){
	this._tokenizer.write(chunk);
};

Parser.prototype.end = function(chunk){
	this._tokenizer.end(chunk);
};

Parser.prototype.pause = function(){
	this._tokenizer.pause();
};

Parser.prototype.resume = function(){
	this._tokenizer.resume();
};

//alias for backwards compat
Parser.prototype.parseChunk = Parser.prototype.write;
Parser.prototype.done = Parser.prototype.end;

module.exports = Parser;

},{"./Tokenizer.js":71,"events":111,"util":136}],69:[function(require,module,exports){
module.exports = ProxyHandler;

function ProxyHandler(cbs){
	this._cbs = cbs || {};
}

var EVENTS = require("./").EVENTS;
Object.keys(EVENTS).forEach(function(name){
	if(EVENTS[name] === 0){
		name = "on" + name;
		ProxyHandler.prototype[name] = function(){
			if(this._cbs[name]) this._cbs[name]();
		};
	} else if(EVENTS[name] === 1){
		name = "on" + name;
		ProxyHandler.prototype[name] = function(a){
			if(this._cbs[name]) this._cbs[name](a);
		};
	} else if(EVENTS[name] === 2){
		name = "on" + name;
		ProxyHandler.prototype[name] = function(a, b){
			if(this._cbs[name]) this._cbs[name](a, b);
		};
	} else {
		throw Error("wrong number of arguments");
	}
});
},{"./":73}],70:[function(require,module,exports){
module.exports = Stream;

var Parser = require("./WritableStream.js");

function Stream(options){
	Parser.call(this, new Cbs(this), options);
}

require("util").inherits(Stream, Parser);

Stream.prototype.readable = true;

function Cbs(scope){
	this.scope = scope;
}

var EVENTS = require("../").EVENTS;

Object.keys(EVENTS).forEach(function(name){
	if(EVENTS[name] === 0){
		Cbs.prototype["on" + name] = function(){
			this.scope.emit(name);
		};
	} else if(EVENTS[name] === 1){
		Cbs.prototype["on" + name] = function(a){
			this.scope.emit(name, a);
		};
	} else if(EVENTS[name] === 2){
		Cbs.prototype["on" + name] = function(a, b){
			this.scope.emit(name, a, b);
		};
	} else {
		throw Error("wrong number of arguments!");
	}
});
},{"../":73,"./WritableStream.js":72,"util":136}],71:[function(require,module,exports){
module.exports = Tokenizer;

var decodeCodePoint = require("entities/lib/decode_codepoint.js"),
    entityMap = require("entities/maps/entities.json"),
    legacyMap = require("entities/maps/legacy.json"),
    xmlMap    = require("entities/maps/xml.json"),

    i = 0,

    TEXT                      = i++,
    BEFORE_TAG_NAME           = i++, //after <
    IN_TAG_NAME               = i++,
    IN_SELF_CLOSING_TAG       = i++,
    BEFORE_CLOSING_TAG_NAME   = i++,
    IN_CLOSING_TAG_NAME       = i++,
    AFTER_CLOSING_TAG_NAME    = i++,

    //attributes
    BEFORE_ATTRIBUTE_NAME     = i++,
    IN_ATTRIBUTE_NAME         = i++,
    AFTER_ATTRIBUTE_NAME      = i++,
    BEFORE_ATTRIBUTE_VALUE    = i++,
    IN_ATTRIBUTE_VALUE_DQ     = i++, // "
    IN_ATTRIBUTE_VALUE_SQ     = i++, // '
    IN_ATTRIBUTE_VALUE_NQ     = i++,

    //declarations
    BEFORE_DECLARATION        = i++, // !
    IN_DECLARATION            = i++,

    //processing instructions
    IN_PROCESSING_INSTRUCTION = i++, // ?

    //comments
    BEFORE_COMMENT            = i++,
    IN_COMMENT                = i++,
    AFTER_COMMENT_1           = i++,
    AFTER_COMMENT_2           = i++,

    //cdata
    BEFORE_CDATA_1            = i++, // [
    BEFORE_CDATA_2            = i++, // C
    BEFORE_CDATA_3            = i++, // D
    BEFORE_CDATA_4            = i++, // A
    BEFORE_CDATA_5            = i++, // T
    BEFORE_CDATA_6            = i++, // A
    IN_CDATA                  = i++, // [
    AFTER_CDATA_1             = i++, // ]
    AFTER_CDATA_2             = i++, // ]

    //special tags
    BEFORE_SPECIAL            = i++, //S
    BEFORE_SPECIAL_END        = i++,   //S

    BEFORE_SCRIPT_1           = i++, //C
    BEFORE_SCRIPT_2           = i++, //R
    BEFORE_SCRIPT_3           = i++, //I
    BEFORE_SCRIPT_4           = i++, //P
    BEFORE_SCRIPT_5           = i++, //T
    AFTER_SCRIPT_1            = i++, //C
    AFTER_SCRIPT_2            = i++, //R
    AFTER_SCRIPT_3            = i++, //I
    AFTER_SCRIPT_4            = i++, //P
    AFTER_SCRIPT_5            = i++, //T

    BEFORE_STYLE_1            = i++, //T
    BEFORE_STYLE_2            = i++, //Y
    BEFORE_STYLE_3            = i++, //L
    BEFORE_STYLE_4            = i++, //E
    AFTER_STYLE_1             = i++, //T
    AFTER_STYLE_2             = i++, //Y
    AFTER_STYLE_3             = i++, //L
    AFTER_STYLE_4             = i++, //E

    BEFORE_ENTITY             = i++, //&
    BEFORE_NUMERIC_ENTITY     = i++, //#
    IN_NAMED_ENTITY           = i++,
    IN_NUMERIC_ENTITY         = i++,
    IN_HEX_ENTITY             = i++, //X

    j = 0,

    SPECIAL_NONE              = j++,
    SPECIAL_SCRIPT            = j++,
    SPECIAL_STYLE             = j++;

function whitespace(c){
	return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
}

function characterState(char, SUCCESS){
	return function(c){
		if(c === char) this._state = SUCCESS;
	};
}

function ifElseState(upper, SUCCESS, FAILURE){
	var lower = upper.toLowerCase();

	if(upper === lower){
		return function(c){
			if(c === lower){
				this._state = SUCCESS;
			} else {
				this._state = FAILURE;
				this._index--;
			}
		};
	} else {
		return function(c){
			if(c === lower || c === upper){
				this._state = SUCCESS;
			} else {
				this._state = FAILURE;
				this._index--;
			}
		};
	}
}

function consumeSpecialNameChar(upper, NEXT_STATE){
	var lower = upper.toLowerCase();

	return function(c){
		if(c === lower || c === upper){
			this._state = NEXT_STATE;
		} else {
			this._state = IN_TAG_NAME;
			this._index--; //consume the token again
		}
	};
}

function Tokenizer(options, cbs){
	this._state = TEXT;
	this._buffer = "";
	this._sectionStart = 0;
	this._index = 0;
	this._baseState = TEXT;
	this._special = SPECIAL_NONE;
	this._cbs = cbs;
	this._running = true;
	this._ended = false;
	this._xmlMode = !!(options && options.xmlMode);
	this._decodeEntities = !!(options && options.decodeEntities);
}

Tokenizer.prototype._stateText = function(c){
	if(c === "<"){
		if(this._index > this._sectionStart){
			this._cbs.ontext(this._getSection());
		}
		this._state = BEFORE_TAG_NAME;
		this._sectionStart = this._index;
	} else if(this._decodeEntities && this._special === SPECIAL_NONE && c === "&"){
		if(this._index > this._sectionStart){
			this._cbs.ontext(this._getSection());
		}
		this._baseState = TEXT;
		this._state = BEFORE_ENTITY;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateBeforeTagName = function(c){
	if(c === "/"){
		this._state = BEFORE_CLOSING_TAG_NAME;
	} else if(c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {
		this._state = TEXT;
	} else if(c === "!"){
		this._state = BEFORE_DECLARATION;
		this._sectionStart = this._index + 1;
	} else if(c === "?"){
		this._state = IN_PROCESSING_INSTRUCTION;
		this._sectionStart = this._index + 1;
	} else if(c === "<"){
		this._cbs.ontext(this._getSection());
		this._sectionStart = this._index;
	} else {
		this._state = (!this._xmlMode && (c === "s" || c === "S")) ?
						BEFORE_SPECIAL : IN_TAG_NAME;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateInTagName = function(c){
	if(c === "/" || c === ">" || whitespace(c)){
		this._emitToken("onopentagname");
		this._state = BEFORE_ATTRIBUTE_NAME;
		this._index--;
	}
};

Tokenizer.prototype._stateBeforeCloseingTagName = function(c){
	if(whitespace(c));
	else if(c === ">"){
		this._state = TEXT;
	} else if(this._special !== SPECIAL_NONE){
		if(c === "s" || c === "S"){
			this._state = BEFORE_SPECIAL_END;
		} else {
			this._state = TEXT;
			this._index--;
		}
	} else {
		this._state = IN_CLOSING_TAG_NAME;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateInCloseingTagName = function(c){
	if(c === ">" || whitespace(c)){
		this._emitToken("onclosetag");
		this._state = AFTER_CLOSING_TAG_NAME;
		this._index--;
	}
};

Tokenizer.prototype._stateAfterCloseingTagName = function(c){
	//skip everything until ">"
	if(c === ">"){
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	}
};

Tokenizer.prototype._stateBeforeAttributeName = function(c){
	if(c === ">"){
		this._cbs.onopentagend();
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	} else if(c === "/"){
		this._state = IN_SELF_CLOSING_TAG;
	} else if(!whitespace(c)){
		this._state = IN_ATTRIBUTE_NAME;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateInSelfClosingTag = function(c){
	if(c === ">"){
		this._cbs.onselfclosingtag();
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	} else if(!whitespace(c)){
		this._state = BEFORE_ATTRIBUTE_NAME;
		this._index--;
	}
};

Tokenizer.prototype._stateInAttributeName = function(c){
	if(c === "=" || c === "/" || c === ">" || whitespace(c)){
		this._cbs.onattribname(this._getSection());
		this._sectionStart = -1;
		this._state = AFTER_ATTRIBUTE_NAME;
		this._index--;
	}
};

Tokenizer.prototype._stateAfterAttributeName = function(c){
	if(c === "="){
		this._state = BEFORE_ATTRIBUTE_VALUE;
	} else if(c === "/" || c === ">"){
		this._cbs.onattribend();
		this._state = BEFORE_ATTRIBUTE_NAME;
		this._index--;
	} else if(!whitespace(c)){
		this._cbs.onattribend();
		this._state = IN_ATTRIBUTE_NAME;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateBeforeAttributeValue = function(c){
	if(c === "\""){
		this._state = IN_ATTRIBUTE_VALUE_DQ;
		this._sectionStart = this._index + 1;
	} else if(c === "'"){
		this._state = IN_ATTRIBUTE_VALUE_SQ;
		this._sectionStart = this._index + 1;
	} else if(!whitespace(c)){
		this._state = IN_ATTRIBUTE_VALUE_NQ;
		this._sectionStart = this._index;
		this._index--; //reconsume token
	}
};

Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){
	if(c === "\""){
		this._emitToken("onattribdata");
		this._cbs.onattribend();
		this._state = BEFORE_ATTRIBUTE_NAME;
	} else if(this._decodeEntities && c === "&"){
		this._emitToken("onattribdata");
		this._baseState = this._state;
		this._state = BEFORE_ENTITY;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){
	if(c === "'"){
		this._emitToken("onattribdata");
		this._cbs.onattribend();
		this._state = BEFORE_ATTRIBUTE_NAME;
	} else if(this._decodeEntities && c === "&"){
		this._emitToken("onattribdata");
		this._baseState = this._state;
		this._state = BEFORE_ENTITY;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c){
	if(whitespace(c) || c === ">"){
		this._emitToken("onattribdata");
		this._cbs.onattribend();
		this._state = BEFORE_ATTRIBUTE_NAME;
		this._index--;
	} else if(this._decodeEntities && c === "&"){
		this._emitToken("onattribdata");
		this._baseState = this._state;
		this._state = BEFORE_ENTITY;
		this._sectionStart = this._index;
	}
};

Tokenizer.prototype._stateBeforeDeclaration = function(c){
	this._state = c === "[" ? BEFORE_CDATA_1 :
					c === "-" ? BEFORE_COMMENT :
						IN_DECLARATION;
};

Tokenizer.prototype._stateInDeclaration = function(c){
	if(c === ">"){
		this._cbs.ondeclaration(this._getSection());
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	}
};

Tokenizer.prototype._stateInProcessingInstruction = function(c){
	if(c === ">"){
		this._cbs.onprocessinginstruction(this._getSection());
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	}
};

Tokenizer.prototype._stateBeforeComment = function(c){
	if(c === "-"){
		this._state = IN_COMMENT;
		this._sectionStart = this._index + 1;
	} else {
		this._state = IN_DECLARATION;
	}
};

Tokenizer.prototype._stateInComment = function(c){
	if(c === "-") this._state = AFTER_COMMENT_1;
};

Tokenizer.prototype._stateAfterComment1 = function(c){
	if(c === "-"){
		this._state = AFTER_COMMENT_2;
	} else {
		this._state = IN_COMMENT;
	}
};

Tokenizer.prototype._stateAfterComment2 = function(c){
	if(c === ">"){
		//remove 2 trailing chars
		this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	} else if(c !== "-"){
		this._state = IN_COMMENT;
	}
	// else: stay in AFTER_COMMENT_2 (`--->`)
};

Tokenizer.prototype._stateBeforeCdata1 = ifElseState("C", BEFORE_CDATA_2, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata2 = ifElseState("D", BEFORE_CDATA_3, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata3 = ifElseState("A", BEFORE_CDATA_4, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata4 = ifElseState("T", BEFORE_CDATA_5, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata5 = ifElseState("A", BEFORE_CDATA_6, IN_DECLARATION);

Tokenizer.prototype._stateBeforeCdata6 = function(c){
	if(c === "["){
		this._state = IN_CDATA;
		this._sectionStart = this._index + 1;
	} else {
		this._state = IN_DECLARATION;
		this._index--;
	}
};

Tokenizer.prototype._stateInCdata = function(c){
	if(c === "]") this._state = AFTER_CDATA_1;
};

Tokenizer.prototype._stateAfterCdata1 = characterState("]", AFTER_CDATA_2);

Tokenizer.prototype._stateAfterCdata2 = function(c){
	if(c === ">"){
		//remove 2 trailing chars
		this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));
		this._state = TEXT;
		this._sectionStart = this._index + 1;
	} else if (c !== "]") {
		this._state = IN_CDATA;
	}
	//else: stay in AFTER_CDATA_2 (`]]]>`)
};

Tokenizer.prototype._stateBeforeSpecial = function(c){
	if(c === "c" || c === "C"){
		this._state = BEFORE_SCRIPT_1;
	} else if(c === "t" || c === "T"){
		this._state = BEFORE_STYLE_1;
	} else {
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	}
};

Tokenizer.prototype._stateBeforeSpecialEnd = function(c){
	if(this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")){
		this._state = AFTER_SCRIPT_1;
	} else if(this._special === SPECIAL_STYLE && (c === "t" || c === "T")){
		this._state = AFTER_STYLE_1;
	}
	else this._state = TEXT;
};

Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar("R", BEFORE_SCRIPT_2);
Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar("I", BEFORE_SCRIPT_3);
Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar("P", BEFORE_SCRIPT_4);
Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar("T", BEFORE_SCRIPT_5);

Tokenizer.prototype._stateBeforeScript5 = function(c){
	if(c === "/" || c === ">" || whitespace(c)){
		this._special = SPECIAL_SCRIPT;
	}
	this._state = IN_TAG_NAME;
	this._index--; //consume the token again
};

Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);

Tokenizer.prototype._stateAfterScript5 = function(c){
	if(c === ">" || whitespace(c)){
		this._special = SPECIAL_NONE;
		this._state = IN_CLOSING_TAG_NAME;
		this._sectionStart = this._index - 6;
		this._index--; //reconsume the token
	}
	else this._state = TEXT;
};

Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar("Y", BEFORE_STYLE_2);
Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar("L", BEFORE_STYLE_3);
Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar("E", BEFORE_STYLE_4);

Tokenizer.prototype._stateBeforeStyle4 = function(c){
	if(c === "/" || c === ">" || whitespace(c)){
		this._special = SPECIAL_STYLE;
	}
	this._state = IN_TAG_NAME;
	this._index--; //consume the token again
};

Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);

Tokenizer.prototype._stateAfterStyle4 = function(c){
	if(c === ">" || whitespace(c)){
		this._special = SPECIAL_NONE;
		this._state = IN_CLOSING_TAG_NAME;
		this._sectionStart = this._index - 5;
		this._index--; //reconsume the token
	}
	else this._state = TEXT;
};

Tokenizer.prototype._stateBeforeEntity = ifElseState("#", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);
Tokenizer.prototype._stateBeforeNumericEntity = ifElseState("X", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);

//for entities terminated with a semicolon
Tokenizer.prototype._parseNamedEntityStrict = function(){
	//offset = 1
	if(this._sectionStart + 1 < this._index){
		var entity = this._buffer.substring(this._sectionStart + 1, this._index),
		    map = this._xmlMode ? xmlMap : entityMap;

		if(map.hasOwnProperty(entity)){
			this._emitPartial(map[entity]);
			this._sectionStart = this._index + 1;
		}
	}
};


//parses legacy entities (without trailing semicolon)
Tokenizer.prototype._parseLegacyEntity = function(){
	var start = this._sectionStart + 1,
	    limit = this._index - start;

	if(limit > 6) limit = 6; //the max length of legacy entities is 6

	while(limit >= 2){ //the min length of legacy entities is 2
		var entity = this._buffer.substr(start, limit);

		if(legacyMap.hasOwnProperty(entity)){
			this._emitPartial(legacyMap[entity]);
			this._sectionStart += limit + 1;
			return;
		} else {
			limit--;
		}
	}
};

Tokenizer.prototype._stateInNamedEntity = function(c){
	if(c === ";"){
		this._parseNamedEntityStrict();
		if(this._sectionStart + 1 < this._index && !this._xmlMode){
			this._parseLegacyEntity();
		}
		this._state = this._baseState;
	} else if((c < "a" || c > "z") && (c < "A" || c > "Z") && (c < "0" || c > "9")){
		if(this._xmlMode);
		else if(this._sectionStart + 1 === this._index);
		else if(this._baseState !== TEXT){
			if(c !== "="){
				this._parseNamedEntityStrict();
			}
		} else {
			this._parseLegacyEntity();
		}

		this._state = this._baseState;
		this._index--;
	}
};

Tokenizer.prototype._decodeNumericEntity = function(offset, base){
	var sectionStart = this._sectionStart + offset;

	if(sectionStart !== this._index){
		//parse entity
		var entity = this._buffer.substring(sectionStart, this._index);
		var parsed = parseInt(entity, base);

		this._emitPartial(decodeCodePoint(parsed));
		this._sectionStart = this._index;
	} else {
		this._sectionStart--;
	}

	this._state = this._baseState;
};

Tokenizer.prototype._stateInNumericEntity = function(c){
	if(c === ";"){
		this._decodeNumericEntity(2, 10);
		this._sectionStart++;
	} else if(c < "0" || c > "9"){
		if(!this._xmlMode){
			this._decodeNumericEntity(2, 10);
		} else {
			this._state = this._baseState;
		}
		this._index--;
	}
};

Tokenizer.prototype._stateInHexEntity = function(c){
	if(c === ";"){
		this._decodeNumericEntity(3, 16);
		this._sectionStart++;
	} else if((c < "a" || c > "f") && (c < "A" || c > "F") && (c < "0" || c > "9")){
		if(!this._xmlMode){
			this._decodeNumericEntity(3, 16);
		} else {
			this._state = this._baseState;
		}
		this._index--;
	}
};

Tokenizer.prototype._cleanup = function () {
	if(this._sectionStart < 0){
		this._buffer = "";
		this._index = 0;
	} else if(this._running){
		if(this._state === TEXT){
			if(this._sectionStart !== this._index){
				this._cbs.ontext(this._buffer.substr(this._sectionStart));
			}
			this._buffer = "";
			this._index = 0;
		} else if(this._sectionStart === this._index){
			//the section just started
			this._buffer = "";
			this._index = 0;
		} else {
			//remove everything unnecessary
			this._buffer = this._buffer.substr(this._sectionStart);
			this._index -= this._sectionStart;
		}

		this._sectionStart = 0;
	}
};

//TODO make events conditional
Tokenizer.prototype.write = function(chunk){
	if(this._ended) this._cbs.onerror(Error(".write() after done!"));

	this._buffer += chunk;
	this._parse();
};

Tokenizer.prototype._parse = function(){
	while(this._index < this._buffer.length && this._running){
		var c = this._buffer.charAt(this._index);
		if(this._state === TEXT) {
			this._stateText(c);
		} else if(this._state === BEFORE_TAG_NAME){
			this._stateBeforeTagName(c);
		} else if(this._state === IN_TAG_NAME) {
			this._stateInTagName(c);
		} else if(this._state === BEFORE_CLOSING_TAG_NAME){
			this._stateBeforeCloseingTagName(c);
		} else if(this._state === IN_CLOSING_TAG_NAME){
			this._stateInCloseingTagName(c);
		} else if(this._state === AFTER_CLOSING_TAG_NAME){
			this._stateAfterCloseingTagName(c);
		} else if(this._state === IN_SELF_CLOSING_TAG){
			this._stateInSelfClosingTag(c);
		}

		/*
		*	attributes
		*/
		else if(this._state === BEFORE_ATTRIBUTE_NAME){
			this._stateBeforeAttributeName(c);
		} else if(this._state === IN_ATTRIBUTE_NAME){
			this._stateInAttributeName(c);
		} else if(this._state === AFTER_ATTRIBUTE_NAME){
			this._stateAfterAttributeName(c);
		} else if(this._state === BEFORE_ATTRIBUTE_VALUE){
			this._stateBeforeAttributeValue(c);
		} else if(this._state === IN_ATTRIBUTE_VALUE_DQ){
			this._stateInAttributeValueDoubleQuotes(c);
		} else if(this._state === IN_ATTRIBUTE_VALUE_SQ){
			this._stateInAttributeValueSingleQuotes(c);
		} else if(this._state === IN_ATTRIBUTE_VALUE_NQ){
			this._stateInAttributeValueNoQuotes(c);
		}

		/*
		*	declarations
		*/
		else if(this._state === BEFORE_DECLARATION){
			this._stateBeforeDeclaration(c);
		} else if(this._state === IN_DECLARATION){
			this._stateInDeclaration(c);
		}

		/*
		*	processing instructions
		*/
		else if(this._state === IN_PROCESSING_INSTRUCTION){
			this._stateInProcessingInstruction(c);
		}

		/*
		*	comments
		*/
		else if(this._state === BEFORE_COMMENT){
			this._stateBeforeComment(c);
		} else if(this._state === IN_COMMENT){
			this._stateInComment(c);
		} else if(this._state === AFTER_COMMENT_1){
			this._stateAfterComment1(c);
		} else if(this._state === AFTER_COMMENT_2){
			this._stateAfterComment2(c);
		}

		/*
		*	cdata
		*/
		else if(this._state === BEFORE_CDATA_1){
			this._stateBeforeCdata1(c);
		} else if(this._state === BEFORE_CDATA_2){
			this._stateBeforeCdata2(c);
		} else if(this._state === BEFORE_CDATA_3){
			this._stateBeforeCdata3(c);
		} else if(this._state === BEFORE_CDATA_4){
			this._stateBeforeCdata4(c);
		} else if(this._state === BEFORE_CDATA_5){
			this._stateBeforeCdata5(c);
		} else if(this._state === BEFORE_CDATA_6){
			this._stateBeforeCdata6(c);
		} else if(this._state === IN_CDATA){
			this._stateInCdata(c);
		} else if(this._state === AFTER_CDATA_1){
			this._stateAfterCdata1(c);
		} else if(this._state === AFTER_CDATA_2){
			this._stateAfterCdata2(c);
		}

		/*
		* special tags
		*/
		else if(this._state === BEFORE_SPECIAL){
			this._stateBeforeSpecial(c);
		} else if(this._state === BEFORE_SPECIAL_END){
			this._stateBeforeSpecialEnd(c);
		}

		/*
		* script
		*/
		else if(this._state === BEFORE_SCRIPT_1){
			this._stateBeforeScript1(c);
		} else if(this._state === BEFORE_SCRIPT_2){
			this._stateBeforeScript2(c);
		} else if(this._state === BEFORE_SCRIPT_3){
			this._stateBeforeScript3(c);
		} else if(this._state === BEFORE_SCRIPT_4){
			this._stateBeforeScript4(c);
		} else if(this._state === BEFORE_SCRIPT_5){
			this._stateBeforeScript5(c);
		}

		else if(this._state === AFTER_SCRIPT_1){
			this._stateAfterScript1(c);
		} else if(this._state === AFTER_SCRIPT_2){
			this._stateAfterScript2(c);
		} else if(this._state === AFTER_SCRIPT_3){
			this._stateAfterScript3(c);
		} else if(this._state === AFTER_SCRIPT_4){
			this._stateAfterScript4(c);
		} else if(this._state === AFTER_SCRIPT_5){
			this._stateAfterScript5(c);
		}

		/*
		* style
		*/
		else if(this._state === BEFORE_STYLE_1){
			this._stateBeforeStyle1(c);
		} else if(this._state === BEFORE_STYLE_2){
			this._stateBeforeStyle2(c);
		} else if(this._state === BEFORE_STYLE_3){
			this._stateBeforeStyle3(c);
		} else if(this._state === BEFORE_STYLE_4){
			this._stateBeforeStyle4(c);
		}

		else if(this._state === AFTER_STYLE_1){
			this._stateAfterStyle1(c);
		} else if(this._state === AFTER_STYLE_2){
			this._stateAfterStyle2(c);
		} else if(this._state === AFTER_STYLE_3){
			this._stateAfterStyle3(c);
		} else if(this._state === AFTER_STYLE_4){
			this._stateAfterStyle4(c);
		}

		/*
		* entities
		*/
		else if(this._state === BEFORE_ENTITY){
			this._stateBeforeEntity(c);
		} else if(this._state === BEFORE_NUMERIC_ENTITY){
			this._stateBeforeNumericEntity(c);
		} else if(this._state === IN_NAMED_ENTITY){
			this._stateInNamedEntity(c);
		} else if(this._state === IN_NUMERIC_ENTITY){
			this._stateInNumericEntity(c);
		} else if(this._state === IN_HEX_ENTITY){
			this._stateInHexEntity(c);
		}

		else {
			this._cbs.onerror(Error("unknown _state"), this._state);
		}

		this._index++;
	}

	this._cleanup();
};

Tokenizer.prototype.pause = function(){
	this._running = false;
};
Tokenizer.prototype.resume = function(){
	this._running = true;

	if(this._index < this._buffer.length){
		this._parse();
	}
	if(this._ended){
		this._finish();
	}
};

Tokenizer.prototype.end = function(chunk){
	if(this._ended) this._cbs.onerror(Error(".end() after done!"));
	if(chunk) this.write(chunk);

	this._ended = true;

	if(this._running) this._finish();
};

Tokenizer.prototype._finish = function(){
	//if there is remaining data, emit it in a reasonable way
	if(this._sectionStart < this._index){
		this._handleTrailingData();
	}

	this._cbs.onend();
};

Tokenizer.prototype._handleTrailingData = function(){
	var data = this._buffer.substr(this._sectionStart);

	if(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){
		this._cbs.oncdata(data);
	} else if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){
		this._cbs.oncomment(data);
	} else if(this._state === IN_NAMED_ENTITY && !this._xmlMode){
		this._parseLegacyEntity();
		if(this._sectionStart < this._index){
			this._state = this._baseState;
			this._handleTrailingData();
		}
	} else if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){
		this._decodeNumericEntity(2, 10);
		if(this._sectionStart < this._index){
			this._state = this._baseState;
			this._handleTrailingData();
		}
	} else if(this._state === IN_HEX_ENTITY && !this._xmlMode){
		this._decodeNumericEntity(3, 16);
		if(this._sectionStart < this._index){
			this._state = this._baseState;
			this._handleTrailingData();
		}
	} else if(
		this._state !== IN_TAG_NAME &&
		this._state !== BEFORE_ATTRIBUTE_NAME &&
		this._state !== BEFORE_ATTRIBUTE_VALUE &&
		this._state !== AFTER_ATTRIBUTE_NAME &&
		this._state !== IN_ATTRIBUTE_NAME &&
		this._state !== IN_ATTRIBUTE_VALUE_SQ &&
		this._state !== IN_ATTRIBUTE_VALUE_DQ &&
		this._state !== IN_ATTRIBUTE_VALUE_NQ &&
		this._state !== IN_CLOSING_TAG_NAME
	){
		this._cbs.ontext(data);
	}
	//else, ignore remaining data
	//TODO add a way to remove current tag
};

Tokenizer.prototype.reset = function(){
	Tokenizer.call(this, {xmlMode: this._xmlMode, decodeEntities: this._decodeEntities}, this._cbs);
};

Tokenizer.prototype._getSection = function(){
	return this._buffer.substring(this._sectionStart, this._index);
};

Tokenizer.prototype._emitToken = function(name){
	this._cbs[name](this._getSection());
	this._sectionStart = -1;
};

Tokenizer.prototype._emitPartial = function(value){
	if(this._baseState !== TEXT){
		this._cbs.onattribdata(value); //TODO implement the new event
	} else {
		this._cbs.ontext(value);
	}
};

},{"entities/lib/decode_codepoint.js":85,"entities/maps/entities.json":87,"entities/maps/legacy.json":88,"entities/maps/xml.json":89}],72:[function(require,module,exports){
module.exports = Stream;

var Parser = require("./Parser.js"),
    WritableStream = require("stream").Writable || require("readable-stream").Writable;

function Stream(cbs, options){
	var parser = this._parser = new Parser(cbs, options);

	WritableStream.call(this, {decodeStrings: false});

	this.once("finish", function(){
		parser.end();
	});
}

require("util").inherits(Stream, WritableStream);

WritableStream.prototype._write = function(chunk, encoding, cb){
	this._parser.write(chunk);
	cb();
};
},{"./Parser.js":68,"readable-stream":99,"stream":132,"util":136}],73:[function(require,module,exports){
var Parser = require("./Parser.js"),
    DomHandler = require("domhandler");

function defineProp(name, value){
	delete module.exports[name];
	module.exports[name] = value;
	return value;
}

module.exports = {
	Parser: Parser,
	Tokenizer: require("./Tokenizer.js"),
	ElementType: require("domelementtype"),
	DomHandler: DomHandler,
	get FeedHandler(){
		return defineProp("FeedHandler", require("./FeedHandler.js"));
	},
	get Stream(){
		return defineProp("Stream", require("./Stream.js"));
	},
	get WritableStream(){
		return defineProp("WritableStream", require("./WritableStream.js"));
	},
	get ProxyHandler(){
		return defineProp("ProxyHandler", require("./ProxyHandler.js"));
	},
	get DomUtils(){
		return defineProp("DomUtils", require("domutils"));
	},
	get CollectingHandler(){
		return defineProp("CollectingHandler", require("./CollectingHandler.js"));
	},
	// For legacy support
	DefaultHandler: DomHandler,
	get RssHandler(){
		return defineProp("RssHandler", this.FeedHandler);
	},
	//helper methods
	parseDOM: function(data, options) {
		var handler = new DomHandler(options);
		new Parser(handler, options).end(data);
		return handler.dom;
	},
	parseFeed: function(feed, options){
		var handler = new module.exports.FeedHandler(options);
		new Parser(handler, options).end(feed);
		return handler.dom;
	},
	createDomStream: function(cb, options, elementCb){
		var handler = new DomHandler(cb, options, elementCb);
		return new Parser(handler, options);
	},
	// List of all events that the parser emits
	EVENTS: { /* Format: eventname: number of arguments */
		attribute: 2,
		cdatastart: 0,
		cdataend: 0,
		text: 1,
		processinginstruction: 2,
		comment: 1,
		commentend: 0,
		closetag: 1,
		opentag: 2,
		opentagname: 1,
		error: 1,
		end: 0
	}
};

},{"./CollectingHandler.js":66,"./FeedHandler.js":67,"./Parser.js":68,"./ProxyHandler.js":69,"./Stream.js":70,"./Tokenizer.js":71,"./WritableStream.js":72,"domelementtype":74,"domhandler":75,"domutils":78}],74:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"dup":55}],75:[function(require,module,exports){
var ElementType = require("domelementtype");

var re_whitespace = /\s+/g;
var NodePrototype = require("./lib/node");
var ElementPrototype = require("./lib/element");

function DomHandler(callback, options, elementCB){
	if(typeof callback === "object"){
		elementCB = options;
		options = callback;
		callback = null;
	} else if(typeof options === "function"){
		elementCB = options;
		options = defaultOpts;
	}
	this._callback = callback;
	this._options = options || defaultOpts;
	this._elementCB = elementCB;
	this.dom = [];
	this._done = false;
	this._tagStack = [];
}

//default options
var defaultOpts = {
	normalizeWhitespace: false //Replace all whitespace with single spaces
};

//Resets the handler back to starting state
DomHandler.prototype.onreset = function(){
	DomHandler.call(this, this._callback, this._options, this._elementCB);
};

//Signals the handler that parsing is done
DomHandler.prototype.onend = function(){
	if(this._done) return;
	this._done = true;
	this._handleCallback(null);
};

DomHandler.prototype._handleCallback =
DomHandler.prototype.onerror = function(error){
	if(typeof this._callback === "function"){
		this._callback(error, this.dom);
	} else {
		if(error) throw error;
	}
};

DomHandler.prototype.onclosetag = function(){
	//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));
	var elem = this._tagStack.pop();
	if(this._elementCB) this._elementCB(elem);
};

DomHandler.prototype._addDomElement = function(element){
	var parent = this._tagStack[this._tagStack.length - 1];
	var siblings = parent ? parent.children : this.dom;
	var previousSibling = siblings[siblings.length - 1];

	element.next = null;

	if (this._options.withDomLvl1) {
		element.__proto__ = element.type === "tag" ? ElementPrototype : NodePrototype;
	}

	if(previousSibling){
		element.prev = previousSibling;
		previousSibling.next = element;
	} else {
		element.prev = null;
	}

	siblings.push(element);
	element.parent = parent || null;
};

DomHandler.prototype.onopentag = function(name, attribs){
	var element = {
		type: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,
		name: name,
		attribs: attribs,
		children: []
	};

	this._addDomElement(element);

	this._tagStack.push(element);
};

DomHandler.prototype.ontext = function(data){
	//the ignoreWhitespace is officially dropped, but for now,
	//it's an alias for normalizeWhitespace
	var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;

	var lastTag;

	if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){
		if(normalize){
			lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
		} else {
			lastTag.data += data;
		}
	} else {
		if(
			this._tagStack.length &&
			(lastTag = this._tagStack[this._tagStack.length - 1]) &&
			(lastTag = lastTag.children[lastTag.children.length - 1]) &&
			lastTag.type === ElementType.Text
		){
			if(normalize){
				lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
			} else {
				lastTag.data += data;
			}
		} else {
			if(normalize){
				data = data.replace(re_whitespace, " ");
			}

			this._addDomElement({
				data: data,
				type: ElementType.Text
			});
		}
	}
};

DomHandler.prototype.oncomment = function(data){
	var lastTag = this._tagStack[this._tagStack.length - 1];

	if(lastTag && lastTag.type === ElementType.Comment){
		lastTag.data += data;
		return;
	}

	var element = {
		data: data,
		type: ElementType.Comment
	};

	this._addDomElement(element);
	this._tagStack.push(element);
};

DomHandler.prototype.oncdatastart = function(){
	var element = {
		children: [{
			data: "",
			type: ElementType.Text
		}],
		type: ElementType.CDATA
	};

	this._addDomElement(element);
	this._tagStack.push(element);
};

DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
	this._tagStack.pop();
};

DomHandler.prototype.onprocessinginstruction = function(name, data){
	this._addDomElement({
		name: name,
		data: data,
		type: ElementType.Directive
	});
};

module.exports = DomHandler;

},{"./lib/element":76,"./lib/node":77,"domelementtype":74}],76:[function(require,module,exports){
// DOM-Level-1-compliant structure
var NodePrototype = require('./node');
var ElementPrototype = module.exports = Object.create(NodePrototype);

var domLvl1 = {
	tagName: "name"
};

Object.keys(domLvl1).forEach(function(key) {
	var shorthand = domLvl1[key];
	Object.defineProperty(ElementPrototype, key, {
		get: function() {
			return this[shorthand] || null;
		},
		set: function(val) {
			this[shorthand] = val;
			return val;
		}
	});
});

},{"./node":77}],77:[function(require,module,exports){
// This object will be used as the prototype for Nodes when creating a
// DOM-Level-1-compliant structure.
var NodePrototype = module.exports = {
	get firstChild() {
		var children = this.children;
		return children && children[0] || null;
	},
	get lastChild() {
		var children = this.children;
		return children && children[children.length - 1] || null;
	},
	get nodeType() {
		return nodeTypes[this.type] || nodeTypes.element;
	}
};

var domLvl1 = {
	tagName: "name",
	childNodes: "children",
	parentNode: "parent",
	previousSibling: "prev",
	nextSibling: "next",
	nodeValue: "data"
};

var nodeTypes = {
	element: 1,
	text: 3,
	cdata: 4,
	comment: 8
};

Object.keys(domLvl1).forEach(function(key) {
	var shorthand = domLvl1[key];
	Object.defineProperty(NodePrototype, key, {
		get: function() {
			return this[shorthand] || null;
		},
		set: function(val) {
			this[shorthand] = val;
			return val;
		}
	});
});

},{}],78:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"./lib/helpers":79,"./lib/legacy":80,"./lib/manipulation":81,"./lib/querying":82,"./lib/stringify":83,"./lib/traversal":84,"dup":48}],79:[function(require,module,exports){
// removeSubsets
// Given an array of nodes, remove any member that is contained by another.
exports.removeSubsets = function(nodes) {
	var idx = nodes.length, node, ancestor, replace;

	// Check if each node (or one of its ancestors) is already contained in the
	// array.
	while (--idx > -1) {
		node = ancestor = nodes[idx];

		// Temporarily remove the node under consideration
		nodes[idx] = null;
		replace = true;

		while (ancestor) {
			if (nodes.indexOf(ancestor) > -1) {
				replace = false;
				nodes.splice(idx, 1);
				break;
			}
			ancestor = ancestor.parent;
		}

		// If the node has been found to be unique, re-insert it.
		if (replace) {
			nodes[idx] = node;
		}
	}

	return nodes;
};

// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
var POSITION = {
	DISCONNECTED: 1,
	PRECEDING: 2,
	FOLLOWING: 4,
	CONTAINS: 8,
	CONTAINED_BY: 16
};

// Compare the position of one node against another node in any other document.
// The return value is a bitmask with the following values:
//
// document order:
// > There is an ordering, document order, defined on all the nodes in the
// > document corresponding to the order in which the first character of the
// > XML representation of each node occurs in the XML representation of the
// > document after expansion of general entities. Thus, the document element
// > node will be the first node. Element nodes occur before their children.
// > Thus, document order orders element nodes in order of the occurrence of
// > their start-tag in the XML (after expansion of entities). The attribute
// > nodes of an element occur after the element and before its children. The
// > relative order of attribute nodes is implementation-dependent./
// Source:
// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
//
// @argument {Node} nodaA The first node to use in the comparison
// @argument {Node} nodeB The second node to use in the comparison
//
// @return {Number} A bitmask describing the input nodes' relative position.
//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
//         a description of these values.
var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
	var aParents = [];
	var bParents = [];
	var current, sharedParent, siblings, aSibling, bSibling, idx;

	if (nodeA === nodeB) {
		return 0;
	}

	current = nodeA;
	while (current) {
		aParents.unshift(current);
		current = current.parent;
	}
	current = nodeB;
	while (current) {
		bParents.unshift(current);
		current = current.parent;
	}

	idx = 0;
	while (aParents[idx] === bParents[idx]) {
		idx++;
	}

	if (idx === 0) {
		return POSITION.DISCONNECTED;
	}

	sharedParent = aParents[idx - 1];
	siblings = sharedParent.children;
	aSibling = aParents[idx];
	bSibling = bParents[idx];

	if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
		if (sharedParent === nodeB) {
			return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
		}
		return POSITION.FOLLOWING;
	} else {
		if (sharedParent === nodeA) {
			return POSITION.PRECEDING | POSITION.CONTAINS;
		}
		return POSITION.PRECEDING;
	}
};

// Sort an array of nodes based on their relative position in the document and
// remove any duplicate nodes. If the array contains nodes that do not belong
// to the same document, sort order is unspecified.
//
// @argument {Array} nodes Array of DOM nodes
//
// @returns {Array} collection of unique nodes, sorted in document order
exports.uniqueSort = function(nodes) {
	var idx = nodes.length, node, position;

	nodes = nodes.slice();

	while (--idx > -1) {
		node = nodes[idx];
		position = nodes.indexOf(node);
		if (position > -1 && position < idx) {
			nodes.splice(idx, 1);
		}
	}
	nodes.sort(function(a, b) {
		var relative = comparePos(a, b);
		if (relative & POSITION.PRECEDING) {
			return -1;
		} else if (relative & POSITION.FOLLOWING) {
			return 1;
		}
		return 0;
	});

	return nodes;
};

},{}],80:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"domelementtype":74,"dup":50}],81:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"dup":51}],82:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"domelementtype":74,"dup":52}],83:[function(require,module,exports){
var ElementType = require("domelementtype"),
    getOuterHTML = require("dom-serializer"),
    isTag = ElementType.isTag;

module.exports = {
	getInnerHTML: getInnerHTML,
	getOuterHTML: getOuterHTML,
	getText: getText
};

function getInnerHTML(elem, opts){
	return elem.children ? elem.children.map(function(elem){
		return getOuterHTML(elem, opts);
	}).join("") : "";
}

function getText(elem){
	if(Array.isArray(elem)) return elem.map(getText).join("");
	if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
	if(elem.type === ElementType.Text) return elem.data;
	return "";
}

},{"dom-serializer":56,"domelementtype":74}],84:[function(require,module,exports){
var getChildren = exports.getChildren = function(elem){
	return elem.children;
};

var getParent = exports.getParent = function(elem){
	return elem.parent;
};

exports.getSiblings = function(elem){
	var parent = getParent(elem);
	return parent ? getChildren(parent) : [elem];
};

exports.getAttributeValue = function(elem, name){
	return elem.attribs && elem.attribs[name];
};

exports.hasAttrib = function(elem, name){
	return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
};

exports.getName = function(elem){
	return elem.name;
};

},{}],85:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"../maps/decode.json":86,"dup":60}],86:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"dup":62}],87:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],88:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"dup":64}],89:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"dup":65}],90:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}
/*</replacement>*/


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method) {
  if (!Duplex.prototype[method])
    Duplex.prototype[method] = Writable.prototype[method];
});

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(this.end.bind(this));
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

}).call(this,require('_process'))
},{"./_stream_readable":92,"./_stream_writable":94,"_process":115,"core-util-is":95,"inherits":96}],91:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./_stream_transform":93,"core-util-is":95,"inherits":96}],92:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;


/*<replacement>*/
var debug = require('util');
if (debug && debug.debuglog) {
  debug = debug.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/


util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  var Duplex = require('./_stream_duplex');

  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex)
    this.objectMode = this.objectMode || !!options.readableObjectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  var Duplex = require('./_stream_duplex');

  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (util.isString(chunk) && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (util.isNullOrUndefined(chunk)) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      if (!addToFront)
        state.reading = false;

      // if we want the data now, just emit it.
      if (state.flowing && state.length === 0 && !state.sync) {
        stream.emit('data', chunk);
        stream.read(0);
      } else {
        // update the buffer info.
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);

        if (state.needReadable)
          emitReadable(stream);
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || util.isNull(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  debug('read', n);
  var state = this._readableState;
  var nOrig = n;

  if (!util.isNumber(n) || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended)
      endReadable(this);
    else
      emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  }

  if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read pushed data synchronously, then `reading` will be false,
  // and we need to re-evaluate how much data we can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (util.isNull(ret)) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we tried to read() past the EOF, then emit end on the next tick.
  if (nOrig !== n && state.ended && state.length === 0)
    endReadable(this);

  if (!util.isNull(ret))
    this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!util.isBuffer(chunk) &&
      !util.isString(chunk) &&
      !util.isNullOrUndefined(chunk) &&
      !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync)
      process.nextTick(function() {
        emitReadable_(stream);
      });
    else
      emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain &&
        (!dest._writableState || dest._writableState.needDrain))
      ondrain();
  }

  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    if (false === ret) {
      debug('false write response, pause',
            src._readableState.awaitDrain);
      src._readableState.awaitDrain++;
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain)
      state.awaitDrain--;
    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  // If listening to data, and it has not explicitly been paused,
  // then call resume to start the flow of data on the next tick.
  if (ev === 'data' && false !== this._readableState.flowing) {
    this.resume();
  }

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        var self = this;
        process.nextTick(function() {
          debug('readable nexttick read 0');
          self.read(0);
        });
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    if (!state.reading) {
      debug('resume read 0');
      this.read(0);
    }
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(function() {
      resume_(stream, state);
    });
  }
}

function resume_(stream, state) {
  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading)
    stream.read(0);
}

Readable.prototype.pause = function() {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  if (state.flowing) {
    do {
      var chunk = stream.read();
    } while (null !== chunk && state.flowing);
  }
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    debug('wrapped data');
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require('_process'))
},{"./_stream_duplex":90,"_process":115,"buffer":107,"core-util-is":95,"events":111,"inherits":96,"isarray":97,"stream":132,"string_decoder/":98,"util":106}],93:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (!util.isNullOrUndefined(data))
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('prefinish', function() {
    if (util.isFunction(this._flush))
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./_stream_duplex":90,"core-util-is":95,"inherits":96}],94:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  var Duplex = require('./_stream_duplex');

  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex)
    this.objectMode = this.objectMode || !!options.writableObjectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!util.isBuffer(chunk) &&
      !util.isString(chunk) &&
      !util.isNullOrUndefined(chunk) &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (util.isFunction(encoding)) {
    cb = encoding;
    encoding = null;
  }

  if (util.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (!util.isFunction(cb))
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function() {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function() {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing &&
        !state.corked &&
        !state.finished &&
        !state.bufferProcessing &&
        state.buffer.length)
      clearBuffer(this, state);
  }
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      util.isString(chunk)) {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (util.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing || state.corked)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, false, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev)
    stream._writev(chunk, state.onwrite);
  else
    stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      state.pendingcb--;
      cb(er);
    });
  else {
    state.pendingcb--;
    cb(er);
  }

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished &&
        !state.corked &&
        !state.bufferProcessing &&
        state.buffer.length) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  if (stream._writev && state.buffer.length > 1) {
    // Fast case, write everything using _writev()
    var cbs = [];
    for (var c = 0; c < state.buffer.length; c++)
      cbs.push(state.buffer[c].callback);

    // count the one we are adding, as well.
    // TODO(isaacs) clean this up
    state.pendingcb++;
    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
      for (var i = 0; i < cbs.length; i++) {
        state.pendingcb--;
        cbs[i](err);
      }
    });

    // Clear buffer
    state.buffer = [];
  } else {
    // Slow case, write chunks one-by-one
    for (var c = 0; c < state.buffer.length; c++) {
      var entry = state.buffer[c];
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);

      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        c++;
        break;
      }
    }

    if (c < state.buffer.length)
      state.buffer = state.buffer.slice(c);
    else
      state.buffer.length = 0;
  }

  state.bufferProcessing = false;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));

};

Writable.prototype._writev = null;

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (util.isFunction(chunk)) {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (util.isFunction(encoding)) {
    cb = encoding;
    encoding = null;
  }

  if (!util.isNullOrUndefined(chunk))
    this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else
      prefinish(stream, state);
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require('_process'))
},{"./_stream_duplex":90,"_process":115,"buffer":107,"core-util-is":95,"inherits":96,"stream":132}],95:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../../../../../../../../../../../../../../../../../usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js")})
},{"../../../../../../../../../../../../../../../../../../usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js":113}],96:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],97:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],98:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":107}],99:[function(require,module,exports){
(function (process){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = require('stream');
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
if (!process.browser && process.env.READABLE_STREAM === 'disable') {
  module.exports = require('stream');
}

}).call(this,require('_process'))
},{"./lib/_stream_duplex.js":90,"./lib/_stream_passthrough.js":91,"./lib/_stream_readable.js":92,"./lib/_stream_transform.js":93,"./lib/_stream_writable.js":94,"_process":115,"stream":132}],100:[function(require,module,exports){
module.exports={
  "name": "cheerio",
  "version": "0.17.0",
  "description": "Tiny, fast, and elegant implementation of core jQuery designed specifically for the server",
  "author": {
    "name": "Matt Mueller",
    "email": "mattmuelle@gmail.com",
    "url": "mat.io"
  },
  "keywords": [
    "htmlparser",
    "jquery",
    "selector",
    "scraper",
    "parser",
    "html"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/MatthewMueller/cheerio.git"
  },
  "main": "./index.js",
  "engines": {
    "node": ">= 0.6"
  },
  "dependencies": {
    "CSSselect": "~0.4.0",
    "entities": "~1.1.1",
    "htmlparser2": "~3.7.2",
    "dom-serializer": "~0.0.0",
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "benchmark": "~1.0.0",
    "expect.js": "~0.3.1",
    "jsdom": "~0.8.9",
    "jshint": "~2.3.0",
    "mocha": "*",
    "xyz": "~0.3.0"
  },
  "scripts": {
    "test": "make test"
  },
  "gitHead": "3210b2287a9fd3b1ec0bcc656092b12c08c2916c",
  "bugs": {
    "url": "https://github.com/MatthewMueller/cheerio/issues"
  },
  "homepage": "https://github.com/MatthewMueller/cheerio",
  "_id": "cheerio@0.17.0",
  "_shasum": "fa5ae42cc60121133d296d0b46d983215f7268ea",
  "_from": "cheerio@>=0.17.0 <0.18.0",
  "_npmVersion": "1.4.14",
  "_npmUser": {
    "name": "davidchambers",
    "email": "dc@davidchambers.me"
  },
  "maintainers": [
    {
      "name": "mattmueller",
      "email": "mattmuelle@gmail.com"
    },
    {
      "name": "davidchambers",
      "email": "dc@davidchambers.me"
    }
  ],
  "dist": {
    "shasum": "fa5ae42cc60121133d296d0b46d983215f7268ea",
    "tarball": "https://registry.npmjs.org/cheerio/-/cheerio-0.17.0.tgz"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/cheerio/-/cheerio-0.17.0.tgz",
  "readme": "ERROR: No README data found!"
}

},{}],101:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -o ./dist/lodash.js`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre ES5 environments */
  var undefined;

  /** Used to pool arrays and objects used internally */
  var arrayPool = [],
      objectPool = [];

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
  var keyPrefix = +new Date + '';

  /** Used as the size when optimizations are enabled for large arrays */
  var largeArraySize = 75;

  /** Used as the max size of the `arrayPool` and `objectPool` */
  var maxPoolSize = 40;

  /** Used to detect and test whitespace */
  var whitespace = (
    // whitespace
    ' \t\x0B\f\xA0\ufeff' +

    // line terminators
    '\n\r\u2028\u2029' +

    // unicode category "Zs" space separators
    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
  );

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to detected named functions */
  var reFuncName = /^\s*function[ \n\r\t]+\w/;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match leading whitespace and zeros to be removed */
  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to detect functions containing a `this` reference */
  var reThis = /\bthis\b/;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to assign default `context` object properties */
  var contextProps = [
    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',
    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
    'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used as an internal `_.debounce` options object */
  var debounceOptions = {
    'leading': false,
    'maxWait': 0,
    'trailing': false
  };

  /** Used as the property descriptor for `__bindData__` */
  var descriptor = {
    'configurable': false,
    'enumerable': false,
    'value': null,
    'writable': false
  };

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Used as a reference to the global object */
  var root = (objectTypes[typeof window] && window) || this;

  /** Detect free variable `exports` */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module` */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports` */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    root = freeGlobal;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `_.indexOf` without support for binary searches
   * or `fromIndex` constraints.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the matched value or `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    var index = (fromIndex || 0) - 1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * An implementation of `_.contains` for cache objects that mimics the return
   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
   *
   * @private
   * @param {Object} cache The cache object to inspect.
   * @param {*} value The value to search for.
   * @returns {number} Returns `0` if `value` is found, else `-1`.
   */
  function cacheIndexOf(cache, value) {
    var type = typeof value;
    cache = cache.cache;

    if (type == 'boolean' || value == null) {
      return cache[value] ? 0 : -1;
    }
    if (type != 'number' && type != 'string') {
      type = 'object';
    }
    var key = type == 'number' ? value : keyPrefix + value;
    cache = (cache = cache[type]) && cache[key];

    return type == 'object'
      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
      : (cache ? 0 : -1);
  }

  /**
   * Adds a given value to the corresponding cache object.
   *
   * @private
   * @param {*} value The value to add to the cache.
   */
  function cachePush(value) {
    var cache = this.cache,
        type = typeof value;

    if (type == 'boolean' || value == null) {
      cache[value] = true;
    } else {
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value,
          typeCache = cache[type] || (cache[type] = {});

      if (type == 'object') {
        (typeCache[key] || (typeCache[key] = [])).push(value);
      } else {
        typeCache[key] = true;
      }
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default callback when a given
   * collection is a string value.
   *
   * @private
   * @param {string} value The character to inspect.
   * @returns {number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ac = a.criteria,
        bc = b.criteria,
        index = -1,
        length = ac.length;

    while (++index < length) {
      var value = ac[index],
          other = bc[index];

      if (value !== other) {
        if (value > other || typeof value == 'undefined') {
          return 1;
        }
        if (value < other || typeof other == 'undefined') {
          return -1;
        }
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to return the same value for
    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
    //
    // This also ensures a stable sort in V8 and other engines.
    // See http://code.google.com/p/v8/issues/detail?id=90
    return a.index - b.index;
  }

  /**
   * Creates a cache object to optimize linear searches of large arrays.
   *
   * @private
   * @param {Array} [array=[]] The array to search.
   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
   */
  function createCache(array) {
    var index = -1,
        length = array.length,
        first = array[0],
        mid = array[(length / 2) | 0],
        last = array[length - 1];

    if (first && typeof first == 'object' &&
        mid && typeof mid == 'object' && last && typeof last == 'object') {
      return false;
    }
    var cache = getObject();
    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

    var result = getObject();
    result.array = array;
    result.cache = cache;
    result.push = cachePush;

    while (++index < length) {
      result.push(array[index]);
    }
    return result;
  }

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {string} match The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Gets an array from the array pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Array} The array from the pool.
   */
  function getArray() {
    return arrayPool.pop() || [];
  }

  /**
   * Gets an object from the object pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Object} The object from the pool.
   */
  function getObject() {
    return objectPool.pop() || {
      'array': null,
      'cache': null,
      'criteria': null,
      'false': false,
      'index': 0,
      'null': false,
      'number': null,
      'object': null,
      'push': null,
      'string': null,
      'true': false,
      'undefined': false,
      'value': null
    };
  }

  /**
   * Releases the given array back to the array pool.
   *
   * @private
   * @param {Array} [array] The array to release.
   */
  function releaseArray(array) {
    array.length = 0;
    if (arrayPool.length < maxPoolSize) {
      arrayPool.push(array);
    }
  }

  /**
   * Releases the given object back to the object pool.
   *
   * @private
   * @param {Object} [object] The object to release.
   */
  function releaseObject(object) {
    var cache = object.cache;
    if (cache) {
      releaseObject(cache);
    }
    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
    if (objectPool.length < maxPoolSize) {
      objectPool.push(object);
    }
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used instead of `Array#slice` to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|string} collection The collection to slice.
   * @param {number} start The start index.
   * @param {number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new `lodash` function using the given context object.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns the `lodash` function.
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See http://es5.github.io/#x11.1.5.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references */
    var Array = context.Array,
        Boolean = context.Boolean,
        Date = context.Date,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /**
     * Used for `Array` method references.
     *
     * Normally `Array.prototype` would suffice, however, using an array literal
     * avoids issues in Narwhal.
     */
    var arrayRef = [];

    /** Used for native method references */
    var objectProto = Object.prototype;

    /** Used to restore the original `_` reference in `noConflict` */
    var oldDash = context._;

    /** Used to resolve the internal [[Class]] of values */
    var toString = objectProto.toString;

    /** Used to detect if a method is native */
    var reNative = RegExp('^' +
      String(toString)
        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        .replace(/toString| for [^\]]+/g, '.*?') + '$'
    );

    /** Native method shortcuts */
    var ceil = Math.ceil,
        clearTimeout = context.clearTimeout,
        floor = Math.floor,
        fnToString = Function.prototype.toString,
        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
        hasOwnProperty = objectProto.hasOwnProperty,
        push = arrayRef.push,
        setTimeout = context.setTimeout,
        splice = arrayRef.splice,
        unshift = arrayRef.unshift;

    /** Used to set meta data on functions */
    var defineProperty = (function() {
      // IE 8 only accepts DOM elements
      try {
        var o = {},
            func = isNative(func = Object.defineProperty) && func,
            result = func(o, o, o) && func;
      } catch(e) { }
      return result;
    }());

    /* Native method shortcuts for methods with the same name as other `lodash` methods */
    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
        nativeIsFinite = context.isFinite,
        nativeIsNaN = context.isNaN,
        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used to lookup a built-in constructor by [[Class]] */
    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps the given value to enable intuitive
     * method chaining.
     *
     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
     * and `unshift`
     *
     * Chaining is supported in custom builds as long as the `value` method is
     * implicitly or explicitly included in the build.
     *
     * The chainable wrapper functions are:
     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
     * and `zip`
     *
     * The non-chainable wrapper functions are:
     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
     * `template`, `unescape`, `uniqueId`, and `value`
     *
     * The wrapper functions `first` and `last` return wrapped values when `n` is
     * provided, otherwise they return unwrapped values.
     *
     * Explicit chaining can be enabled by using the `_.chain` method.
     *
     * @name _
     * @constructor
     * @category Chaining
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns a `lodash` instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(num) {
     *   return num * num;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
       ? value
       : new lodashWrapper(value);
    }

    /**
     * A fast path for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap in a `lodash` instance.
     * @param {boolean} chainAll A flag to enable chaining for all methods
     * @returns {Object} Returns a `lodash` instance.
     */
    function lodashWrapper(value, chainAll) {
      this.__chain__ = !!chainAll;
      this.__wrapped__ = value;
    }
    // ensure `new lodashWrapper` is an instance of `lodash`
    lodashWrapper.prototype = lodash.prototype;

    /**
     * An object used to flag environments features.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * Detect if functions can be decompiled by `Function#toString`
     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

    /**
     * Detect if `Function#name` is supported (all but IE).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcNames = typeof Function.name == 'string';

    /**
     * By default, the template delimiters used by Lo-Dash are similar to those in
     * embedded Ruby (ERB). Change the following template settings to use alternative
     * delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': /<%-([\s\S]+?)%>/g,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': /<%([\s\S]+?)%>/g,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * The base implementation of `_.bind` that creates the bound function and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new bound function.
     */
    function baseBind(bindData) {
      var func = bindData[0],
          partialArgs = bindData[2],
          thisArg = bindData[4];

      function bound() {
        // `Function#bind` spec
        // http://es5.github.io/#x15.3.4.5
        if (partialArgs) {
          // avoid `arguments` object deoptimizations by using `slice` instead
          // of `Array.prototype.slice.call` and not assigning `arguments` to a
          // variable as a ternary expression
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        // mimic the constructor's `return` behavior
        // http://es5.github.io/#x13.2.2
        if (this instanceof bound) {
          // ensure `new bound` is an instance of `func`
          var thisBinding = baseCreate(func.prototype),
              result = func.apply(thisBinding, args || arguments);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisArg, args || arguments);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.clone` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, callback, stackA, stackB) {
      if (callback) {
        var result = callback(value);
        if (typeof result != 'undefined') {
          return result;
        }
      }
      // inspect [[Class]]
      var isObj = isObject(value);
      if (isObj) {
        var className = toString.call(value);
        if (!cloneableClasses[className]) {
          return value;
        }
        var ctor = ctorByClass[className];
        switch (className) {
          case boolClass:
          case dateClass:
            return new ctor(+value);

          case numberClass:
          case stringClass:
            return new ctor(value);

          case regexpClass:
            result = ctor(value.source, reFlags.exec(value));
            result.lastIndex = value.lastIndex;
            return result;
        }
      } else {
        return value;
      }
      var isArr = isArray(value);
      if (isDeep) {
        // check for circular references and return corresponding clone
        var initedStack = !stackA;
        stackA || (stackA = getArray());
        stackB || (stackB = getArray());

        var length = stackA.length;
        while (length--) {
          if (stackA[length] == value) {
            return stackB[length];
          }
        }
        result = isArr ? ctor(value.length) : {};
      }
      else {
        result = isArr ? slice(value) : assign({}, value);
      }
      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // exit for shallow clone
      if (!isDeep) {
        return result;
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(prototype, properties) {
      return isObject(prototype) ? nativeCreate(prototype) : {};
    }
    // fallback for browsers without `Object.create`
    if (!nativeCreate) {
      baseCreate = (function() {
        function Object() {}
        return function(prototype) {
          if (isObject(prototype)) {
            Object.prototype = prototype;
            var result = new Object;
            Object.prototype = null;
          }
          return result || context.Object();
        };
      }());
    }

    /**
     * The base implementation of `_.createCallback` without support for creating
     * "_.pluck" or "_.where" style callbacks.
     *
     * @private
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     */
    function baseCreateCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      // exit early for no `thisArg` or already bound by `Function#bind`
      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
        return func;
      }
      var bindData = func.__bindData__;
      if (typeof bindData == 'undefined') {
        if (support.funcNames) {
          bindData = !func.name;
        }
        bindData = bindData || !support.funcDecomp;
        if (!bindData) {
          var source = fnToString.call(func);
          if (!support.funcNames) {
            bindData = !reFuncName.test(source);
          }
          if (!bindData) {
            // checks if `func` references the `this` keyword and stores the result
            bindData = reThis.test(source);
            setBindData(func, bindData);
          }
        }
      }
      // exit early if there are no `this` references or `func` is bound
      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 2: return function(a, b) {
          return func.call(thisArg, a, b);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
      }
      return bind(func, thisArg);
    }

    /**
     * The base implementation of `createWrapper` that creates the wrapper and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new function.
     */
    function baseCreateWrapper(bindData) {
      var func = bindData[0],
          bitmask = bindData[1],
          partialArgs = bindData[2],
          partialRightArgs = bindData[3],
          thisArg = bindData[4],
          arity = bindData[5];

      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          key = func;

      function bound() {
        var thisBinding = isBind ? thisArg : this;
        if (partialArgs) {
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        if (partialRightArgs || isCurry) {
          args || (args = slice(arguments));
          if (partialRightArgs) {
            push.apply(args, partialRightArgs);
          }
          if (isCurry && args.length < arity) {
            bitmask |= 16 & ~32;
            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
          }
        }
        args || (args = arguments);
        if (isBindKey) {
          func = thisBinding[key];
        }
        if (this instanceof bound) {
          thisBinding = baseCreate(func.prototype);
          var result = func.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisBinding, args);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.difference` that accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {Array} [values] The array of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     */
    function baseDifference(array, values) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
          result = [];

      if (isLarge) {
        var cache = createCache(values);
        if (cache) {
          indexOf = cacheIndexOf;
          values = cache;
        } else {
          isLarge = false;
        }
      }
      while (++index < length) {
        var value = array[index];
        if (indexOf(values, value) < 0) {
          result.push(value);
        }
      }
      if (isLarge) {
        releaseObject(values);
      }
      return result;
    }

    /**
     * The base implementation of `_.flatten` without support for callback
     * shorthands or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
     * @param {number} [fromIndex=0] The index to start from.
     * @returns {Array} Returns a new flattened array.
     */
    function baseFlatten(array, isShallow, isStrict, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value && typeof value == 'object' && typeof value.length == 'number'
            && (isArray(value) || isArguments(value))) {
          // recursively flatten arrays (susceptible to call stack limits)
          if (!isShallow) {
            value = baseFlatten(value, isShallow, isStrict);
          }
          var valIndex = -1,
              valLength = value.length,
              resIndex = result.length;

          result.length += valLength;
          while (++valIndex < valLength) {
            result[resIndex++] = value[valIndex];
          }
        } else if (!isStrict) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
     * that allows partial "_.where" style comparisons.
     *
     * @private
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
      // used to indicate that when comparing objects, `a` has at least the properties of `b`
      if (callback) {
        var result = callback(a, b);
        if (typeof result != 'undefined') {
          return !!result;
        }
      }
      // exit early for identical values
      if (a === b) {
        // treat `+0` vs. `-0` as not equal
        return a !== 0 || (1 / a == 1 / b);
      }
      var type = typeof a,
          otherType = typeof b;

      // exit early for unlike primitive values
      if (a === a &&
          !(a && objectTypes[type]) &&
          !(b && objectTypes[otherType])) {
        return false;
      }
      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
      // http://es5.github.io/#x15.3.4.4
      if (a == null || b == null) {
        return a === b;
      }
      // compare [[Class]] names
      var className = toString.call(a),
          otherClass = toString.call(b);

      if (className == argsClass) {
        className = objectClass;
      }
      if (otherClass == argsClass) {
        otherClass = objectClass;
      }
      if (className != otherClass) {
        return false;
      }
      switch (className) {
        case boolClass:
        case dateClass:
          // coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
          return +a == +b;

        case numberClass:
          // treat `NaN` vs. `NaN` as equal
          return (a != +a)
            ? b != +b
            // but treat `+0` vs. `-0` as not equal
            : (a == 0 ? (1 / a == 1 / b) : a == +b);

        case regexpClass:
        case stringClass:
          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
          // treat string primitives and their corresponding object instances as equal
          return a == String(b);
      }
      var isArr = className == arrayClass;
      if (!isArr) {
        // unwrap any `lodash` wrapped values
        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
            bWrapped = hasOwnProperty.call(b, '__wrapped__');

        if (aWrapped || bWrapped) {
          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
        }
        // exit for functions and DOM nodes
        if (className != objectClass) {
          return false;
        }
        // in older versions of Opera, `arguments` objects have `Array` constructors
        var ctorA = a.constructor,
            ctorB = b.constructor;

        // non `Object` object instances with different constructors are not equal
        if (ctorA != ctorB &&
              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
              ('constructor' in a && 'constructor' in b)
            ) {
          return false;
        }
      }
      // assume cyclic structures are equal
      // the algorithm for detecting cyclic structures is adapted from ES 5.1
      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == a) {
          return stackB[length] == b;
        }
      }
      var size = 0;
      result = true;

      // add `a` and `b` to the stack of traversed objects
      stackA.push(a);
      stackB.push(b);

      // recursively compare objects and arrays (susceptible to call stack limits)
      if (isArr) {
        // compare lengths to determine if a deep comparison is necessary
        length = a.length;
        size = b.length;
        result = size == length;

        if (result || isWhere) {
          // deep compare the contents, ignoring non-numeric properties
          while (size--) {
            var index = length,
                value = b[size];

            if (isWhere) {
              while (index--) {
                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                  break;
                }
              }
            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
              break;
            }
          }
        }
      }
      else {
        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
        // which, in this case, is more costly
        forIn(b, function(value, key, b) {
          if (hasOwnProperty.call(b, key)) {
            // count the number of properties.
            size++;
            // deep compare each property value.
            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
          }
        });

        if (result && !isWhere) {
          // ensure both objects have the same number of properties
          forIn(a, function(value, key, a) {
            if (hasOwnProperty.call(a, key)) {
              // `size` will be `-1` if `a` has more properties than `b`
              return (result = --size > -1);
            }
          });
        }
      }
      stackA.pop();
      stackB.pop();

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.merge` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     */
    function baseMerge(object, source, callback, stackA, stackB) {
      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
        var found,
            isArr,
            result = source,
            value = object[key];

        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            if ((found = stackA[stackLength] == source)) {
              value = stackB[stackLength];
              break;
            }
          }
          if (!found) {
            var isShallow;
            if (callback) {
              result = callback(value, source);
              if ((isShallow = typeof result != 'undefined')) {
                value = result;
              }
            }
            if (!isShallow) {
              value = isArr
                ? (isArray(value) ? value : [])
                : (isPlainObject(value) ? value : {});
            }
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value);

            // recursively merge objects and arrays (susceptible to call stack limits)
            if (!isShallow) {
              baseMerge(value, source, callback, stackA, stackB);
            }
          }
        }
        else {
          if (callback) {
            result = callback(value, source);
            if (typeof result == 'undefined') {
              result = source;
            }
          }
          if (typeof result != 'undefined') {
            value = result;
          }
        }
        object[key] = value;
      });
    }

    /**
     * The base implementation of `_.random` without argument juggling or support
     * for returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns a random number.
     */
    function baseRandom(min, max) {
      return min + floor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function} [callback] The function called per iteration.
     * @returns {Array} Returns a duplicate-value-free array.
     */
    function baseUniq(array, isSorted, callback) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          result = [];

      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
          seen = (callback || isLarge) ? getArray() : result;

      if (isLarge) {
        var cache = createCache(seen);
        indexOf = cacheIndexOf;
        seen = cache;
      }
      while (++index < length) {
        var value = array[index],
            computed = callback ? callback(value, index, array) : value;

        if (isSorted
              ? !index || seen[seen.length - 1] !== computed
              : indexOf(seen, computed) < 0
            ) {
          if (callback || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      if (isLarge) {
        releaseArray(seen.array);
        releaseObject(seen);
      } else if (callback) {
        releaseArray(seen);
      }
      return result;
    }

    /**
     * Creates a function that aggregates a collection, creating an object composed
     * of keys generated from the results of running each element of the collection
     * through a callback. The given `setter` function sets the keys and values
     * of the composed object.
     *
     * @private
     * @param {Function} setter The setter function.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter) {
      return function(collection, callback, thisArg) {
        var result = {};
        callback = lodash.createCallback(callback, thisArg, 3);

        var index = -1,
            length = collection ? collection.length : 0;

        if (typeof length == 'number') {
          while (++index < length) {
            var value = collection[index];
            setter(result, value, callback(value, index, collection), collection);
          }
        } else {
          forOwn(collection, function(value, key, collection) {
            setter(result, value, callback(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a function that, when called, either curries or invokes `func`
     * with an optional `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of method flags to compose.
     *  The bitmask may be composed of the following flags:
     *  1 - `_.bind`
     *  2 - `_.bindKey`
     *  4 - `_.curry`
     *  8 - `_.curry` (bound)
     *  16 - `_.partial`
     *  32 - `_.partialRight`
     * @param {Array} [partialArgs] An array of arguments to prepend to those
     *  provided to the new function.
     * @param {Array} [partialRightArgs] An array of arguments to append to those
     *  provided to the new function.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new function.
     */
    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          isPartial = bitmask & 16,
          isPartialRight = bitmask & 32;

      if (!isBindKey && !isFunction(func)) {
        throw new TypeError;
      }
      if (isPartial && !partialArgs.length) {
        bitmask &= ~16;
        isPartial = partialArgs = false;
      }
      if (isPartialRight && !partialRightArgs.length) {
        bitmask &= ~32;
        isPartialRight = partialRightArgs = false;
      }
      var bindData = func && func.__bindData__;
      if (bindData && bindData !== true) {
        // clone `bindData`
        bindData = slice(bindData);
        if (bindData[2]) {
          bindData[2] = slice(bindData[2]);
        }
        if (bindData[3]) {
          bindData[3] = slice(bindData[3]);
        }
        // set `thisBinding` is not previously bound
        if (isBind && !(bindData[1] & 1)) {
          bindData[4] = thisArg;
        }
        // set if previously bound but not currently (subsequent curried functions)
        if (!isBind && bindData[1] & 1) {
          bitmask |= 8;
        }
        // set curried arity if not yet set
        if (isCurry && !(bindData[1] & 4)) {
          bindData[5] = arity;
        }
        // append partial left arguments
        if (isPartial) {
          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
        }
        // append partial right arguments
        if (isPartialRight) {
          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
        }
        // merge flags
        bindData[1] |= bitmask;
        return createWrapper.apply(null, bindData);
      }
      // fast path for `_.bind`
      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
    }

    /**
     * Used by `escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} match The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeHtmlChar(match) {
      return htmlEscapes[match];
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized, this method returns the custom method, otherwise it returns
     * the `baseIndexOf` function.
     *
     * @private
     * @returns {Function} Returns the "indexOf" function.
     */
    function getIndexOf() {
      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
      return result;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
     */
    function isNative(value) {
      return typeof value == 'function' && reNative.test(value);
    }

    /**
     * Sets `this` binding data on a given function.
     *
     * @private
     * @param {Function} func The function to set data on.
     * @param {Array} value The data array to set.
     */
    var setBindData = !defineProperty ? noop : function(func, value) {
      descriptor.value = value;
      defineProperty(func, '__bindData__', descriptor);
      descriptor.value = null;
    };

    /**
     * A fallback implementation of `isPlainObject` which checks if a given value
     * is an object created by the `Object` constructor, assuming objects created
     * by the `Object` constructor have no inherited enumerable properties and that
     * there are no `Object.prototype` extensions.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     */
    function shimIsPlainObject(value) {
      var ctor,
          result;

      // avoid non Object objects, `arguments` objects, and DOM elements
      if (!(value && toString.call(value) == objectClass) ||
          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
        return false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
    }

    /**
     * Used by `unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} match The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    function unescapeHtmlChar(match) {
      return htmlUnescapes[match];
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Checks if `value` is an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
     * @example
     *
     * (function() { return _.isArguments(arguments); })(1, 2, 3);
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == argsClass || false;
    }

    /**
     * Checks if `value` is an array.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
     * @example
     *
     * (function() { return _.isArray(arguments); })();
     * // => false
     *
     * _.isArray([1, 2, 3]);
     * // => true
     */
    var isArray = nativeIsArray || function(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == arrayClass || false;
    };

    /**
     * A fallback implementation of `Object.keys` which produces an array of the
     * given object's own enumerable property names.
     *
     * @private
     * @type Function
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     */
    var shimKeys = function(object) {
      var index, iterable = object, result = [];
      if (!iterable) return result;
      if (!(objectTypes[typeof object])) return result;
        for (index in iterable) {
          if (hasOwnProperty.call(iterable, index)) {
            result.push(index);
          }
        }
      return result
    };

    /**
     * Creates an array composed of the own enumerable property names of an object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     * @example
     *
     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      if (!isObject(object)) {
        return [];
      }
      return nativeKeys(object);
    };

    /**
     * Used to convert characters to HTML entities:
     *
     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
     * don't require escaping in HTML and have no special meaning unless they're part
     * of a tag or an unquoted attribute value.
     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
     */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /** Used to convert HTML entities to characters */
    var htmlUnescapes = invert(htmlEscapes);

    /** Used to match HTML entities and HTML characters */
    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

    /*--------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources will overwrite property assignments of previous
     * sources. If a callback is provided it will be executed to produce the
     * assigned values. The callback is bound to `thisArg` and invoked with two
     * arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @type Function
     * @alias extend
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize assigning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
     * // => { 'name': 'fred', 'employer': 'slate' }
     *
     * var defaults = _.partialRight(_.assign, function(a, b) {
     *   return typeof a == 'undefined' ? b : a;
     * });
     *
     * var object = { 'name': 'barney' };
     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var assign = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
        callback = args[--argsLength];
      }
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
        }
        }
      }
      return result
    };

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
     * be cloned, otherwise they will be assigned by reference. If a callback
     * is provided it will be executed to produce the cloned values. If the
     * callback returns `undefined` cloning will be handled by the method instead.
     * The callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var shallow = _.clone(characters);
     * shallow[0] === characters[0];
     * // => true
     *
     * var deep = _.clone(characters, true);
     * deep[0] === characters[0];
     * // => false
     *
     * _.mixin({
     *   'clone': _.partialRight(_.clone, function(value) {
     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
     *   })
     * });
     *
     * var clone = _.clone(document.body);
     * clone.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, callback, thisArg) {
      // allows working with "Collections" methods without using their `index`
      // and `collection` arguments for `isDeep` and `callback`
      if (typeof isDeep != 'boolean' && isDeep != null) {
        thisArg = callback;
        callback = isDeep;
        isDeep = false;
      }
      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates a deep clone of `value`. If a callback is provided it will be
     * executed to produce the cloned values. If the callback returns `undefined`
     * cloning will be handled by the method instead. The callback is bound to
     * `thisArg` and invoked with one argument; (value).
     *
     * Note: This method is loosely based on the structured clone algorithm. Functions
     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var deep = _.cloneDeep(characters);
     * deep[0] === characters[0];
     * // => false
     *
     * var view = {
     *   'label': 'docs',
     *   'node': element
     * };
     *
     * var clone = _.cloneDeep(view, function(value) {
     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
     * });
     *
     * clone.node == view.node;
     * // => false
     */
    function cloneDeep(value, callback, thisArg) {
      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? assign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional defaults of the same property will be ignored.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param- {Object} [guard] Allows working with `_.reduce` without using its
     *  `key` and `object` arguments as sources.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var object = { 'name': 'barney' };
     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var defaults = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (typeof result[index] == 'undefined') result[index] = iterable[index];
        }
        }
      }
      return result
    };

    /**
     * This method is like `_.findIndex` except that it returns the key of the
     * first element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': false },
     *   'fred': {    'age': 40, 'blocked': true },
     *   'pebbles': { 'age': 1,  'blocked': false }
     * };
     *
     * _.findKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (property order is not guaranteed across environments)
     *
     * // using "_.where" callback shorthand
     * _.findKey(characters, { 'age': 1 });
     * // => 'pebbles'
     *
     * // using "_.pluck" callback shorthand
     * _.findKey(characters, 'blocked');
     * // => 'fred'
     */
    function findKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': true },
     *   'fred': {    'age': 40, 'blocked': false },
     *   'pebbles': { 'age': 1,  'blocked': true }
     * };
     *
     * _.findLastKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
     *
     * // using "_.where" callback shorthand
     * _.findLastKey(characters, { 'age': 40 });
     * // => 'fred'
     *
     * // using "_.pluck" callback shorthand
     * _.findLastKey(characters, 'blocked');
     * // => 'pebbles'
     */
    function findLastKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwnRight(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over own and inherited enumerable properties of an object,
     * executing the callback for each property. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, key, object). Callbacks may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forIn(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
     */
    var forIn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        for (index in iterable) {
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forIn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forInRight(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
     */
    function forInRight(object, callback, thisArg) {
      var pairs = [];

      forIn(object, function(value, key) {
        pairs.push(key, value);
      });

      var length = pairs.length;
      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(pairs[length--], pairs[length], object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Iterates over own enumerable properties of an object, executing the callback
     * for each property. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, key, object). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
     */
    var forOwn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forOwn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
     */
    function forOwnRight(object, callback, thisArg) {
      var props = keys(object),
          length = props.length;

      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        var key = props[length];
        if (callback(object[key], key, object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Creates a sorted array of property names of all enumerable properties,
     * own and inherited, of `object` that have function values.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names that have function values.
     * @example
     *
     * _.functions(_);
     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
     */
    function functions(object) {
      var result = [];
      forIn(object, function(value, key) {
        if (isFunction(value)) {
          result.push(key);
        }
      });
      return result.sort();
    }

    /**
     * Checks if the specified property name exists as a direct property of `object`,
     * instead of an inherited property.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to check.
     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
     * @example
     *
     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
     * // => true
     */
    function has(object, key) {
      return object ? hasOwnProperty.call(object, key) : false;
    }

    /**
     * Creates an object composed of the inverted keys and values of the given object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the created inverted object.
     * @example
     *
     * _.invert({ 'first': 'fred', 'second': 'barney' });
     * // => { 'fred': 'first', 'barney': 'second' }
     */
    function invert(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        result[object[key]] = key;
      }
      return result;
    }

    /**
     * Checks if `value` is a boolean value.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
     * @example
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        value && typeof value == 'object' && toString.call(value) == boolClass || false;
    }

    /**
     * Checks if `value` is a date.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     */
    function isDate(value) {
      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     */
    function isElement(value) {
      return value && value.nodeType === 1 || false;
    }

    /**
     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
     * length of `0` and objects with no own enumerable properties are considered
     * "empty".
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({});
     * // => true
     *
     * _.isEmpty('');
     * // => true
     */
    function isEmpty(value) {
      var result = true;
      if (!value) {
        return result;
      }
      var className = toString.call(value),
          length = value.length;

      if ((className == arrayClass || className == stringClass || className == argsClass ) ||
          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
        return !length;
      }
      forOwn(value, function() {
        return (result = false);
      });
      return result;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent to each other. If a callback is provided it will be executed
     * to compare values. If the callback returns `undefined` comparisons will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (a, b).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var copy = { 'name': 'fred' };
     *
     * object == copy;
     * // => false
     *
     * _.isEqual(object, copy);
     * // => true
     *
     * var words = ['hello', 'goodbye'];
     * var otherWords = ['hi', 'goodbye'];
     *
     * _.isEqual(words, otherWords, function(a, b) {
     *   var reGreet = /^(?:hello|hi)$/i,
     *       aGreet = _.isString(a) && reGreet.test(a),
     *       bGreet = _.isString(b) && reGreet.test(b);
     *
     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
     * });
     * // => true
     */
    function isEqual(a, b, callback, thisArg) {
      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
    }

    /**
     * Checks if `value` is, or can be coerced to, a finite number.
     *
     * Note: This is not the same as native `isFinite` which will return true for
     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
     * @example
     *
     * _.isFinite(-101);
     * // => true
     *
     * _.isFinite('10');
     * // => true
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite('');
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
    }

    /**
     * Checks if `value` is a function.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     */
    function isFunction(value) {
      return typeof value == 'function';
    }

    /**
     * Checks if `value` is the language type of Object.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // check if the value is the ECMAScript language type of Object
      // http://es5.github.io/#x8
      // and avoid a V8 bug
      // http://code.google.com/p/v8/issues/detail?id=2291
      return !!(value && objectTypes[typeof value]);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * Note: This is not the same as native `isNaN` which will return `true` for
     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // `NaN` as a primitive is the only value that is not equal to itself
      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(undefined);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is a number.
     *
     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(8.4 * 5);
     * // => true
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        value && typeof value == 'object' && toString.call(value) == numberClass || false;
    }

    /**
     * Checks if `value` is an object created by the `Object` constructor.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * _.isPlainObject(new Shape);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     */
    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
      if (!(value && toString.call(value) == objectClass)) {
        return false;
      }
      var valueOf = value.valueOf,
          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

      return objProto
        ? (value == objProto || getPrototypeOf(value) == objProto)
        : shimIsPlainObject(value);
    };

    /**
     * Checks if `value` is a regular expression.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
     * @example
     *
     * _.isRegExp(/fred/);
     * // => true
     */
    function isRegExp(value) {
      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
    }

    /**
     * Checks if `value` is a string.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
     * @example
     *
     * _.isString('fred');
     * // => true
     */
    function isString(value) {
      return typeof value == 'string' ||
        value && typeof value == 'object' && toString.call(value) == stringClass || false;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     */
    function isUndefined(value) {
      return typeof value == 'undefined';
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     *
     * var characters = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // using "_.pluck" callback shorthand
     * _.mapValues(characters, 'age');
     * // => { 'fred': 40, 'pebbles': 1 }
     */
    function mapValues(object, callback, thisArg) {
      var result = {};
      callback = lodash.createCallback(callback, thisArg, 3);

      forOwn(object, function(value, key, object) {
        result[key] = callback(value, key, object);
      });
      return result;
    }

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * will overwrite property assignments of previous sources. If a callback is
     * provided it will be executed to produce the merged values of the destination
     * and source properties. If the callback returns `undefined` merging will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var names = {
     *   'characters': [
     *     { 'name': 'barney' },
     *     { 'name': 'fred' }
     *   ]
     * };
     *
     * var ages = {
     *   'characters': [
     *     { 'age': 36 },
     *     { 'age': 40 }
     *   ]
     * };
     *
     * _.merge(names, ages);
     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
     *
     * var food = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var otherFood = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(food, otherFood, function(a, b) {
     *   return _.isArray(a) ? a.concat(b) : undefined;
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
     */
    function merge(object) {
      var args = arguments,
          length = 2;

      if (!isObject(object)) {
        return object;
      }
      // allows working with `_.reduce` and `_.reduceRight` without using
      // their `index` and `collection` arguments
      if (typeof args[2] != 'number') {
        length = args.length;
      }
      if (length > 3 && typeof args[length - 2] == 'function') {
        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
      } else if (length > 2 && typeof args[length - 1] == 'function') {
        callback = args[--length];
      }
      var sources = slice(arguments, 1, length),
          index = -1,
          stackA = getArray(),
          stackB = getArray();

      while (++index < length) {
        baseMerge(object, sources[index], callback, stackA, stackB);
      }
      releaseArray(stackA);
      releaseArray(stackB);
      return object;
    }

    /**
     * Creates a shallow clone of `object` excluding the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` omitting the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The properties to omit or the
     *  function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object without the omitted properties.
     * @example
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
     * // => { 'name': 'fred' }
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
     *   return typeof value == 'number';
     * });
     * // => { 'name': 'fred' }
     */
    function omit(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var props = [];
        forIn(object, function(value, key) {
          props.push(key);
        });
        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          result[key] = object[key];
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (!callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * Creates a two dimensional array of an object's key-value pairs,
     * i.e. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
     */
    function pairs(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates a shallow clone of `object` composed of the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` picking the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The function called per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object composed of the picked properties.
     * @example
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
     * // => { 'name': 'fred' }
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
     *   return key.charAt(0) != '_';
     * });
     * // => { 'name': 'fred' }
     */
    function pick(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var index = -1,
            props = baseFlatten(arguments, true, false, 1),
            length = isObject(object) ? props.length : 0;

        while (++index < length) {
          var key = props[index];
          if (key in object) {
            result[key] = object[key];
          }
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * An alternative to `_.reduce` this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable properties through a callback, with each callback execution
     * potentially mutating the `accumulator` object. The callback is bound to
     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
     * Callbacks may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
     *   num *= num;
     *   if (num % 2) {
     *     return result.push(num) < 3;
     *   }
     * });
     * // => [1, 9, 25]
     *
     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     * });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function transform(object, callback, accumulator, thisArg) {
      var isArr = isArray(object);
      if (accumulator == null) {
        if (isArr) {
          accumulator = [];
        } else {
          var ctor = object && object.constructor,
              proto = ctor && ctor.prototype;

          accumulator = baseCreate(proto);
        }
      }
      if (callback) {
        callback = lodash.createCallback(callback, thisArg, 4);
        (isArr ? forEach : forOwn)(object, function(value, index, object) {
          return callback(accumulator, value, index, object);
        });
      }
      return accumulator;
    }

    /**
     * Creates an array composed of the own enumerable property values of `object`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property values.
     * @example
     *
     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
     * // => [1, 2, 3] (property order is not guaranteed across environments)
     */
    function values(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array of elements from the specified indexes, or keys, of the
     * `collection`. Indexes may be specified as individual arguments or as arrays
     * of indexes.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
     *   to retrieve, specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns a new array of elements corresponding to the
     *  provided indexes.
     * @example
     *
     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
     * // => ['a', 'c', 'e']
     *
     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
     * // => ['fred', 'pebbles']
     */
    function at(collection) {
      var args = arguments,
          index = -1,
          props = baseFlatten(args, true, false, 1),
          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
          result = Array(length);

      while(++index < length) {
        result[index] = collection[props[index]];
      }
      return result;
    }

    /**
     * Checks if a given value is present in a collection using strict equality
     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
     * offset from the end of the collection.
     *
     * @static
     * @memberOf _
     * @alias include
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {*} target The value to check for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
     * @example
     *
     * _.contains([1, 2, 3], 1);
     * // => true
     *
     * _.contains([1, 2, 3], 1, 2);
     * // => false
     *
     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.contains('pebbles', 'eb');
     * // => true
     */
    function contains(collection, target, fromIndex) {
      var index = -1,
          indexOf = getIndexOf(),
          length = collection ? collection.length : 0,
          result = false;

      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
      if (isArray(collection)) {
        result = indexOf(collection, target, fromIndex) > -1;
      } else if (typeof length == 'number') {
        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
      } else {
        forOwn(collection, function(value) {
          if (++index >= fromIndex) {
            return !(result = value === target);
          }
        });
      }
      return result;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through the callback. The corresponding value
     * of each key is the number of times the key was returned by the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });

    /**
     * Checks if the given callback returns truey value for **all** elements of
     * a collection. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if all elements passed the callback check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes']);
     * // => false
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.every(characters, 'age');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.every(characters, { 'age': 36 });
     * // => false
     */
    function every(collection, callback, thisArg) {
      var result = true;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (!(result = !!callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return (result = !!callback(value, index, collection));
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning an array of all elements
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that passed the callback check.
     * @example
     *
     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [2, 4, 6]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.filter(characters, 'blocked');
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     *
     * // using "_.where" callback shorthand
     * _.filter(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     */
    function filter(collection, callback, thisArg) {
      var result = [];
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            result.push(value);
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result.push(value);
          }
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning the first element that
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect, findWhere
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.find(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
     *
     * // using "_.where" callback shorthand
     * _.find(characters, { 'age': 1 });
     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
     *
     * // using "_.pluck" callback shorthand
     * _.find(characters, 'blocked');
     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
     */
    function find(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            return value;
          }
        }
      } else {
        var result;
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result = value;
            return false;
          }
        });
        return result;
      }
    }

    /**
     * This method is like `_.find` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(num) {
     *   return num % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forEachRight(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result = value;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over elements of a collection, executing the callback for each
     * element. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * Note: As with other "Collections" methods, objects with a `length` property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
     * // => logs each number and returns '1,2,3'
     *
     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
     * // => logs each number and returns the object (property order is not guaranteed across environments)
     */
    function forEach(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
     * // => logs each number from right to left and returns '3,2,1'
     */
    function forEachRight(collection, callback, thisArg) {
      var length = collection ? collection.length : 0;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (length--) {
          if (callback(collection[length], length, collection) === false) {
            break;
          }
        }
      } else {
        var props = keys(collection);
        length = props.length;
        forOwn(collection, function(value, key, collection) {
          key = props ? props[--length] : --length;
          return callback(collection[key], key, collection);
        });
      }
      return collection;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of a collection through the callback. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using "_.pluck" callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of the collection through the given callback. The corresponding
     * value of each key is the last element responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keys = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keys, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method named by `methodName` on each element in the `collection`
     * returning an array of the results of each invoked method. Additional arguments
     * will be provided to each invoked method. If `methodName` is a function it
     * will be invoked for, and `this` bound to, each element in the `collection`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|string} methodName The name of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [arg] Arguments to invoke the method with.
     * @returns {Array} Returns a new array of the results of each invoked method.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    function invoke(collection, methodName) {
      var args = slice(arguments, 2),
          index = -1,
          isFunc = typeof methodName == 'function',
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in the collection
     * through the callback. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of the results of each `callback` execution.
     * @example
     *
     * _.map([1, 2, 3], function(num) { return num * 3; });
     * // => [3, 6, 9]
     *
     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
     * // => [3, 6, 9] (property order is not guaranteed across environments)
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(characters, 'name');
     * // => ['barney', 'fred']
     */
    function map(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        var result = Array(length);
        while (++index < length) {
          result[index] = callback(collection[index], index, collection);
        }
      } else {
        result = [];
        forOwn(collection, function(value, key, collection) {
          result[++index] = callback(value, key, collection);
        });
      }
      return result;
    }

    /**
     * Retrieves the maximum value of a collection. If the collection is empty or
     * falsey `-Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.max(characters, function(chr) { return chr.age; });
     * // => { 'name': 'fred', 'age': 40 };
     *
     * // using "_.pluck" callback shorthand
     * _.max(characters, 'age');
     * // => { 'name': 'fred', 'age': 40 };
     */
    function max(collection, callback, thisArg) {
      var computed = -Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value > result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current > computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the minimum value of a collection. If the collection is empty or
     * falsey `Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.min(characters, function(chr) { return chr.age; });
     * // => { 'name': 'barney', 'age': 36 };
     *
     * // using "_.pluck" callback shorthand
     * _.min(characters, 'age');
     * // => { 'name': 'barney', 'age': 36 };
     */
    function min(collection, callback, thisArg) {
      var computed = Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value < result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current < computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the value of a specified property from all elements in the collection.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {string} property The name of the property to pluck.
     * @returns {Array} Returns a new array of property values.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(characters, 'name');
     * // => ['barney', 'fred']
     */
    var pluck = map;

    /**
     * Reduces a collection to a value which is the accumulated result of running
     * each element in the collection through the callback, where each successive
     * callback execution consumes the return value of the previous execution. If
     * `accumulator` is not provided the first element of the collection will be
     * used as the initial `accumulator` value. The callback is bound to `thisArg`
     * and invoked with four arguments; (accumulator, value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var sum = _.reduce([1, 2, 3], function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function reduce(collection, callback, accumulator, thisArg) {
      if (!collection) return accumulator;
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);

      var index = -1,
          length = collection.length;

      if (typeof length == 'number') {
        if (noaccum) {
          accumulator = collection[++index];
        }
        while (++index < length) {
          accumulator = callback(accumulator, collection[index], index, collection);
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          accumulator = noaccum
            ? (noaccum = false, value)
            : callback(accumulator, value, index, collection)
        });
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var list = [[0, 1], [2, 3], [4, 5]];
     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, callback, accumulator, thisArg) {
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);
      forEachRight(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The opposite of `_.filter` this method returns the elements of a
     * collection that the callback does **not** return truey for.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that failed the callback check.
     * @example
     *
     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [1, 3, 5]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.reject(characters, 'blocked');
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     *
     * // using "_.where" callback shorthand
     * _.reject(characters, { 'age': 36 });
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     */
    function reject(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);
      return filter(collection, function(value, index, collection) {
        return !callback(value, index, collection);
      });
    }

    /**
     * Retrieves a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Allows working with functions like `_.map`
     *  without using their `index` arguments as `n`.
     * @returns {Array} Returns the random sample(s) of `collection`.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (collection && typeof collection.length != 'number') {
        collection = values(collection);
      }
      if (n == null || guard) {
        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
      }
      var result = shuffle(collection);
      result.length = nativeMin(nativeMax(0, n), result.length);
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the Fisher-Yates
     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns a new shuffled collection.
     * @example
     *
     * _.shuffle([1, 2, 3, 4, 5, 6]);
     * // => [4, 1, 6, 3, 5, 2]
     */
    function shuffle(collection) {
      var index = -1,
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        var rand = baseRandom(0, ++index);
        result[index] = result[rand];
        result[rand] = value;
      });
      return result;
    }

    /**
     * Gets the size of the `collection` by returning `collection.length` for arrays
     * and array-like objects or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns `collection.length` or number of own enumerable properties.
     * @example
     *
     * _.size([1, 2]);
     * // => 2
     *
     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
     * // => 3
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    /**
     * Checks if the callback returns a truey value for **any** element of a
     * collection. The function returns as soon as it finds a passing value and
     * does not iterate over the entire collection. The callback is bound to
     * `thisArg` and invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if any element passed the callback check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.some(characters, 'blocked');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.some(characters, { 'age': 1 });
     * // => false
     */
    function some(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if ((result = callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return !(result = callback(value, index, collection));
        });
      }
      return !!result;
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through the callback. This method
     * performs a stable sort, that is, it will preserve the original sort order
     * of equal elements. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an array of property names is provided for `callback` the collection
     * will be sorted by each property value.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of sorted elements.
     * @example
     *
     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
     * // => [3, 1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'barney',  'age': 26 },
     *   { 'name': 'fred',    'age': 30 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(_.sortBy(characters, 'age'), _.values);
     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
     *
     * // sorting by multiple properties
     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
     */
    function sortBy(collection, callback, thisArg) {
      var index = -1,
          isArr = isArray(callback),
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      if (!isArr) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      forEach(collection, function(value, key, collection) {
        var object = result[++index] = getObject();
        if (isArr) {
          object.criteria = map(callback, function(key) { return value[key]; });
        } else {
          (object.criteria = getArray())[0] = callback(value, key, collection);
        }
        object.index = index;
        object.value = value;
      });

      length = result.length;
      result.sort(compareAscending);
      while (length--) {
        var object = result[length];
        result[length] = object.value;
        if (!isArr) {
          releaseArray(object.criteria);
        }
        releaseObject(object);
      }
      return result;
    }

    /**
     * Converts the `collection` to an array.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to convert.
     * @returns {Array} Returns the new converted array.
     * @example
     *
     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
     * // => [2, 3, 4]
     */
    function toArray(collection) {
      if (collection && typeof collection.length == 'number') {
        return slice(collection);
      }
      return values(collection);
    }

    /**
     * Performs a deep comparison of each element in a `collection` to the given
     * `properties` object, returning an array of all elements that have equivalent
     * property values.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Object} props The object of property values to filter by.
     * @returns {Array} Returns a new array of elements that have the given properties.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.where(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
     *
     * _.where(characters, { 'pets': ['dino'] });
     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
     */
    var where = filter;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are all falsey.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to compact.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array excluding all values of the provided arrays using strict
     * equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
     * // => [1, 3, 4]
     */
    function difference(array) {
      return baseDifference(array, baseFlatten(arguments, true, true, 1));
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.findIndex(characters, function(chr) {
     *   return chr.age < 20;
     * });
     * // => 2
     *
     * // using "_.where" callback shorthand
     * _.findIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findIndex(characters, 'blocked');
     * // => 1
     */
    function findIndex(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        if (callback(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': true },
     *   { 'name': 'fred',    'age': 40, 'blocked': false },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
     * ];
     *
     * _.findLastIndex(characters, function(chr) {
     *   return chr.age > 30;
     * });
     * // => 1
     *
     * // using "_.where" callback shorthand
     * _.findLastIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findLastIndex(characters, 'blocked');
     * // => 2
     */
    function findLastIndex(array, callback, thisArg) {
      var length = array ? array.length : 0;
      callback = lodash.createCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(array[length], length, array)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Gets the first element or first `n` elements of an array. If a callback
     * is provided elements at the beginning of the array are returned as long
     * as the callback returns truey. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias head, take
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the first element(s) of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.first([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.first(characters, 'blocked');
     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
     * // => ['barney', 'fred']
     */
    function first(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = -1;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[0] : undefined;
        }
      }
      return slice(array, 0, nativeMin(nativeMax(0, n), length));
    }

    /**
     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
     * is truey, the array will only be flattened a single level. If a callback
     * is provided each element of the array is passed through the callback before
     * flattening. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new flattened array.
     * @example
     *
     * _.flatten([1, [2], [3, [[4]]]]);
     * // => [1, 2, 3, 4];
     *
     * _.flatten([1, [2], [3, [[4]]]], true);
     * // => [1, 2, 3, [[4]]];
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.flatten(characters, 'pets');
     * // => ['hoppy', 'baby puss', 'dino']
     */
    function flatten(array, isShallow, callback, thisArg) {
      // juggle arguments
      if (typeof isShallow != 'boolean' && isShallow != null) {
        thisArg = callback;
        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
        isShallow = false;
      }
      if (callback != null) {
        array = map(array, callback, thisArg);
      }
      return baseFlatten(array, isShallow);
    }

    /**
     * Gets the index at which the first occurrence of `value` is found using
     * strict equality for comparisons, i.e. `===`. If the array is already sorted
     * providing `true` for `fromIndex` will run a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 1
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 4
     *
     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      if (typeof fromIndex == 'number') {
        var length = array ? array.length : 0;
        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
      } else if (fromIndex) {
        var index = sortedIndex(array, value);
        return array[index] === value ? index : -1;
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element or last `n` elements of an array. If a
     * callback is provided elements at the end of the array are excluded from
     * the result as long as the callback returns truey. The callback is bound
     * to `thisArg` and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     *
     * _.initial([1, 2, 3], 2);
     * // => [1]
     *
     * _.initial([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [1]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.initial(characters, 'blocked');
     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
     * // => ['barney', 'fred']
     */
    function initial(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : callback || n;
      }
      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
    }

    /**
     * Creates an array of unique values present in all provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of shared values.
     * @example
     *
     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2]
     */
    function intersection() {
      var args = [],
          argsIndex = -1,
          argsLength = arguments.length,
          caches = getArray(),
          indexOf = getIndexOf(),
          trustIndexOf = indexOf === baseIndexOf,
          seen = getArray();

      while (++argsIndex < argsLength) {
        var value = arguments[argsIndex];
        if (isArray(value) || isArguments(value)) {
          args.push(value);
          caches.push(trustIndexOf && value.length >= largeArraySize &&
            createCache(argsIndex ? args[argsIndex] : seen));
        }
      }
      var array = args[0],
          index = -1,
          length = array ? array.length : 0,
          result = [];

      outer:
      while (++index < length) {
        var cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    /**
     * Gets the last element or last `n` elements of an array. If a callback is
     * provided elements at the end of the array are returned as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the last element(s) of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     *
     * _.last([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.last([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [2, 3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.last(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.last(characters, { 'employer': 'na' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function last(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[length - 1] : undefined;
        }
      }
      return slice(array, nativeMax(0, length - n));
    }

    /**
     * Gets the index at which the last occurrence of `value` is found using strict
     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
     * as the offset from the end of the collection.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 4
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var index = array ? array.length : 0;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from the given array using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {...*} [value] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull(array) {
      var args = arguments,
          argsIndex = 0,
          argsLength = args.length,
          length = array ? array.length : 0;

      while (++argsIndex < argsLength) {
        var index = -1,
            value = args[argsIndex];
        while (++index < length) {
          if (array[index] === value) {
            splice.call(array, index--, 1);
            length--;
          }
        }
      }
      return array;
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to but not including `end`. If `start` is less than `stop` a
     * zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns a new range array.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      start = +start || 0;
      step = typeof step == 'number' ? step : (+step || 1);

      if (end == null) {
        end = start;
        start = 0;
      }
      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
      var index = -1,
          length = nativeMax(0, ceil((end - start) / (step || 1))),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Removes all elements from an array that the callback returns truey for
     * and returns an array of removed elements. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4, 5, 6];
     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
     *
     * console.log(array);
     * // => [1, 3, 5]
     *
     * console.log(evens);
     * // => [2, 4, 6]
     */
    function remove(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (callback(value, index, array)) {
          result.push(value);
          splice.call(array, index--, 1);
          length--;
        }
      }
      return result;
    }

    /**
     * The opposite of `_.initial` this method gets all but the first element or
     * first `n` elements of an array. If a callback function is provided elements
     * at the beginning of the array are excluded from the result as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias drop, tail
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     *
     * _.rest([1, 2, 3], 2);
     * // => [3]
     *
     * _.rest([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.rest(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.rest(characters, { 'employer': 'slate' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function rest(array, callback, thisArg) {
      if (typeof callback != 'number' && callback != null) {
        var n = 0,
            index = -1,
            length = array ? array.length : 0;

        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
      }
      return slice(array, n);
    }

    /**
     * Uses a binary search to determine the smallest index at which a value
     * should be inserted into a given sorted array in order to maintain the sort
     * order of the array. If a callback is provided it will be executed for
     * `value` and each element of `array` to compute their sort ranking. The
     * callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([20, 30, 50], 40);
     * // => 2
     *
     * // using "_.pluck" callback shorthand
     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 2
     *
     * var dict = {
     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
     * };
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return dict.wordToNumber[word];
     * });
     * // => 2
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return this.wordToNumber[word];
     * }, dict);
     * // => 2
     */
    function sortedIndex(array, value, callback, thisArg) {
      var low = 0,
          high = array ? array.length : low;

      // explicitly reference `identity` for better inlining in Firefox
      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
      value = callback(value);

      while (low < high) {
        var mid = (low + high) >>> 1;
        (callback(array[mid]) < value)
          ? low = mid + 1
          : high = mid;
      }
      return low;
    }

    /**
     * Creates an array of unique values, in order, of the provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of combined values.
     * @example
     *
     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2, 3, 5, 4]
     */
    function union() {
      return baseUniq(baseFlatten(arguments, true, true));
    }

    /**
     * Creates a duplicate-value-free version of an array using strict equality
     * for comparisons, i.e. `===`. If the array is sorted, providing
     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
     * each element of `array` is passed through the callback before uniqueness
     * is computed. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a duplicate-value-free array.
     * @example
     *
     * _.uniq([1, 2, 1, 3, 1]);
     * // => [1, 2, 3]
     *
     * _.uniq([1, 1, 2, 2, 3], true);
     * // => [1, 2, 3]
     *
     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
     * // => ['A', 'b', 'C']
     *
     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
     * // => [1, 2.5, 3]
     *
     * // using "_.pluck" callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, callback, thisArg) {
      // juggle arguments
      if (typeof isSorted != 'boolean' && isSorted != null) {
        thisArg = callback;
        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
        isSorted = false;
      }
      if (callback != null) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      return baseUniq(array, isSorted, callback);
    }

    /**
     * Creates an array excluding all provided values using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to filter.
     * @param {...*} [value] The values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
     * // => [2, 3, 4]
     */
    function without(array) {
      return baseDifference(array, slice(arguments, 1));
    }

    /**
     * Creates an array that is the symmetric difference of the provided arrays.
     * See http://en.wikipedia.org/wiki/Symmetric_difference.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of values.
     * @example
     *
     * _.xor([1, 2, 3], [5, 2, 1, 4]);
     * // => [3, 5, 4]
     *
     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
     * // => [1, 4, 5]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArray(array) || isArguments(array)) {
          var result = result
            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
            : array;
        }
      }
      return result || [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second
     * elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @alias unzip
     * @category Arrays
     * @param {...Array} [array] Arrays to process.
     * @returns {Array} Returns a new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    function zip() {
      var array = arguments.length > 1 ? arguments : arguments[0],
          index = -1,
          length = array ? max(pluck(array, 'length')) : 0,
          result = Array(length < 0 ? 0 : length);

      while (++index < length) {
        result[index] = pluck(array, index);
      }
      return result;
    }

    /**
     * Creates an object composed from arrays of `keys` and `values`. Provide
     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
     * or two arrays, one of `keys` and one of corresponding `values`.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Arrays
     * @param {Array} keys The array of keys.
     * @param {Array} [values=[]] The array of values.
     * @returns {Object} Returns an object composed of the given keys and
     *  corresponding values.
     * @example
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(keys, values) {
      var index = -1,
          length = keys ? keys.length : 0,
          result = {};

      if (!values && length && !isArray(keys[0])) {
        values = [];
      }
      while (++index < length) {
        var key = keys[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that executes `func`, with  the `this` binding and
     * arguments of the created function, only after being called `n` times.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {number} n The number of times the function must be called before
     *  `func` is executed.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('Done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'Done saving!', after all saves have completed
     */
    function after(n, func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with the `this`
     * binding of `thisArg` and prepends any additional `bind` arguments to those
     * provided to the bound function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var func = function(greeting) {
     *   return greeting + ' ' + this.name;
     * };
     *
     * func = _.bind(func, { 'name': 'fred' }, 'hi');
     * func();
     * // => 'hi fred'
     */
    function bind(func, thisArg) {
      return arguments.length > 2
        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
        : createWrapper(func, 1, null, null, thisArg);
    }

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all the function properties
     * of `object` will be bound.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...string} [methodName] The object method names to
     *  bind, specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() { console.log('clicked ' + this.label); }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs', when the button is clicked
     */
    function bindAll(object) {
      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
          index = -1,
          length = funcs.length;

      while (++index < length) {
        var key = funcs[index];
        object[key] = createWrapper(object[key], 1, null, null, object);
      }
      return object;
    }

    /**
     * Creates a function that, when called, invokes the method at `object[key]`
     * and prepends any additional `bindKey` arguments to those provided to the bound
     * function. This method differs from `_.bind` by allowing bound functions to
     * reference methods that will be redefined or don't yet exist.
     * See http://michaux.ca/articles/lazy-function-definition-pattern.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'name': 'fred',
     *   'greet': function(greeting) {
     *     return greeting + ' ' + this.name;
     *   }
     * };
     *
     * var func = _.bindKey(object, 'greet', 'hi');
     * func();
     * // => 'hi fred'
     *
     * object.greet = function(greeting) {
     *   return greeting + 'ya ' + this.name + '!';
     * };
     *
     * func();
     * // => 'hiya fred!'
     */
    function bindKey(object, key) {
      return arguments.length > 2
        ? createWrapper(key, 19, slice(arguments, 2), null, object)
        : createWrapper(key, 3, null, null, object);
    }

    /**
     * Creates a function that is the composition of the provided functions,
     * where each function consumes the return value of the function that follows.
     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
     * Each function is executed with the `this` binding of the composed function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {...Function} [func] Functions to compose.
     * @returns {Function} Returns the new composed function.
     * @example
     *
     * var realNameMap = {
     *   'pebbles': 'penelope'
     * };
     *
     * var format = function(name) {
     *   name = realNameMap[name.toLowerCase()] || name;
     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
     * };
     *
     * var greet = function(formatted) {
     *   return 'Hiya ' + formatted + '!';
     * };
     *
     * var welcome = _.compose(greet, format);
     * welcome('pebbles');
     * // => 'Hiya Penelope!'
     */
    function compose() {
      var funcs = arguments,
          length = funcs.length;

      while (length--) {
        if (!isFunction(funcs[length])) {
          throw new TypeError;
        }
      }
      return function() {
        var args = arguments,
            length = funcs.length;

        while (length--) {
          args = [funcs[length].apply(this, args)];
        }
        return args[0];
      };
    }

    /**
     * Creates a function which accepts one or more arguments of `func` that when
     * invoked either executes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` can be specified
     * if `func.length` is not sufficient.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var curried = _.curry(function(a, b, c) {
     *   console.log(a + b + c);
     * });
     *
     * curried(1)(2)(3);
     * // => 6
     *
     * curried(1, 2)(3);
     * // => 6
     *
     * curried(1, 2, 3);
     * // => 6
     */
    function curry(func, arity) {
      arity = typeof arity == 'number' ? arity : (+arity || func.length);
      return createWrapper(func, 4, null, null, null, arity);
    }

    /**
     * Creates a function that will delay the execution of `func` until after
     * `wait` milliseconds have elapsed since the last time it was invoked.
     * Provide an options object to indicate that `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
     * to the debounced function will return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to debounce.
     * @param {number} wait The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * var lazyLayout = _.debounce(calculateLayout, 150);
     * jQuery(window).on('resize', lazyLayout);
     *
     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * });
     *
     * // ensure `batchLog` is executed once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * source.addEventListener('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }, false);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      wait = nativeMax(0, wait) || 0;
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = options.leading;
        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      var delayed = function() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0) {
          if (maxTimeoutId) {
            clearTimeout(maxTimeoutId);
          }
          var isCalled = trailingCall;
          maxTimeoutId = timeoutId = trailingCall = undefined;
          if (isCalled) {
            lastCalled = now();
            result = func.apply(thisArg, args);
            if (!timeoutId && !maxTimeoutId) {
              args = thisArg = null;
            }
          }
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      };

      var maxDelayed = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (trailing || (maxWait !== wait)) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = null;
          }
        }
      };

      return function() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
        return result;
      };
    }

    /**
     * Defers executing the `func` function until the current call stack has cleared.
     * Additional arguments will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to defer.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) { console.log(text); }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    function defer(func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 1);
      return setTimeout(function() { func.apply(undefined, args); }, 1);
    }

    /**
     * Executes the `func` function after `wait` milliseconds. Additional arguments
     * will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay execution.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) { console.log(text); }, 1000, 'later');
     * // => logs 'later' after one second
     */
    function delay(func, wait) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 2);
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it will be used to determine the cache key for storing the result
     * based on the arguments provided to the memoized function. By default, the
     * first argument provided to the memoized function is used as the cache key.
     * The `func` is executed with the `this` binding of the memoized function.
     * The result cache is exposed as the `cache` property on the memoized function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] A function used to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var fibonacci = _.memoize(function(n) {
     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
     * });
     *
     * fibonacci(9)
     * // => 34
     *
     * var data = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // modifying the result cache
     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
     * get('pebbles');
     * // => { 'name': 'pebbles', 'age': 1 }
     *
     * get.cache.pebbles.name = 'penelope';
     * get('pebbles');
     * // => { 'name': 'penelope', 'age': 1 }
     */
    function memoize(func, resolver) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var memoized = function() {
        var cache = memoized.cache,
            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

        return hasOwnProperty.call(cache, key)
          ? cache[key]
          : (cache[key] = func.apply(this, arguments));
      }
      memoized.cache = {};
      return memoized;
    }

    /**
     * Creates a function that is restricted to execute `func` once. Repeat calls to
     * the function will return the value of the first call. The `func` is executed
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` executes `createApplication` once
     */
    function once(func) {
      var ran,
          result;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (ran) {
          return result;
        }
        ran = true;
        result = func.apply(this, arguments);

        // clear the `func` variable so the function may be garbage collected
        func = null;
        return result;
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with any additional
     * `partial` arguments prepended to those provided to the new function. This
     * method is similar to `_.bind` except it does **not** alter the `this` binding.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) { return greeting + ' ' + name; };
     * var hi = _.partial(greet, 'hi');
     * hi('fred');
     * // => 'hi fred'
     */
    function partial(func) {
      return createWrapper(func, 16, slice(arguments, 1));
    }

    /**
     * This method is like `_.partial` except that `partial` arguments are
     * appended to those provided to the new function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
     *
     * var options = {
     *   'variable': 'data',
     *   'imports': { 'jq': $ }
     * };
     *
     * defaultsDeep(options, _.templateSettings);
     *
     * options.variable
     * // => 'data'
     *
     * options.imports
     * // => { '_': _, 'jq': $ }
     */
    function partialRight(func) {
      return createWrapper(func, 32, null, slice(arguments, 1));
    }

    /**
     * Creates a function that, when executed, will only call the `func` function
     * at most once per every `wait` milliseconds. Provide an options object to
     * indicate that `func` should be invoked on the leading and/or trailing edge
     * of the `wait` timeout. Subsequent calls to the throttled function will
     * return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to throttle.
     * @param {number} wait The number of milliseconds to throttle executions to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * var throttled = _.throttle(updatePosition, 100);
     * jQuery(window).on('scroll', throttled);
     *
     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? options.leading : leading;
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      debounceOptions.leading = leading;
      debounceOptions.maxWait = wait;
      debounceOptions.trailing = trailing;

      return debounce(func, wait, debounceOptions);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Additional arguments provided to the function are appended
     * to those provided to the wrapper function. The wrapper is executed with
     * the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('Fred, Wilma, & Pebbles');
     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
     */
    function wrap(value, wrapper) {
      return createWrapper(wrapper, 16, [value]);
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var getter = _.constant(object);
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Produces a callback bound to an optional `thisArg`. If `func` is a property
     * name the created callback will return the property value for a given element.
     * If `func` is an object the created callback will return `true` for elements
     * that contain the equivalent object properties, otherwise it will return `false`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
     *   return !match ? func(callback, thisArg) : function(object) {
     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(characters, 'age__gt38');
     * // => [{ 'name': 'fred', 'age': 40 }]
     */
    function createCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (func == null || type == 'function') {
        return baseCreateCallback(func, thisArg, argCount);
      }
      // handle "_.pluck" style callback shorthands
      if (type != 'object') {
        return property(func);
      }
      var props = keys(func),
          key = props[0],
          a = func[key];

      // handle "_.where" style callback shorthands
      if (props.length == 1 && a === a && !isObject(a)) {
        // fast path the common case of providing an object with a single
        // property containing a primitive value
        return function(object) {
          var b = object[key];
          return a === b && (a !== 0 || (1 / a == 1 / b));
        };
      }
      return function(object) {
        var length = props.length,
            result = false;

        while (length--) {
          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
            break;
          }
        }
        return result;
      };
    }

    /**
     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
     * corresponding HTML entities.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('Fred, Wilma, & Pebbles');
     * // => 'Fred, Wilma, &amp; Pebbles'
     */
    function escape(string) {
      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Adds function properties of a source object to the destination object.
     * If `object` is a function methods will be added to its prototype as well.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Function|Object} [object=lodash] object The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
     * @example
     *
     * function capitalize(string) {
     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
     * }
     *
     * _.mixin({ 'capitalize': capitalize });
     * _.capitalize('fred');
     * // => 'Fred'
     *
     * _('fred').capitalize().value();
     * // => 'Fred'
     *
     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
     * _('fred').capitalize();
     * // => 'Fred'
     */
    function mixin(object, source, options) {
      var chain = true,
          methodNames = source && functions(source);

      if (!source || (!options && !methodNames.length)) {
        if (options == null) {
          options = source;
        }
        ctor = lodashWrapper;
        source = object;
        object = lodash;
        methodNames = functions(source);
      }
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      var ctor = object,
          isFunc = isFunction(ctor);

      forEach(methodNames, function(methodName) {
        var func = object[methodName] = source[methodName];
        if (isFunc) {
          ctor.prototype[methodName] = function() {
            var chainAll = this.__chain__,
                value = this.__wrapped__,
                args = [value];

            push.apply(args, arguments);
            var result = func.apply(object, args);
            if (chain || chainAll) {
              if (value === result && isObject(result)) {
                return this;
              }
              result = new ctor(result);
              result.__chain__ = chainAll;
            }
            return result;
          };
        }
      });
    }

    /**
     * Reverts the '_' variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      context._ = oldDash;
      return this;
    }

    /**
     * A no-operation function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // no operation performed
    }

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var stamp = _.now();
     * _.defer(function() { console.log(_.now() - stamp); });
     * // => logs the number of milliseconds it took for the deferred function to be called
     */
    var now = isNative(now = Date.now) && now || function() {
      return new Date().getTime();
    };

    /**
     * Converts the given value into an integer of the specified radix.
     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
     *
     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
     * implementations. See http://es5.github.io/#E.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} value The value to parse.
     * @param {number} [radix] The radix used to interpret the value to parse.
     * @returns {number} Returns the new integer value.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     */
    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
    };

    /**
     * Creates a "_.pluck" style function, which returns the `key` value of a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} key The name of the property to retrieve.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var characters = [
     *   { 'name': 'fred',   'age': 40 },
     *   { 'name': 'barney', 'age': 36 }
     * ];
     *
     * var getName = _.property('name');
     *
     * _.map(characters, getName);
     * // => ['barney', 'fred']
     *
     * _.sortBy(characters, getName);
     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
     */
    function property(key) {
      return function(object) {
        return object[key];
      };
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number will be
     * returned. If `floating` is truey or either `min` or `max` are floats a
     * floating-point number will be returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating=false] Specify returning a floating-point number.
     * @returns {number} Returns a random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (typeof min == 'boolean' && noMax) {
          floating = min;
          min = 1;
        }
        else if (!noMax && typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /**
     * Resolves the value of property `key` on `object`. If `key` is a function
     * it will be invoked with the `this` binding of `object` and its result returned,
     * else the property value is returned. If `object` is falsey then `undefined`
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to resolve.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = {
     *   'cheese': 'crumpets',
     *   'stuff': function() {
     *     return 'nonsense';
     *   }
     * };
     *
     * _.result(object, 'cheese');
     * // => 'crumpets'
     *
     * _.result(object, 'stuff');
     * // => 'nonsense'
     */
    function result(object, key) {
      if (object) {
        var value = object[key];
        return isFunction(value) ? object[key]() : value;
      }
    }

    /**
     * A micro-templating method that handles arbitrary delimiters, preserves
     * whitespace, and correctly escapes quotes within interpolated code.
     *
     * Note: In the development build, `_.template` utilizes sourceURLs for easier
     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
     *
     * For more information on precompiling templates see:
     * https://lodash.com/custom-builds
     *
     * For more information on Chrome extension sandboxes see:
     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} text The template text.
     * @param {Object} data The data object used to populate the text.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as local variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [variable] The data object variable name.
     * @returns {Function|string} Returns a compiled function when no `data` object
     *  is given, else it returns the interpolated text.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= name %>');
     * compiled({ 'name': 'fred' });
     * // => 'hello fred'
     *
     * // using the "escape" delimiter to escape HTML in data property values
     * _.template('<b><%- value %></b>', { 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to generate HTML
     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
     * _.template('hello ${ name }', { 'name': 'pebbles' });
     * // => 'hello pebbles'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
     * // => 'hello barney!'
     *
     * // using a custom template delimiters
     * _.templateSettings = {
     *   'interpolate': /{{([\s\S]+?)}}/g
     * };
     *
     * _.template('hello {{ name }}!', { 'name': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using the `imports` option to import jQuery
     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     *   var __t, __p = '', __e = _.escape;
     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
     *   return __p;
     * }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(text, data, options) {
      // based on John Resig's `tmpl` implementation
      // http://ejohn.org/blog/javascript-micro-templating/
      // and Laura Doktorova's doT.js
      // https://github.com/olado/doT
      var settings = lodash.templateSettings;
      text = String(text || '');

      // avoid missing dependencies when `iteratorTemplate` is not defined
      options = defaults({}, options, settings);

      var imports = defaults({}, options.imports, settings.imports),
          importsKeys = keys(imports),
          importsValues = values(imports);

      var isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // compile the regexp to match each delimiter
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // escape characters that cannot be included in string literals
        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // replace delimiters with snippets
        if (escapeValue) {
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // the JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value
        return match;
      });

      source += "';\n";

      // if `variable` is not specified, wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain
      var variable = options.variable,
          hasVariable = variable;

      if (!hasVariable) {
        variable = 'obj';
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      // cleanup code by stripping empty strings
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // frame code as the function body
      source = 'function(' + variable + ') {\n' +
        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
        "var __t, __p = '', __e = _.escape" +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      // Use a sourceURL for easier debugging.
      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

      try {
        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
      } catch(e) {
        e.source = source;
        throw e;
      }
      if (data) {
        return result(data);
      }
      // provide the compiled function's source by its `toString` method, in
      // supported environments, or the `source` property as a convenience for
      // inlining compiled templates during the build process
      result.source = source;
      return result;
    }

    /**
     * Executes the callback `n` times, returning an array of the results
     * of each callback execution. The callback is bound to `thisArg` and invoked
     * with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} n The number of times to execute the callback.
     * @param {Function} callback The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns an array of the results of each `callback` execution.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) { mage.castSpell(n); });
     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
     *
     * _.times(3, function(n) { this.cast(n); }, mage);
     * // => also calls `mage.castSpell(n)` three times
     */
    function times(n, callback, thisArg) {
      n = (n = +n) > -1 ? n : 0;
      var index = -1,
          result = Array(n);

      callback = baseCreateCallback(callback, thisArg, 1);
      while (++index < n) {
        result[index] = callback(index);
      }
      return result;
    }

    /**
     * The inverse of `_.escape` this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
     * corresponding characters.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('Fred, Barney &amp; Pebbles');
     * // => 'Fred, Barney & Pebbles'
     */
    function unescape(string) {
      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return String(prefix == null ? '' : prefix) + id;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps the given value with explicit
     * method chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(characters)
     *     .sortBy('age')
     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
     *     .first()
     *     .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      value = new lodashWrapper(value);
      value.__chain__ = true;
      return value;
    }

    /**
     * Invokes `interceptor` with the `value` as the first argument and then
     * returns `value`. The purpose of this method is to "tap into" a method
     * chain in order to perform operations on intermediate results within
     * the chain.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3, 4])
     *  .tap(function(array) { array.pop(); })
     *  .reverse()
     *  .value();
     * // => [3, 2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chaining
     * @returns {*} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(characters).first();
     * // => { 'name': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(characters).chain()
     *   .first()
     *   .pick('age')
     *   .value();
     * // => { 'age': 36 }
     */
    function wrapperChain() {
      this.__chain__ = true;
      return this;
    }

    /**
     * Produces the `toString` result of the wrapped value.
     *
     * @name toString
     * @memberOf _
     * @category Chaining
     * @returns {string} Returns the string result.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return String(this.__wrapped__);
    }

    /**
     * Extracts the wrapped value.
     *
     * @name valueOf
     * @memberOf _
     * @alias value
     * @category Chaining
     * @returns {*} Returns the wrapped value.
     * @example
     *
     * _([1, 2, 3]).valueOf();
     * // => [1, 2, 3]
     */
    function wrapperValueOf() {
      return this.__wrapped__;
    }

    /*--------------------------------------------------------------------------*/

    // add functions that return wrapped values when chaining
    lodash.after = after;
    lodash.assign = assign;
    lodash.at = at;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.chain = chain;
    lodash.compact = compact;
    lodash.compose = compose;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.createCallback = createCallback;
    lodash.curry = curry;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.map = map;
    lodash.mapValues = mapValues;
    lodash.max = max;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.min = min;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.pull = pull;
    lodash.range = range;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.shuffle = shuffle;
    lodash.sortBy = sortBy;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.values = values;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;

    // add aliases
    lodash.collect = map;
    lodash.drop = rest;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    lodash.unzip = zip;

    // add functions to `lodash.prototype`
    mixin(lodash);

    /*--------------------------------------------------------------------------*/

    // add functions that return unwrapped values when chaining
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.contains = contains;
    lodash.escape = escape;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.has = has;
    lodash.identity = identity;
    lodash.indexOf = indexOf;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isNaN = isNaN;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isUndefined = isUndefined;
    lodash.lastIndexOf = lastIndexOf;
    lodash.mixin = mixin;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.result = result;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.template = template;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;

    // add aliases
    lodash.all = every;
    lodash.any = some;
    lodash.detect = find;
    lodash.findWhere = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.include = contains;
    lodash.inject = reduce;

    mixin(function() {
      var source = {}
      forOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }(), false);

    /*--------------------------------------------------------------------------*/

    // add functions capable of returning wrapped and unwrapped values when chaining
    lodash.first = first;
    lodash.last = last;
    lodash.sample = sample;

    // add aliases
    lodash.take = first;
    lodash.head = first;

    forOwn(lodash, function(func, methodName) {
      var callbackable = methodName !== 'sample';
      if (!lodash.prototype[methodName]) {
        lodash.prototype[methodName]= function(n, guard) {
          var chainAll = this.__chain__,
              result = func(this.__wrapped__, n, guard);

          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
            ? result
            : new lodashWrapper(result, chainAll);
        };
      }
    });

    /*--------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = '2.4.2';

    // add "Chaining" functions to the wrapper
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.value = wrapperValueOf;
    lodash.prototype.valueOf = wrapperValueOf;

    // add `Array` functions that return unwrapped values
    forEach(['join', 'pop', 'shift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        var chainAll = this.__chain__,
            result = func.apply(this.__wrapped__, arguments);

        return chainAll
          ? new lodashWrapper(result, chainAll)
          : result;
      };
    });

    // add `Array` functions that return the existing wrapped value
    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        func.apply(this.__wrapped__, arguments);
        return this;
      };
    });

    // add `Array` functions that return new wrapped values
    forEach(['concat', 'slice', 'splice'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
      };
    });

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  var _ = runInContext();

  // some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash is loaded with a RequireJS shim config.
    // See http://requirejs.org/docs/api.html#config-shim
    root._ = _;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    define(function() {
      return _;
    });
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports && freeModule) {
    // in Node.js or RingoJS
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // in Narwhal or Rhino -require
    else {
      freeExports._ = _;
    }
  }
  else {
    // in a browser or Rhino
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],102:[function(require,module,exports){

/***** xregexp.js *****/

/*!
 * XRegExp v2.0.0
 * (c) 2007-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 */

/**
 * XRegExp provides augmented, extensible JavaScript regular expressions. You get new syntax,
 * flags, and methods beyond what browsers support natively. XRegExp is also a regex utility belt
 * with tools to make your client-side grepping simpler and more powerful, while freeing you from
 * worrying about pesky cross-browser inconsistencies and the dubious `lastIndex` property. See
 * XRegExp's documentation (http://xregexp.com/) for more details.
 * @module xregexp
 * @requires N/A
 */
var XRegExp;

// Avoid running twice; that would reset tokens and could break references to native globals
XRegExp = XRegExp || (function (undef) {
    "use strict";

/*--------------------------------------
 *  Private variables
 *------------------------------------*/

    var self,
        addToken,
        add,

// Optional features; can be installed and uninstalled
        features = {
            natives: false,
            extensibility: false
        },

// Store native methods to use and restore ("native" is an ES3 reserved keyword)
        nativ = {
            exec: RegExp.prototype.exec,
            test: RegExp.prototype.test,
            match: String.prototype.match,
            replace: String.prototype.replace,
            split: String.prototype.split
        },

// Storage for fixed/extended native methods
        fixed = {},

// Storage for cached regexes
        cache = {},

// Storage for addon tokens
        tokens = [],

// Token scopes
        defaultScope = "default",
        classScope = "class",

// Regexes that match native regex syntax
        nativeTokens = {
            // Any native multicharacter token in default scope (includes octals, excludes character classes)
            "default": /^(?:\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S])|\(\?[:=!]|[?*+]\?|{\d+(?:,\d*)?}\??)/,
            // Any native multicharacter token in character class scope (includes octals)
            "class": /^(?:\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S]))/
        },

// Any backreference in replacement strings
        replacementToken = /\$(?:{([\w$]+)}|(\d\d?|[\s\S]))/g,

// Any character with a later instance in the string
        duplicateFlags = /([\s\S])(?=[\s\S]*\1)/g,

// Any greedy/lazy quantifier
        quantifier = /^(?:[?*+]|{\d+(?:,\d*)?})\??/,

// Check for correct `exec` handling of nonparticipating capturing groups
        compliantExecNpcg = nativ.exec.call(/()??/, "")[1] === undef,

// Check for flag y support (Firefox 3+)
        hasNativeY = RegExp.prototype.sticky !== undef,

// Used to kill infinite recursion during XRegExp construction
        isInsideConstructor = false,

// Storage for known flags, including addon flags
        registeredFlags = "gim" + (hasNativeY ? "y" : "");

/*--------------------------------------
 *  Private helper functions
 *------------------------------------*/

/**
 * Attaches XRegExp.prototype properties and named capture supporting data to a regex object.
 * @private
 * @param {RegExp} regex Regex to augment.
 * @param {Array} captureNames Array with capture names, or null.
 * @param {Boolean} [isNative] Whether the regex was created by `RegExp` rather than `XRegExp`.
 * @returns {RegExp} Augmented regex.
 */
    function augment(regex, captureNames, isNative) {
        var p;
        // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value
        for (p in self.prototype) {
            if (self.prototype.hasOwnProperty(p)) {
                regex[p] = self.prototype[p];
            }
        }
        regex.xregexp = {captureNames: captureNames, isNative: !!isNative};
        return regex;
    }

/**
 * Returns native `RegExp` flags used by a regex object.
 * @private
 * @param {RegExp} regex Regex to check.
 * @returns {String} Native flags in use.
 */
    function getNativeFlags(regex) {
        //return nativ.exec.call(/\/([a-z]*)$/i, String(regex))[1];
        return (regex.global     ? "g" : "") +
               (regex.ignoreCase ? "i" : "") +
               (regex.multiline  ? "m" : "") +
               (regex.extended   ? "x" : "") + // Proposed for ES6, included in AS3
               (regex.sticky     ? "y" : ""); // Proposed for ES6, included in Firefox 3+
    }

/**
 * Copies a regex object while preserving special properties for named capture and augmenting with
 * `XRegExp.prototype` methods. The copy has a fresh `lastIndex` property (set to zero). Allows
 * adding and removing flags while copying the regex.
 * @private
 * @param {RegExp} regex Regex to copy.
 * @param {String} [addFlags] Flags to be added while copying the regex.
 * @param {String} [removeFlags] Flags to be removed while copying the regex.
 * @returns {RegExp} Copy of the provided regex, possibly with modified flags.
 */
    function copy(regex, addFlags, removeFlags) {
        if (!self.isRegExp(regex)) {
            throw new TypeError("type RegExp expected");
        }
        var flags = nativ.replace.call(getNativeFlags(regex) + (addFlags || ""), duplicateFlags, "");
        if (removeFlags) {
            // Would need to escape `removeFlags` if this was public
            flags = nativ.replace.call(flags, new RegExp("[" + removeFlags + "]+", "g"), "");
        }
        if (regex.xregexp && !regex.xregexp.isNative) {
            // Compiling the current (rather than precompilation) source preserves the effects of nonnative source flags
            regex = augment(self(regex.source, flags),
                            regex.xregexp.captureNames ? regex.xregexp.captureNames.slice(0) : null);
        } else {
            // Augment with `XRegExp.prototype` methods, but use native `RegExp` (avoid searching for special tokens)
            regex = augment(new RegExp(regex.source, flags), null, true);
        }
        return regex;
    }

/*
 * Returns the last index at which a given value can be found in an array, or `-1` if it's not
 * present. The array is searched backwards.
 * @private
 * @param {Array} array Array to search.
 * @param {*} value Value to locate in the array.
 * @returns {Number} Last zero-based index at which the item is found, or -1.
 */
    function lastIndexOf(array, value) {
        var i = array.length;
        if (Array.prototype.lastIndexOf) {
            return array.lastIndexOf(value); // Use the native method if available
        }
        while (i--) {
            if (array[i] === value) {
                return i;
            }
        }
        return -1;
    }

/**
 * Determines whether an object is of the specified type.
 * @private
 * @param {*} value Object to check.
 * @param {String} type Type to check for, in lowercase.
 * @returns {Boolean} Whether the object matches the type.
 */
    function isType(value, type) {
        return Object.prototype.toString.call(value).toLowerCase() === "[object " + type + "]";
    }

/**
 * Prepares an options object from the given value.
 * @private
 * @param {String|Object} value Value to convert to an options object.
 * @returns {Object} Options object.
 */
    function prepareOptions(value) {
        value = value || {};
        if (value === "all" || value.all) {
            value = {natives: true, extensibility: true};
        } else if (isType(value, "string")) {
            value = self.forEach(value, /[^\s,]+/, function (m) {
                this[m] = true;
            }, {});
        }
        return value;
    }

/**
 * Runs built-in/custom tokens in reverse insertion order, until a match is found.
 * @private
 * @param {String} pattern Original pattern from which an XRegExp object is being built.
 * @param {Number} pos Position to search for tokens within `pattern`.
 * @param {Number} scope Current regex scope.
 * @param {Object} context Context object assigned to token handler functions.
 * @returns {Object} Object with properties `output` (the substitution string returned by the
 *   successful token handler) and `match` (the token's match array), or null.
 */
    function runTokens(pattern, pos, scope, context) {
        var i = tokens.length,
            result = null,
            match,
            t;
        // Protect against constructing XRegExps within token handler and trigger functions
        isInsideConstructor = true;
        // Must reset `isInsideConstructor`, even if a `trigger` or `handler` throws
        try {
            while (i--) { // Run in reverse order
                t = tokens[i];
                if ((t.scope === "all" || t.scope === scope) && (!t.trigger || t.trigger.call(context))) {
                    t.pattern.lastIndex = pos;
                    match = fixed.exec.call(t.pattern, pattern); // Fixed `exec` here allows use of named backreferences, etc.
                    if (match && match.index === pos) {
                        result = {
                            output: t.handler.call(context, match, scope),
                            match: match
                        };
                        break;
                    }
                }
            }
        } catch (err) {
            throw err;
        } finally {
            isInsideConstructor = false;
        }
        return result;
    }

/**
 * Enables or disables XRegExp syntax and flag extensibility.
 * @private
 * @param {Boolean} on `true` to enable; `false` to disable.
 */
    function setExtensibility(on) {
        self.addToken = addToken[on ? "on" : "off"];
        features.extensibility = on;
    }

/**
 * Enables or disables native method overrides.
 * @private
 * @param {Boolean} on `true` to enable; `false` to disable.
 */
    function setNatives(on) {
        RegExp.prototype.exec = (on ? fixed : nativ).exec;
        RegExp.prototype.test = (on ? fixed : nativ).test;
        String.prototype.match = (on ? fixed : nativ).match;
        String.prototype.replace = (on ? fixed : nativ).replace;
        String.prototype.split = (on ? fixed : nativ).split;
        features.natives = on;
    }

/*--------------------------------------
 *  Constructor
 *------------------------------------*/

/**
 * Creates an extended regular expression object for matching text with a pattern. Differs from a
 * native regular expression in that additional syntax and flags are supported. The returned object
 * is in fact a native `RegExp` and works with all native methods.
 * @class XRegExp
 * @constructor
 * @param {String|RegExp} pattern Regex pattern string, or an existing `RegExp` object to copy.
 * @param {String} [flags] Any combination of flags:
 *   <li>`g` - global
 *   <li>`i` - ignore case
 *   <li>`m` - multiline anchors
 *   <li>`n` - explicit capture
 *   <li>`s` - dot matches all (aka singleline)
 *   <li>`x` - free-spacing and line comments (aka extended)
 *   <li>`y` - sticky (Firefox 3+ only)
 *   Flags cannot be provided when constructing one `RegExp` from another.
 * @returns {RegExp} Extended regular expression object.
 * @example
 *
 * // With named capture and flag x
 * date = XRegExp('(?<year>  [0-9]{4}) -?  # year  \n\
 *                 (?<month> [0-9]{2}) -?  # month \n\
 *                 (?<day>   [0-9]{2})     # day   ', 'x');
 *
 * // Passing a regex object to copy it. The copy maintains special properties for named capture,
 * // is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property (set to
 * // zero). Native regexes are not recompiled using XRegExp syntax.
 * XRegExp(/regex/);
 */
    self = function (pattern, flags) {
        if (self.isRegExp(pattern)) {
            if (flags !== undef) {
                throw new TypeError("can't supply flags when constructing one RegExp from another");
            }
            return copy(pattern);
        }
        // Tokens become part of the regex construction process, so protect against infinite recursion
        // when an XRegExp is constructed within a token handler function
        if (isInsideConstructor) {
            throw new Error("can't call the XRegExp constructor within token definition functions");
        }

        var output = [],
            scope = defaultScope,
            tokenContext = {
                hasNamedCapture: false,
                captureNames: [],
                hasFlag: function (flag) {
                    return flags.indexOf(flag) > -1;
                }
            },
            pos = 0,
            tokenResult,
            match,
            chr;
        pattern = pattern === undef ? "" : String(pattern);
        flags = flags === undef ? "" : String(flags);

        if (nativ.match.call(flags, duplicateFlags)) { // Don't use test/exec because they would update lastIndex
            throw new SyntaxError("invalid duplicate regular expression flag");
        }
        // Strip/apply leading mode modifier with any combination of flags except g or y: (?imnsx)
        pattern = nativ.replace.call(pattern, /^\(\?([\w$]+)\)/, function ($0, $1) {
            if (nativ.test.call(/[gy]/, $1)) {
                throw new SyntaxError("can't use flag g or y in mode modifier");
            }
            flags = nativ.replace.call(flags + $1, duplicateFlags, "");
            return "";
        });
        self.forEach(flags, /[\s\S]/, function (m) {
            if (registeredFlags.indexOf(m[0]) < 0) {
                throw new SyntaxError("invalid regular expression flag " + m[0]);
            }
        });

        while (pos < pattern.length) {
            // Check for custom tokens at the current position
            tokenResult = runTokens(pattern, pos, scope, tokenContext);
            if (tokenResult) {
                output.push(tokenResult.output);
                pos += (tokenResult.match[0].length || 1);
            } else {
                // Check for native tokens (except character classes) at the current position
                match = nativ.exec.call(nativeTokens[scope], pattern.slice(pos));
                if (match) {
                    output.push(match[0]);
                    pos += match[0].length;
                } else {
                    chr = pattern.charAt(pos);
                    if (chr === "[") {
                        scope = classScope;
                    } else if (chr === "]") {
                        scope = defaultScope;
                    }
                    // Advance position by one character
                    output.push(chr);
                    ++pos;
                }
            }
        }

        return augment(new RegExp(output.join(""), nativ.replace.call(flags, /[^gimy]+/g, "")),
                       tokenContext.hasNamedCapture ? tokenContext.captureNames : null);
    };

/*--------------------------------------
 *  Public methods/properties
 *------------------------------------*/

// Installed and uninstalled states for `XRegExp.addToken`
    addToken = {
        on: function (regex, handler, options) {
            options = options || {};
            if (regex) {
                tokens.push({
                    pattern: copy(regex, "g" + (hasNativeY ? "y" : "")),
                    handler: handler,
                    scope: options.scope || defaultScope,
                    trigger: options.trigger || null
                });
            }
            // Providing `customFlags` with null `regex` and `handler` allows adding flags that do
            // nothing, but don't throw an error
            if (options.customFlags) {
                registeredFlags = nativ.replace.call(registeredFlags + options.customFlags, duplicateFlags, "");
            }
        },
        off: function () {
            throw new Error("extensibility must be installed before using addToken");
        }
    };

/**
 * Extends or changes XRegExp syntax and allows custom flags. This is used internally and can be
 * used to create XRegExp addons. `XRegExp.install('extensibility')` must be run before calling
 * this function, or an error is thrown. If more than one token can match the same string, the last
 * added wins.
 * @memberOf XRegExp
 * @param {RegExp} regex Regex object that matches the new token.
 * @param {Function} handler Function that returns a new pattern string (using native regex syntax)
 *   to replace the matched token within all future XRegExp regexes. Has access to persistent
 *   properties of the regex being built, through `this`. Invoked with two arguments:
 *   <li>The match array, with named backreference properties.
 *   <li>The regex scope where the match was found.
 * @param {Object} [options] Options object with optional properties:
 *   <li>`scope` {String} Scopes where the token applies: 'default', 'class', or 'all'.
 *   <li>`trigger` {Function} Function that returns `true` when the token should be applied; e.g.,
 *     if a flag is set. If `false` is returned, the matched string can be matched by other tokens.
 *     Has access to persistent properties of the regex being built, through `this` (including
 *     function `this.hasFlag`).
 *   <li>`customFlags` {String} Nonnative flags used by the token's handler or trigger functions.
 *     Prevents XRegExp from throwing an invalid flag error when the specified flags are used.
 * @example
 *
 * // Basic usage: Adds \a for ALERT character
 * XRegExp.addToken(
 *   /\\a/,
 *   function () {return '\\x07';},
 *   {scope: 'all'}
 * );
 * XRegExp('\\a[\\a-\\n]+').test('\x07\n\x07'); // -> true
 */
    self.addToken = addToken.off;

/**
 * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with
 * the same pattern and flag combination, the cached copy is returned.
 * @memberOf XRegExp
 * @param {String} pattern Regex pattern string.
 * @param {String} [flags] Any combination of XRegExp flags.
 * @returns {RegExp} Cached XRegExp object.
 * @example
 *
 * while (match = XRegExp.cache('.', 'gs').exec(str)) {
 *   // The regex is compiled once only
 * }
 */
    self.cache = function (pattern, flags) {
        var key = pattern + "/" + (flags || "");
        return cache[key] || (cache[key] = self(pattern, flags));
    };

/**
 * Escapes any regular expression metacharacters, for use when matching literal strings. The result
 * can safely be used at any point within a regex that uses any flags.
 * @memberOf XRegExp
 * @param {String} str String to escape.
 * @returns {String} String with regex metacharacters escaped.
 * @example
 *
 * XRegExp.escape('Escaped? <.>');
 * // -> 'Escaped\?\ <\.>'
 */
    self.escape = function (str) {
        return nativ.replace.call(str, /[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    };

/**
 * Executes a regex search in a specified string. Returns a match array or `null`. If the provided
 * regex uses named capture, named backreference properties are included on the match array.
 * Optional `pos` and `sticky` arguments specify the search start position, and whether the match
 * must start at the specified position only. The `lastIndex` property of the provided regex is not
 * used, but is updated for compatibility. Also fixes browser bugs compared to the native
 * `RegExp.prototype.exec` and can be used reliably cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {Number} [pos=0] Zero-based index at which to start the search.
 * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position
 *   only. The string `'sticky'` is accepted as an alternative to `true`.
 * @returns {Array} Match array with named backreference properties, or null.
 * @example
 *
 * // Basic use, with named backreference
 * var match = XRegExp.exec('U+2620', XRegExp('U\\+(?<hex>[0-9A-F]{4})'));
 * match.hex; // -> '2620'
 *
 * // With pos and sticky, in a loop
 * var pos = 2, result = [], match;
 * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\d)>/, pos, 'sticky')) {
 *   result.push(match[1]);
 *   pos = match.index + match[0].length;
 * }
 * // result -> ['2', '3', '4']
 */
    self.exec = function (str, regex, pos, sticky) {
        var r2 = copy(regex, "g" + (sticky && hasNativeY ? "y" : ""), (sticky === false ? "y" : "")),
            match;
        r2.lastIndex = pos = pos || 0;
        match = fixed.exec.call(r2, str); // Fixed `exec` required for `lastIndex` fix, etc.
        if (sticky && match && match.index !== pos) {
            match = null;
        }
        if (regex.global) {
            regex.lastIndex = match ? r2.lastIndex : 0;
        }
        return match;
    };

/**
 * Executes a provided function once per regex match.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {Function} callback Function to execute for each match. Invoked with four arguments:
 *   <li>The match array, with named backreference properties.
 *   <li>The zero-based match index.
 *   <li>The string being traversed.
 *   <li>The regex object being used to traverse the string.
 * @param {*} [context] Object to use as `this` when executing `callback`.
 * @returns {*} Provided `context` object.
 * @example
 *
 * // Extracts every other digit from a string
 * XRegExp.forEach('1a2345', /\d/, function (match, i) {
 *   if (i % 2) this.push(+match[0]);
 * }, []);
 * // -> [2, 4]
 */
    self.forEach = function (str, regex, callback, context) {
        var pos = 0,
            i = -1,
            match;
        while ((match = self.exec(str, regex, pos))) {
            callback.call(context, match, ++i, str, regex);
            pos = match.index + (match[0].length || 1);
        }
        return context;
    };

/**
 * Copies a regex object and adds flag `g`. The copy maintains special properties for named
 * capture, is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property
 * (set to zero). Native regexes are not recompiled using XRegExp syntax.
 * @memberOf XRegExp
 * @param {RegExp} regex Regex to globalize.
 * @returns {RegExp} Copy of the provided regex with flag `g` added.
 * @example
 *
 * var globalCopy = XRegExp.globalize(/regex/);
 * globalCopy.global; // -> true
 */
    self.globalize = function (regex) {
        return copy(regex, "g");
    };

/**
 * Installs optional features according to the specified options.
 * @memberOf XRegExp
 * @param {Object|String} options Options object or string.
 * @example
 *
 * // With an options object
 * XRegExp.install({
 *   // Overrides native regex methods with fixed/extended versions that support named
 *   // backreferences and fix numerous cross-browser bugs
 *   natives: true,
 *
 *   // Enables extensibility of XRegExp syntax and flags
 *   extensibility: true
 * });
 *
 * // With an options string
 * XRegExp.install('natives extensibility');
 *
 * // Using a shortcut to install all optional features
 * XRegExp.install('all');
 */
    self.install = function (options) {
        options = prepareOptions(options);
        if (!features.natives && options.natives) {
            setNatives(true);
        }
        if (!features.extensibility && options.extensibility) {
            setExtensibility(true);
        }
    };

/**
 * Checks whether an individual optional feature is installed.
 * @memberOf XRegExp
 * @param {String} feature Name of the feature to check. One of:
 *   <li>`natives`
 *   <li>`extensibility`
 * @returns {Boolean} Whether the feature is installed.
 * @example
 *
 * XRegExp.isInstalled('natives');
 */
    self.isInstalled = function (feature) {
        return !!(features[feature]);
    };

/**
 * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes
 * created in another frame, when `instanceof` and `constructor` checks would fail.
 * @memberOf XRegExp
 * @param {*} value Object to check.
 * @returns {Boolean} Whether the object is a `RegExp` object.
 * @example
 *
 * XRegExp.isRegExp('string'); // -> false
 * XRegExp.isRegExp(/regex/i); // -> true
 * XRegExp.isRegExp(RegExp('^', 'm')); // -> true
 * XRegExp.isRegExp(XRegExp('(?s).')); // -> true
 */
    self.isRegExp = function (value) {
        return isType(value, "regexp");
    };

/**
 * Retrieves the matches from searching a string using a chain of regexes that successively search
 * within previous matches. The provided `chain` array can contain regexes and objects with `regex`
 * and `backref` properties. When a backreference is specified, the named or numbered backreference
 * is passed forward to the next regex or returned.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {Array} chain Regexes that each search for matches within preceding results.
 * @returns {Array} Matches by the last regex in the chain, or an empty array.
 * @example
 *
 * // Basic usage; matches numbers within <b> tags
 * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [
 *   XRegExp('(?is)<b>.*?</b>'),
 *   /\d+/
 * ]);
 * // -> ['2', '4', '56']
 *
 * // Passing forward and returning specific backreferences
 * html = '<a href="http://xregexp.com/api/">XRegExp</a>\
 *         <a href="http://www.google.com/">Google</a>';
 * XRegExp.matchChain(html, [
 *   {regex: /<a href="([^"]+)">/i, backref: 1},
 *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}
 * ]);
 * // -> ['xregexp.com', 'www.google.com']
 */
    self.matchChain = function (str, chain) {
        return (function recurseChain(values, level) {
            var item = chain[level].regex ? chain[level] : {regex: chain[level]},
                matches = [],
                addMatch = function (match) {
                    matches.push(item.backref ? (match[item.backref] || "") : match[0]);
                },
                i;
            for (i = 0; i < values.length; ++i) {
                self.forEach(values[i], item.regex, addMatch);
            }
            return ((level === chain.length - 1) || !matches.length) ?
                    matches :
                    recurseChain(matches, level + 1);
        }([str], 0));
    };

/**
 * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string
 * or regex, and the replacement can be a string or a function to be called for each match. To
 * perform a global search and replace, use the optional `scope` argument or include flag `g` if
 * using a regex. Replacement strings can use `${n}` for named and numbered backreferences.
 * Replacement functions can use named backreferences via `arguments[0].name`. Also fixes browser
 * bugs compared to the native `String.prototype.replace` and can be used reliably cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp|String} search Search pattern to be replaced.
 * @param {String|Function} replacement Replacement string or a function invoked to create it.
 *   Replacement strings can include special replacement syntax:
 *     <li>$$ - Inserts a literal '$'.
 *     <li>$&, $0 - Inserts the matched substring.
 *     <li>$` - Inserts the string that precedes the matched substring (left context).
 *     <li>$' - Inserts the string that follows the matched substring (right context).
 *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts
 *       backreference n/nn.
 *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing
 *       group, inserts backreference n.
 *   Replacement functions are invoked with three or more arguments:
 *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as
 *       properties of this first argument.
 *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).
 *     <li>The zero-based index of the match within the total search string.
 *     <li>The total string being searched.
 * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not
 *   explicitly specified and using a regex with flag `g`, `scope` is 'all'.
 * @returns {String} New string with one or all matches replaced.
 * @example
 *
 * // Regex search, using named backreferences in replacement string
 * var name = XRegExp('(?<first>\\w+) (?<last>\\w+)');
 * XRegExp.replace('John Smith', name, '${last}, ${first}');
 * // -> 'Smith, John'
 *
 * // Regex search, using named backreferences in replacement function
 * XRegExp.replace('John Smith', name, function (match) {
 *   return match.last + ', ' + match.first;
 * });
 * // -> 'Smith, John'
 *
 * // Global string search/replacement
 * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');
 * // -> 'XRegExp builds XRegExps'
 */
    self.replace = function (str, search, replacement, scope) {
        var isRegex = self.isRegExp(search),
            search2 = search,
            result;
        if (isRegex) {
            if (scope === undef && search.global) {
                scope = "all"; // Follow flag g when `scope` isn't explicit
            }
            // Note that since a copy is used, `search`'s `lastIndex` isn't updated *during* replacement iterations
            search2 = copy(search, scope === "all" ? "g" : "", scope === "all" ? "" : "g");
        } else if (scope === "all") {
            search2 = new RegExp(self.escape(String(search)), "g");
        }
        result = fixed.replace.call(String(str), search2, replacement); // Fixed `replace` required for named backreferences, etc.
        if (isRegex && search.global) {
            search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)
        }
        return result;
    };

/**
 * Splits a string into an array of strings using a regex or string separator. Matches of the
 * separator are not included in the result array. However, if `separator` is a regex that contains
 * capturing groups, backreferences are spliced into the result each time `separator` is matched.
 * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably
 * cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to split.
 * @param {RegExp|String} separator Regex or string to use for separating the string.
 * @param {Number} [limit] Maximum number of items to include in the result array.
 * @returns {Array} Array of substrings.
 * @example
 *
 * // Basic use
 * XRegExp.split('a b c', ' ');
 * // -> ['a', 'b', 'c']
 *
 * // With limit
 * XRegExp.split('a b c', ' ', 2);
 * // -> ['a', 'b']
 *
 * // Backreferences in result array
 * XRegExp.split('..word1..', /([a-z]+)(\d+)/i);
 * // -> ['..', 'word', '1', '..']
 */
    self.split = function (str, separator, limit) {
        return fixed.split.call(str, separator, limit);
    };

/**
 * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and
 * `sticky` arguments specify the search start position, and whether the match must start at the
 * specified position only. The `lastIndex` property of the provided regex is not used, but is
 * updated for compatibility. Also fixes browser bugs compared to the native
 * `RegExp.prototype.test` and can be used reliably cross-browser.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {RegExp} regex Regex to search with.
 * @param {Number} [pos=0] Zero-based index at which to start the search.
 * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position
 *   only. The string `'sticky'` is accepted as an alternative to `true`.
 * @returns {Boolean} Whether the regex matched the provided value.
 * @example
 *
 * // Basic use
 * XRegExp.test('abc', /c/); // -> true
 *
 * // With pos and sticky
 * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false
 */
    self.test = function (str, regex, pos, sticky) {
        // Do this the easy way :-)
        return !!self.exec(str, regex, pos, sticky);
    };

/**
 * Uninstalls optional features according to the specified options.
 * @memberOf XRegExp
 * @param {Object|String} options Options object or string.
 * @example
 *
 * // With an options object
 * XRegExp.uninstall({
 *   // Restores native regex methods
 *   natives: true,
 *
 *   // Disables additional syntax and flag extensions
 *   extensibility: true
 * });
 *
 * // With an options string
 * XRegExp.uninstall('natives extensibility');
 *
 * // Using a shortcut to uninstall all optional features
 * XRegExp.uninstall('all');
 */
    self.uninstall = function (options) {
        options = prepareOptions(options);
        if (features.natives && options.natives) {
            setNatives(false);
        }
        if (features.extensibility && options.extensibility) {
            setExtensibility(false);
        }
    };

/**
 * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as
 * regex objects or strings. Metacharacters are escaped in patterns provided as strings.
 * Backreferences in provided regex objects are automatically renumbered to work correctly. Native
 * flags used by provided regexes are ignored in favor of the `flags` argument.
 * @memberOf XRegExp
 * @param {Array} patterns Regexes and strings to combine.
 * @param {String} [flags] Any combination of XRegExp flags.
 * @returns {RegExp} Union of the provided regexes and strings.
 * @example
 *
 * XRegExp.union(['a+b*c', /(dogs)\1/, /(cats)\1/], 'i');
 * // -> /a\+b\*c|(dogs)\1|(cats)\2/i
 *
 * XRegExp.union([XRegExp('(?<pet>dogs)\\k<pet>'), XRegExp('(?<pet>cats)\\k<pet>')]);
 * // -> XRegExp('(?<pet>dogs)\\k<pet>|(?<pet>cats)\\k<pet>')
 */
    self.union = function (patterns, flags) {
        var parts = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,
            numCaptures = 0,
            numPriorCaptures,
            captureNames,
            rewrite = function (match, paren, backref) {
                var name = captureNames[numCaptures - numPriorCaptures];
                if (paren) { // Capturing group
                    ++numCaptures;
                    if (name) { // If the current capture has a name
                        return "(?<" + name + ">";
                    }
                } else if (backref) { // Backreference
                    return "\\" + (+backref + numPriorCaptures);
                }
                return match;
            },
            output = [],
            pattern,
            i;
        if (!(isType(patterns, "array") && patterns.length)) {
            throw new TypeError("patterns must be a nonempty array");
        }
        for (i = 0; i < patterns.length; ++i) {
            pattern = patterns[i];
            if (self.isRegExp(pattern)) {
                numPriorCaptures = numCaptures;
                captureNames = (pattern.xregexp && pattern.xregexp.captureNames) || [];
                // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns
                // are independently valid; helps keep this simple. Named captures are put back
                output.push(self(pattern.source).source.replace(parts, rewrite));
            } else {
                output.push(self.escape(pattern));
            }
        }
        return self(output.join("|"), flags);
    };

/**
 * The XRegExp version number.
 * @static
 * @memberOf XRegExp
 * @type String
 */
    self.version = "2.0.0";

/*--------------------------------------
 *  Fixed/extended native methods
 *------------------------------------*/

/**
 * Adds named capture support (with backreferences returned as `result.name`), and fixes browser
 * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to
 * override the native method. Use via `XRegExp.exec` without overriding natives.
 * @private
 * @param {String} str String to search.
 * @returns {Array} Match array with named backreference properties, or null.
 */
    fixed.exec = function (str) {
        var match, name, r2, origLastIndex, i;
        if (!this.global) {
            origLastIndex = this.lastIndex;
        }
        match = nativ.exec.apply(this, arguments);
        if (match) {
            // Fix browsers whose `exec` methods don't consistently return `undefined` for
            // nonparticipating capturing groups
            if (!compliantExecNpcg && match.length > 1 && lastIndexOf(match, "") > -1) {
                r2 = new RegExp(this.source, nativ.replace.call(getNativeFlags(this), "g", ""));
                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed
                // matching due to characters outside the match
                nativ.replace.call(String(str).slice(match.index), r2, function () {
                    var i;
                    for (i = 1; i < arguments.length - 2; ++i) {
                        if (arguments[i] === undef) {
                            match[i] = undef;
                        }
                    }
                });
            }
            // Attach named capture properties
            if (this.xregexp && this.xregexp.captureNames) {
                for (i = 1; i < match.length; ++i) {
                    name = this.xregexp.captureNames[i - 1];
                    if (name) {
                        match[name] = match[i];
                    }
                }
            }
            // Fix browsers that increment `lastIndex` after zero-length matches
            if (this.global && !match[0].length && (this.lastIndex > match.index)) {
                this.lastIndex = match.index;
            }
        }
        if (!this.global) {
            this.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)
        }
        return match;
    };

/**
 * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`
 * uses this to override the native method.
 * @private
 * @param {String} str String to search.
 * @returns {Boolean} Whether the regex matched the provided value.
 */
    fixed.test = function (str) {
        // Do this the easy way :-)
        return !!fixed.exec.call(this, str);
    };

/**
 * Adds named capture support (with backreferences returned as `result.name`), and fixes browser
 * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to
 * override the native method.
 * @private
 * @param {RegExp} regex Regex to search with.
 * @returns {Array} If `regex` uses flag g, an array of match strings or null. Without flag g, the
 *   result of calling `regex.exec(this)`.
 */
    fixed.match = function (regex) {
        if (!self.isRegExp(regex)) {
            regex = new RegExp(regex); // Use native `RegExp`
        } else if (regex.global) {
            var result = nativ.match.apply(this, arguments);
            regex.lastIndex = 0; // Fixes IE bug
            return result;
        }
        return fixed.exec.call(regex, this);
    };

/**
 * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and
 * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes
 * browser bugs in replacement text syntax when performing a replacement using a nonregex search
 * value, and the value of a replacement regex's `lastIndex` property during replacement iterations
 * and upon completion. Note that this doesn't support SpiderMonkey's proprietary third (`flags`)
 * argument. Calling `XRegExp.install('natives')` uses this to override the native method. Use via
 * `XRegExp.replace` without overriding natives.
 * @private
 * @param {RegExp|String} search Search pattern to be replaced.
 * @param {String|Function} replacement Replacement string or a function invoked to create it.
 * @returns {String} New string with one or all matches replaced.
 */
    fixed.replace = function (search, replacement) {
        var isRegex = self.isRegExp(search), captureNames, result, str, origLastIndex;
        if (isRegex) {
            if (search.xregexp) {
                captureNames = search.xregexp.captureNames;
            }
            if (!search.global) {
                origLastIndex = search.lastIndex;
            }
        } else {
            search += "";
        }
        if (isType(replacement, "function")) {
            result = nativ.replace.call(String(this), search, function () {
                var args = arguments, i;
                if (captureNames) {
                    // Change the `arguments[0]` string primitive to a `String` object that can store properties
                    args[0] = new String(args[0]);
                    // Store named backreferences on the first argument
                    for (i = 0; i < captureNames.length; ++i) {
                        if (captureNames[i]) {
                            args[0][captureNames[i]] = args[i + 1];
                        }
                    }
                }
                // Update `lastIndex` before calling `replacement`.
                // Fixes IE, Chrome, Firefox, Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)
                if (isRegex && search.global) {
                    search.lastIndex = args[args.length - 2] + args[0].length;
                }
                return replacement.apply(null, args);
            });
        } else {
            str = String(this); // Ensure `args[args.length - 1]` will be a string when given nonstring `this`
            result = nativ.replace.call(str, search, function () {
                var args = arguments; // Keep this function's `arguments` available through closure
                return nativ.replace.call(String(replacement), replacementToken, function ($0, $1, $2) {
                    var n;
                    // Named or numbered backreference with curly brackets
                    if ($1) {
                        /* XRegExp behavior for `${n}`:
                         * 1. Backreference to numbered capture, where `n` is 1+ digits. `0`, `00`, etc. is the entire match.
                         * 2. Backreference to named capture `n`, if it exists and is not a number overridden by numbered capture.
                         * 3. Otherwise, it's an error.
                         */
                        n = +$1; // Type-convert; drop leading zeros
                        if (n <= args.length - 3) {
                            return args[n] || "";
                        }
                        n = captureNames ? lastIndexOf(captureNames, $1) : -1;
                        if (n < 0) {
                            throw new SyntaxError("backreference to undefined group " + $0);
                        }
                        return args[n + 1] || "";
                    }
                    // Else, special variable or numbered backreference (without curly brackets)
                    if ($2 === "$") return "$";
                    if ($2 === "&" || +$2 === 0) return args[0]; // $&, $0 (not followed by 1-9), $00
                    if ($2 === "`") return args[args.length - 1].slice(0, args[args.length - 2]);
                    if ($2 === "'") return args[args.length - 1].slice(args[args.length - 2] + args[0].length);
                    // Else, numbered backreference (without curly brackets)
                    $2 = +$2; // Type-convert; drop leading zero
                    /* XRegExp behavior:
                     * - Backreferences without curly brackets end after 1 or 2 digits. Use `${..}` for more digits.
                     * - `$1` is an error if there are no capturing groups.
                     * - `$10` is an error if there are less than 10 capturing groups. Use `${1}0` instead.
                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's an error.
                     * - `$0` (not followed by 1-9), `$00`, and `$&` are the entire match.
                     * Native behavior, for comparison:
                     * - Backreferences end after 1 or 2 digits. Cannot use backreference to capturing group 100+.
                     * - `$1` is a literal `$1` if there are no capturing groups.
                     * - `$10` is `$1` followed by a literal `0` if there are less than 10 capturing groups.
                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's a literal `$01`.
                     * - `$0` is a literal `$0`. `$&` is the entire match.
                     */
                    if (!isNaN($2)) {
                        if ($2 > args.length - 3) {
                            throw new SyntaxError("backreference to undefined group " + $0);
                        }
                        return args[$2] || "";
                    }
                    throw new SyntaxError("invalid token " + $0);
                });
            });
        }
        if (isRegex) {
            if (search.global) {
                search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)
            } else {
                search.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)
            }
        }
        return result;
    };

/**
 * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`
 * uses this to override the native method. Use via `XRegExp.split` without overriding natives.
 * @private
 * @param {RegExp|String} separator Regex or string to use for separating the string.
 * @param {Number} [limit] Maximum number of items to include in the result array.
 * @returns {Array} Array of substrings.
 */
    fixed.split = function (separator, limit) {
        if (!self.isRegExp(separator)) {
            return nativ.split.apply(this, arguments); // use faster native method
        }
        var str = String(this),
            origLastIndex = separator.lastIndex,
            output = [],
            lastLastIndex = 0,
            lastLength;
        /* Values for `limit`, per the spec:
         * If undefined: pow(2,32) - 1
         * If 0, Infinity, or NaN: 0
         * If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);
         * If negative number: pow(2,32) - floor(abs(limit))
         * If other: Type-convert, then use the above rules
         */
        limit = (limit === undef ? -1 : limit) >>> 0;
        self.forEach(str, separator, function (match) {
            if ((match.index + match[0].length) > lastLastIndex) { // != `if (match[0].length)`
                output.push(str.slice(lastLastIndex, match.index));
                if (match.length > 1 && match.index < str.length) {
                    Array.prototype.push.apply(output, match.slice(1));
                }
                lastLength = match[0].length;
                lastLastIndex = match.index + lastLength;
            }
        });
        if (lastLastIndex === str.length) {
            if (!nativ.test.call(separator, "") || lastLength) {
                output.push("");
            }
        } else {
            output.push(str.slice(lastLastIndex));
        }
        separator.lastIndex = origLastIndex;
        return output.length > limit ? output.slice(0, limit) : output;
    };

/*--------------------------------------
 *  Built-in tokens
 *------------------------------------*/

// Shortcut
    add = addToken.on;

/* Letter identity escapes that natively match literal characters: \p, \P, etc.
 * Should be SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-
 * browser consistency and to reserve their syntax, but lets them be superseded by XRegExp addons.
 */
    add(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4})|x(?![\dA-Fa-f]{2}))/,
        function (match, scope) {
            // \B is allowed in default scope only
            if (match[1] === "B" && scope === defaultScope) {
                return match[0];
            }
            throw new SyntaxError("invalid escape " + match[0]);
        },
        {scope: "all"});

/* Empty character class: [] or [^]
 * Fixes a critical cross-browser syntax inconsistency. Unless this is standardized (per the spec),
 * regex syntax can't be accurately parsed because character class endings can't be determined.
 */
    add(/\[(\^?)]/,
        function (match) {
            // For cross-browser compatibility with ES3, convert [] to \b\B and [^] to [\s\S].
            // (?!) should work like \b\B, but is unreliable in Firefox
            return match[1] ? "[\\s\\S]" : "\\b\\B";
        });

/* Comment pattern: (?# )
 * Inline comments are an alternative to the line comments allowed in free-spacing mode (flag x).
 */
    add(/(?:\(\?#[^)]*\))+/,
        function (match) {
            // Keep tokens separated unless the following token is a quantifier
            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? "" : "(?:)";
        });

/* Named backreference: \k<name>
 * Backreference names can use the characters A-Z, a-z, 0-9, _, and $ only.
 */
    add(/\\k<([\w$]+)>/,
        function (match) {
            var index = isNaN(match[1]) ? (lastIndexOf(this.captureNames, match[1]) + 1) : +match[1],
                endIndex = match.index + match[0].length;
            if (!index || index > this.captureNames.length) {
                throw new SyntaxError("backreference to undefined group " + match[0]);
            }
            // Keep backreferences separate from subsequent literal numbers
            return "\\" + index + (
                endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ? "" : "(?:)"
            );
        });

/* Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.
 */
    add(/(?:\s+|#.*)+/,
        function (match) {
            // Keep tokens separated unless the following token is a quantifier
            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? "" : "(?:)";
        },
        {
            trigger: function () {
                return this.hasFlag("x");
            },
            customFlags: "x"
        });

/* Dot, in dotall mode (aka singleline mode, flag s) only.
 */
    add(/\./,
        function () {
            return "[\\s\\S]";
        },
        {
            trigger: function () {
                return this.hasFlag("s");
            },
            customFlags: "s"
        });

/* Named capturing group; match the opening delimiter only: (?<name>
 * Capture names can use the characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers.
 * Supports Python-style (?P<name> as an alternate syntax to avoid issues in recent Opera (which
 * natively supports the Python-style syntax). Otherwise, XRegExp might treat numbered
 * backreferences to Python-style named capture as octals.
 */
    add(/\(\?P?<([\w$]+)>/,
        function (match) {
            if (!isNaN(match[1])) {
                // Avoid incorrect lookups, since named backreferences are added to match arrays
                throw new SyntaxError("can't use integer as capture name " + match[0]);
            }
            this.captureNames.push(match[1]);
            this.hasNamedCapture = true;
            return "(";
        });

/* Numbered backreference or octal, plus any following digits: \0, \11, etc.
 * Octals except \0 not followed by 0-9 and backreferences to unopened capture groups throw an
 * error. Other matches are returned unaltered. IE <= 8 doesn't support backreferences greater than
 * \99 in regex syntax.
 */
    add(/\\(\d+)/,
        function (match, scope) {
            if (!(scope === defaultScope && /^[1-9]/.test(match[1]) && +match[1] <= this.captureNames.length) &&
                    match[1] !== "0") {
                throw new SyntaxError("can't use octal escape or backreference to undefined group " + match[0]);
            }
            return match[0];
        },
        {scope: "all"});

/* Capturing group; match the opening parenthesis only.
 * Required for support of named capturing groups. Also adds explicit capture mode (flag n).
 */
    add(/\((?!\?)/,
        function () {
            if (this.hasFlag("n")) {
                return "(?:";
            }
            this.captureNames.push(null);
            return "(";
        },
        {customFlags: "n"});

/*--------------------------------------
 *  Expose XRegExp
 *------------------------------------*/

// For CommonJS enviroments
    if (typeof exports !== "undefined") {
        exports.XRegExp = self;
    }

    return self;

}());


/***** unicode-base.js *****/

/*!
 * XRegExp Unicode Base v1.0.0
 * (c) 2008-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */

/**
 * Adds support for the `\p{L}` or `\p{Letter}` Unicode category. Addon packages for other Unicode
 * categories, scripts, blocks, and properties are available separately. All Unicode tokens can be
 * inverted using `\P{..}` or `\p{^..}`. Token names are case insensitive, and any spaces, hyphens,
 * and underscores are ignored.
 * @requires XRegExp
 */
(function (XRegExp) {
    "use strict";

    var unicode = {};

/*--------------------------------------
 *  Private helper functions
 *------------------------------------*/

// Generates a standardized token name (lowercase, with hyphens, spaces, and underscores removed)
    function slug(name) {
        return name.replace(/[- _]+/g, "").toLowerCase();
    }

// Expands a list of Unicode code points and ranges to be usable in a regex character class
    function expand(str) {
        return str.replace(/\w{4}/g, "\\u$&");
    }

// Adds leading zeros if shorter than four characters
    function pad4(str) {
        while (str.length < 4) {
            str = "0" + str;
        }
        return str;
    }

// Converts a hexadecimal number to decimal
    function dec(hex) {
        return parseInt(hex, 16);
    }

// Converts a decimal number to hexadecimal
    function hex(dec) {
        return parseInt(dec, 10).toString(16);
    }

// Inverts a list of Unicode code points and ranges
    function invert(range) {
        var output = [],
            lastEnd = -1,
            start;
        XRegExp.forEach(range, /\\u(\w{4})(?:-\\u(\w{4}))?/, function (m) {
            start = dec(m[1]);
            if (start > (lastEnd + 1)) {
                output.push("\\u" + pad4(hex(lastEnd + 1)));
                if (start > (lastEnd + 2)) {
                    output.push("-\\u" + pad4(hex(start - 1)));
                }
            }
            lastEnd = dec(m[2] || m[1]);
        });
        if (lastEnd < 0xFFFF) {
            output.push("\\u" + pad4(hex(lastEnd + 1)));
            if (lastEnd < 0xFFFE) {
                output.push("-\\uFFFF");
            }
        }
        return output.join("");
    }

// Generates an inverted token on first use
    function cacheInversion(item) {
        return unicode["^" + item] || (unicode["^" + item] = invert(unicode[item]));
    }

/*--------------------------------------
 *  Core functionality
 *------------------------------------*/

    XRegExp.install("extensibility");

/**
 * Adds to the list of Unicode properties that XRegExp regexes can match via \p{..} or \P{..}.
 * @memberOf XRegExp
 * @param {Object} pack Named sets of Unicode code points and ranges.
 * @param {Object} [aliases] Aliases for the primary token names.
 * @example
 *
 * XRegExp.addUnicodePackage({
 *   XDigit: '0030-00390041-00460061-0066' // 0-9A-Fa-f
 * }, {
 *   XDigit: 'Hexadecimal'
 * });
 */
    XRegExp.addUnicodePackage = function (pack, aliases) {
        var p;
        if (!XRegExp.isInstalled("extensibility")) {
            throw new Error("extensibility must be installed before adding Unicode packages");
        }
        if (pack) {
            for (p in pack) {
                if (pack.hasOwnProperty(p)) {
                    unicode[slug(p)] = expand(pack[p]);
                }
            }
        }
        if (aliases) {
            for (p in aliases) {
                if (aliases.hasOwnProperty(p)) {
                    unicode[slug(aliases[p])] = unicode[slug(p)];
                }
            }
        }
    };

/* Adds data for the Unicode `Letter` category. Addon packages include other categories, scripts,
 * blocks, and properties.
 */
    XRegExp.addUnicodePackage({
        L: "0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705D0-05EA05F0-05F20620-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280840-085808A008A2-08AC0904-0939093D09500958-09610971-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA67F-A697A6A0-A6E5A717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDAAE0-AAEAAAF2-AAF4AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC"
    }, {
        L: "Letter"
    });

/* Adds Unicode property syntax to XRegExp: \p{..}, \P{..}, \p{^..}
 */
    XRegExp.addToken(
        /\\([pP]){(\^?)([^}]*)}/,
        function (match, scope) {
            var inv = (match[1] === "P" || match[2]) ? "^" : "",
                item = slug(match[3]);
            // The double negative \P{^..} is invalid
            if (match[1] === "P" && match[2]) {
                throw new SyntaxError("invalid double negation \\P{^");
            }
            if (!unicode.hasOwnProperty(item)) {
                throw new SyntaxError("invalid or unknown Unicode property " + match[0]);
            }
            return scope === "class" ?
                    (inv ? cacheInversion(item) : unicode[item]) :
                    "[" + inv + unicode[item] + "]";
        },
        {scope: "all"}
    );

}(XRegExp));


/***** unicode-categories.js *****/

/*!
 * XRegExp Unicode Categories v1.2.0
 * (c) 2010-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */

/**
 * Adds support for all Unicode categories (aka properties) E.g., `\p{Lu}` or
 * `\p{Uppercase Letter}`. Token names are case insensitive, and any spaces, hyphens, and
 * underscores are ignored.
 * @requires XRegExp, XRegExp Unicode Base
 */
(function (XRegExp) {
    "use strict";

    if (!XRegExp.addUnicodePackage) {
        throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");
    }

    XRegExp.install("extensibility");

    XRegExp.addUnicodePackage({
        //L: "", // Included in the Unicode Base addon
        Ll: "0061-007A00B500DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02AF037103730377037B-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1D2B1D6B-1D771D79-1D9A1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF7210A210E210F2113212F21342139213C213D2146-2149214E21842C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7B2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76FA771-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7FAFB00-FB06FB13-FB17FF41-FF5A",
        Lu: "0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F214521832C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A",
        Lt: "01C501C801CB01F21F88-1F8F1F98-1F9F1FA8-1FAF1FBC1FCC1FFC",
        Lm: "02B0-02C102C6-02D102E0-02E402EC02EE0374037A0559064006E506E607F407F507FA081A0824082809710E460EC610FC17D718431AA71C78-1C7D1D2C-1D6A1D781D9B-1DBF2071207F2090-209C2C7C2C7D2D6F2E2F30053031-3035303B309D309E30FC-30FEA015A4F8-A4FDA60CA67FA717-A71FA770A788A7F8A7F9A9CFAA70AADDAAF3AAF4FF70FF9EFF9F",
        Lo: "00AA00BA01BB01C0-01C3029405D0-05EA05F0-05F20620-063F0641-064A066E066F0671-06D306D506EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA0800-08150840-085808A008A2-08AC0904-0939093D09500958-09610972-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E450E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10D0-10FA10FD-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317DC1820-18421844-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C771CE9-1CEC1CEE-1CF11CF51CF62135-21382D30-2D672D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE3006303C3041-3096309F30A1-30FA30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A014A016-A48CA4D0-A4F7A500-A60BA610-A61FA62AA62BA66EA6A0-A6E5A7FB-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2AA00-AA28AA40-AA42AA44-AA4BAA60-AA6FAA71-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADBAADCAAE0-AAEAAAF2AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF66-FF6FFF71-FF9DFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC",
        M: "0300-036F0483-04890591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0903093A-093C093E-094F0951-0957096209630981-098309BC09BE-09C409C709C809CB-09CD09D709E209E30A01-0A030A3C0A3E-0A420A470A480A4B-0A4D0A510A700A710A750A81-0A830ABC0ABE-0AC50AC7-0AC90ACB-0ACD0AE20AE30B01-0B030B3C0B3E-0B440B470B480B4B-0B4D0B560B570B620B630B820BBE-0BC20BC6-0BC80BCA-0BCD0BD70C01-0C030C3E-0C440C46-0C480C4A-0C4D0C550C560C620C630C820C830CBC0CBE-0CC40CC6-0CC80CCA-0CCD0CD50CD60CE20CE30D020D030D3E-0D440D46-0D480D4A-0D4D0D570D620D630D820D830DCA0DCF-0DD40DD60DD8-0DDF0DF20DF30E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F3E0F3F0F71-0F840F860F870F8D-0F970F99-0FBC0FC6102B-103E1056-1059105E-10601062-10641067-106D1071-10741082-108D108F109A-109D135D-135F1712-17141732-1734175217531772177317B4-17D317DD180B-180D18A91920-192B1930-193B19B0-19C019C819C91A17-1A1B1A55-1A5E1A60-1A7C1A7F1B00-1B041B34-1B441B6B-1B731B80-1B821BA1-1BAD1BE6-1BF31C24-1C371CD0-1CD21CD4-1CE81CED1CF2-1CF41DC0-1DE61DFC-1DFF20D0-20F02CEF-2CF12D7F2DE0-2DFF302A-302F3099309AA66F-A672A674-A67DA69FA6F0A6F1A802A806A80BA823-A827A880A881A8B4-A8C4A8E0-A8F1A926-A92DA947-A953A980-A983A9B3-A9C0AA29-AA36AA43AA4CAA4DAA7BAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAEB-AAEFAAF5AAF6ABE3-ABEAABECABEDFB1EFE00-FE0FFE20-FE26",
        Mn: "0300-036F0483-04870591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0902093A093C0941-0948094D0951-095709620963098109BC09C1-09C409CD09E209E30A010A020A3C0A410A420A470A480A4B-0A4D0A510A700A710A750A810A820ABC0AC1-0AC50AC70AC80ACD0AE20AE30B010B3C0B3F0B41-0B440B4D0B560B620B630B820BC00BCD0C3E-0C400C46-0C480C4A-0C4D0C550C560C620C630CBC0CBF0CC60CCC0CCD0CE20CE30D41-0D440D4D0D620D630DCA0DD2-0DD40DD60E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F71-0F7E0F80-0F840F860F870F8D-0F970F99-0FBC0FC6102D-10301032-10371039103A103D103E10581059105E-10601071-1074108210851086108D109D135D-135F1712-17141732-1734175217531772177317B417B517B7-17BD17C617C9-17D317DD180B-180D18A91920-19221927192819321939-193B1A171A181A561A58-1A5E1A601A621A65-1A6C1A73-1A7C1A7F1B00-1B031B341B36-1B3A1B3C1B421B6B-1B731B801B811BA2-1BA51BA81BA91BAB1BE61BE81BE91BED1BEF-1BF11C2C-1C331C361C371CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF20D0-20DC20E120E5-20F02CEF-2CF12D7F2DE0-2DFF302A-302D3099309AA66FA674-A67DA69FA6F0A6F1A802A806A80BA825A826A8C4A8E0-A8F1A926-A92DA947-A951A980-A982A9B3A9B6-A9B9A9BCAA29-AA2EAA31AA32AA35AA36AA43AA4CAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAECAAEDAAF6ABE5ABE8ABEDFB1EFE00-FE0FFE20-FE26",
        Mc: "0903093B093E-09400949-094C094E094F0982098309BE-09C009C709C809CB09CC09D70A030A3E-0A400A830ABE-0AC00AC90ACB0ACC0B020B030B3E0B400B470B480B4B0B4C0B570BBE0BBF0BC10BC20BC6-0BC80BCA-0BCC0BD70C01-0C030C41-0C440C820C830CBE0CC0-0CC40CC70CC80CCA0CCB0CD50CD60D020D030D3E-0D400D46-0D480D4A-0D4C0D570D820D830DCF-0DD10DD8-0DDF0DF20DF30F3E0F3F0F7F102B102C10311038103B103C105610571062-10641067-106D108310841087-108C108F109A-109C17B617BE-17C517C717C81923-19261929-192B193019311933-193819B0-19C019C819C91A19-1A1B1A551A571A611A631A641A6D-1A721B041B351B3B1B3D-1B411B431B441B821BA11BA61BA71BAA1BAC1BAD1BE71BEA-1BEC1BEE1BF21BF31C24-1C2B1C341C351CE11CF21CF3302E302FA823A824A827A880A881A8B4-A8C3A952A953A983A9B4A9B5A9BAA9BBA9BD-A9C0AA2FAA30AA33AA34AA4DAA7BAAEBAAEEAAEFAAF5ABE3ABE4ABE6ABE7ABE9ABEAABEC",
        Me: "0488048920DD-20E020E2-20E4A670-A672",
        N: "0030-003900B200B300B900BC-00BE0660-066906F0-06F907C0-07C90966-096F09E6-09EF09F4-09F90A66-0A6F0AE6-0AEF0B66-0B6F0B72-0B770BE6-0BF20C66-0C6F0C78-0C7E0CE6-0CEF0D66-0D750E50-0E590ED0-0ED90F20-0F331040-10491090-10991369-137C16EE-16F017E0-17E917F0-17F91810-18191946-194F19D0-19DA1A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C5920702074-20792080-20892150-21822185-21892460-249B24EA-24FF2776-27932CFD30073021-30293038-303A3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA620-A629A6E6-A6EFA830-A835A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19",
        Nd: "0030-00390660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19D91A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19",
        Nl: "16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF",
        No: "00B200B300B900BC-00BE09F4-09F90B72-0B770BF0-0BF20C78-0C7E0D70-0D750F2A-0F331369-137C17F0-17F919DA20702074-20792080-20892150-215F21892460-249B24EA-24FF2776-27932CFD3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA830-A835",
        P: "0021-00230025-002A002C-002F003A003B003F0040005B-005D005F007B007D00A100A700AB00B600B700BB00BF037E0387055A-055F0589058A05BE05C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F3A-0F3D0F850FD0-0FD40FD90FDA104A-104F10FB1360-13681400166D166E169B169C16EB-16ED1735173617D4-17D617D8-17DA1800-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD32010-20272030-20432045-20512053-205E207D207E208D208E2329232A2768-277527C527C627E6-27EF2983-299829D8-29DB29FC29FD2CF9-2CFC2CFE2CFF2D702E00-2E2E2E30-2E3B3001-30033008-30113014-301F3030303D30A030FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFD3EFD3FFE10-FE19FE30-FE52FE54-FE61FE63FE68FE6AFE6BFF01-FF03FF05-FF0AFF0C-FF0FFF1AFF1BFF1FFF20FF3B-FF3DFF3FFF5BFF5DFF5F-FF65",
        Pd: "002D058A05BE140018062010-20152E172E1A2E3A2E3B301C303030A0FE31FE32FE58FE63FF0D",
        Ps: "0028005B007B0F3A0F3C169B201A201E2045207D208D23292768276A276C276E27702772277427C527E627E827EA27EC27EE2983298529872989298B298D298F299129932995299729D829DA29FC2E222E242E262E283008300A300C300E3010301430163018301A301DFD3EFE17FE35FE37FE39FE3BFE3DFE3FFE41FE43FE47FE59FE5BFE5DFF08FF3BFF5BFF5FFF62",
        Pe: "0029005D007D0F3B0F3D169C2046207E208E232A2769276B276D276F27712773277527C627E727E927EB27ED27EF298429862988298A298C298E2990299229942996299829D929DB29FD2E232E252E272E293009300B300D300F3011301530173019301B301E301FFD3FFE18FE36FE38FE3AFE3CFE3EFE40FE42FE44FE48FE5AFE5CFE5EFF09FF3DFF5DFF60FF63",
        Pi: "00AB2018201B201C201F20392E022E042E092E0C2E1C2E20",
        Pf: "00BB2019201D203A2E032E052E0A2E0D2E1D2E21",
        Pc: "005F203F20402054FE33FE34FE4D-FE4FFF3F",
        Po: "0021-00230025-0027002A002C002E002F003A003B003F0040005C00A100A700B600B700BF037E0387055A-055F058905C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F850FD0-0FD40FD90FDA104A-104F10FB1360-1368166D166E16EB-16ED1735173617D4-17D617D8-17DA1800-18051807-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD3201620172020-20272030-2038203B-203E2041-20432047-205120532055-205E2CF9-2CFC2CFE2CFF2D702E002E012E06-2E082E0B2E0E-2E162E182E192E1B2E1E2E1F2E2A-2E2E2E30-2E393001-3003303D30FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFE10-FE16FE19FE30FE45FE46FE49-FE4CFE50-FE52FE54-FE57FE5F-FE61FE68FE6AFE6BFF01-FF03FF05-FF07FF0AFF0CFF0EFF0FFF1AFF1BFF1FFF20FF3CFF61FF64FF65",
        S: "0024002B003C-003E005E0060007C007E00A2-00A600A800A900AC00AE-00B100B400B800D700F702C2-02C502D2-02DF02E5-02EB02ED02EF-02FF03750384038503F60482058F0606-0608060B060E060F06DE06E906FD06FE07F609F209F309FA09FB0AF10B700BF3-0BFA0C7F0D790E3F0F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-139917DB194019DE-19FF1B61-1B6A1B74-1B7C1FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE20442052207A-207C208A-208C20A0-20B9210021012103-21062108210921142116-2118211E-2123212521272129212E213A213B2140-2144214A-214D214F2190-2328232B-23F32400-24262440-244A249C-24E92500-26FF2701-27672794-27C427C7-27E527F0-29822999-29D729DC-29FB29FE-2B4C2B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F309B309C319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A700-A716A720A721A789A78AA828-A82BA836-A839AA77-AA79FB29FBB2-FBC1FDFCFDFDFE62FE64-FE66FE69FF04FF0BFF1C-FF1EFF3EFF40FF5CFF5EFFE0-FFE6FFE8-FFEEFFFCFFFD",
        Sm: "002B003C-003E007C007E00AC00B100D700F703F60606-060820442052207A-207C208A-208C21182140-2144214B2190-2194219A219B21A021A321A621AE21CE21CF21D221D421F4-22FF2308-230B23202321237C239B-23B323DC-23E125B725C125F8-25FF266F27C0-27C427C7-27E527F0-27FF2900-29822999-29D729DC-29FB29FE-2AFF2B30-2B442B47-2B4CFB29FE62FE64-FE66FF0BFF1C-FF1EFF5CFF5EFFE2FFE9-FFEC",
        Sc: "002400A2-00A5058F060B09F209F309FB0AF10BF90E3F17DB20A0-20B9A838FDFCFE69FF04FFE0FFE1FFE5FFE6",
        Sk: "005E006000A800AF00B400B802C2-02C502D2-02DF02E5-02EB02ED02EF-02FF0375038403851FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE309B309CA700-A716A720A721A789A78AFBB2-FBC1FF3EFF40FFE3",
        So: "00A600A900AE00B00482060E060F06DE06E906FD06FE07F609FA0B700BF3-0BF80BFA0C7F0D790F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-1399194019DE-19FF1B61-1B6A1B74-1B7C210021012103-210621082109211421162117211E-2123212521272129212E213A213B214A214C214D214F2195-2199219C-219F21A121A221A421A521A7-21AD21AF-21CD21D021D121D321D5-21F32300-2307230C-231F2322-2328232B-237B237D-239A23B4-23DB23E2-23F32400-24262440-244A249C-24E92500-25B625B8-25C025C2-25F72600-266E2670-26FF2701-27672794-27BF2800-28FF2B00-2B2F2B452B462B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A828-A82BA836A837A839AA77-AA79FDFDFFE4FFE8FFEDFFEEFFFCFFFD",
        Z: "002000A01680180E2000-200A20282029202F205F3000",
        Zs: "002000A01680180E2000-200A202F205F3000",
        Zl: "2028",
        Zp: "2029",
        C: "0000-001F007F-009F00AD03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-0605061C061D06DD070E070F074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF200B-200F202A-202E2060-206F20722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-F8FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFD-FF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFFBFFFEFFFF",
        Cc: "0000-001F007F-009F",
        Cf: "00AD0600-060406DD070F200B-200F202A-202E2060-2064206A-206FFEFFFFF9-FFFB",
        Co: "E000-F8FF",
        Cs: "D800-DFFF",
        Cn: "03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-05FF0605061C061D070E074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF2065-206920722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-D7FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFDFEFEFF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFF8FFFEFFFF"
    }, {
        //L: "Letter", // Included in the Unicode Base addon
        Ll: "Lowercase_Letter",
        Lu: "Uppercase_Letter",
        Lt: "Titlecase_Letter",
        Lm: "Modifier_Letter",
        Lo: "Other_Letter",
        M: "Mark",
        Mn: "Nonspacing_Mark",
        Mc: "Spacing_Mark",
        Me: "Enclosing_Mark",
        N: "Number",
        Nd: "Decimal_Number",
        Nl: "Letter_Number",
        No: "Other_Number",
        P: "Punctuation",
        Pd: "Dash_Punctuation",
        Ps: "Open_Punctuation",
        Pe: "Close_Punctuation",
        Pi: "Initial_Punctuation",
        Pf: "Final_Punctuation",
        Pc: "Connector_Punctuation",
        Po: "Other_Punctuation",
        S: "Symbol",
        Sm: "Math_Symbol",
        Sc: "Currency_Symbol",
        Sk: "Modifier_Symbol",
        So: "Other_Symbol",
        Z: "Separator",
        Zs: "Space_Separator",
        Zl: "Line_Separator",
        Zp: "Paragraph_Separator",
        C: "Other",
        Cc: "Control",
        Cf: "Format",
        Co: "Private_Use",
        Cs: "Surrogate",
        Cn: "Unassigned"
    });

}(XRegExp));


/***** unicode-scripts.js *****/

/*!
 * XRegExp Unicode Scripts v1.2.0
 * (c) 2010-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */

/**
 * Adds support for all Unicode scripts in the Basic Multilingual Plane (U+0000-U+FFFF).
 * E.g., `\p{Latin}`. Token names are case insensitive, and any spaces, hyphens, and underscores
 * are ignored.
 * @requires XRegExp, XRegExp Unicode Base
 */
(function (XRegExp) {
    "use strict";

    if (!XRegExp.addUnicodePackage) {
        throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");
    }

    XRegExp.install("extensibility");

    XRegExp.addUnicodePackage({
        Arabic: "0600-06040606-060B060D-061A061E0620-063F0641-064A0656-065E066A-066F0671-06DC06DE-06FF0750-077F08A008A2-08AC08E4-08FEFB50-FBC1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFCFE70-FE74FE76-FEFC",
        Armenian: "0531-05560559-055F0561-0587058A058FFB13-FB17",
        Balinese: "1B00-1B4B1B50-1B7C",
        Bamum: "A6A0-A6F7",
        Batak: "1BC0-1BF31BFC-1BFF",
        Bengali: "0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB",
        Bopomofo: "02EA02EB3105-312D31A0-31BA",
        Braille: "2800-28FF",
        Buginese: "1A00-1A1B1A1E1A1F",
        Buhid: "1740-1753",
        Canadian_Aboriginal: "1400-167F18B0-18F5",
        Cham: "AA00-AA36AA40-AA4DAA50-AA59AA5C-AA5F",
        Cherokee: "13A0-13F4",
        Common: "0000-0040005B-0060007B-00A900AB-00B900BB-00BF00D700F702B9-02DF02E5-02E902EC-02FF0374037E038503870589060C061B061F06400660-066906DD096409650E3F0FD5-0FD810FB16EB-16ED173517361802180318051CD31CE11CE9-1CEC1CEE-1CF31CF51CF62000-200B200E-2064206A-20702074-207E2080-208E20A0-20B92100-21252127-2129212C-21312133-214D214F-215F21892190-23F32400-24262440-244A2460-26FF2701-27FF2900-2B4C2B50-2B592E00-2E3B2FF0-2FFB3000-300430063008-30203030-3037303C-303F309B309C30A030FB30FC3190-319F31C0-31E33220-325F327F-32CF3358-33FF4DC0-4DFFA700-A721A788-A78AA830-A839FD3EFD3FFDFDFE10-FE19FE30-FE52FE54-FE66FE68-FE6BFEFFFF01-FF20FF3B-FF40FF5B-FF65FF70FF9EFF9FFFE0-FFE6FFE8-FFEEFFF9-FFFD",
        Coptic: "03E2-03EF2C80-2CF32CF9-2CFF",
        Cyrillic: "0400-04840487-05271D2B1D782DE0-2DFFA640-A697A69F",
        Devanagari: "0900-09500953-09630966-09770979-097FA8E0-A8FB",
        Ethiopic: "1200-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-13992D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDEAB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2E",
        Georgian: "10A0-10C510C710CD10D0-10FA10FC-10FF2D00-2D252D272D2D",
        Glagolitic: "2C00-2C2E2C30-2C5E",
        Greek: "0370-03730375-0377037A-037D038403860388-038A038C038E-03A103A3-03E103F0-03FF1D26-1D2A1D5D-1D611D66-1D6A1DBF1F00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2126",
        Gujarati: "0A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF1",
        Gurmukhi: "0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A75",
        Han: "2E80-2E992E9B-2EF32F00-2FD5300530073021-30293038-303B3400-4DB54E00-9FCCF900-FA6DFA70-FAD9",
        Hangul: "1100-11FF302E302F3131-318E3200-321E3260-327EA960-A97CAC00-D7A3D7B0-D7C6D7CB-D7FBFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC",
        Hanunoo: "1720-1734",
        Hebrew: "0591-05C705D0-05EA05F0-05F4FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FB4F",
        Hiragana: "3041-3096309D-309F",
        Inherited: "0300-036F04850486064B-0655065F0670095109521CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF200C200D20D0-20F0302A-302D3099309AFE00-FE0FFE20-FE26",
        Javanese: "A980-A9CDA9CF-A9D9A9DEA9DF",
        Kannada: "0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF2",
        Katakana: "30A1-30FA30FD-30FF31F0-31FF32D0-32FE3300-3357FF66-FF6FFF71-FF9D",
        Kayah_Li: "A900-A92F",
        Khmer: "1780-17DD17E0-17E917F0-17F919E0-19FF",
        Lao: "0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF",
        Latin: "0041-005A0061-007A00AA00BA00C0-00D600D8-00F600F8-02B802E0-02E41D00-1D251D2C-1D5C1D62-1D651D6B-1D771D79-1DBE1E00-1EFF2071207F2090-209C212A212B2132214E2160-21882C60-2C7FA722-A787A78B-A78EA790-A793A7A0-A7AAA7F8-A7FFFB00-FB06FF21-FF3AFF41-FF5A",
        Lepcha: "1C00-1C371C3B-1C491C4D-1C4F",
        Limbu: "1900-191C1920-192B1930-193B19401944-194F",
        Lisu: "A4D0-A4FF",
        Malayalam: "0D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F",
        Mandaic: "0840-085B085E",
        Meetei_Mayek: "AAE0-AAF6ABC0-ABEDABF0-ABF9",
        Mongolian: "1800180118041806-180E1810-18191820-18771880-18AA",
        Myanmar: "1000-109FAA60-AA7B",
        New_Tai_Lue: "1980-19AB19B0-19C919D0-19DA19DE19DF",
        Nko: "07C0-07FA",
        Ogham: "1680-169C",
        Ol_Chiki: "1C50-1C7F",
        Oriya: "0B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B77",
        Phags_Pa: "A840-A877",
        Rejang: "A930-A953A95F",
        Runic: "16A0-16EA16EE-16F0",
        Samaritan: "0800-082D0830-083E",
        Saurashtra: "A880-A8C4A8CE-A8D9",
        Sinhala: "0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF4",
        Sundanese: "1B80-1BBF1CC0-1CC7",
        Syloti_Nagri: "A800-A82B",
        Syriac: "0700-070D070F-074A074D-074F",
        Tagalog: "1700-170C170E-1714",
        Tagbanwa: "1760-176C176E-177017721773",
        Tai_Le: "1950-196D1970-1974",
        Tai_Tham: "1A20-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD",
        Tai_Viet: "AA80-AAC2AADB-AADF",
        Tamil: "0B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA",
        Telugu: "0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F",
        Thaana: "0780-07B1",
        Thai: "0E01-0E3A0E40-0E5B",
        Tibetan: "0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FD40FD90FDA",
        Tifinagh: "2D30-2D672D6F2D702D7F",
        Vai: "A500-A62B",
        Yi: "A000-A48CA490-A4C6"
    });

}(XRegExp));


/***** unicode-blocks.js *****/

/*!
 * XRegExp Unicode Blocks v1.2.0
 * (c) 2010-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */

/**
 * Adds support for all Unicode blocks in the Basic Multilingual Plane (U+0000-U+FFFF). Unicode
 * blocks use the prefix "In". E.g., `\p{InBasicLatin}`. Token names are case insensitive, and any
 * spaces, hyphens, and underscores are ignored.
 * @requires XRegExp, XRegExp Unicode Base
 */
(function (XRegExp) {
    "use strict";

    if (!XRegExp.addUnicodePackage) {
        throw new ReferenceError("Unicode Base must be loaded before Unicode Blocks");
    }

    XRegExp.install("extensibility");

    XRegExp.addUnicodePackage({
        InBasic_Latin: "0000-007F",
        InLatin_1_Supplement: "0080-00FF",
        InLatin_Extended_A: "0100-017F",
        InLatin_Extended_B: "0180-024F",
        InIPA_Extensions: "0250-02AF",
        InSpacing_Modifier_Letters: "02B0-02FF",
        InCombining_Diacritical_Marks: "0300-036F",
        InGreek_and_Coptic: "0370-03FF",
        InCyrillic: "0400-04FF",
        InCyrillic_Supplement: "0500-052F",
        InArmenian: "0530-058F",
        InHebrew: "0590-05FF",
        InArabic: "0600-06FF",
        InSyriac: "0700-074F",
        InArabic_Supplement: "0750-077F",
        InThaana: "0780-07BF",
        InNKo: "07C0-07FF",
        InSamaritan: "0800-083F",
        InMandaic: "0840-085F",
        InArabic_Extended_A: "08A0-08FF",
        InDevanagari: "0900-097F",
        InBengali: "0980-09FF",
        InGurmukhi: "0A00-0A7F",
        InGujarati: "0A80-0AFF",
        InOriya: "0B00-0B7F",
        InTamil: "0B80-0BFF",
        InTelugu: "0C00-0C7F",
        InKannada: "0C80-0CFF",
        InMalayalam: "0D00-0D7F",
        InSinhala: "0D80-0DFF",
        InThai: "0E00-0E7F",
        InLao: "0E80-0EFF",
        InTibetan: "0F00-0FFF",
        InMyanmar: "1000-109F",
        InGeorgian: "10A0-10FF",
        InHangul_Jamo: "1100-11FF",
        InEthiopic: "1200-137F",
        InEthiopic_Supplement: "1380-139F",
        InCherokee: "13A0-13FF",
        InUnified_Canadian_Aboriginal_Syllabics: "1400-167F",
        InOgham: "1680-169F",
        InRunic: "16A0-16FF",
        InTagalog: "1700-171F",
        InHanunoo: "1720-173F",
        InBuhid: "1740-175F",
        InTagbanwa: "1760-177F",
        InKhmer: "1780-17FF",
        InMongolian: "1800-18AF",
        InUnified_Canadian_Aboriginal_Syllabics_Extended: "18B0-18FF",
        InLimbu: "1900-194F",
        InTai_Le: "1950-197F",
        InNew_Tai_Lue: "1980-19DF",
        InKhmer_Symbols: "19E0-19FF",
        InBuginese: "1A00-1A1F",
        InTai_Tham: "1A20-1AAF",
        InBalinese: "1B00-1B7F",
        InSundanese: "1B80-1BBF",
        InBatak: "1BC0-1BFF",
        InLepcha: "1C00-1C4F",
        InOl_Chiki: "1C50-1C7F",
        InSundanese_Supplement: "1CC0-1CCF",
        InVedic_Extensions: "1CD0-1CFF",
        InPhonetic_Extensions: "1D00-1D7F",
        InPhonetic_Extensions_Supplement: "1D80-1DBF",
        InCombining_Diacritical_Marks_Supplement: "1DC0-1DFF",
        InLatin_Extended_Additional: "1E00-1EFF",
        InGreek_Extended: "1F00-1FFF",
        InGeneral_Punctuation: "2000-206F",
        InSuperscripts_and_Subscripts: "2070-209F",
        InCurrency_Symbols: "20A0-20CF",
        InCombining_Diacritical_Marks_for_Symbols: "20D0-20FF",
        InLetterlike_Symbols: "2100-214F",
        InNumber_Forms: "2150-218F",
        InArrows: "2190-21FF",
        InMathematical_Operators: "2200-22FF",
        InMiscellaneous_Technical: "2300-23FF",
        InControl_Pictures: "2400-243F",
        InOptical_Character_Recognition: "2440-245F",
        InEnclosed_Alphanumerics: "2460-24FF",
        InBox_Drawing: "2500-257F",
        InBlock_Elements: "2580-259F",
        InGeometric_Shapes: "25A0-25FF",
        InMiscellaneous_Symbols: "2600-26FF",
        InDingbats: "2700-27BF",
        InMiscellaneous_Mathematical_Symbols_A: "27C0-27EF",
        InSupplemental_Arrows_A: "27F0-27FF",
        InBraille_Patterns: "2800-28FF",
        InSupplemental_Arrows_B: "2900-297F",
        InMiscellaneous_Mathematical_Symbols_B: "2980-29FF",
        InSupplemental_Mathematical_Operators: "2A00-2AFF",
        InMiscellaneous_Symbols_and_Arrows: "2B00-2BFF",
        InGlagolitic: "2C00-2C5F",
        InLatin_Extended_C: "2C60-2C7F",
        InCoptic: "2C80-2CFF",
        InGeorgian_Supplement: "2D00-2D2F",
        InTifinagh: "2D30-2D7F",
        InEthiopic_Extended: "2D80-2DDF",
        InCyrillic_Extended_A: "2DE0-2DFF",
        InSupplemental_Punctuation: "2E00-2E7F",
        InCJK_Radicals_Supplement: "2E80-2EFF",
        InKangxi_Radicals: "2F00-2FDF",
        InIdeographic_Description_Characters: "2FF0-2FFF",
        InCJK_Symbols_and_Punctuation: "3000-303F",
        InHiragana: "3040-309F",
        InKatakana: "30A0-30FF",
        InBopomofo: "3100-312F",
        InHangul_Compatibility_Jamo: "3130-318F",
        InKanbun: "3190-319F",
        InBopomofo_Extended: "31A0-31BF",
        InCJK_Strokes: "31C0-31EF",
        InKatakana_Phonetic_Extensions: "31F0-31FF",
        InEnclosed_CJK_Letters_and_Months: "3200-32FF",
        InCJK_Compatibility: "3300-33FF",
        InCJK_Unified_Ideographs_Extension_A: "3400-4DBF",
        InYijing_Hexagram_Symbols: "4DC0-4DFF",
        InCJK_Unified_Ideographs: "4E00-9FFF",
        InYi_Syllables: "A000-A48F",
        InYi_Radicals: "A490-A4CF",
        InLisu: "A4D0-A4FF",
        InVai: "A500-A63F",
        InCyrillic_Extended_B: "A640-A69F",
        InBamum: "A6A0-A6FF",
        InModifier_Tone_Letters: "A700-A71F",
        InLatin_Extended_D: "A720-A7FF",
        InSyloti_Nagri: "A800-A82F",
        InCommon_Indic_Number_Forms: "A830-A83F",
        InPhags_pa: "A840-A87F",
        InSaurashtra: "A880-A8DF",
        InDevanagari_Extended: "A8E0-A8FF",
        InKayah_Li: "A900-A92F",
        InRejang: "A930-A95F",
        InHangul_Jamo_Extended_A: "A960-A97F",
        InJavanese: "A980-A9DF",
        InCham: "AA00-AA5F",
        InMyanmar_Extended_A: "AA60-AA7F",
        InTai_Viet: "AA80-AADF",
        InMeetei_Mayek_Extensions: "AAE0-AAFF",
        InEthiopic_Extended_A: "AB00-AB2F",
        InMeetei_Mayek: "ABC0-ABFF",
        InHangul_Syllables: "AC00-D7AF",
        InHangul_Jamo_Extended_B: "D7B0-D7FF",
        InHigh_Surrogates: "D800-DB7F",
        InHigh_Private_Use_Surrogates: "DB80-DBFF",
        InLow_Surrogates: "DC00-DFFF",
        InPrivate_Use_Area: "E000-F8FF",
        InCJK_Compatibility_Ideographs: "F900-FAFF",
        InAlphabetic_Presentation_Forms: "FB00-FB4F",
        InArabic_Presentation_Forms_A: "FB50-FDFF",
        InVariation_Selectors: "FE00-FE0F",
        InVertical_Forms: "FE10-FE1F",
        InCombining_Half_Marks: "FE20-FE2F",
        InCJK_Compatibility_Forms: "FE30-FE4F",
        InSmall_Form_Variants: "FE50-FE6F",
        InArabic_Presentation_Forms_B: "FE70-FEFF",
        InHalfwidth_and_Fullwidth_Forms: "FF00-FFEF",
        InSpecials: "FFF0-FFFF"
    });

}(XRegExp));


/***** unicode-properties.js *****/

/*!
 * XRegExp Unicode Properties v1.0.0
 * (c) 2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Uses Unicode 6.1 <http://unicode.org/>
 */

/**
 * Adds Unicode properties necessary to meet Level 1 Unicode support (detailed in UTS#18 RL1.2).
 * Includes code points from the Basic Multilingual Plane (U+0000-U+FFFF) only. Token names are
 * case insensitive, and any spaces, hyphens, and underscores are ignored.
 * @requires XRegExp, XRegExp Unicode Base
 */
(function (XRegExp) {
    "use strict";

    if (!XRegExp.addUnicodePackage) {
        throw new ReferenceError("Unicode Base must be loaded before Unicode Properties");
    }

    XRegExp.install("extensibility");

    XRegExp.addUnicodePackage({
        Alphabetic: "0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE03450370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705B0-05BD05BF05C105C205C405C505C705D0-05EA05F0-05F20610-061A0620-06570659-065F066E-06D306D5-06DC06E1-06E806ED-06EF06FA-06FC06FF0710-073F074D-07B107CA-07EA07F407F507FA0800-0817081A-082C0840-085808A008A2-08AC08E4-08E908F0-08FE0900-093B093D-094C094E-09500955-09630971-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BD-09C409C709C809CB09CC09CE09D709DC09DD09DF-09E309F009F10A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3E-0A420A470A480A4B0A4C0A510A59-0A5C0A5E0A70-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD-0AC50AC7-0AC90ACB0ACC0AD00AE0-0AE30B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D-0B440B470B480B4B0B4C0B560B570B5C0B5D0B5F-0B630B710B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCC0BD00BD70C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4C0C550C560C580C590C60-0C630C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD-0CC40CC6-0CC80CCA-0CCC0CD50CD60CDE0CE0-0CE30CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4C0D4E0D570D60-0D630D7A-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCF-0DD40DD60DD8-0DDF0DF20DF30E01-0E3A0E40-0E460E4D0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60ECD0EDC-0EDF0F000F40-0F470F49-0F6C0F71-0F810F88-0F970F99-0FBC1000-10361038103B-103F1050-10621065-1068106E-1086108E109C109D10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135F1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA16EE-16F01700-170C170E-17131720-17331740-17531760-176C176E-1770177217731780-17B317B6-17C817D717DC1820-18771880-18AA18B0-18F51900-191C1920-192B1930-19381950-196D1970-19741980-19AB19B0-19C91A00-1A1B1A20-1A5E1A61-1A741AA71B00-1B331B35-1B431B45-1B4B1B80-1BA91BAC-1BAF1BBA-1BE51BE7-1BF11C00-1C351C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF31CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E2160-218824B6-24E92C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2DFF2E2F3005-30073021-30293031-30353038-303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA674-A67BA67F-A697A69F-A6EFA717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A827A840-A873A880-A8C3A8F2-A8F7A8FBA90A-A92AA930-A952A960-A97CA980-A9B2A9B4-A9BFA9CFAA00-AA36AA40-AA4DAA60-AA76AA7AAA80-AABEAAC0AAC2AADB-AADDAAE0-AAEFAAF2-AAF5AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEAAC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC",
        Uppercase: "0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F21452160-216F218324B6-24CF2C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A",
        Lowercase: "0061-007A00AA00B500BA00DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02B802C002C102E0-02E40345037103730377037A-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1DBF1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF72071207F2090-209C210A210E210F2113212F21342139213C213D2146-2149214E2170-217F218424D0-24E92C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7D2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76F-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7F8-A7FAFB00-FB06FB13-FB17FF41-FF5A",
        White_Space: "0009-000D0020008500A01680180E2000-200A20282029202F205F3000",
        Noncharacter_Code_Point: "FDD0-FDEFFFFEFFFF",
        Default_Ignorable_Code_Point: "00AD034F115F116017B417B5180B-180D200B-200F202A-202E2060-206F3164FE00-FE0FFEFFFFA0FFF0-FFF8",
        // \p{Any} matches a code unit. To match any code point via surrogate pairs, use (?:[\0-\uD7FF\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF])
        Any: "0000-FFFF", // \p{^Any} compiles to [^\u0000-\uFFFF]; [\p{^Any}] to []
        Ascii: "0000-007F",
        // \p{Assigned} is equivalent to \p{^Cn}
        //Assigned: XRegExp("[\\p{^Cn}]").source.replace(/[[\]]|\\u/g, "") // Negation inside a character class triggers inversion
        Assigned: "0000-0377037A-037E0384-038A038C038E-03A103A3-05270531-05560559-055F0561-05870589058A058F0591-05C705D0-05EA05F0-05F40600-06040606-061B061E-070D070F-074A074D-07B107C0-07FA0800-082D0830-083E0840-085B085E08A008A2-08AC08E4-08FE0900-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF10B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B770B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF40E01-0E3A0E3F-0E5B0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FDA1000-10C510C710CD10D0-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-139913A0-13F41400-169C16A0-16F01700-170C170E-17141720-17361740-17531760-176C176E-1770177217731780-17DD17E0-17E917F0-17F91800-180E1810-18191820-18771880-18AA18B0-18F51900-191C1920-192B1930-193B19401944-196D1970-19741980-19AB19B0-19C919D0-19DA19DE-1A1B1A1E-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD1B00-1B4B1B50-1B7C1B80-1BF31BFC-1C371C3B-1C491C4D-1C7F1CC0-1CC71CD0-1CF61D00-1DE61DFC-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2000-2064206A-20712074-208E2090-209C20A0-20B920D0-20F02100-21892190-23F32400-24262440-244A2460-26FF2701-2B4C2B50-2B592C00-2C2E2C30-2C5E2C60-2CF32CF9-2D252D272D2D2D30-2D672D6F2D702D7F-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2E3B2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB3000-303F3041-30963099-30FF3105-312D3131-318E3190-31BA31C0-31E331F0-321E3220-32FE3300-4DB54DC0-9FCCA000-A48CA490-A4C6A4D0-A62BA640-A697A69F-A6F7A700-A78EA790-A793A7A0-A7AAA7F8-A82BA830-A839A840-A877A880-A8C4A8CE-A8D9A8E0-A8FBA900-A953A95F-A97CA980-A9CDA9CF-A9D9A9DEA9DFAA00-AA36AA40-AA4DAA50-AA59AA5C-AA7BAA80-AAC2AADB-AAF6AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEDABF0-ABF9AC00-D7A3D7B0-D7C6D7CB-D7FBD800-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBC1FBD3-FD3FFD50-FD8FFD92-FDC7FDF0-FDFDFE00-FE19FE20-FE26FE30-FE52FE54-FE66FE68-FE6BFE70-FE74FE76-FEFCFEFFFF01-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDCFFE0-FFE6FFE8-FFEEFFF9-FFFD"
    });

}(XRegExp));


/***** matchrecursive.js *****/

/*!
 * XRegExp.matchRecursive v0.2.0
 * (c) 2009-2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 */

(function (XRegExp) {
    "use strict";

/**
 * Returns a match detail object composed of the provided values.
 * @private
 */
    function row(value, name, start, end) {
        return {value:value, name:name, start:start, end:end};
    }

/**
 * Returns an array of match strings between outermost left and right delimiters, or an array of
 * objects with detailed match parts and position data. An error is thrown if delimiters are
 * unbalanced within the data.
 * @memberOf XRegExp
 * @param {String} str String to search.
 * @param {String} left Left delimiter as an XRegExp pattern.
 * @param {String} right Right delimiter as an XRegExp pattern.
 * @param {String} [flags] Flags for the left and right delimiters. Use any of: `gimnsxy`.
 * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.
 * @returns {Array} Array of matches, or an empty array.
 * @example
 *
 * // Basic usage
 * var str = '(t((e))s)t()(ing)';
 * XRegExp.matchRecursive(str, '\\(', '\\)', 'g');
 * // -> ['t((e))s', '', 'ing']
 *
 * // Extended information mode with valueNames
 * str = 'Here is <div> <div>an</div></div> example';
 * XRegExp.matchRecursive(str, '<div\\s*>', '</div>', 'gi', {
 *   valueNames: ['between', 'left', 'match', 'right']
 * });
 * // -> [
 * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},
 * // {name: 'left',    value: '<div>',          start: 8,  end: 13},
 * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},
 * // {name: 'right',   value: '</div>',         start: 27, end: 33},
 * // {name: 'between', value: ' example',       start: 33, end: 41}
 * // ]
 *
 * // Omitting unneeded parts with null valueNames, and using escapeChar
 * str = '...{1}\\{{function(x,y){return y+x;}}';
 * XRegExp.matchRecursive(str, '{', '}', 'g', {
 *   valueNames: ['literal', null, 'value', null],
 *   escapeChar: '\\'
 * });
 * // -> [
 * // {name: 'literal', value: '...', start: 0, end: 3},
 * // {name: 'value',   value: '1',   start: 4, end: 5},
 * // {name: 'literal', value: '\\{', start: 6, end: 8},
 * // {name: 'value',   value: 'function(x,y){return y+x;}', start: 9, end: 35}
 * // ]
 *
 * // Sticky mode via flag y
 * str = '<1><<<2>>><3>4<5>';
 * XRegExp.matchRecursive(str, '<', '>', 'gy');
 * // -> ['1', '<<2>>', '3']
 */
    XRegExp.matchRecursive = function (str, left, right, flags, options) {
        flags = flags || "";
        options = options || {};
        var global = flags.indexOf("g") > -1,
            sticky = flags.indexOf("y") > -1,
            basicFlags = flags.replace(/y/g, ""), // Flag y controlled internally
            escapeChar = options.escapeChar,
            vN = options.valueNames,
            output = [],
            openTokens = 0,
            delimStart = 0,
            delimEnd = 0,
            lastOuterEnd = 0,
            outerStart,
            innerStart,
            leftMatch,
            rightMatch,
            esc;
        left = XRegExp(left, basicFlags);
        right = XRegExp(right, basicFlags);

        if (escapeChar) {
            if (escapeChar.length > 1) {
                throw new SyntaxError("can't use more than one escape character");
            }
            escapeChar = XRegExp.escape(escapeChar);
            // Using XRegExp.union safely rewrites backreferences in `left` and `right`
            esc = new RegExp(
                "(?:" + escapeChar + "[\\S\\s]|(?:(?!" + XRegExp.union([left, right]).source + ")[^" + escapeChar + "])+)+",
                flags.replace(/[^im]+/g, "") // Flags gy not needed here; flags nsx handled by XRegExp
            );
        }

        while (true) {
            // If using an escape character, advance to the delimiter's next starting position,
            // skipping any escaped characters in between
            if (escapeChar) {
                delimEnd += (XRegExp.exec(str, esc, delimEnd, "sticky") || [""])[0].length;
            }
            leftMatch = XRegExp.exec(str, left, delimEnd);
            rightMatch = XRegExp.exec(str, right, delimEnd);
            // Keep the leftmost match only
            if (leftMatch && rightMatch) {
                if (leftMatch.index <= rightMatch.index) {
                    rightMatch = null;
                } else {
                    leftMatch = null;
                }
            }
            /* Paths (LM:leftMatch, RM:rightMatch, OT:openTokens):
            LM | RM | OT | Result
            1  | 0  | 1  | loop
            1  | 0  | 0  | loop
            0  | 1  | 1  | loop
            0  | 1  | 0  | throw
            0  | 0  | 1  | throw
            0  | 0  | 0  | break
            * Doesn't include the sticky mode special case
            * Loop ends after the first completed match if `!global` */
            if (leftMatch || rightMatch) {
                delimStart = (leftMatch || rightMatch).index;
                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;
            } else if (!openTokens) {
                break;
            }
            if (sticky && !openTokens && delimStart > lastOuterEnd) {
                break;
            }
            if (leftMatch) {
                if (!openTokens) {
                    outerStart = delimStart;
                    innerStart = delimEnd;
                }
                ++openTokens;
            } else if (rightMatch && openTokens) {
                if (!--openTokens) {
                    if (vN) {
                        if (vN[0] && outerStart > lastOuterEnd) {
                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));
                        }
                        if (vN[1]) {
                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));
                        }
                        if (vN[2]) {
                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));
                        }
                        if (vN[3]) {
                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));
                        }
                    } else {
                        output.push(str.slice(innerStart, delimStart));
                    }
                    lastOuterEnd = delimEnd;
                    if (!global) {
                        break;
                    }
                }
            } else {
                throw new Error("string contains unbalanced delimiters");
            }
            // If the delimiter matched an empty string, avoid an infinite loop
            if (delimStart === delimEnd) {
                ++delimEnd;
            }
        }

        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {
            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));
        }

        return output;
    };

}(XRegExp));


/***** build.js *****/

/*!
 * XRegExp.build v0.1.0
 * (c) 2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 * Inspired by RegExp.create by Lea Verou <http://lea.verou.me/>
 */

(function (XRegExp) {
    "use strict";

    var subparts = /(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,
        parts = XRegExp.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/, subparts], "g");

/**
 * Strips a leading `^` and trailing unescaped `$`, if both are present.
 * @private
 * @param {String} pattern Pattern to process.
 * @returns {String} Pattern with edge anchors removed.
 */
    function deanchor(pattern) {
        var startAnchor = /^(?:\(\?:\))?\^/, // Leading `^` or `(?:)^` (handles /x cruft)
            endAnchor = /\$(?:\(\?:\))?$/; // Trailing `$` or `$(?:)` (handles /x cruft)
        if (endAnchor.test(pattern.replace(/\\[\s\S]/g, ""))) { // Ensure trailing `$` isn't escaped
            return pattern.replace(startAnchor, "").replace(endAnchor, "");
        }
        return pattern;
    }

/**
 * Converts the provided value to an XRegExp.
 * @private
 * @param {String|RegExp} value Value to convert.
 * @returns {RegExp} XRegExp object with XRegExp syntax applied.
 */
    function asXRegExp(value) {
        return XRegExp.isRegExp(value) ?
                (value.xregexp && !value.xregexp.isNative ? value : XRegExp(value.source)) :
                XRegExp(value);
    }

/**
 * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in the
 * outer pattern and provided subpatterns are automatically renumbered to work correctly. Native
 * flags used by provided subpatterns are ignored in favor of the `flags` argument.
 * @memberOf XRegExp
 * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows
 *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within
 *   character classes.
 * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A
 *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.
 * @param {String} [flags] Any combination of XRegExp flags.
 * @returns {RegExp} Regex with interpolated subpatterns.
 * @example
 *
 * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {
 *   hours: XRegExp.build('{{h12}} : | {{h24}}', {
 *     h12: /1[0-2]|0?[1-9]/,
 *     h24: /2[0-3]|[01][0-9]/
 *   }, 'x'),
 *   minutes: /^[0-5][0-9]$/
 * });
 * time.test('10:59'); // -> true
 * XRegExp.exec('10:59', time).minutes; // -> '59'
 */
    XRegExp.build = function (pattern, subs, flags) {
        var inlineFlags = /^\(\?([\w$]+)\)/.exec(pattern),
            data = {},
            numCaps = 0, // Caps is short for captures
            numPriorCaps,
            numOuterCaps = 0,
            outerCapsMap = [0],
            outerCapNames,
            sub,
            p;

        // Add flags within a leading mode modifier to the overall pattern's flags
        if (inlineFlags) {
            flags = flags || "";
            inlineFlags[1].replace(/./g, function (flag) {
                flags += (flags.indexOf(flag) > -1 ? "" : flag); // Don't add duplicates
            });
        }

        for (p in subs) {
            if (subs.hasOwnProperty(p)) {
                // Passing to XRegExp enables entended syntax for subpatterns provided as strings
                // and ensures independent validity, lest an unescaped `(`, `)`, `[`, or trailing
                // `\` breaks the `(?:)` wrapper. For subpatterns provided as regexes, it dies on
                // octals and adds the `xregexp` property, for simplicity
                sub = asXRegExp(subs[p]);
                // Deanchoring allows embedding independently useful anchored regexes. If you
                // really need to keep your anchors, double them (i.e., `^^...$$`)
                data[p] = {pattern: deanchor(sub.source), names: sub.xregexp.captureNames || []};
            }
        }

        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;
        // helps keep this simple. Named captures will be put back
        pattern = asXRegExp(pattern);
        outerCapNames = pattern.xregexp.captureNames || [];
        pattern = pattern.source.replace(parts, function ($0, $1, $2, $3, $4) {
            var subName = $1 || $2, capName, intro;
            if (subName) { // Named subpattern
                if (!data.hasOwnProperty(subName)) {
                    throw new ReferenceError("undefined property " + $0);
                }
                if ($1) { // Named subpattern was wrapped in a capturing group
                    capName = outerCapNames[numOuterCaps];
                    outerCapsMap[++numOuterCaps] = ++numCaps;
                    // If it's a named group, preserve the name. Otherwise, use the subpattern name
                    // as the capture name
                    intro = "(?<" + (capName || subName) + ">";
                } else {
                    intro = "(?:";
                }
                numPriorCaps = numCaps;
                return intro + data[subName].pattern.replace(subparts, function (match, paren, backref) {
                    if (paren) { // Capturing group
                        capName = data[subName].names[numCaps - numPriorCaps];
                        ++numCaps;
                        if (capName) { // If the current capture has a name, preserve the name
                            return "(?<" + capName + ">";
                        }
                    } else if (backref) { // Backreference
                        return "\\" + (+backref + numPriorCaps); // Rewrite the backreference
                    }
                    return match;
                }) + ")";
            }
            if ($3) { // Capturing group
                capName = outerCapNames[numOuterCaps];
                outerCapsMap[++numOuterCaps] = ++numCaps;
                if (capName) { // If the current capture has a name, preserve the name
                    return "(?<" + capName + ">";
                }
            } else if ($4) { // Backreference
                return "\\" + outerCapsMap[+$4]; // Rewrite the backreference
            }
            return $0;
        });

        return XRegExp(pattern, flags);
    };

}(XRegExp));


/***** prototypes.js *****/

/*!
 * XRegExp Prototype Methods v1.0.0
 * (c) 2012 Steven Levithan <http://xregexp.com/>
 * MIT License
 */

/**
 * Adds a collection of methods to `XRegExp.prototype`. RegExp objects copied by XRegExp are also
 * augmented with any `XRegExp.prototype` methods. Hence, the following work equivalently:
 *
 * XRegExp('[a-z]', 'ig').xexec('abc');
 * XRegExp(/[a-z]/ig).xexec('abc');
 * XRegExp.globalize(/[a-z]/i).xexec('abc');
 */
(function (XRegExp) {
    "use strict";

/**
 * Copy properties of `b` to `a`.
 * @private
 * @param {Object} a Object that will receive new properties.
 * @param {Object} b Object whose properties will be copied.
 */
    function extend(a, b) {
        for (var p in b) {
            if (b.hasOwnProperty(p)) {
                a[p] = b[p];
            }
        }
        //return a;
    }

    extend(XRegExp.prototype, {

/**
 * Implicitly calls the regex's `test` method with the first value in the provided arguments array.
 * @memberOf XRegExp.prototype
 * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.apply`.
 * @param {Array} args Array with the string to search as its first value.
 * @returns {Boolean} Whether the regex matched the provided value.
 * @example
 *
 * XRegExp('[a-z]').apply(null, ['abc']); // -> true
 */
        apply: function (context, args) {
            return this.test(args[0]);
        },

/**
 * Implicitly calls the regex's `test` method with the provided string.
 * @memberOf XRegExp.prototype
 * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.call`.
 * @param {String} str String to search.
 * @returns {Boolean} Whether the regex matched the provided value.
 * @example
 *
 * XRegExp('[a-z]').call(null, 'abc'); // -> true
 */
        call: function (context, str) {
            return this.test(str);
        },

/**
 * Implicitly calls {@link #XRegExp.forEach}.
 * @memberOf XRegExp.prototype
 * @example
 *
 * XRegExp('\\d').forEach('1a2345', function (match, i) {
 *   if (i % 2) this.push(+match[0]);
 * }, []);
 * // -> [2, 4]
 */
        forEach: function (str, callback, context) {
            return XRegExp.forEach(str, this, callback, context);
        },

/**
 * Implicitly calls {@link #XRegExp.globalize}.
 * @memberOf XRegExp.prototype
 * @example
 *
 * var globalCopy = XRegExp('regex').globalize();
 * globalCopy.global; // -> true
 */
        globalize: function () {
            return XRegExp.globalize(this);
        },

/**
 * Implicitly calls {@link #XRegExp.exec}.
 * @memberOf XRegExp.prototype
 * @example
 *
 * var match = XRegExp('U\\+(?<hex>[0-9A-F]{4})').xexec('U+2620');
 * match.hex; // -> '2620'
 */
        xexec: function (str, pos, sticky) {
            return XRegExp.exec(str, this, pos, sticky);
        },

/**
 * Implicitly calls {@link #XRegExp.test}.
 * @memberOf XRegExp.prototype
 * @example
 *
 * XRegExp('c').xtest('abc'); // -> true
 */
        xtest: function (str, pos, sticky) {
            return XRegExp.test(str, this, pos, sticky);
        }

    });

}(XRegExp));


},{}],103:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v3.1.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-09-22T22:30Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.1.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			resolve.call( undefined, value );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.call( undefined, value );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

function manipulationTarget( elem, content ) {
	if ( jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return elem.getElementsByTagName( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE <=9 only
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val,
		valueIsBorderBox = true,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Support: IE <=11 only
	// Running getBoundingClientRect on a disconnected node
	// in IE throws an error.
	if ( elem.getClientRects().length ) {
		val = elem.getBoundingClientRect()[ name ];
	}

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function raf() {
	if ( timerId ) {
		window.requestAnimationFrame( raf );
		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off or if document is hidden
	if ( jQuery.fx.off || document.hidden ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.requestAnimationFrame ?
			window.requestAnimationFrame( raf ) :
			window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	if ( window.cancelAnimationFrame ) {
		window.cancelAnimationFrame( timerId );
	} else {
		window.clearInterval( timerId );
	}

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( jQuery.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win, rect, doc,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		// Make sure element is not hidden (display: none)
		if ( rect.width || rect.height ) {
			doc = elem.ownerDocument;
			win = getWindow( doc );
			docElem = doc.documentElement;

			return {
				top: rect.top + win.pageYOffset - docElem.clientTop,
				left: rect.left + win.pageXOffset - docElem.clientLeft
			};
		}

		// Return zeros for disconnected and hidden elements (gh-2310)
		return rect;
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.parseJSON = JSON.parse;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}





return jQuery;
} );

},{}],104:[function(require,module,exports){
/*! nouislider - 9.1.0 - 2016-12-10 16:00:32 */

(function (factory) {

    if ( typeof define === 'function' && define.amd ) {

        // AMD. Register as an anonymous module.
        define([], factory);

    } else if ( typeof exports === 'object' ) {

        // Node/CommonJS
        module.exports = factory();

    } else {

        // Browser globals
        window.noUiSlider = factory();
    }

}(function( ){

	'use strict';

	var document;

	// Creates a node, adds it to target, returns the new node.
	function addNodeTo ( target, className ) {
		var div = document.createElement('div');
		addClass(div, className);
		target.appendChild(div);
		return div;
	}

	// Removes duplicates from an array.
	function unique ( array ) {
		return array.filter(function(a){
			return !this[a] ? this[a] = true : false;
		}, {});
	}

	// Round a value to the closest 'to'.
	function closest ( value, to ) {
		return Math.round(value / to) * to;
	}

	// Current position of an element relative to the document.
	function offset ( elem, orientation ) {

	var rect = elem.getBoundingClientRect(),
		doc = elem.ownerDocument,
		docElem = doc.documentElement,
		pageOffset = getPageOffset();

		// getBoundingClientRect contains left scroll in Chrome on Android.
		// I haven't found a feature detection that proves this. Worst case
		// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.
		if ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {
			pageOffset.x = 0;
		}

		return orientation ? (rect.top + pageOffset.y - docElem.clientTop) : (rect.left + pageOffset.x - docElem.clientLeft);
	}

	// Checks whether a value is numerical.
	function isNumeric ( a ) {
		return typeof a === 'number' && !isNaN( a ) && isFinite( a );
	}

	// Sets a class and removes it after [duration] ms.
	function addClassFor ( element, className, duration ) {
		if (duration > 0) {
		addClass(element, className);
			setTimeout(function(){
				removeClass(element, className);
			}, duration);
		}
	}

	// Limits a value to 0 - 100
	function limit ( a ) {
		return Math.max(Math.min(a, 100), 0);
	}

	// Wraps a variable as an array, if it isn't one yet.
	// Note that an input array is returned by reference!
	function asArray ( a ) {
		return Array.isArray(a) ? a : [a];
	}

	// Counts decimals
	function countDecimals ( numStr ) {
		numStr = String(numStr);
		var pieces = numStr.split(".");
		return pieces.length > 1 ? pieces[1].length : 0;
	}

	// http://youmightnotneedjquery.com/#add_class
	function addClass ( el, className ) {
		if ( el.classList ) {
			el.classList.add(className);
		} else {
			el.className += ' ' + className;
		}
	}

	// http://youmightnotneedjquery.com/#remove_class
	function removeClass ( el, className ) {
		if ( el.classList ) {
			el.classList.remove(className);
		} else {
			el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
		}
	}

	// https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/
	function hasClass ( el, className ) {
		return el.classList ? el.classList.contains(className) : new RegExp('\\b' + className + '\\b').test(el.className);
	}

	// https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes
	function getPageOffset ( ) {

		var supportPageOffset = window.pageXOffset !== undefined,
			isCSS1Compat = ((document.compatMode || "") === "CSS1Compat"),
			x = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,
			y = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;

		return {
			x: x,
			y: y
		};
	}

	// we provide a function to compute constants instead
	// of accessing window.* as soon as the module needs it
	// so that we do not compute anything if not needed
	function getActions ( ) {

		// Determine the events to bind. IE11 implements pointerEvents without
		// a prefix, which breaks compatibility with the IE10 implementation.
		return window.navigator.pointerEnabled ? {
			start: 'pointerdown',
			move: 'pointermove',
			end: 'pointerup'
		} : window.navigator.msPointerEnabled ? {
			start: 'MSPointerDown',
			move: 'MSPointerMove',
			end: 'MSPointerUp'
		} : {
			start: 'mousedown touchstart',
			move: 'mousemove touchmove',
			end: 'mouseup touchend'
		};
	}


// Value calculation

	// Determine the size of a sub-range in relation to a full range.
	function subRangeRatio ( pa, pb ) {
		return (100 / (pb - pa));
	}

	// (percentage) How many percent is this value of this range?
	function fromPercentage ( range, value ) {
		return (value * 100) / ( range[1] - range[0] );
	}

	// (percentage) Where is this value on this range?
	function toPercentage ( range, value ) {
		return fromPercentage( range, range[0] < 0 ?
			value + Math.abs(range[0]) :
				value - range[0] );
	}

	// (value) How much is this percentage on this range?
	function isPercentage ( range, value ) {
		return ((value * ( range[1] - range[0] )) / 100) + range[0];
	}


// Range conversion

	function getJ ( value, arr ) {

		var j = 1;

		while ( value >= arr[j] ){
			j += 1;
		}

		return j;
	}

	// (percentage) Input a value, find where, on a scale of 0-100, it applies.
	function toStepping ( xVal, xPct, value ) {

		if ( value >= xVal.slice(-1)[0] ){
			return 100;
		}

		var j = getJ( value, xVal ), va, vb, pa, pb;

		va = xVal[j-1];
		vb = xVal[j];
		pa = xPct[j-1];
		pb = xPct[j];

		return pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));
	}

	// (value) Input a percentage, find where it is on the specified range.
	function fromStepping ( xVal, xPct, value ) {

		// There is no range group that fits 100
		if ( value >= 100 ){
			return xVal.slice(-1)[0];
		}

		var j = getJ( value, xPct ), va, vb, pa, pb;

		va = xVal[j-1];
		vb = xVal[j];
		pa = xPct[j-1];
		pb = xPct[j];

		return isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));
	}

	// (percentage) Get the step that applies at a certain value.
	function getStep ( xPct, xSteps, snap, value ) {

		if ( value === 100 ) {
			return value;
		}

		var j = getJ( value, xPct ), a, b;

		// If 'snap' is set, steps are used as fixed points on the slider.
		if ( snap ) {

			a = xPct[j-1];
			b = xPct[j];

			// Find the closest position, a or b.
			if ((value - a) > ((b-a)/2)){
				return b;
			}

			return a;
		}

		if ( !xSteps[j-1] ){
			return value;
		}

		return xPct[j-1] + closest(
			value - xPct[j-1],
			xSteps[j-1]
		);
	}


// Entry parsing

	function handleEntryPoint ( index, value, that ) {

		var percentage;

		// Wrap numerical input in an array.
		if ( typeof value === "number" ) {
			value = [value];
		}

		// Reject any invalid input, by testing whether value is an array.
		if ( Object.prototype.toString.call( value ) !== '[object Array]' ){
			throw new Error("noUiSlider: 'range' contains invalid value.");
		}

		// Covert min/max syntax to 0 and 100.
		if ( index === 'min' ) {
			percentage = 0;
		} else if ( index === 'max' ) {
			percentage = 100;
		} else {
			percentage = parseFloat( index );
		}

		// Check for correct input.
		if ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {
			throw new Error("noUiSlider: 'range' value isn't numeric.");
		}

		// Store values.
		that.xPct.push( percentage );
		that.xVal.push( value[0] );

		// NaN will evaluate to false too, but to keep
		// logging clear, set step explicitly. Make sure
		// not to override the 'step' setting with false.
		if ( !percentage ) {
			if ( !isNaN( value[1] ) ) {
				that.xSteps[0] = value[1];
			}
		} else {
			that.xSteps.push( isNaN(value[1]) ? false : value[1] );
		}

		that.xHighestCompleteStep.push(0);
	}

	function handleStepPoint ( i, n, that ) {

		// Ignore 'false' stepping.
		if ( !n ) {
			return true;
		}

		// Factor to range ratio
		that.xSteps[i] = fromPercentage([
			 that.xVal[i]
			,that.xVal[i+1]
		], n) / subRangeRatio (
			that.xPct[i],
			that.xPct[i+1] );

		var totalSteps = (that.xVal[i+1] - that.xVal[i]) / that.xNumSteps[i];
		var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);
		var step = that.xVal[i] + (that.xNumSteps[i] * highestStep);

		that.xHighestCompleteStep[i] = step;
	}


// Interface

	// The interface to Spectrum handles all direction-based
	// conversions, so the above values are unaware.

	function Spectrum ( entry, snap, direction, singleStep ) {

		this.xPct = [];
		this.xVal = [];
		this.xSteps = [ singleStep || false ];
		this.xNumSteps = [ false ];
		this.xHighestCompleteStep = [];

		this.snap = snap;
		this.direction = direction;

		var index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];

		// Map the object keys to an array.
		for ( index in entry ) {
			if ( entry.hasOwnProperty(index) ) {
				ordered.push([entry[index], index]);
			}
		}

		// Sort all entries by value (numeric sort).
		if ( ordered.length && typeof ordered[0][0] === "object" ) {
			ordered.sort(function(a, b) { return a[0][0] - b[0][0]; });
		} else {
			ordered.sort(function(a, b) { return a[0] - b[0]; });
		}


		// Convert all entries to subranges.
		for ( index = 0; index < ordered.length; index++ ) {
			handleEntryPoint(ordered[index][1], ordered[index][0], this);
		}

		// Store the actual step values.
		// xSteps is sorted in the same order as xPct and xVal.
		this.xNumSteps = this.xSteps.slice(0);

		// Convert all numeric steps to the percentage of the subrange they represent.
		for ( index = 0; index < this.xNumSteps.length; index++ ) {
			handleStepPoint(index, this.xNumSteps[index], this);
		}
	}

	Spectrum.prototype.getMargin = function ( value ) {

		var step = this.xNumSteps[0];

		if ( step && ((value / step) % 1) !== 0 ) {
			throw new Error("noUiSlider: 'limit', 'margin' and 'padding' must be divisible by step.");
		}

		return this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;
	};

	Spectrum.prototype.toStepping = function ( value ) {

		value = toStepping( this.xVal, this.xPct, value );

		return value;
	};

	Spectrum.prototype.fromStepping = function ( value ) {

		return fromStepping( this.xVal, this.xPct, value );
	};

	Spectrum.prototype.getStep = function ( value ) {

		value = getStep(this.xPct, this.xSteps, this.snap, value );

		return value;
	};

	Spectrum.prototype.getNearbySteps = function ( value ) {

		var j = getJ(value, this.xPct);

		return {
			stepBefore: { startValue: this.xVal[j-2], step: this.xNumSteps[j-2], highestStep: this.xHighestCompleteStep[j-2] },
			thisStep: { startValue: this.xVal[j-1], step: this.xNumSteps[j-1], highestStep: this.xHighestCompleteStep[j-1] },
			stepAfter: { startValue: this.xVal[j-0], step: this.xNumSteps[j-0], highestStep: this.xHighestCompleteStep[j-0] }
		};
	};

	Spectrum.prototype.countStepDecimals = function () {
		var stepDecimals = this.xNumSteps.map(countDecimals);
		return Math.max.apply(null, stepDecimals);
 	};

	// Outside testing
	Spectrum.prototype.convert = function ( value ) {
		return this.getStep(this.toStepping(value));
	};

/*	Every input option is tested and parsed. This'll prevent
	endless validation in internal methods. These tests are
	structured with an item for every option available. An
	option can be marked as required by setting the 'r' flag.
	The testing function is provided with three arguments:
		- The provided value for the option;
		- A reference to the options object;
		- The name for the option;

	The testing function returns false when an error is detected,
	or true when everything is OK. It can also modify the option
	object, to make sure all values can be correctly looped elsewhere. */

	var defaultFormatter = { 'to': function( value ){
		return value !== undefined && value.toFixed(2);
	}, 'from': Number };

	function testStep ( parsed, entry ) {

		if ( !isNumeric( entry ) ) {
			throw new Error("noUiSlider: 'step' is not numeric.");
		}

		// The step option can still be used to set stepping
		// for linear sliders. Overwritten if set in 'range'.
		parsed.singleStep = entry;
	}

	function testRange ( parsed, entry ) {

		// Filter incorrect input.
		if ( typeof entry !== 'object' || Array.isArray(entry) ) {
			throw new Error("noUiSlider: 'range' is not an object.");
		}

		// Catch missing start or end.
		if ( entry.min === undefined || entry.max === undefined ) {
			throw new Error("noUiSlider: Missing 'min' or 'max' in 'range'.");
		}

		// Catch equal start or end.
		if ( entry.min === entry.max ) {
			throw new Error("noUiSlider: 'range' 'min' and 'max' cannot be equal.");
		}

		parsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);
	}

	function testStart ( parsed, entry ) {

		entry = asArray(entry);

		// Validate input. Values aren't tested, as the public .val method
		// will always provide a valid location.
		if ( !Array.isArray( entry ) || !entry.length ) {
			throw new Error("noUiSlider: 'start' option is incorrect.");
		}

		// Store the number of handles.
		parsed.handles = entry.length;

		// When the slider is initialized, the .val method will
		// be called with the start options.
		parsed.start = entry;
	}

	function testSnap ( parsed, entry ) {

		// Enforce 100% stepping within subranges.
		parsed.snap = entry;

		if ( typeof entry !== 'boolean' ){
			throw new Error("noUiSlider: 'snap' option must be a boolean.");
		}
	}

	function testAnimate ( parsed, entry ) {

		// Enforce 100% stepping within subranges.
		parsed.animate = entry;

		if ( typeof entry !== 'boolean' ){
			throw new Error("noUiSlider: 'animate' option must be a boolean.");
		}
	}

	function testAnimationDuration ( parsed, entry ) {

		parsed.animationDuration = entry;

		if ( typeof entry !== 'number' ){
			throw new Error("noUiSlider: 'animationDuration' option must be a number.");
		}
	}

	function testConnect ( parsed, entry ) {

		var connect = [false];
		var i;

		// Map legacy options
		if ( entry === 'lower' ) {
			entry = [true, false];
		}

		else if ( entry === 'upper' ) {
			entry = [false, true];
		}

		// Handle boolean options
		if ( entry === true || entry === false ) {

			for ( i = 1; i < parsed.handles; i++ ) {
				connect.push(entry);
			}

			connect.push(false);
		}

		// Reject invalid input
		else if ( !Array.isArray( entry ) || !entry.length || entry.length !== parsed.handles + 1 ) {
			throw new Error("noUiSlider: 'connect' option doesn't match handle count.");
		}

		else {
			connect = entry;
		}

		parsed.connect = connect;
	}

	function testOrientation ( parsed, entry ) {

		// Set orientation to an a numerical value for easy
		// array selection.
		switch ( entry ){
		  case 'horizontal':
			parsed.ort = 0;
			break;
		  case 'vertical':
			parsed.ort = 1;
			break;
		  default:
			throw new Error("noUiSlider: 'orientation' option is invalid.");
		}
	}

	function testMargin ( parsed, entry ) {

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider: 'margin' option must be numeric.");
		}

		// Issue #582
		if ( entry === 0 ) {
			return;
		}

		parsed.margin = parsed.spectrum.getMargin(entry);

		if ( !parsed.margin ) {
			throw new Error("noUiSlider: 'margin' option is only supported on linear sliders.");
		}
	}

	function testLimit ( parsed, entry ) {

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider: 'limit' option must be numeric.");
		}

		parsed.limit = parsed.spectrum.getMargin(entry);

		if ( !parsed.limit || parsed.handles < 2 ) {
			throw new Error("noUiSlider: 'limit' option is only supported on linear sliders with 2 or more handles.");
		}
	}

	function testPadding ( parsed, entry ) {

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider: 'padding' option must be numeric.");
		}

		if ( entry === 0 ) {
			return;
		}

		parsed.padding = parsed.spectrum.getMargin(entry);

		if ( !parsed.padding ) {
			throw new Error("noUiSlider: 'padding' option is only supported on linear sliders.");
		}

		if ( parsed.padding < 0 ) {
			throw new Error("noUiSlider: 'padding' option must be a positive number.");
		}

		if ( parsed.padding >= 50 ) {
			throw new Error("noUiSlider: 'padding' option must be less than half the range.");
		}
	}

	function testDirection ( parsed, entry ) {

		// Set direction as a numerical value for easy parsing.
		// Invert connection for RTL sliders, so that the proper
		// handles get the connect/background classes.
		switch ( entry ) {
		  case 'ltr':
			parsed.dir = 0;
			break;
		  case 'rtl':
			parsed.dir = 1;
			break;
		  default:
			throw new Error("noUiSlider: 'direction' option was not recognized.");
		}
	}

	function testBehaviour ( parsed, entry ) {

		// Make sure the input is a string.
		if ( typeof entry !== 'string' ) {
			throw new Error("noUiSlider: 'behaviour' must be a string containing options.");
		}

		// Check if the string contains any keywords.
		// None are required.
		var tap = entry.indexOf('tap') >= 0;
		var drag = entry.indexOf('drag') >= 0;
		var fixed = entry.indexOf('fixed') >= 0;
		var snap = entry.indexOf('snap') >= 0;
		var hover = entry.indexOf('hover') >= 0;

		if ( fixed ) {

			if ( parsed.handles !== 2 ) {
				throw new Error("noUiSlider: 'fixed' behaviour must be used with 2 handles");
			}

			// Use margin to enforce fixed state
			testMargin(parsed, parsed.start[1] - parsed.start[0]);
		}

		parsed.events = {
			tap: tap || snap,
			drag: drag,
			fixed: fixed,
			snap: snap,
			hover: hover
		};
	}

	function testTooltips ( parsed, entry ) {

		if ( entry === false ) {
			return;
		}

		else if ( entry === true ) {

			parsed.tooltips = [];

			for ( var i = 0; i < parsed.handles; i++ ) {
				parsed.tooltips.push(true);
			}
		}

		else {

			parsed.tooltips = asArray(entry);

			if ( parsed.tooltips.length !== parsed.handles ) {
				throw new Error("noUiSlider: must pass a formatter for all handles.");
			}

			parsed.tooltips.forEach(function(formatter){
				if ( typeof formatter !== 'boolean' && (typeof formatter !== 'object' || typeof formatter.to !== 'function') ) {
					throw new Error("noUiSlider: 'tooltips' must be passed a formatter or 'false'.");
				}
			});
		}
	}

	function testFormat ( parsed, entry ) {

		parsed.format = entry;

		// Any object with a to and from method is supported.
		if ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {
			return true;
		}

		throw new Error("noUiSlider: 'format' requires 'to' and 'from' methods.");
	}

	function testCssPrefix ( parsed, entry ) {

		if ( entry !== undefined && typeof entry !== 'string' && entry !== false ) {
			throw new Error("noUiSlider: 'cssPrefix' must be a string or `false`.");
		}

		parsed.cssPrefix = entry;
	}

	function testCssClasses ( parsed, entry ) {

		if ( entry !== undefined && typeof entry !== 'object' ) {
			throw new Error("noUiSlider: 'cssClasses' must be an object.");
		}

		if ( typeof parsed.cssPrefix === 'string' ) {
			parsed.cssClasses = {};

			for ( var key in entry ) {
				if ( !entry.hasOwnProperty(key) ) { continue; }

				parsed.cssClasses[key] = parsed.cssPrefix + entry[key];
			}
		} else {
			parsed.cssClasses = entry;
		}
	}

	function testUseRaf ( parsed, entry ) {
		if ( entry === true || entry === false ) {
			parsed.useRequestAnimationFrame = entry;
		} else {
			throw new Error("noUiSlider: 'useRequestAnimationFrame' option should be true (default) or false.");
		}
	}

	// Test all developer settings and parse to assumption-safe values.
	function testOptions ( options ) {

		// To prove a fix for #537, freeze options here.
		// If the object is modified, an error will be thrown.
		// Object.freeze(options);

		var parsed = {
			margin: 0,
			limit: 0,
			padding: 0,
			animate: true,
			animationDuration: 300,
			format: defaultFormatter
		};

		// Tests are executed in the order they are presented here.
		var tests = {
			'step': { r: false, t: testStep },
			'start': { r: true, t: testStart },
			'connect': { r: true, t: testConnect },
			'direction': { r: true, t: testDirection },
			'snap': { r: false, t: testSnap },
			'animate': { r: false, t: testAnimate },
			'animationDuration': { r: false, t: testAnimationDuration },
			'range': { r: true, t: testRange },
			'orientation': { r: false, t: testOrientation },
			'margin': { r: false, t: testMargin },
			'limit': { r: false, t: testLimit },
			'padding': { r: false, t: testPadding },
			'behaviour': { r: true, t: testBehaviour },
			'format': { r: false, t: testFormat },
			'tooltips': { r: false, t: testTooltips },
			'cssPrefix': { r: false, t: testCssPrefix },
			'cssClasses': { r: false, t: testCssClasses },
			'useRequestAnimationFrame': { r: false, t: testUseRaf }
		};

		var defaults = {
			'connect': false,
			'direction': 'ltr',
			'behaviour': 'tap',
			'orientation': 'horizontal',
			'cssPrefix' : 'noUi-',
			'cssClasses': {
				target: 'target',
				base: 'base',
				origin: 'origin',
				handle: 'handle',
				handleLower: 'handle-lower',
				handleUpper: 'handle-upper',
				horizontal: 'horizontal',
				vertical: 'vertical',
				background: 'background',
				connect: 'connect',
				ltr: 'ltr',
				rtl: 'rtl',
				draggable: 'draggable',
				drag: 'state-drag',
				tap: 'state-tap',
				active: 'active',
				tooltip: 'tooltip',
				pips: 'pips',
				pipsHorizontal: 'pips-horizontal',
				pipsVertical: 'pips-vertical',
				marker: 'marker',
				markerHorizontal: 'marker-horizontal',
				markerVertical: 'marker-vertical',
				markerNormal: 'marker-normal',
				markerLarge: 'marker-large',
				markerSub: 'marker-sub',
				value: 'value',
				valueHorizontal: 'value-horizontal',
				valueVertical: 'value-vertical',
				valueNormal: 'value-normal',
				valueLarge: 'value-large',
				valueSub: 'value-sub'
			},
			'useRequestAnimationFrame': true
		};

		// Run all options through a testing mechanism to ensure correct
		// input. It should be noted that options might get modified to
		// be handled properly. E.g. wrapping integers in arrays.
		Object.keys(tests).forEach(function( name ){

			// If the option isn't set, but it is required, throw an error.
			if ( options[name] === undefined && defaults[name] === undefined ) {

				if ( tests[name].r ) {
					throw new Error("noUiSlider: '" + name + "' is required.");
				}

				return true;
			}

			tests[name].t( parsed, options[name] === undefined ? defaults[name] : options[name] );
		});

		// Forward pips options
		parsed.pips = options.pips;

		var styles = [['left', 'top'], ['right', 'bottom']];

		// Pre-define the styles.
		parsed.style = styles[parsed.dir][parsed.ort];
		parsed.styleOposite = styles[parsed.dir?0:1][parsed.ort];

		return parsed;
	}


function closure ( target, options, originalOptions ){

	var actions = getActions( );

	// All variables local to 'closure' are prefixed with 'scope_'
	var scope_Target = target;
	var scope_Locations = [];
	var scope_Base;
	var scope_Handles;
	var scope_HandleNumbers = [];
	var scope_ActiveHandle = false;
	var scope_Connects;
	var scope_Spectrum = options.spectrum;
	var scope_Values = [];
	var scope_Events = {};
	var scope_Self;


	// Append a origin to the base
	function addOrigin ( base, handleNumber ) {

		var origin = addNodeTo(base, options.cssClasses.origin);
		var handle = addNodeTo(origin, options.cssClasses.handle);

		handle.setAttribute('data-handle', handleNumber);

		if ( handleNumber === 0 ) {
			addClass(handle, options.cssClasses.handleLower);
		}

		else if ( handleNumber === options.handles - 1 ) {
			addClass(handle, options.cssClasses.handleUpper);
		}

		return origin;
	}

	// Insert nodes for connect elements
	function addConnect ( base, add ) {

		if ( !add ) {
			return false;
		}

		return addNodeTo(base, options.cssClasses.connect);
	}

	// Add handles to the slider base.
	function addElements ( connectOptions, base ) {

		scope_Handles = [];
		scope_Connects = [];

		scope_Connects.push(addConnect(base, connectOptions[0]));

		// [::::O====O====O====]
		// connectOptions = [0, 1, 1, 1]

		for ( var i = 0; i < options.handles; i++ ) {
			// Keep a list of all added handles.
			scope_Handles.push(addOrigin(base, i));
			scope_HandleNumbers[i] = i;
			scope_Connects.push(addConnect(base, connectOptions[i + 1]));
		}
	}

	// Initialize a single slider.
	function addSlider ( target ) {

		// Apply classes and data to the target.
		addClass(target, options.cssClasses.target);

		if ( options.dir === 0 ) {
			addClass(target, options.cssClasses.ltr);
		} else {
			addClass(target, options.cssClasses.rtl);
		}

		if ( options.ort === 0 ) {
			addClass(target, options.cssClasses.horizontal);
		} else {
			addClass(target, options.cssClasses.vertical);
		}

		scope_Base = addNodeTo(target, options.cssClasses.base);
	}


	function addTooltip ( handle, handleNumber ) {

		if ( !options.tooltips[handleNumber] ) {
			return false;
		}

		return addNodeTo(handle.firstChild, options.cssClasses.tooltip);
	}

	// The tooltips option is a shorthand for using the 'update' event.
	function tooltips ( ) {

		// Tooltips are added with options.tooltips in original order.
		var tips = scope_Handles.map(addTooltip);

		bindEvent('update', function(values, handleNumber, unencoded) {

			if ( !tips[handleNumber] ) {
				return;
			}

			var formattedValue = values[handleNumber];

			if ( options.tooltips[handleNumber] !== true ) {
				formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);
			}

			tips[handleNumber].innerHTML = formattedValue;
		});
	}


	function getGroup ( mode, values, stepped ) {

		// Use the range.
		if ( mode === 'range' || mode === 'steps' ) {
			return scope_Spectrum.xVal;
		}

		if ( mode === 'count' ) {

			// Divide 0 - 100 in 'count' parts.
			var spread = ( 100 / (values-1) ), v, i = 0;
			values = [];

			// List these parts and have them handled as 'positions'.
			while ((v=i++*spread) <= 100 ) {
				values.push(v);
			}

			mode = 'positions';
		}

		if ( mode === 'positions' ) {

			// Map all percentages to on-range values.
			return values.map(function( value ){
				return scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );
			});
		}

		if ( mode === 'values' ) {

			// If the value must be stepped, it needs to be converted to a percentage first.
			if ( stepped ) {

				return values.map(function( value ){

					// Convert to percentage, apply step, return to value.
					return scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );
				});

			}

			// Otherwise, we can simply use the values.
			return values;
		}
	}

	function generateSpread ( density, mode, group ) {

		function safeIncrement(value, increment) {
			// Avoid floating point variance by dropping the smallest decimal places.
			return (value + increment).toFixed(7) / 1;
		}

		var indexes = {},
			firstInRange = scope_Spectrum.xVal[0],
			lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],
			ignoreFirst = false,
			ignoreLast = false,
			prevPct = 0;

		// Create a copy of the group, sort it and filter away all duplicates.
		group = unique(group.slice().sort(function(a, b){ return a - b; }));

		// Make sure the range starts with the first element.
		if ( group[0] !== firstInRange ) {
			group.unshift(firstInRange);
			ignoreFirst = true;
		}

		// Likewise for the last one.
		if ( group[group.length - 1] !== lastInRange ) {
			group.push(lastInRange);
			ignoreLast = true;
		}

		group.forEach(function ( current, index ) {

			// Get the current step and the lower + upper positions.
			var step, i, q,
				low = current,
				high = group[index+1],
				newPct, pctDifference, pctPos, type,
				steps, realSteps, stepsize;

			// When using 'steps' mode, use the provided steps.
			// Otherwise, we'll step on to the next subrange.
			if ( mode === 'steps' ) {
				step = scope_Spectrum.xNumSteps[ index ];
			}

			// Default to a 'full' step.
			if ( !step ) {
				step = high-low;
			}

			// Low can be 0, so test for false. If high is undefined,
			// we are at the last subrange. Index 0 is already handled.
			if ( low === false || high === undefined ) {
				return;
			}

			// Make sure step isn't 0, which would cause an infinite loop (#654)
			step = Math.max(step, 0.0000001);

			// Find all steps in the subrange.
			for ( i = low; i <= high; i = safeIncrement(i, step) ) {

				// Get the percentage value for the current step,
				// calculate the size for the subrange.
				newPct = scope_Spectrum.toStepping( i );
				pctDifference = newPct - prevPct;

				steps = pctDifference / density;
				realSteps = Math.round(steps);

				// This ratio represents the ammount of percentage-space a point indicates.
				// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.
				// Round the percentage offset to an even number, then divide by two
				// to spread the offset on both sides of the range.
				stepsize = pctDifference/realSteps;

				// Divide all points evenly, adding the correct number to this subrange.
				// Run up to <= so that 100% gets a point, event if ignoreLast is set.
				for ( q = 1; q <= realSteps; q += 1 ) {

					// The ratio between the rounded value and the actual size might be ~1% off.
					// Correct the percentage offset by the number of points
					// per subrange. density = 1 will result in 100 points on the
					// full range, 2 for 50, 4 for 25, etc.
					pctPos = prevPct + ( q * stepsize );
					indexes[pctPos.toFixed(5)] = ['x', 0];
				}

				// Determine the point type.
				type = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );

				// Enforce the 'ignoreFirst' option by overwriting the type for 0.
				if ( !index && ignoreFirst ) {
					type = 0;
				}

				if ( !(i === high && ignoreLast)) {
					// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.
					indexes[newPct.toFixed(5)] = [i, type];
				}

				// Update the percentage count.
				prevPct = newPct;
			}
		});

		return indexes;
	}

	function addMarking ( spread, filterFunc, formatter ) {

		var element = document.createElement('div'),
			out = '',
			valueSizeClasses = [
				options.cssClasses.valueNormal,
				options.cssClasses.valueLarge,
				options.cssClasses.valueSub
			],
			markerSizeClasses = [
				options.cssClasses.markerNormal,
				options.cssClasses.markerLarge,
				options.cssClasses.markerSub
			],
			valueOrientationClasses = [
				options.cssClasses.valueHorizontal,
				options.cssClasses.valueVertical
			],
			markerOrientationClasses = [
				options.cssClasses.markerHorizontal,
				options.cssClasses.markerVertical
			];

		addClass(element, options.cssClasses.pips);
		addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);

		function getClasses( type, source ){
			var a = source === options.cssClasses.value,
				orientationClasses = a ? valueOrientationClasses : markerOrientationClasses,
				sizeClasses = a ? valueSizeClasses : markerSizeClasses;

			return source + ' ' + orientationClasses[options.ort] + ' ' + sizeClasses[type];
		}

		function getTags( offset, source, values ) {
			return 'class="' + getClasses(values[1], source) + '" style="' + options.style + ': ' + offset + '%"';
		}

		function addSpread ( offset, values ){

			// Apply the filter function, if it is set.
			values[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];

			// Add a marker for every point
			out += '<div ' + getTags(offset, options.cssClasses.marker, values) + '></div>';

			// Values are only appended for points marked '1' or '2'.
			if ( values[1] ) {
				out += '<div ' + getTags(offset, options.cssClasses.value, values) + '>' + formatter.to(values[0]) + '</div>';
			}
		}

		// Append all points.
		Object.keys(spread).forEach(function(a){
			addSpread(a, spread[a]);
		});

		element.innerHTML = out;

		return element;
	}

	function pips ( grid ) {

	var mode = grid.mode,
		density = grid.density || 1,
		filter = grid.filter || false,
		values = grid.values || false,
		stepped = grid.stepped || false,
		group = getGroup( mode, values, stepped ),
		spread = generateSpread( density, mode, group ),
		format = grid.format || {
			to: Math.round
		};

		return scope_Target.appendChild(addMarking(
			spread,
			filter,
			format
		));
	}


	// Shorthand for base dimensions.
	function baseSize ( ) {
		var rect = scope_Base.getBoundingClientRect(), alt = 'offset' + ['Width', 'Height'][options.ort];
		return options.ort === 0 ? (rect.width||scope_Base[alt]) : (rect.height||scope_Base[alt]);
	}

	// Handler for attaching events trough a proxy.
	function attachEvent ( events, element, callback, data ) {

		// This function can be used to 'filter' events to the slider.
		// element is a node, not a nodeList

		var method = function ( e ){

			if ( scope_Target.hasAttribute('disabled') ) {
				return false;
			}

			// Stop if an active 'tap' transition is taking place.
			if ( hasClass(scope_Target, options.cssClasses.tap) ) {
				return false;
			}

			e = fixEvent(e, data.pageOffset);

			// Handle reject of multitouch
			if ( !e ) {
				return false;
			}

			// Ignore right or middle clicks on start #454
			if ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {
				return false;
			}

			// Ignore right or middle clicks on start #454
			if ( data.hover && e.buttons ) {
				return false;
			}

			e.calcPoint = e.points[ options.ort ];

			// Call the event handler with the event [ and additional data ].
			callback ( e, data );
		};

		var methods = [];

		// Bind a closure on the target for every event type.
		events.split(' ').forEach(function( eventName ){
			element.addEventListener(eventName, method, false);
			methods.push([eventName, method]);
		});

		return methods;
	}

	// Provide a clean event with standardized offset values.
	function fixEvent ( e, pageOffset ) {

		// Prevent scrolling and panning on touch events, while
		// attempting to slide. The tap event also depends on this.
		e.preventDefault();

		// Filter the event to register the type, which can be
		// touch, mouse or pointer. Offset changes need to be
		// made on an event specific basis.
		var touch = e.type.indexOf('touch') === 0;
		var mouse = e.type.indexOf('mouse') === 0;
		var pointer = e.type.indexOf('pointer') === 0;
		var x;
		var y;

		// IE10 implemented pointer events with a prefix;
		if ( e.type.indexOf('MSPointer') === 0 ) {
			pointer = true;
		}

		if ( touch ) {

			// Fix bug when user touches with two or more fingers on mobile devices.
			// It's useful when you have two or more sliders on one page,
			// that can be touched simultaneously.
			// #649, #663, #668
			if ( e.touches.length > 1 ) {
				return false;
			}

			// noUiSlider supports one movement at a time,
			// so we can select the first 'changedTouch'.
			x = e.changedTouches[0].pageX;
			y = e.changedTouches[0].pageY;
		}

		pageOffset = pageOffset || getPageOffset();

		if ( mouse || pointer ) {
			x = e.clientX + pageOffset.x;
			y = e.clientY + pageOffset.y;
		}

		e.pageOffset = pageOffset;
		e.points = [x, y];
		e.cursor = mouse || pointer; // Fix #435

		return e;
	}

	// Translate a coordinate in the document to a percentage on the slider
	function calcPointToPercentage ( calcPoint ) {
		var location = calcPoint - offset(scope_Base, options.ort);
		var proposal = ( location * 100 ) / baseSize();
		return options.dir ? 100 - proposal : proposal;
	}

	// Find handle closest to a certain percentage on the slider
	function getClosestHandle ( proposal ) {

		var closest = 100;
		var handleNumber = false;

		scope_Handles.forEach(function(handle, index){

			// Disabled handles are ignored
			if ( handle.hasAttribute('disabled') ) {
				return;
			}

			var pos = Math.abs(scope_Locations[index] - proposal);

			if ( pos < closest ) {
				handleNumber = index;
				closest = pos;
			}
		});

		return handleNumber;
	}

	// Moves handle(s) by a percentage
	// (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])
	function moveHandles ( upward, proposal, locations, handleNumbers ) {

		var proposals = locations.slice();

		var b = [!upward, upward];
		var f = [upward, !upward];

		// Copy handleNumbers so we don't change the dataset
		handleNumbers = handleNumbers.slice();

		// Check to see which handle is 'leading'.
		// If that one can't move the second can't either.
		if ( upward ) {
			handleNumbers.reverse();
		}

		// Step 1: get the maximum percentage that any of the handles can move
		if ( handleNumbers.length > 1 ) {

			handleNumbers.forEach(function(handleNumber, o) {

				var to = checkHandlePosition(proposals, handleNumber, proposals[handleNumber] + proposal, b[o], f[o]);

				// Stop if one of the handles can't move.
				if ( to === false ) {
					proposal = 0;
				} else {
					proposal = to - proposals[handleNumber];
					proposals[handleNumber] = to;
				}
			});
		}

		// If using one handle, check backward AND forward
		else {
			b = f = [true];
		}

		var state = false;

		// Step 2: Try to set the handles with the found percentage
		handleNumbers.forEach(function(handleNumber, o) {
			state = setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o]) || state;
		});

		// Step 3: If a handle moved, fire events
		if ( state ) {
			handleNumbers.forEach(function(handleNumber){
				fireEvent('update', handleNumber);
				fireEvent('slide', handleNumber);
			});
		}
	}

	// External event handling
	function fireEvent ( eventName, handleNumber, tap ) {

		Object.keys(scope_Events).forEach(function( targetEvent ) {

			var eventType = targetEvent.split('.')[0];

			if ( eventName === eventType ) {
				scope_Events[targetEvent].forEach(function( callback ) {

					callback.call(
						// Use the slider public API as the scope ('this')
						scope_Self,
						// Return values as array, so arg_1[arg_2] is always valid.
						scope_Values.map(options.format.to),
						// Handle index, 0 or 1
						handleNumber,
						// Unformatted slider values
						scope_Values.slice(),
						// Event is fired by tap, true or false
						tap || false,
						// Left offset of the handle, in relation to the slider
						scope_Locations.slice()
					);
				});
			}
		});
	}


	// Fire 'end' when a mouse or pen leaves the document.
	function documentLeave ( event, data ) {
		if ( event.type === "mouseout" && event.target.nodeName === "HTML" && event.relatedTarget === null ){
			eventEnd (event, data);
		}
	}

	// Handle movement on document for handle and range drag.
	function eventMove ( event, data ) {

		// Fix #498
		// Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).
		// https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero
		// IE9 has .buttons and .which zero on mousemove.
		// Firefox breaks the spec MDN defines.
		if ( navigator.appVersion.indexOf("MSIE 9") === -1 && event.buttons === 0 && data.buttonsProperty !== 0 ) {
			return eventEnd(event, data);
		}

		// Check if we are moving up or down
		var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);

		// Convert the movement into a percentage of the slider width/height
		var proposal = (movement * 100) / data.baseSize;

		moveHandles(movement > 0, proposal, data.locations, data.handleNumbers);
	}

	// Unbind move events on document, call callbacks.
	function eventEnd ( event, data ) {
// console.log(event.target);
// var document = event.target.ownerDocument;
		// The handle is no longer active, so remove the class.
		if ( scope_ActiveHandle ) {
			removeClass(scope_ActiveHandle, options.cssClasses.active);
			scope_ActiveHandle = false;
		}

		// Remove cursor styles and text-selection events bound to the body.
		if ( event.cursor ) {
			document.body.style.cursor = '';
			document.body.removeEventListener('selectstart', document.body.noUiListener);
		}

		// Unbind the move and end events, which are added on 'start'.
		document.documentElement.noUiListeners.forEach(function( c ) {
			document.documentElement.removeEventListener(c[0], c[1]);
		});

		// Remove dragging class.
		removeClass(scope_Target, options.cssClasses.drag);

		setZindex();

		data.handleNumbers.forEach(function(handleNumber){
			fireEvent('set', handleNumber);
			fireEvent('change', handleNumber);
			fireEvent('end', handleNumber);
		});
	}

	// Bind move events on document.
	function eventStart ( event, data ) {
// console.log(event.target);
// var document = event.target.ownerDocument;
		if ( data.handleNumbers.length === 1 ) {

			var handle = scope_Handles[data.handleNumbers[0]];

			// Ignore 'disabled' handles
			if ( handle.hasAttribute('disabled') ) {
				return false;
			}

			// Mark the handle as 'active' so it can be styled.
			scope_ActiveHandle = handle.children[0];
			addClass(scope_ActiveHandle, options.cssClasses.active);
		}

		// Fix #551, where a handle gets selected instead of dragged.
		event.preventDefault();

		// A drag should never propagate up to the 'tap' event.
		event.stopPropagation();

		// Attach the move and end events.
		var moveEvent = attachEvent(actions.move, document.documentElement, eventMove, {
			startCalcPoint: event.calcPoint,
			baseSize: baseSize(),
			pageOffset: event.pageOffset,
			handleNumbers: data.handleNumbers,
			buttonsProperty: event.buttons,
			locations: scope_Locations.slice()
		});

		var endEvent = attachEvent(actions.end, document.documentElement, eventEnd, {
			handleNumbers: data.handleNumbers
		});

		var outEvent = attachEvent("mouseout", document.documentElement, documentLeave, {
			handleNumbers: data.handleNumbers
		});

		document.documentElement.noUiListeners = moveEvent.concat(endEvent, outEvent);

		// Text selection isn't an issue on touch devices,
		// so adding cursor styles can be skipped.
		if ( event.cursor ) {

			// Prevent the 'I' cursor and extend the range-drag cursor.
			document.body.style.cursor = getComputedStyle(event.target).cursor;

			// Mark the target with a dragging state.
			if ( scope_Handles.length > 1 ) {
				addClass(scope_Target, options.cssClasses.drag);
			}

			var f = function(){
				return false;
			};

			document.body.noUiListener = f;

			// Prevent text selection when dragging the handles.
			document.body.addEventListener('selectstart', f, false);
		}

		data.handleNumbers.forEach(function(handleNumber){
			fireEvent('start', handleNumber);
		});
	}

	// Move closest handle to tapped location.
	function eventTap ( event ) {

		// The tap event shouldn't propagate up
		event.stopPropagation();

		var proposal = calcPointToPercentage(event.calcPoint);
		var handleNumber = getClosestHandle(proposal);

		// Tackle the case that all handles are 'disabled'.
		if ( handleNumber === false ) {
			return false;
		}

		// Flag the slider as it is now in a transitional state.
		// Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.
		if ( !options.events.snap ) {
			addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);
		}

		setHandle(handleNumber, proposal, true, true);

		setZindex();

		fireEvent('slide', handleNumber, true);
		fireEvent('set', handleNumber, true);
		fireEvent('change', handleNumber, true);
		fireEvent('update', handleNumber, true);

		if ( options.events.snap ) {
			eventStart(event, { handleNumbers: [handleNumber] });
		}
	}

	// Fires a 'hover' event for a hovered mouse/pen position.
	function eventHover ( event ) {

		var proposal = calcPointToPercentage(event.calcPoint);

		var to = scope_Spectrum.getStep(proposal);
		var value = scope_Spectrum.fromStepping(to);

		Object.keys(scope_Events).forEach(function( targetEvent ) {
			if ( 'hover' === targetEvent.split('.')[0] ) {
				scope_Events[targetEvent].forEach(function( callback ) {
					callback.call( scope_Self, value );
				});
			}
		});
	}

	// Attach events to several slider parts.
	function bindSliderEvents ( behaviour ) {

		// Attach the standard drag event to the handles.
		if ( !behaviour.fixed ) {

			scope_Handles.forEach(function( handle, index ){

				// These events are only bound to the visual handle
				// element, not the 'real' origin element.
				attachEvent ( actions.start, handle.children[0], eventStart, {
					handleNumbers: [index]
				});
			});
		}

		// Attach the tap event to the slider base.
		if ( behaviour.tap ) {
			attachEvent (actions.start, scope_Base, eventTap, {});
		}

		// Fire hover events
		if ( behaviour.hover ) {
			attachEvent (actions.move, scope_Base, eventHover, { hover: true });
		}

		// Make the range draggable.
		if ( behaviour.drag ){

			scope_Connects.forEach(function( connect, index ){

				if ( connect === false || index === 0 || index === scope_Connects.length - 1 ) {
					return;
				}

				var handleBefore = scope_Handles[index - 1];
				var handleAfter = scope_Handles[index];
				var eventHolders = [connect];

				addClass(connect, options.cssClasses.draggable);

				// When the range is fixed, the entire range can
				// be dragged by the handles. The handle in the first
				// origin will propagate the start event upward,
				// but it needs to be bound manually on the other.
				if ( behaviour.fixed ) {
					eventHolders.push(handleBefore.children[0]);
					eventHolders.push(handleAfter.children[0]);
				}

				eventHolders.forEach(function( eventHolder ) {
					attachEvent ( actions.start, eventHolder, eventStart, {
						handles: [handleBefore, handleAfter],
						handleNumbers: [index - 1, index]
					});
				});
			});
		}
	}


	// Split out the handle positioning logic so the Move event can use it, too
	function checkHandlePosition ( reference, handleNumber, to, lookBackward, lookForward ) {

		// For sliders with multiple handles, limit movement to the other handle.
		// Apply the margin option by adding it to the handle positions.
		if ( scope_Handles.length > 1 ) {

			if ( lookBackward && handleNumber > 0 ) {
				to = Math.max(to, reference[handleNumber - 1] + options.margin);
			}

			if ( lookForward && handleNumber < scope_Handles.length - 1 ) {
				to = Math.min(to, reference[handleNumber + 1] - options.margin);
			}
		}

		// The limit option has the opposite effect, limiting handles to a
		// maximum distance from another. Limit must be > 0, as otherwise
		// handles would be unmoveable.
		if ( scope_Handles.length > 1 && options.limit ) {

			if ( lookBackward && handleNumber > 0 ) {
				to = Math.min(to, reference[handleNumber - 1] + options.limit);
			}

			if ( lookForward && handleNumber < scope_Handles.length - 1 ) {
				to = Math.max(to, reference[handleNumber + 1] - options.limit);
			}
		}

		// The padding option keeps the handles a certain distance from the
		// edges of the slider. Padding must be > 0.
		if ( options.padding ) {

			if ( handleNumber === 0 ) {
				to = Math.max(to, options.padding);
			}

			if ( handleNumber === scope_Handles.length - 1 ) {
				to = Math.min(to, 100 - options.padding);
			}
		}

		to = scope_Spectrum.getStep(to);

		// Limit percentage to the 0 - 100 range
		to = limit(to);

		// Return false if handle can't move
		if ( to === reference[handleNumber] ) {
			return false;
		}

		return to;
	}

	function toPct ( pct ) {
		return pct + '%';
	}

	// Updates scope_Locations and scope_Values, updates visual state
	function updateHandlePosition ( handleNumber, to ) {

		// Update locations.
		scope_Locations[handleNumber] = to;

		// Convert the value to the slider stepping/range.
		scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);

		// Called synchronously or on the next animationFrame
		var stateUpdate = function() {
			scope_Handles[handleNumber].style[options.style] = toPct(to);
			updateConnect(handleNumber);
			updateConnect(handleNumber + 1);
		};

		// Set the handle to the new position.
		// Use requestAnimationFrame for efficient painting.
		// No significant effect in Chrome, Edge sees dramatic performace improvements.
		// Option to disable is useful for unit tests, and single-step debugging.
		if ( window.requestAnimationFrame && options.useRequestAnimationFrame ) {
			window.requestAnimationFrame(stateUpdate);
		} else {
			stateUpdate();
		}
	}

	function setZindex ( ) {

		scope_HandleNumbers.forEach(function(handleNumber){
			// Handles before the slider middle are stacked later = higher,
			// Handles after the middle later is lower
			// [[7] [8] .......... | .......... [5] [4]
			var dir = (scope_Locations[handleNumber] > 50 ? -1 : 1);
			var zIndex = 3 + (scope_Handles.length + (dir * handleNumber));
			scope_Handles[handleNumber].childNodes[0].style.zIndex = zIndex;
		});
	}

	// Test suggested values and apply margin, step.
	function setHandle ( handleNumber, to, lookBackward, lookForward ) {

		to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward);

		if ( to === false ) {
			return false;
		}

		updateHandlePosition(handleNumber, to);

		return true;
	}

	// Updates style attribute for connect nodes
	function updateConnect ( index ) {

		// Skip connects set to false
		if ( !scope_Connects[index] ) {
			return;
		}

		var l = 0;
		var h = 100;

		if ( index !== 0 ) {
			l = scope_Locations[index - 1];
		}

		if ( index !== scope_Connects.length - 1 ) {
			h = scope_Locations[index];
		}

		scope_Connects[index].style[options.style] = toPct(l);
		scope_Connects[index].style[options.styleOposite] = toPct(100 - h);
	}

	// ...
	function setValue ( to, handleNumber ) {

		// Setting with null indicates an 'ignore'.
		// Inputting 'false' is invalid.
		if ( to === null || to === false ) {
			return;
		}

		// If a formatted number was passed, attemt to decode it.
		if ( typeof to === 'number' ) {
			to = String(to);
		}

		to = options.format.from(to);

		// Request an update for all links if the value was invalid.
		// Do so too if setting the handle fails.
		if ( to !== false && !isNaN(to) ) {
			setHandle(handleNumber, scope_Spectrum.toStepping(to), false, false);
		}
	}

	// Set the slider value.
	function valueSet ( input, fireSetEvent ) {

		var values = asArray(input);
		var isInit = scope_Locations[0] === undefined;

		// Event fires by default
		fireSetEvent = (fireSetEvent === undefined ? true : !!fireSetEvent);

		values.forEach(setValue);

		// Animation is optional.
		// Make sure the initial values were set before using animated placement.
		if ( options.animate && !isInit ) {
			addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);
		}

		// Now that all base values are set, apply constraints
		scope_HandleNumbers.forEach(function(handleNumber){
			setHandle(handleNumber, scope_Locations[handleNumber], true, false);
		});

		setZindex();

		scope_HandleNumbers.forEach(function(handleNumber){

			fireEvent('update', handleNumber);

			// Fire the event only for handles that received a new value, as per #579
			if ( values[handleNumber] !== null && fireSetEvent ) {
				fireEvent('set', handleNumber);
			}
		});
	}

	// Reset slider to initial values
	function valueReset ( fireSetEvent ) {
		valueSet(options.start, fireSetEvent);
	}

	// Get the slider value.
	function valueGet ( ) {

		var values = scope_Values.map(options.format.to);

		// If only one handle is used, return a single value.
		if ( values.length === 1 ){
			return values[0];
		}

		return values;
	}

	// Removes classes from the root and empties it.
	function destroy ( ) {

		for ( var key in options.cssClasses ) {
			if ( !options.cssClasses.hasOwnProperty(key) ) { continue; }
			removeClass(scope_Target, options.cssClasses[key]);
		}

		while (scope_Target.firstChild) {
			scope_Target.removeChild(scope_Target.firstChild);
		}

		delete scope_Target.noUiSlider;
	}

	// Get the current step size for the slider.
	function getCurrentStep ( ) {

		// Check all locations, map them to their stepping point.
		// Get the step point, then find it in the input list.
		return scope_Locations.map(function( location, index ){

			var nearbySteps = scope_Spectrum.getNearbySteps( location );
			var value = scope_Values[index];
			var increment = nearbySteps.thisStep.step;
			var decrement = null;

			// If the next value in this step moves into the next step,
			// the increment is the start of the next step - the current value
			if ( increment !== false ) {
				if ( value + increment > nearbySteps.stepAfter.startValue ) {
					increment = nearbySteps.stepAfter.startValue - value;
				}
			}


			// If the value is beyond the starting point
			if ( value > nearbySteps.thisStep.startValue ) {
				decrement = nearbySteps.thisStep.step;
			}

			else if ( nearbySteps.stepBefore.step === false ) {
				decrement = false;
			}

			// If a handle is at the start of a step, it always steps back into the previous step first
			else {
				decrement = value - nearbySteps.stepBefore.highestStep;
			}


			// Now, if at the slider edges, there is not in/decrement
			if ( location === 100 ) {
				increment = null;
			}

			else if ( location === 0 ) {
				decrement = null;
			}

			// As per #391, the comparison for the decrement step can have some rounding issues.
			var stepDecimals = scope_Spectrum.countStepDecimals();

			// Round per #391
			if ( increment !== null && increment !== false ) {
				increment = Number(increment.toFixed(stepDecimals));
			}

			if ( decrement !== null && decrement !== false ) {
				decrement = Number(decrement.toFixed(stepDecimals));
			}

			return [decrement, increment];
		});
	}

	// Attach an event to this slider, possibly including a namespace
	function bindEvent ( namespacedEvent, callback ) {
		scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];
		scope_Events[namespacedEvent].push(callback);

		// If the event bound is 'update,' fire it immediately for all handles.
		if ( namespacedEvent.split('.')[0] === 'update' ) {
			scope_Handles.forEach(function(a, index){
				fireEvent('update', index);
			});
		}
	}

	// Undo attachment of event
	function removeEvent ( namespacedEvent ) {

		var event = namespacedEvent && namespacedEvent.split('.')[0];
		var namespace = event && namespacedEvent.substring(event.length);

		Object.keys(scope_Events).forEach(function( bind ){

			var tEvent = bind.split('.')[0],
				tNamespace = bind.substring(tEvent.length);

			if ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {
				delete scope_Events[bind];
			}
		});
	}

	// Updateable: margin, limit, padding, step, range, animate, snap
	function updateOptions ( optionsToUpdate, fireSetEvent ) {

		// Spectrum is created using the range, snap, direction and step options.
		// 'snap' and 'step' can be updated, 'direction' cannot, due to event binding.
		// If 'snap' and 'step' are not passed, they should remain unchanged.
		var v = valueGet();

		var updateAble = ['margin', 'limit', 'padding', 'range', 'animate', 'snap', 'step', 'format'];

		// Only change options that we're actually passed to update.
		updateAble.forEach(function(name){
			if ( optionsToUpdate[name] !== undefined ) {
				originalOptions[name] = optionsToUpdate[name];
			}
		});

		var newOptions = testOptions(originalOptions);

		// Load new options into the slider state
		updateAble.forEach(function(name){
			if ( optionsToUpdate[name] !== undefined ) {
				options[name] = newOptions[name];
			}
		});

		// Save current spectrum direction as testOptions in testRange call
		// doesn't rely on current direction
		newOptions.spectrum.direction = scope_Spectrum.direction;
		scope_Spectrum = newOptions.spectrum;

		// Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)
		options.margin = newOptions.margin;
		options.limit = newOptions.limit;
		options.padding = newOptions.padding;

		// Invalidate the current positioning so valueSet forces an update.
		scope_Locations = [];
		valueSet(optionsToUpdate.start || v, fireSetEvent);
	}

	// Throw an error if the slider was already initialized.
	if ( scope_Target.noUiSlider ) {
		throw new Error('Slider was already initialized.');
	}

	// Create the base element, initialise HTML and set classes.
	// Add handles and connect elements.
	addSlider(scope_Target);
	addElements(options.connect, scope_Base);

	scope_Self = {
		destroy: destroy,
		steps: getCurrentStep,
		on: bindEvent,
		off: removeEvent,
		get: valueGet,
		set: valueSet,
		reset: valueReset,
		// Exposed for unit testing, don't use this in your application.
		__moveHandles: function(a, b, c) { moveHandles(a, b, scope_Locations, c); },
		options: originalOptions, // Issue #600, #678
		updateOptions: updateOptions,
		target: scope_Target, // Issue #597
		pips: pips // Issue #594
	};

	// Attach user events.
	bindSliderEvents(options.events);

	// Use the public value method to set the start values.
	valueSet(options.start);

	if ( options.pips ) {
		pips(options.pips);
	}

	if ( options.tooltips ) {
		tooltips();
	}

	return scope_Self;

}


	// Run the standard initializer
	function initialize ( target, originalOptions ) {
		document = target.ownerDocument;
		if ( !target.nodeName ) {
			throw new Error('noUiSlider.create requires a single element.');
		}

		// Test the options and create the slider environment;
		var options = testOptions( originalOptions, target );
		var api = closure( target, options, originalOptions );

		target.noUiSlider = api;

		return api;
	}

	// Use an object instead of a function for future expansibility;
	return {
		create: initialize
	};

}));
},{}],105:[function(require,module,exports){
(function (global){
!function(b,a){typeof exports==='object'&&typeof module!=='undefined'?module.exports=b():typeof define==='function'&&define.amd?define([],b):(typeof window!=='undefined'?a=window:typeof global!=='undefined'?a=global:typeof self!=='undefined'?a=self:a=this,a.franc=b())}(function(){return function a(b,c,e){function f(d,k){if(!c[d]){if(!b[d]){var i=typeof require=='function'&&require;if(!k&&i)return i(d,!0);if(g)return g(d,!0);var j=new Error("Cannot find module '"+d+"'");throw j.code='MODULE_NOT_FOUND',j}var h=c[d]={exports:{}};b[d][0].call(h.exports,function(c){var a=b[d][1][c];return f(a?a:c)},h,h.exports,a,b,c,e)}return c[d].exports}var g=typeof require=='function'&&require;for(var d=0;d<e.length;d++)f(e[d]);return f}({1:[function(b,a,c){a.exports={Latin:{spa:' de|os |de | la|la | y | a |es |ón |ión|rec|ere|der| co|e l|el |en |ien|cho|ent|ech|ció|aci|o a|a p| el|a l|al |as |e d| en|na |ona|s d|da |nte| to|ad |ene|con| pr| su|tod| se|ho |los| pe|per|ers| lo|o d| ti|cia|n d|cio| es|ida|res|a t|tie|ion|rso|te |do | in|son| re| li|to |dad|tad|e s|est|pro|que|men| po|a e|oda|nci| qu| un|ue |ne |n e|s y|lib|su | na|s e|nac|ia |e e|tra| pa|or |ado|a d|nes|ra |se |ual|a c|er |por|com|nal|rta|a s|ber| o |one|s p|dos|rá |sta|les|des|ibe|ser|era|ar |ert|ter| di|ale|l d|nto|hos|del|ica|a a|s n|n c|oci|imi|io |o e|re |y l|e c|ant|cci| as|las|par|ame| cu|ici|ara|enc|s t|ndi| so|o s|mie|tos|una|bre|dic|cla|s l|e a|l p|pre|ntr|o t|ial|y a|nid|n p|a y|man|omo|so |n l| al|ali|s a|no | ig|s s|e p|nta|uma|ten|gua|ade|y e|soc|mo | fu|igu|o p|n t|hum|d d|ran|ria|y d|ada|tiv|l e|cas| ca|vid|l t|s c|ido|das|dis|s i| hu|s o|nad|fun| ma|rac|nda|eli|sar|und| ac|uni|mbr|a u|die|e i|qui|a i| ha|lar| tr|odo|ca |tic|o y|cti|lid|ori|ndo|ari| me|ta |ind|esa|cua|un |ier|tal|esp|seg|ele|ons|ito|ont|iva|s h|d y|nos|ist|rse| le|cie|ide|edi|ecc|ios|l m|r e|med|tor|sti|n a|rim|uie|ple|tri|ibr|sus|lo |ect|pen|y c|an |e h|n s|ern|tar|l y|egu|gur|ura|int|ond|mat|l r|r a|isf|ote',eng:' th|the| an|he |nd |and|ion| of|of |tio| to|to |on | in|al |ati|igh|ght|rig| ri|or |ent|as |ed |is |ll |in | be|e r|ne |one|ver|all|s t|eve|t t| fr|s a| ha| re|ty |ery| or|d t| pr|ht | co| ev|e h|e a|ng |ts |his|ing|be |yon| sh|ce |ree|fre|ryo|n t|her|men|nat|sha|pro|nal|y a|has|es |for| hi|hal|f t|n a|n o|nt | pe|s o| fo|d i|nce|er |ons|res|e s|ect|ity|ly |l b|ry |e e|ers|e i|an |e o| de|cti|dom|edo|eed|hts|ter|ona|re | no| wh| a | un|d f| as|ny |l a|e p|ere| en| na| wi|nit|nte|d a|any|ted| di|ns |sta|th |per|ith|e t|st |e c|y t|om |soc| ar|ch |t o|d o|nti|s e|equ|ve |oci|man| fu|ote|oth|ess| al| ac|wit|ial| ma|uni| se|rea| so| on|lit|int|r t|y o|enc|thi|ual|t a| eq|tat|qua|ive| st|ali|e w|l o|are|f h|con|te |led| is|und|cia|e f|le | la|y i|uma|by | by|hum|f a|ic | hu|ave|ge |r a| wo|o a|ms |com| me|eas|s d|tec| li|n e|en |rat|tit|ple|whe|ate|o t|s r|t f|rot| ch|cie|dis|age|ary|o o|anc|eli|no | fa| su|son|inc|at |nda|hou|wor|t i|nde|rom|oms| ot|g t|eme|tle|iti|gni|s w|itl|duc|d w|whi|act|hic|aw |law| he|ich|min|imi|ort|o s|se |e b|ntr|tra|edu|oun|tan|e d|nst|l p|d n|ld |nta|s i|ble|n p| pu|n s| at|ily|rth|tho|ful|ssi|der|o e|cat|uca|unt|ien| ed|o p|h a|era|ind|pen|sec|n w|omm|r s',por:'os |de | de| a | e |o d|to |ão | di|ent|da |ito|em | co|eit|as |dir|es |ire|rei| se|ção|ade|a p|dad|e d|s d|men|nte|do |s e| pr| pe|dos| to| da|a a|o e| o |o a|ess|con|tod|que| qu|te |e a| do|al |res|ida|m d| in| ou|er |sso| na| re| po|a s| li|uma|cia|ar |pro|e e|a d| te|açã|a t| es| su|ou |ue |s p|tos|a e|des|ra |com|no |ame|ia |e p|tem|nto| pa|is |est|tra|ões|na |s o|oda|das|ser|soa|s n|pes|o p|s a|o s|e o| em| as| à |o o|ais|ber|ado|oa |o t|e s|man|sua|ua | no| os|a c|ter|çõe|erd|lib|rda|s s|nci|ibe|e n|ica|odo|so |nal|ntr|s t|hum|ura| ao|ona|ual| so|or |ma |sta|o c|a n|pre|ara|era|ons|e t|r a|par|o à| hu|ind|por|cio|ria|m a|s c| um|a l|gua|ran| en|ndi|o i|e c|raç|ion|nid|aci|ano|soc|e r|oci| ac|und|sen|nos|nsi|rec|ime|ali|int|um |per|nac| al|m o|r p| fu|ndo|ont|açõ| ig|igu|fun|nta| ma|uni|cçã|ere| ex|a i| me|ese|rio|l d|a o|s h|pel|ada|pri|ide|am |m p|pod|s f|ém |a f|io |ode|ca |ita|lid|tiv|e f|vid|r e|esp|nda|omo|e l|naç|o r|ant|a q|tad|lic|iva| fa|ver|s l|ial|cla|ngu|ing| ca|mo |der| vi|eli|ist|ta |se |ati|ios|ido|r o|eci|dis| un|e i|r d|ecç|o q|s i|qua|ênc|a m|seu|sti|nin|uer|rar|cas|aos|ens|gué|ias|sid|uém|tur|dam|sse|ao |ela|l e|for|tec|ote| pl|ena| tr|m c|tro| ni|ico|rot',ind:'an |ang| da|ng | pe|ak | ke| me|ata| se|dan|kan| di| be|hak|ber|per|ran|nga|yan|eng| ya| ha|asa|gan|men|ara|nya|n p|n d|n k|a d|tan| at|at |ora|ala|san| ba|ap |erh|n b|rha|ya | ma|g b|a s|pen|eba|as |aan|uk |ntu| or|eti|tas|aka|tia|ban|set| un|n s|ter|n y| te|k m|tuk|bas|iap|lam|beb|am | de|k a|keb|n m|i d|unt|ama|dal|ah |ika|dak|ebe|p o|sa |pun|mem|n h|end|den|ra |ela|ri |nda| sa|di |ma |a m|n t|k d|n a|ngg|tau|man|gar|eri|asi| ti|un |al |ada|um |a p|lak|ari|au | ne|neg|a b|ngs|ta |ole|leh|ert|ers|ida|k h|ana|gsa|dar|uka|tid|bat|sia|era|eh |dap|ila|dil|h d|atu|sam|ia |i m| in|lan|aha|uan|tu |ai |t d|a a|g d|har|sem|na |apa|ser|ena|kat|uat|erb|erl|mas|rta|ega|ung|nan|emp|n u|kum|l d|g s| hu|ka |ent|pat|mba|aga|nta|adi| su|eni|uku|n i|huk|ind|ar |rga|i s|aku|ndi|sua|ni |rus|han|si |car|nny| la|in |u d|ik |ua |lah|rik|usi|emb|ann|mer|ian|gga|lai|min|a u|lua|ema|emu|arg|dun|dip|a t|mat|aya|rbu|aru|erk|rka|ini|eka|a k|rak|kes|yat|iba|nas|rma|ern|ese|s p|nus| pu|anu|ina| ta|mel|mua|kel|k s|us |ndu|nak|da |sya|das|pem|lin|ut |yar|ami|upu|seo|aik|eor|iny|aup|tak|ipe|ing|tin| an|dik|uar|ili|g t|rse|sar|ant|g p|a n|aks|ain| ja|t p| um|g m|dir|ksa|umu|kep|mum|i k|eca|rat|m p|h p|aba|ses|m m',fra:' de|es |de |ion|nt |et |tio| et|ent| la|la |e d|on |ne |oit|e l|le | le|s d|e p|t d|ati|roi| dr|dro|it | à | co|té |ns |te |e s|men|re | to|con| l’|tou|que| qu|les| so|des|son| pe|ons| un|s l|s e| pr|ue | pa|e c|t l|ts |onn| au|e a|eme|e e| li|ont|ant|out|ute|t à|res|ers| sa|ce | a |tre|per|a d|cti|er |lib|ité| en|ux | re|en |rso|à l| ou| in|lle|un |nat|ou |nne|n d|une| d’| se|par|nte|us |ur |s s|ans|dan|a p|r l|pro|its|és |t p|ire|e t|s p|sa | dé|ond|é d|a l|nce|ert|aux|omm|nal|me | na| fo|iqu| ce|rté|ect|ale|ber|t a|s a| da|mme|ibe|san|e r| po|com|al |s c|qui|our|t e| ne|e n|ous|r d|ali|ter| di|fon|e o|au | ch|air|ui |ell| es|lit|s n|iss|éra|tes|soc|aut|oci|êtr|ien|int|du |est|été|tra|pou| pl|rat|ar |ran|rai|s o|ona|ain|cla|éga|anc|rs |eur|pri|n c|e m|s t|à u| do|ure|bre|ut | êt|age| ét|nsi|sur|ein|sen|ser|ndi|ens|ess|ntr|ir | ma|cia|n p|st |a c| du|l e| su|bli|ge |rés| ré|e q|ass|nda|peu|ée |l’a| te|a s|tat|il |tés|ais|u d|ine|ind|é e|qu’| ac|s i|n t|t c|n a|l’h|t q|soi|t s|cun|rit| ég|oir|’en|nta|hom| on|n e| mo|ie |ign|rel|nna|t i|l n| tr|ill|ple|s é|l’e|rec|a r|ote|sse|uni|idé|ive|s u|t ê|ins|act| fa|n s| vi|gal| as|lig|ssa|pré|leu|e f|lic|dis|ver| nu|ten|ssi|rot|tec|s m|abl',deu:'en |er |der| un|nd |und|ein|ung|cht| de|ich|sch|ng | ge|ie |che|ech| di|die|rec|gen|ine|eit| re|ch | da|n d|ver|hen| zu|t d| au|ht | ha|lic|it |ten|rei| be|in | ve| in| ei|nde|auf|den|ede|zu |n s|uf |fre|ne |ter|es | je|jed|n u| an|sei|and| fr|run|at | se|e u|das|hei|s r|hte|hat|nsc|nge|r h|as |ens| al|ere|lle|t a| we|n g|rde|nte|ese|men| od|ode|ner|g d|all|t u|ers|te |nen| so|d d|n a|ben|lei| gr| vo|wer|e a|ege|ion| st|ige|le |cha| me|haf|aft|n j|ren| er|erk|ent|bei| si|eih|ihe|kei|erd|tig|n i|on |lun|r d|len|gem|ies|gru|tli|unt|chu|ern|ges|end|e s|ft |st |ist|tio|ati| gl|sta|gun|mit|sen|n n| na|n z|ite| wi|r g|eic|e e|ei |lie|r s|n w|gle|mei|de |uch|em |chl|nat|rch|t w|des|n e|hre|ale|spr|d f|ach|sse|r e| sc|urc|r m|nie|e f|fen|e g|e d| ni|dur|dar|int| du|geh|ied|t s| mi|alt|her|hab|f g|sic|ste|taa|aat|he |ang|ruc|hli|tz |eme|abe|h a|n v|nun|geg|arf|rf |ehe|pru| is|erf|e m|ans|ndl|e b|tun|n o|d g|n r|r v|wie|ber|r a|arb|bes|t i|h d|r w|r b| ih|d s|igk|gke|nsp|dig|ema|ell|eru|n f|ins|rbe|ffe|esc|igu|ger|str|ken|e v|gew|han|ind|rt | ar|ieß|n h|rn |man|r i|hut|utz|d a|ls |ebe|von|lte|r o|rli|etz|tra|aus|det|hul|e i|one|nne|isc|son|sel|et |ohn|t g|sam| fa|rst|rkl|ser|iem|g v|t z|err',jav:'ng |an |ang| ka|ing|kan| sa|ak |lan| la|hak| ha| pa| ma|ngg|ara|sa |abe|ne | in|n k|ant| ng|tan|nin| an|nga|ata|en |ran| ba|man|ban|ane|hi |n u|ong|ra |nth|ake|ke |thi| da|won|uwo|ung|ngs| uw|asa|gsa|ben|sab|ana|aka|beb|a k|g p|nan|nda|adi|at |awa|san|ni |dan|g k|pan|eba| be|e k|g s|ani|bas| pr|dha|aya|gan|ya |wa |di |mar|n s| wa|ta |a s|g u| na|e h|arb|a n|a b|a l|n n| ut|yan|n p|asi|g d|han|ah |g n| tu| um|as |wen|dak|rbe|dar| di|ggo|sar|mat|k h|a a|iya| un|und|eni|kab|be |art|ka |uma|ora|n b|ala|n m|ngk|rta|i h| or|gar|yat|kar|al |a m|n i|na |g b|ega|pra|ina|kak|g a|a p|tum|nya|kal|ger|gge| ta|kat|i k|ena|oni|kas| pe|dad|aga|g m|duw|k k|uta|uwe| si| ne|adh|pa |n a|go |and|i l| ke|nun|nal|ngu|uju|apa|a d|t m|i p|min|iba|er | li|anu|sak|per|ama|gay|war|pad|ggu|ha |ind|taw|ras|n l|ali|eng|awi|a u| bi|we |bad|ndu|uwa|awe|bak|ase|eh | me|neg|pri| ku|ron|ih |g t|bis|iji|i t|e p| pi|aba|isa|mba|ini|a w|g l|ika|n t|ebu|ndh|ar |sin|lak|ur |mra|men|ku | we|e s|a i|liy| ik|ayo|rib|ngl|ami|arg|nas|yom|wae|ut |kon|ae |rap|aku| te|dil|tin|rga|jud|umu| as|rak|bed|k b|il |kap|h k|jin|k a| nd|e d|i s| lu|i w|eka|mum|um |uha|ate| mi|k p|gon|eda| ti|but|n d|r k|ona|uto|tow|wat|gka|si |umr|k l|oma',vie:'ng |̣c |́c | qu| th|à |nh | ng|̣i | nh|và| va|̀n |uyê| ph| ca|quy|ền|yề|̀i | ch|̀nh| tr| cu|ngư|i n|gươ|ườ|́t |ời| gi|ác| co|̣t |ó |c t|ự |n t|cá|ông| kh|ượ|ợc| tư| đư|iệ|đươ|ìn|́i | ha|có|i đ|gia| đê|pha| mo|ọi|mọ|như|n n|củ| ba|̣n |̉a |ủa|n c|̀u |̃ng|ân |ều|ất| bi|tự|hôn| vi|g t| la|n đ|đề|nhâ| ti|t c| đô|ên |bả|hiê|u c| tô|do |hân| do|ch |́ q|̀ t| na|́n |ay | hi|àn|̣ d|ới|há| đi|hay|g n| mô|ốc|uố|n v|ội|hữ|thư|́p |quô| ho|̣p |nà|ào|̀ng|̉n |ị |́ch|ôn |̀o |khô|c h|i c|c đ| hô|i v|tro| đa|́ng|mộ|i t|ột|g v|ia |̣ng|ản|ướ|ữn|̉ng|h t|hư |ện|n b|ộc|ả |là|c c|g c| đo|̉ c|n h|hà|hộ| bâ|ã |̀y | vơ|̣ t|̉i |iế| cô|t t|g đ|ức|iên| vê|viê|vớ|h v|ớc|ực|ật|tha|̉m |ron|ong|áp|g b|hươ| sư|a c|sự|̉o |ảo|h c|ể |o v|uậ|a m|ế |iá|̀ c|cho|qua|hạ|ục| mi|̀ n|phâ|c q|côn|o c|á |i h|ại| hơ|̃ h| cư|n l|bị| lu|bấ|cả|ín|h đ| xa|độ|g h|c n|c p|thu|ải|ệ | hư|́ c|o n| nư|ốn|́o |áo|xã|oà|y t|hả|tộ|̣ c| tâ|thô| du|m v|mì|ho |hứ|ệc|́ t|hợ|án|n p|cũ|ũn|iể|ối|tiê|ề |hấ|ợp|hoa|y đ|chi|o h|ở |ày|̉ t|đó|c l|về|̀ đ|i b|kha|c b| đâ|luâ|ai |̉ n|đố|ết|hự|tri|p q|nươ|dụ|hí|g q|yên|họ|́nh| ta| bă|c g|n g|thê|o t|c v|am |c m|an ',ita:' di|to | de|ion| in|la |e d|di |ne | e |zio|re |le |ni |ell|one|lla|rit|a d|o d|del|itt|iri|dir| co|ti |ess|ent| al|azi|tto|te |i d|i i|ere|tà | pr|ndi|e l|ale|o a|ind|e e|e i|gni|nte|con|i e|li |a s| un|men|ogn| ne|uo | og|idu|e a|ivi|duo|vid| es|tti| ha|div| li|a p|no |all|pro|za |ato|per|sse|ser| so|i s| la| su|e p| pe|ibe|na |a l| il|ber|e n|il |ali|lib|ha |che|in |o s|e s| qu|o e|ia |e c| ri|nza|ta |nto|he |oni|o i| o |sta|o c|nel| a |o p|naz|e o|so | po|o h|gli|i u|ond|i c|ers|ame|i p|lle|un |era|ri |ver|ro |el |una|a c| ch|ert|ua |i a|ssi|rtà|a e|ei |dis|ant| l |tat|a a|ona|ual| le|ità|are|ter| ad|nit| da|pri|dei|à e|cia| st| si|nal|est|tut|ist|com|uni| ed|ono| na|sua|al |si |anz| pa| re|raz|gua|ita|res|der|soc|man|o o|ad |i o|ese|que|enz|ed | se|io |ett|on | tu|dic|à d|sia|i r|rso|oci|rio|ari|qua|ial|pre|ich|rat|ien|tra|ani|uma|se |ll |eri|a n|o n| um|do |ara|a t|zza|er |tri|att|ico|pos|sci|i l|son|nda|par|e u|fon| fo|nti|uzi|str|utt|ati|sen|int|nes|iar| i |hia|n c|sti|chi|ann|ra | eg|egu|isp|bil|ont|a r| no|rop| me|opr|ost| ma|ues|ica|sso|tal|cie|sun|lit|ore|ina|ite|tan| ra|non|gio|d a|e r|dev|i m|l i|ezz|izi| cu|nno|rà |a i|tta|ria|lia|cos|ssu|dal|l p| as|ass|opo|ve |eve',tur:' ve| ha|ve |ler|lar|ir |in |hak| he|her|bir|er |an |arı|eri|ya | bi|ak |r h|eti|ın |iye|yet| ka|ası|ını| ol|tle|eya|kkı|ara|akk|etl|sın|esi|na |de |ek | ta|nda|ini| bu|ile|rın|rin|vey|ne |kla|e h|ine|ır |ere|ama|dır|n h| sa|ına|sin|e k|le | ge|mas|ınd|nın|ı v| va|lan|lma|erk|rke|nma|tin|rle| te|nin|akl|a v|da | de|let|ill|e m|ard|en |riy|aya|nı | hü| şa|e b|k v|kın|k h| me|mil|san| il|si |rdı|e d|dan|hür|var|ana|e a|kes|et |mes|şah|dir| mi|ret|rri| se|ola|ürr|irl|bu |mak| ma|mek|n e|kı |n v|n i|lik|lle| ed| hi|n b|a h| ba|nsa| iş|eli|kar| iç|ı h|ala|li |ulu|rak|evl|e i|ni |re |r ş|eme|etm|e t|ik |e s|a b|iş |n k|hai|nde|aiz| eş|izd|un |olm|hiç|zdi|ar |unm|ma | gö|ilm|lme|im |n t|tir|dil|mal|e g|i v| ko|lun|e e|mel|ket|ık |n s|ele|la |el |r v|ede|şit|ili|eşi|yla|a i| an|anı| et|rı |ahs| ya|sı |edi|siy|t v|i b|se |içi|çin|bul|ame| da|miş|may|tim|a k|tme|r b|ins|yan|nla|mle| di|eye|ger|ye |uğu|erd|din|ser| mü|mem|vle| ke|nam|ind|len|eke|es | ki|n m|it | in| ku|rşı|a s|arş| ay|eml|lek|oru|rme|kor|rde|i m| so|tür|al |lam|eni|nun| uy|ken|hsı|i i|a d|ri |dev|ün |a m|r a|mey|cak|ıyl|maz|e v|ece|ade|iç |şma|mse|te |tün|ims|kim|e y|şı |end|k g|ndi|alı| ce|lem|öğr|ütü|k i|r t| öğ|büt|anl| bü',pol:' pr|nie| i |ie |pra| po|ani|raw|ia |nia|wie|go | do|ch |ego|iek|owi| ni|ści|ci |a p|do |awo| cz|ośc|ych| ma|ek |rze| na|prz| w |wo |ej | za|noś|czł|zło|eni|wa | je|łow|i p|wol|oln| lu|rod| ka| wo|lno|wsz|y c|ma |ny |każ|ażd|o d|stw|owa|dy |żdy| wy|rzy|sta|ecz| sw|dzi|i w|e p|czn|twa|na |zys|ów |szy|ub |lub|a w|est|kie|k m|wan| sp|ają| ws|e w|pow|pos|nyc|rac|spo|ać |a i|cze|sze|neg|yst|jak| ja|o p|pod|acj|ne |ńst|aro|mi | z |i i|nar| ko|obo|awa| ro|i n|jąc|zec|zne|zan|dow| ró|iej|zy |zen|nic|ony|aw |i z|czy|no |nej|o s|rów|odn|cy |ówn|odz|o w|o z|jeg|edn|o o|aki|mie|ien|kol| in|zie|bez|ami|eńs|owo|dno| ob| or| st|a s|ni |orz|o u|ym |stę|tęp|łec|jed|i k| os|w c|lwi|ez |olw|ołe|poł|cji|y w|o n|wia| be|któ|a j|zna|zyn|owe|wob|ka |wyc|owy|ji | od|aln|inn|jes|icz|h p|i s|się|a o|ją |ost|kra|st |sza|swo|war|cza|roz|y s|raz|nik|ara|ora|lud|i o|a z|zes| kr|ran|ows|ech|w p|dów|ą p|pop|a n|tki|stk|gan|zon|raj|e o|iec|i l| si|że |eka| kt| de|em |tór|ię |wni|lni|ejs|ini|odo|dni|ełn|kow|peł|a d|ron|dek|pie|udz|bod|nan|h i|dst|ieg|taw|z p|z w|zeń|god|iu |ano|lar| to|y z|a k|ale|kla|trz|zaw|ich|e i|ier|iko|dzy|chn|w z|by |ków|adz|ekl|ywa|ju |och|kor|sob|ocz|oso|u p|du |tyc|tan|ędz| mi|e s| ta|ki ',gax:'aa |an |uu | ka|ni |aan|umm|ii |mma|maa| wa|ti |nam| fi|ta |tti| na|saa|fi | mi|rga|i k|a n| qa|dha|iyy|oot|in |mir|irg|raa|qab|a i|a k|kan|akk|isa|chu|amu|a f|huu|aba|kka| ta|kam|a a| is|amn|ami|att|ach|mni|yaa| bi|yuu|yyu|ee |wal|miy|waa|ga |ata|aat|tii|oo |a e|moo| ni| ee|ba | ak|ota|a h|i q| ga| dh|daa|haa|a m|ama|yoo|a b|i a|ka |kaa| hi|sum|aas|arg|man| hu| uu|u n| yo| ar| ke| ha|ees| ba|uf |i i|taa|uuf|iin|ada|a w|i f|ani|rra|na |isu| ad|i w|a u|nya|irr|da |hun|hin|ess| ho| ma|i m|und|i b|bar|ana|een|mu |is |bu |f m| ir| sa|u a|add|aad| la|i d|n h|eeg|i h|sa |hoj|abu| ya|kee|al |udh|ook|goo|ala|ira|nda|itt|gac|as |n k|mum|see|rgo|uum|ra |n t|n i|ara|muu|ums|mat|nii|sii|ssa|a d|a q| da|haw|a g|yya|asu|eef|u h|tum|biy| mo|a t|ati|eny|gam|abs|awa|roo|uma|n b|n m|u y|a s|sat|baa|gar|n a|mmo|nis| qo|nna| ku|eer| to|kko|bil|ili|lis|bir|otu|tee|ya |msa|aaf|suu|n d|jii|n w|okk|rka|gaa|ald|un |rum| ye|ame| fu|mee|yer|ero|amm|era|kun|i y|oti|tok|ant|ali|nni| am|lda|lii|n u|lee|ura|lab|aal|tan|laa|i g|ila|ddu|aru|u m|oji|gum|han|ega| se|ffa|dar|faa|ark|n y|hii|qix|gal|ndi| qi|asa|art|ef |uud| bu|jir| ji|arb|n g|chi|tam|u b|dda|bat|di |kar|lam|a l| go|bsi|sad|oka|a j|egu|u t|bee|u f|uun',swh:'a k|wa |na | ya| ku|ya | na| wa|a m| ha|i y|a h|a n|ana|ki |aki|kwa| kw|hak| ka| ma|la |a w|tu |li |a u|ni |i k|a a|ila| ki|ali|a y|ati|za |ili|ifa| mt|ke | an|kil|kat|mtu|ake|ote|te |ka |ika|ma |we |a s|yo |fa |i n|ata|e k|ama|zi |amb|u a|ia |u w| yo|azi|kut|ina|i z|asi| za|o y|uhu|yak|au |ish|mba|e a|u k|hur|ha |tik|wat| au|uru| bi|sha|mu |ara|u n| as|hi | hi|ru |aif|tai|cha|ayo|a b|hal| uh| ch|yot|i h| zi|awa|chi|atu|e n|ngi|u y|mat|shi|ani|eri| am|uli|ele|sa |ja |e y|a t|oja|o k|nch|i a|a j| nc|ima| sh|ami| ta|end|any|moj|i w|ari|ham|uta|ii |iki|ra |ada|wan|wak|nay|ye |uwa| la|ti |eza|o h|iri|iwa|kuw|iwe| wo|fan| sa|she|bu |kan|ao |jam|wen|lim|i m|her|uto|ria| ja| ni|kam|di | hu|zo |a l|da |kaz|ahi|amu|wot|o w|si |dha|bin|ing|adh|a z|bil|e w|nya|kup|har|ri |ang|aka|sta|aji|ne |kus|e m|zim|ini|ind|lin|kul|agu|kuf|ita|bar|o n|uu |iyo|u h|nad|maa|mwe|ine|gin|nye|nde|dam|ta | nd|ndi|rik|asa| ba|rif|uni|nga|hii|lez|bo |azo|uzi|mbo|sil|ush|tah|wam|ibu|uba|imu| ye|esh| ut|taa|aar|wez|i s|e b| si|ala|dhi|eng|aza|tak|hir|saw|izo|kos|tok|oka|yan|a c|wal|del|i b|pat| um|ndo|zwa|mam|a i|guz|ais|eli|mai|laz|ian|aba|man|ten|zin|ba |nda|oa |u m|uku|ufu| mw|liw|aha|ndw|kuh|ua |upa| el|umi|sia',sun:'an |na |eun| ka|ng | sa|ana|ang| di|ak | ha|nga|hak|un |ung|keu|anu| ba| an|nu |a b| bo| je|a h|ata|asa|jeu|ina| ng|ara|nan|awa|gan|ah |sa |a k| na|n k|kan|aha|a p|a s|ga |ban| ma|a n|ing|oga|bog|sar| pa| ku|man|a a|ha |san|ae |bae|din|g s|aga|sah|ra |tan|n s| pe|ala| si|kat|ma |per| ti|aya|sin| at| pi| te|n a|aan|lah|pan|gar|n n|u d|ta |eu |ari|kum|ngs|a m|n b|n d|ran|a d|gsa|wa |taw|k h|ama|ku |ike|n p|eba|bas| ja|al |a t|ika|at |beb|kab|pik|asi|atu|nda|una|a j|nag|e b|n h|en |g k|oh |aba|ila|rta|aku|boh|ngg|abe|art|ar |n j|di |ima|um |ola|geu|usa|aca|sak|adi|k a|udu|teu|car|tin| me| ay|h k| po|eh |u s|aka|rim|ti |sac|k n|ngt|jen|awe|ent|u a|uma|teh|law|ur |h s|dan|bar|uku|gaw|aru|ate|iba|dil|pol|aja|ieu|ere|jal|nar| hu|n t|nya|pa |are|upa|mas|ake|ut |wan| ge|kal|nus| so|ngk|ya |yan|huk| du|tun| mi|mpa|isa|lan|ura|u m|uan|ern|ena|nte|rup|tay|n m| ke|ka |han|und|us |h b|kud|ula|tut| tu| ie|hna|kaw|u k|lak|gam|mna|umn|g d| nu|yun|ri |ayu|wat| wa|eri|g n|a u|i m|u p| ta|du |dit|umu|k k|ren|mba|rik|gta| be|ali|h p|h a|eus|u n|alm|il | da|sas|ami|min|lma|ngu|nas|yat|rak|amp|mer|k j|sab|mum| ra|rua|ame|ua |ter|sal|ksa|men|kas|nge|k d|ona| bi|bis|sio|ion|nal|taa| de|uh |gal|dip|we |bad',ron:' de|și | și|re | în|are|te |de |ea |ul |rep|le |ept|dre|e d| dr|ie |în |e a|ate|ptu| sa|tul| pr|or |e p| pe|la |e s|ori| la| co|lor| or|ii |rea|ce |au |tat|ați| a | ca|ent| fi|ale|ă a|a s| ar|ers|per|ice| li|uri|a d|al | re|e c|ric|nă |i s|e o|ei |tur| să|lib|con|men|ibe|ber|rso|să |tăț|sau| ac|ilo|pri|ăți|i a|i l|car|l l|ter| in|ție|că |soa|oan|ții|lă |tea|ri |a p| al|ril|e ș|ană|in |nal|pre|i î|uni|ui |se |e f|ere|i d|e î|ita| un|ert|ile|tă |a o| se|i ș|pen|ia |ele|fie|i c|a l|ace|nte|ntr|eni| că|ală| ni|ire|ă d|pro|est|a c| cu| nu|n c|lui|eri|ona| as|sal|ând|naț|ecu|i p|rin|inț| su|ră |e n| om|ici|nu |i n|oat|ări|l d| to|tor| di| na|iun| po|oci|tre|ni |ste|soc|ega|i o|gal| so| tr|ă p|a a|n m|sta|va |ă î|fi |res|rec|ulu|nic|din|sa |cla|nd | mo| ce| au|ara|lit|int|i e|ces|uie|at |rar|rel|iei|ons|e e|leg|nit|ă f| îm|a î|act|e l|ru |u d|nta|a f|ial|ra |ă c| eg|ță | fa|i f|rtă|tru|tar|ți |ă ș|ion|ntu|dep|ame|i i|reb|ect|ali|l c|eme|nde|n a|ite|ebu|bui|ât |ili|toa|dec| o |pli|văț|nt |e r|u c|ța |t î|l ș|cu |rta|cia|ane|țio|ca |ită|poa|cți|împ|bil|r ș| st|omu|ăță|țiu|rie|uma|mân| ma|ani|nța|cur|era|u a|tra|oar| ex|t s|iil|ta |rit|rot|mod|tri|riv|od |lic|rii|eze|man|înv|ne |nvă|a ș|cti',hau:'da | da|in |a k|ya |an |a d|a a| ya| ko| wa| a |sa |na | ha|a s|ta |kin|wan|wa | ta| ba|a y|a h|n d|n a|iya|ko |a t|ma |ar | na|yan|ba | sa|asa| za| ma|a w|hak|ata| ka|ama|akk|i d|a m| mu|su |owa|a z|iki|a b|nci| ƙa| ci| sh|ai |kow|anc|nsa|a ƙ|a c| su|shi|ka | ku| ga|ci |ne |ani|e d|uma|‘ya|cik|kum|uwa|ana| du| ‘y|ɗan|ali|i k| yi|ada|ƙas|aka|kki|utu|n y|a n|hi | ra|mut| do| ad|tar| ɗa|nda| ab|man|a g|nan|ars|and|cin|ane|i a|yi |n k|min|sam|ke |a i|ins|yin|ki |nin|aɗa|ann|ni |tum|za |e m|ami|dam|kan|yar|en |um |n h|oka|duk|mi | ja|ewa|abi|kam|i y|dai|mat|nna|waɗ|n s|ash|ga |kok|oki|re |am |ida|sar|awa|mas|abu|uni|n j|una|ra |i b| ƙu|dun|a ‘|cew|a r|aba|ƙun|ce |e s|a ɗ|san|she|ara|li |kko|ari|n w|m n|buw|aik|u d|kar| ai|niy| ne|hal|rin|bub|zam|omi| la|rsa|ubu|han|are|aya|a l|i m|zai|ban|o n|add|n m|i s| fa|bin|r d|ake|n ‘|uns|sas|tsa|dom| ce|ans| hu|me |kiy|ƙar| am|ɗin| an|ika|jam|i w|wat|n t|yya|ame|n ƙ|abb|bay|har|din|hen|dok|yak|n b|nce|ray|gan|fa |on | ki|aid| ts|rsu| al|aye| id|n r|u k|ili|nsu|bba|aur|kka|ayu|ant|aci|dan|ukk|ayi|tun|aga|fan|unc| lo|o d|lok|sha|un |lin|kac|aɗi|fi |gam|i i|yuw|sun|aif|aja| ir|yay|imi|war| iy|riy|ace|nta|uka|o a|bat|mar|bi |sak|n i| ak|tab|afi|sab',bos:' pr| i |je |rav| na|pra|na |da |ma |ima| sv|a s|nje|a p| da| po|anj|a i|vo |va |ko |ja | u |ako|o i|no | za|e s|ju |avo| im|ti |sva|ava|i p|o n|li |ili|i s|van|ost| ko|vak|ih |ne |a u| sl|nja|koj| dr| ne|jed| bi|i d|ije|stv|u s|lob|im |slo| il|bod|obo| ra|sti|pri| je| su|vje|om |a d|se |e i| ob|a n|i i| se|dru|enj| os|voj|cij|e p|a b|su |o d|uje|u p|raz|i n|a o| od|lo |u o|ova|u i|edn|i u| nj|ovo|jen|lju|ni |oje|nos|a k|ran|dje|iti|o p|aci|žav|a j|i o|e o|pre|pro|bra|nih|ji | ka|e d|jeg|og |sta| tr|tre|bud|u n|drž|u z|rža|bit|svo|ija|elj|reb|e b|mij|jem|avn|pos| bu|ka |aju| iz|ba |ve |rod|de |aro|e u|iva|a z|em |šti|ilo|eni|lje|ći |red|bil|jel|jer| ni|odn|m i|du |tva|nar|gov| sa|oji| do|tu |vim|u d| st|o k|e n|a t|za |nim| dj| sm|ući|ičn|dna|i m|oda|vno|eba|ist|nac|e k|čno|nak|ave|tiv|eđu|nov|olj|sno|ani|aln|an |nom|i b|stu|nst|eno|oj |osn|a r|ovj|nap|smi|nog|čov|oja|nju|ara|nu |dno|ans|ovi|jan|edi|m s| kr|h p|tup| op| čo|iko|jek|tvo| vj| mi|tel|vu |obr|živ|tit|o o|una|odu| mo| ov|kri|ego|din|rug|nik|rad|pod|nji|sam|sto|lja|dst|rim|ite|riv| te|m n|vol|i v|e t|vni|akv|itu|g p| ta|ašt|zaš|svi|ao |te |o s|ak |mje|a č|odr|udu|kla|i t|avi|tno|nič| vr|nic|dni|u u|ina| de|oba|od |jih|st ',hrv:' pr| i |je |rav|pra|ma | na|ima| sv|na |ti |a p|nje| po|a s|anj|a i|vo |ko |da |vat|va |no | za|i s|o i|ja |avo| u | im|sva|i p| bi|e s|ju |tko|o n|li |ili|van|ava| sl|ih |ne |ost| dr|ije| ne|jed|slo| ra|u s|lob|obo| os|bod| da| ko|ova|nja|koj|i d|atk|iti| il|stv|pri|om |im | je| ob| su| ka|i i|i n|e i|vje|i u|se |dru|bit|voj|ati|i o|ćen|a o|o p|a b|a n|ući| se|enj|sti|a u|edn|dje|lo |ćav| mo|raz|u p| od|ran|ni |rod|a k|su |aro|drć|svo|ako|u i|rća|a j|mij|ji |nih|eni|e n|e o| nj|pre|pos|ćiv|oje|eno|e p|nar|oda|nim|ovo|aju|ra |ći |og |nov|iva|a d|nos|bra|bil|i b|avn|a z|jen|e d|ve |ora|tva|jel|sta|mor|u o|cij|pro|ovi|za |jer|ka |sno|ilo|jem|red|em |lju|osn|oji| iz|aci| do|lje|i m| ni|odn|nom|jeg| dj|vno|vim|elj|u z|o d|rad|o o|m i|du |uje| sa|nit|e b| st|oj |tit|a ć|dno|e u|o s|u d|eću|ani|dna|nak|nst|stu| sm|e k|u u|an |gov|nju|juć|aln|m s|tu |a r|ćov|jan|u n|o k|ist|ću |te |tvo|ans|šti|nu |ara|nap|m p|nić|olj|bud| bu|edi|ovj|i v|pod|sam|obr|tel| mi|ina|zaš|e m|ašt| vj|ona|nji|jek| ta|duć|ija| ćo|tup|h p|oja|smi|ada| op|oso|una|sob|odu|dni|rug|udu|ao |di |avi|tno|jim|itu|itk|će |odr|ave|meć|nog|din|svi| ći|kak|kla|rim|akv|elo|štv|ite|vol|jet|opć|pot|tan|ak |nic|nac|uće| sk| me|ven',nld:'en |de |an | de|van| va| en| he|ing|cht|der|ng |n d|n v|et |een| ge|ech|n e|ver|rec|nde| ee| re| be|ede|er |e v|gen|den|het|ten| te| in| op|n i| ve|lij| zi|ere|eli|zij|ijk|te |oor|ht |ens|n o|and|t o|ijn|ied|ke | on|eid|op | vo|jn |id |ond|in |sch| vr|aar|n z|aan| ie|rde|rij|men|ren|ord|hei|hte| we|eft|n g|ft |n w|or |n h|eef|vri|wor| me|hee|al |t r|of |le | of|ati|g v|e b|eni| aa|lle| wo|n a|e o|nd |r h|voo| al|ege|n t|erk| da| na|t h|sta|jke|at |nat|nge|e e|end| st|om |e g|tie|n b|ste|die|e r|erw|wel|e s|r d| om|ij |dig|t e|ige|ter|ie |gel|re |jhe|t d| za|e m|ers|ijh|nig|zal|nie|d v|ns |d e|e w|e n|est|ele|bes| do|g e|che|vol|ge |eze|e d|ig |gin|dat|hap|cha|eke| di|ona|e a|lke|nst|ard| gr|tel|min| to|waa|len|elk|lin|eme|jk |n s|del|str|han|eve|gro|ich|ven|doo| wa|t v|it |ove|rin|aat|n n|wet|uit|ijd|ze | zo|ion| ov|dez|gem|met|tio|bbe|ach| ni|hed|st |all|ies|per|heb|ebb|e i|toe|es |taa|n m|nte|ien|el |nin|ale|ben|daa|sti| ma|mee|kin|pen|e h|wer|ont|iet|tig|g o|s e| er|igd|ete|ang|lan|nsc|ema|man|t g|is |beg|her|esc|bij|d o|ron|tin|nal|eer|p v|edi|erm|ite|t w|t a| hu|rwi|wij|ijs|r e|weg|js |rmi|naa|t b|app|rwe| bi|t z|ker|ame|eri|ken| an|ar | la|tre|ger|rdi|tan|eit|gde|g i|d z|oep',srp:' pr| i |rav|pra| na|na |ma | po|je | sv|da |a p|ima|ja |a i|vo |nje|va |ko |anj|ti |i p| u |ako|a s| da|avo|i s|ju |ost| za|sva|o i|vak| im|e s|o n|ava| sl|nja| ko|no |ne |li |om | ne|ili| dr|u s|slo|koj|a n|obo|ih |lob|bod|im |sti|stv|a o| bi| il| ra|pri|a u|og | je|jed|e p|enj|ni |van|u p|nos|a d|iti|a k|edn|i u|pro|o d|ova| su|ran|cij|i i|sta|se | os|e i|dru| ob|i o|rod|aju|ove| de|i n| ka|aci|e o| ni| od|ovo|i d|ve | se|eni|voj|ija|su |u i|žav|avn|uje| st|red|m i|dna|a b|odi|ara|drž|ji |nov|lju|e b|rža|tva|što|u o|oja| ov|a j|odn|u u|jan|poš|jen| nj|nim|ka |ošt|du |raz|a z| iz|sno|o p|vu |u n|u d|šti|osn|e d|pre|u z|de |ave|nih|bit|aro|oji|bez|tu |gov|lje|ičn| sa|lja|svo|lo |za |vno|e n|eđu| tr|nar| me|vim|čno|oda|ani|đen|nac|nak|an |to |tre|ašt| kr|stu|nog|o k|m s|tit|aln|nom|oj |pos|e u|reb| vr|olj|dno|iko|ku |me |nik| do|ika|e k|jeg|nst|tav|em |i m|sme|o s|dni|bra|nju|šen|ovi|tan|te |avi|vol| li|zaš|ilo|rug|var|kao|ao |riv|tup|st |živ|ans|eno|čov|štv|kla|vre|bud|ena| ve|ver|odu|međ|oju|ušt| bu|kom|kri|pod|ruš|m n|i b|ba |a t|ugi|edi| mo|la |u v|kak| sm|ego|akv|o j|rad|dst|jav|del|tvo| op|nu |por|vlj|avl|m p|od |jem|oje| čo|a r|sam|i v|ere|pot|o o|šte|rem|vek|svi| on|rot|e r',ckb:' he| û |ên | bi| ma|in |na | di|maf|an |ku | de| ku| ji|xwe|her| xw|iya|ya |kes|kir|rin|iri| ne|ji |bi |yên|afê|e b|de |tin|e h|iyê|ke |es |ye | we|er |di |we |ê d|i b| be|erk|ina| na| an|î û|yê |eye|î y|kî |rke|nê |diy|ete|eke|ber|hem|hey| li| ci|wek|li |n d|fê | bê| te|ne |yî | se|net|rî |tew|yek|sti|af | ki|re |yan|n b|kar|hev|e k|aza|n û|wî | ew|i h|n k|û b|î b| mi| az|dan| wî|ekî|î a|a m|zad|e d|mir|bin|est|ara|iro|nav|ser|a w|adi|rov|n h|anê|tê |ewe|be |ewl|ev |mû | ya|tî |ta |emû| yê|ast|wle| tê|n m| bo|wey|s m|bo | tu|n j|ras| da| me|din|î d|ê h|n n|n w|ing|st | ke| ge|în |ar | pê|iye|îna|bat|r k|ema|cih|ê b|wed|û m|dî |û a|vak|ê t|ekh|par| ye|vî |civ|n e|ana|î h|ê k|khe|geh|nge|ûna|fên|ane|av |î m|bik|eyê|eyî|e û| re|man|erb|a x|vê |ê m|iva|e n|hî |bûn|kê | pa|erî|jî |end| ta|ela|nên|n x|a k|ika|f û|f h|î n|ari|mî |a s|e j|eza|tên|nek| ni|ra |ehî|tiy|n a|bes|rbe|û h|rwe|zan| a |erw|ov |inê|ama|ek |nîn|bê |ovî|ike|a n| ra|riy|i d|anî|û d|e e|etê|ê x|yet|aye|ê j|tem|e t|erd|i n|eta|ibe|a g|u d|xeb|atê|i m|tu | wi|dew|mal|let|nda|ewa| ên|awa|e m|a d|mam|han|u h|a b|pêş|ere| ba|lat|ist| za|bib|uke|tuk|are|asî|rti|arî|i a|hîn| hî|edi|nûn|anû|qan| qa| hi| şe|ine|n l|mên|ûn |e a',yor:'ti | ní|ó̩ | è̩|ní | lá|̩n |o̩n|é̩ |wo̩|àn | e̩|kan|an |tí | tí|tó̩| kò|ò̩ |̩tó| àw| àt|è̩ |è̩t|e̩n|bí |àti|lát|áti| gb|lè̩|s̩e| ló| ó |àwo|gbo|̩nì|n l| a | tó|í è|ra | s̩|n t|ò̩k|sí |tó |̩ka|kò̩|ìyà|o̩ | sí|ílè|orí|ni |yàn|dè |̩‐è|ì k|̩ à|èdè| or|ún |ríl|è̩‐|í à|jé̩|‐èd|àbí|̩ò̩|ò̩ò|tàb|nì |í ó|n à| tà|̩ l|jo̩| ti|̩e |̩ t| wo|nìy|í ì|ó n| jé| sì|ló |kò |n è|wó̩| bá|n n|sì | fú|̩ s|í a|rè̩|fún| pé| òm|̩ni|gbà| kí| èn|ènì|in |òmì|ìí |ba |nir|pé |ira|mìn|ìni|n o|ràn|ìgb| ìg|bá |e̩ | rè|̩ n|kí |n e|un |gba|̩ p|í ò|nú | o̩|nín|gbé|yé | ka|ínú|a k|fi | fi|mo̩|bé̩|o̩d|dò̩|̩dò|ó s|i l|̩ o|̩ ì|wà |í i|i ì|hun|bò |i ò|dá |bo̩|o̩m|̩mo|̩wó|bo |áà |̩ k|ó j|ló̩|àgb|ohu| oh| bí| ò̩|bà |ara|yìí|ogb|írà|n s|ú ì| ìb|pò̩|í k| lè|bog|i t|à t|óò |yóò|kó̩|gé̩|à l|ó̩n|rú |lè | yó|̩ ò|̩ e|a w|̩ y|ò̩r|̩ f| wà|ò l|í t|ó b|i n|ó̩w|̩gb|yí |í w|ìké|̩ a|láà|wùj|àbò|i è|ùjo|fin|é̩n|n k|í e|i j|ú à| ìk|òfi| òf| ar|i s|mìí|ìír| mì| ir|rin|náà| ná|jú |̩ b| yì|ó t|̩é̩| i |̩ m|fé̩|kàn|rí |ú è|à n|wù |s̩é|é à| mú| èt|áyé|í g|̩kó|̩dá|è̩d|àwù|è̩k| ìd|irú|í o|i o|i à|láì|í n|ípa| kú|níp| ìm|a l|ké̩|bé |i g|de |ábé|ìn |báy|̩è̩|ígb|wò̩|níg|mú |láb| àà|n f|è̩s|̩ w|ùn |i a|ayé|èyí| èy|mó̩|á è| ni|n b| wó|je̩| ìj|gbá|ò̩n|ó̩g',uzn:'lar|ish|an |ga |ar | va| bi|da |va |ir | hu|iga|sh |uqu|shi|bir|quq|huq|gan| bo| ha|ini|ng |a e|r b| ta|lis|ni |ing|lik|ida|oʻl|ili|ari|nin|on |ins| in|adi|nso|son|iy | oʻ|lan| ma|dir|hi |kin|har|i b|ash| yo|boʻ| mu|dan|uqi|ila|ega|qla|r i|qig|oʻz| eg|kla|a b|qil|erk|ki | er|oli|nli|at | ol|gad|lga|rki|oki|i h|a o| qa|yok|lig|osh|igi|ib |las|n b|atl|n m| ba|ara| qi|ri | sh|iya|ala|lat|in |ham|bil|a t|a y|bos|r h|siy|n o|yat|inl|ik |a q|cha|a h| et|eti|nis|a s|til|ani|h h|i v|mas|tla|osi|asi| qo|ʻli|ati|i m|rni|im |uql|arn|ris|qar|a i|gi | da|n h|ha |sha|i t|mla|rch| xa|i o|li |hun|bar|lin|ʻz |arc|rla| bu|a m|a a| as|mum| be| tu|aro|r v|ikl|lib|taʼ|h v|tga|tib|un |lla|mda| ke|shg| to|n q|sid|n e|mat|amd|shu|hga| te|tas|ali|umk|oya|hla|ola|aml|iro|ill|tis|iri|rga|mki|irl| ya|xal|dam| de|gin|eng|rda|tar|ush|rak|ayo| eʼ| so|ten|alq| sa|ur | is|imo|r t| ki|mil| mi|era|zar|hqa|aza|k b| si|nda|hda|kat|ak |oʻr|n v|a k|or |rat|ada|ʻlg|miy|tni|i q|shq|oda|shl|bu |dav|nid|y t|ch |asl|sos|ilg|aso|n t|atn|sin|am |ti |as |ana|rin|siz|yot|lim|uni|nga|lak|n i|a u|qon|i a|h k|vla|avl|ami|dek| ja|ema|a d|na | em|ekl|gʻi|si |i e|ino| ka|uch|bor|ker| ch|lma|liy|a v|ʼti|lli|aka|muh|rig|ech|i y|uri|ror',ibo:'a n|e n|ke | na|na | ọ | bụ| n |nwe|ere|ọ b|re |nye| nk|ya |la | nw| ik| ma|ye |e ọ|ike|a o|nke|a m|ụ n| ya|a ọ|ma |bụl|ụla| on| a |e i|kik|iki|ka |ony|ta |bụ |kwa| nd|a i|i n|di |a a|wa |wer|do | mm|dụ |e a|ha | ga|any| ob|ndi| ok|he |e m|e o|a e|ọ n|ite|rụ |hi |mma|ga‐|wu |ara| dị|aka|che|oke|we |o n| ih|n o|adụ|mad|obo|bod|a g|odo| ka| ez|te |hị |be |ụta|dị | an|zi | oh|a‐e|akw|gba|i m|me | ak|u n|nya|ihe|ala|ohe|ghi|ri | ọz|her|ra |weg| nt| iw| mb|ba |pụt| si|ro |oro|iwu|chi|a‐a|rị |ụ i|ụ ọ| eb|iri|ebe|ụrụ|zọ | in|a y|ezi|e ị|kpa|le |ile|ịrị|n e|kpe|mba| ha|bi |sit|e e|inw|nil|asị| en|mak|a u| ni|apụ|chị|i i|ghị|i ọ|i o|si | e |ide|o i|e y|ụ m|a s|u o|kwu|ozu|yer|ru |enw|ụ o|ọzọ|gid|hụ |n a|ahụ|nkw|sor|egh|edo|a ụ|tar|n i|toz|ị o|pa |i a| me|ime|uru|kwe| mk|tu |ama|eny|uso|de | im|ọ d|osi|hed|a d| kw|mkp|wet| ọr| ọn|obi|ọrụ| ịk| to|gas| ch|ịch|nha|ọnọ|nọd| nc| al|n ụ|ị m| us|nọ |u ọ|nch| o |eta|n u| ot|otu|sir|sịr| nh|a k|ali|o m| ag| gb|e s|ọta|nwa|ị n|lit|ega|ji |ọdụ|e k|ban|e g|ị k|esi|agb|eme|hu |ikp|zu |pe |nta|na‐|chọ|u a|a b|uch|n ọ|onw|ram|kwụ|ekọ|i e| nọ| ug|ọch|u m|gwu|a h|zụz|ugw|meg|ị e|nat|e h|dịg|o y|kpu|pụr|cha|zụ |hịc|ich| ng|ach| og|wap|wan|ịgh|uwa| di| nn|i ị',ceb:'sa | sa|ng |ang| ka|an | pa|ga | ma|nga|pag| ng|a p|on |kat|a k|ug |od | ug|g m| an|ana|n s|ay |ung|ata|ngo|a m|atu|ala|san|ag |tun|g s|g k|god|d s|a s|ong|mga| mg|g p|n u|yon|a a|pan|ing|usa|tan|tag|una|aga|mat|ali|g u|han|nan| us|man|y k|ina|non|kin| na|syo|lan|a b|asa|nay|n n|a i|awa| ta|taw|gaw|nsa|a n|nas| o |ban|agp|isa|dun|was|iya| gi|asy|adu|ini|bis| ad|ili|o s| bi|g a|nah|nag|a t| ki|lin|lay|ahi|sam|al |wal| di|nal|asu| ba|ano|agt| wa|ama|yan|a u| iy|kan|him|n k|gan|ags|n a|kag| un|ya |kas|gpa|g t| su|aha|wha|agk|awh|gka|a g|kal|l n|gla|gsa|sud|gal|imo|ud |d u|ran|uka|ig |aka|aba|ika|g d|ara|ipo|ngl|g n|uns|n o|kau|i s|y s|og |uta|d n|li | si|gik|g i|mta|ot |iin| la| og|o a|ayo|ok |awo|aki|kab|aho|n m|hat|o p|gpi|a w|apa|lip|ip | hu| ga|a h|uba|na | ti|bal|gon|la |ati|wo |ad |hin|sal|gba|buh| bu| ub|uha|agb|hon|ma |nin|uga|t n|ihi| pi|may| pu|mak|ni | ni|d a|pin|abu|agh|ahu|uma|as |dil|say| in|at |ins|lak|hun|ila|mo |s s|sak|amt|o u|pod|ngp|tin|a d|but|ura|lam|aod|t s|bah|ami|aug|mal|sos|os |k s| il|tra| at|gta|bat|aan|ulo|iha|ha |n p| al|g b|lih|kar|lao|agi|amb|mah|ho |sya|ona|aya|ngb|in |inu|a l| hi|mag|iko|it |agl|mbo|oon|tar|o n|til|ghi|rab|y p| re|yal|aw |nab|osy|dan',tgl:'ng |ang| pa|an |sa | sa|at | ka| ng| ma|ala|g p|apa| na|ata|pag|pan| an| at|ay |ara|ga |a p|tan|g m|mga| mg|n n|pat| ba|n a|aya|na |ama|g k|awa|kar|a k|lan|rap|gka|nga|n s|g n|aha|g b|a a| ta|agk|gan|tao|asa|aka|yan|ao |a m|may|man|kal|ing|a s|nan|aga| la|ban|ali|g a|ana|y m|kat|san|kan|g i|ong|pam|mag|a n|o a|baw|isa|wat| y |lay|g s|y k|in |ila|t t| ay|aan|o y|kas|ina|t n|ag |t p|wal|una|yon| o | it|nag|lal|tay|pin|ili|ans|ito|nsa|lah|kak|any|a i|nta|nya|to |hay|gal|mam|aba|ran|ant|agt|on |t s|agp| wa| ga|gaw|han|kap|o m|lip|ya |as |g t|hat|y n|ngk|ung|no |g l|gpa|wa |lag|gta|t m|kai|yaa|sal|ari|lin|a l|pap|ahi| is| di|ita| pi|pun|agi|ipi|mak|a b|y s|bat|yag|ags|o n|aki|tat|pah|la |gay|hin| si|di |i n|sas|iti|a t|t k|mal|ais|s n|t a|al |ipu|ika|lit|gin| ip|ano|gsa|alo|nin|uma|hal|ira|ap |ani|od |i a|gga|y p|par|tas|ig |sap|ihi|nah|ini| bu|ngi|syo|o s|nap|o p|a g| ha|uka|a h|aru|a o|mah|iba|asy|li |usa|g e|uha|ipa|mba|lam|kin|kil|duk|n o|iga| da|dai|aig|igd|gdi|pil|dig|pak| tu|d n|sam|nas|nak|ba |ad |lim|sin|buh|ri |lab|it |tag|g g|lun|ain|and|nda|pas|kab|aho|lig|nar|ula| ed|edu| ib|git|ma |mas|agb|ami|agg|gi |sar|i m|siy|g w|api|pul|iya|amb|nil|agl|sta|uli|ino|abu|aun|ayu| al|iyo',hun:' sz| a |en | va|és | és|min|ek | mi| jo|jog|ind|an |nek|sze|ság| az|gy |sza|nde|ala|az |den|a v|val|ele| el|oga|mél|egy| eg|n a|ga |zab| me|zem|emé|aba|int|van|bad|tel|tet| te|ak |tás|ény|t a| ne|gye|ély|tt |n s|ben|ség|zet|lam|meg|nak|ni | se|ete|sen|agy|let|lyn|s a|yne|ra |z e|et | al|mel|kin|k j|eté|ok |tek| ki|vag|re |n m|oz |hoz|ez |s s|ett|gok|ogy| kö|mbe|es |em |nem|ely| le|ell|emb|hog|k a|atá|köz|nt | ho|yen|hez|el |z a|len|dsá|ásá|tés|ads|k m| ál| em|a s|nte|a m|szt|a t|áll|ás |y a|ogo|sem|a h|enk|nye|ese|nki|ágo|t s|lap|ame|ber|ló |k é|nyi|ban|mén|s e|i m|t m| vé|lla|ly |ébe|lat|ág |ami|on |mze|n v|emz|fel|a n|lő |a a|eki|eri|yes| cs|lle|tat|elő|nd |i é|ég |ésé|lis|yil|vet|át |kül|ért| ke|éte|rés|l a|het|szo|art|alá| ny|tar|koz| am|a j|ész|enl|elé|ól |s k|tár|s é|éle|s t|lem|sít|ges|ott| fe|n k|tko|zás|t é|kel|ja | ha|aló|zés|nlő|ése|ot |ri |lek|más|tő |vel|i j|se |ehe|tes|eve|ssá|tot|t k|olg|eze|i v|áza|leh|n e|ül |tte|os |ti |atk|zto|e a|tos|ány|ána|zte|fej|del|árs|k k|kor|ége|szá|t n| bi|zat|véd|nev|elm|éde|zer|téb|biz|rra|ife|izt|ere|at |ll |k e|ny |sel| né|ába|lt |ai |sül|ház|kif|t e| ar|leg|d a|is |i e|arr|t t|áso|it |ető|al | má|t v| bá|bár|a é|esü|lye|m l| es|nyo',azj:' və|və |ər |lar| hə|in |ir | ol| hü| bi|hüq|üqu|quq|na |lər|də |hər| şə|bir|an |lik| tə|r b|mal|lma|ası|ini|r h|əxs|şəx|ən |arı|qla|a m|dir|aq |uqu|ali| ma|una|ilə|ın |yət| ya|ara|ikd|əri|ar |əsi|əti|r ş|rin|yyə|n h| az|dən|nin|ərə|tin|iyy|mək|zad| mü|sin| mə|ni |nda|ət |ndə|aza|rın|ün |ını|ə a|i v|nın|olu|qun| qa| et|ilm|lıq|ə y|ək |lmə|lə |kdi|ind|ına|olm|lun|mas|xs |sın|ə b| in|n m|q v|nə |əmi|n t|ya |da | bə|tmə|dlı|adl|bər| on|əya|ə h|sı |nun|maq|dan|inə|etm|un |ə v|rlə|n b|si |raq| va|ə m|n a|ınd|rı |anı| öz|əra|nma|n i|ama|a b|irl|ala|li |ins|bil|ik | al| di|ığı|ə d|lət|il |ələ|ə i|ıq |nı |nla|dil|müd|n v|ə e|unm|alı| sə|xsi|ə o|uq |uql|nsa|ətl| də|ili|üda|asi| he|ola|san|əni|məs| da|lan| bu|tər|həm|dır|kil|iş |u v| ki|min|eyn|mi |yin| ha|sos|heç|bu |eç | ed|kim|lığ|alq|xal| as|sia|osi|r v|q h|rə |yan|i s| əs|daf|afi| iş|ı h|fiə| ta|ə q|ıql|a q|yar|sas|lı |ill|mil|əsa|liy|tlə|siy|a h|məz|tün|ə t| is|ist|iyi| so|n ə|al |ifa|ina|lıd|ı o|ıdı|əmə|ır |ədə|ial| mi|əyi|miy|çün|n e|iya|edi| cə| bü|büt|ütü|xil|üçü|mən|adə|t v|a v|axi|dax|r a|onu| üç|seç| nə| se|man|ril|sil|əz |iə |öz |ılı|aya|qan|i t|şər|təm|ulm|rəf|məh| xa|ğın| dö| ni|sti|ild|amə|qu |nam|n o|n d|var|ad |zam|tam|təh',ces:' pr| a |ní | ne|prá|ráv|ost| sv| po|na |ch |ho | na|nos|o n| ro|ání|ti |vo |neb|ávo|má |bo |ebo| má|kaž| ka|ou |ažd| za| je|dý |svo|ždý| př|a s| st|sti|á p| v |obo|vob| sp|bod| zá|ých|pro|rod|ván|ení|né |ý m|ého| by| ná|spo|ně |o p|mi |í a|ter|roz|ová|to | ja| li|áro|nár|by |jak|a p|a z|ny | vš|kte|i a|lid|ím |o v|í p|u p|mu |at | vy|odn| so| ma|a v| kt|í n|zák|li |oli|ví |kla|tní|pod|stá|en |do |t s|mí |je |em |áva| do|byl| se|být|í s|rov| k |čin| ve|ýt |í b|it |dní|vše|pol|o s| bý|tví|nýc|stn|nou|ejn|sou|ran|ci |vol|se |nes|a n|pří|eho|ným|tát|va |ním|mez|ají|i s|stv|ké |ích|ečn|žen|e s|vé |ova|své|ým |kol|du |u s|jeh|kon|ave|ech|eré|nu | ze|i v|o d|í v|hra|ids|m p|ému|ole|y s| i |maj|o z| to|aby|sta| ab|m a|pra| ta|chn| ni|že |ovn|ako|néh|len|dsk|rac|lad|chr| že|vat| os|sob|aké|i p|smí|esm|st |i n|m n|a m|lně|lní|při|bez|dy |áln|ens|zem|t v|čen|leč|kdo|ými| ji|oci|i k| s |í m|jí | či|áv |ste|och| oc|vou|ákl| vz|rav|odu|nez|inn|ský|nit|ivo|a j|u k|iál| me|ezi|ské|ven|stu|u a|tej|oln|slu|zen|í z|y b|oko|zac|níc|jin|ky |a o|řís|obe|u v|tak|věd|oje| vý|ikd|h n| od|čno|oso|ciá|h p| de|a t|ům |soc|jíc|odů|něn|adn|tup|dů |děl|jno|kéh|por|ože|hov|aci|nem|é v|rok|i j|u o|od |ího|vin|odi',plt:'ny |na |ana| ny|y f|a n|sy |aha|ra |a a| fa|n n|y n|a m|an | fi|tra|any| ma|han|nan|ara|y a| am|ka |in |y m|ami|olo| ts|lon|min| mi| sy| na|a t| ol|fan| ha|a i|man|iza| iz|ina|ona|y h|aka|o a|ian|a h|reh|etr|a s|het|on |a f|ire|fah|tsy|mba| ar| hi|zan|ay |ndr|y o|ira|y t| an|ehe|o h|afa|y i|ren|ran| zo|ena|amb|dia|ala|amp|zo |ika| di|tan|y s|y z| az|ia |m p|rin|jo |n j| jo| dr|zy |ry |a d|ao |and|dre|haf|nen|mpi|rah| ka|eo |n d| ir|ho |am |rai|fa |elo|ene|oan|omb| ta| pi| ho|ava|azo|dra|itr|iny|ant|tsi|zon|asa|tsa| to|ari|ha |a k|van|n i|fia|ray| fo|mbe|ony|sa |isy|azy|o f|lal|ly |ova|lom| vo|nat|fir|sam|oto|zay|mis|ham|bel| ra|a r|ban|kan|iha|nin|a e|ary|ito| he| re| no|ita|voa|nam|fit|iar| ko|tok|isa|fot|no |otr|mah|aly|har|y v|y r| sa|o n|ain|kam|aza|n o|oka|ial|ila|ano|atr|oa | la|y l|eri|y d|ata|hev|sia|pia|its|reo| ao|pan|anj|aro|tov|nja|o s|fam|pir| as|ty |nto|oko|y k|sir|air|tin|hia|ais|mit|ba | it| eo|o t|mpa|kon|a z|a v|ity|ton|rak|era|ani|ive|mik|ati|tot|vy |hit|hoa|aho|ank|ame|ver|vah|tao|o m|ino|dy |dri|oni|ori| mo|hah|nao|koa|ato|end|n t| za|eha|nga|jak|bar|lah|mia|lna|aln|va | mb|lan| pa|aov|ama|eve|za |dro|ria|to |nar|izy|ifa|adi|via|aja| va|ind|n k|idi|fiv|rov|vel',mad:'an |eng|ban|ng | sa| ka|dha| ba|ren|ak |ang| se| ha|hak| dh|na | pa|se |adh|a s|aba|n s|ara|ngg|are|ha |aga|sa | or|ore|asa|sar|ana| ma|aan|a k|ale|gi | ag|gad|a b|n o|n k|eba|ala|ra |gan| ke|dhu|ota|aja|bas|n b|ka |man|tab|dhi|beb|sab|ama|ako|abb|at |ggu|nga| ta|pan|wi |huw|uwi|eka|ata|a d|san| ot|agi|lak|hal|ba |bba|i h|ong|em |kab|g a|lem|a o| pe| na|ane|par|ngs|nge|gar|a a|tan|gsa|a p|ran|i s|k h|n p|uy |guy|ken|n a|al |ada| ga|apa|pon|e d| e |nek| an|g s|ta |kaa|on |kal|a m|ssa|ona|abe|kat| la|a e|e e|sal|ate|jan|ri |nan|lab|asi|sad|i p|e a|lan|aka|a h|ari| bi|ena|si |daj| ng|ton|e k|har|oss|gen|i k|g k|car|ase|ano|era|kon| be|nya|n d|nag|bad|ar |epo| da|mas| kl| al|n t|mat|nos|n n|ela|g e|a n|k k|uwa|adi|pad|ggi|uan|i d|ne | so|hi |sae|oan|wan|as |le |gap|ter|yat|om |kla|k a|e b|ina|ah |k s|koa|i a|ega|neg|n h|m p|aha| as| ja|abi|ma |kas|bi | mo|aon| di|one| ep|per|aya|e s|nto|te |bat|epa|nda|n e| ca|int|pam|di |ann| ra|aen|k d|amp|a t|nta|and|e p|rga|pen|yar|mpo|ste|dra|ok |oko|ila|g p|k b|i b|set|to |isa|nao|nna|n m|ett| a |bis|hid|bin|i m|nas| ho|kar|t s| po|dil| to|aju|ika|kom|arg|ant|raj|a l|das|tto|ost|mos|lae|ga |rek|idh|tad|hig|en |rny|arn|ndh|eta|adu| dr|jat|jua|gam',nya:'ndi|ali|a k|a m| ku| nd|wa |na |nth| mu| al|yen|thu|se |ra |nse|hu |di |a n|la | pa|mun| wa|nga|unt| la|a u|u a|e a|ons|za | ma| lo|iye|ace|ce |a l|idw|ang| ka|kha|liy|ens|li |ala|ira|ene|pa |i n|we |e m|ana|dwa|era|hal|ulu|lo |ko |dzi| ci|yo |o w|iko|ga |a p|chi| mo|lu |o l|o m|oyo|ufu| um|moy|zik| an|ner|and|umo|ena| uf|dan|iri|ful|a a|ka |to |hit|nch| nc|a c|ito|fun|dwe| da|kuk|wac| dz|e l|a z|ape|kap|u w|e k|ere|ti |lir| za|pen|tha|aye|kut|mu |ro |ofu|ing|lid| zo|amu|o c|i m|mal|kwa|mwa|o a|eza|i p|o n|so |i d|lin|nso| mw|iro|zo | a |ati| li|i l|a d|ri |edw|kul|una|uti|lan|a b|iki|i c|alo|i k| ca|lam|o k|dza|ung|o z|mul|ulo|uni|gan|ant|nzi| na|nkh|e n|san|oli|wir|tsa|u k|ome|ca |gwi|unz|lon|dip|ipo|yan|gwe|pon|akh|uli|aku|mer|ngw|cit| po| ko|kir|mba|ukh|tsi|bun|iya|ope|kup|bvo|han| bu|pan|ame|vom|ama| ya|siy| am|rez|u n|zid|men|osa|ao |pez|i a| kw| on|u o|lac|ezo|aka|nda|hun|u d|ank|diz|ina|its|adz| kh|ne |nik|e p|o o|ku |phu|eka| un|eze|mol|ma | ad|pat|oma|ets|wez|kwe|kho|ya |izo|sa |o p|kus|oci|khu|okh|ans|awi|izi|zi |ndu|iza|no |say| si|i u|aik|jir|ats|ogw|du |mak|ukw|nji|mai|ja |sam|ika|aph|sid|isa|amb|ula|osi|haw|u m| zi|oye|lok|win|lal|ani| ba|si | yo|e o|opa|ha |map|emb',qug:'una|ta | ka|na |ka |ash|cha|a k|ari|ish|kun|kta|ana|pak|hka|shk|apa|mi |ach|hay|akt|shp|man|ak | ch| ha|rin|ata|tak|lla|ita|ami|ama|aku|har| pa|pas|ayñ|yñi|ina| ma| ru|uku|sh |hpa|run|all|kuy|aka|an | tu|tuk|yta|chi|chu|a c|ñit|in |nak|a h|nka|ris|tap|kan| ki|ayt|pi | sh|pa |i k|a p|nap|kam|kaw|pay|nam|ayp|aws|iri|wsa|a s|ank|nta|uy |a t|hin|a m|ay | li|ant|lia|kay|nat|a r|shi|iak|lak|uya| wa|yuy|say|kis|y r|ypa|hun|a a| yu|n t|tam| ti|yay|n k| ya|a w|hpi|lli| al|api|yku|un |ipa|a i|iku|ayk|shu| sa|ush|pir|ich|kat|hu |huk| il|ill|kas|a y|rik|yac|a l| ku|kac|hik|tan|wan|ypi|ink|ika| ni|ila|ima|i c|yll|ayl| wi|mac|nis| ta|i y|kus|tin|n s|i p|yan|llu|la |iks|tik|kpi| pi|awa|may|lan|li | ri|kll|yas|kin|kak|aya|ksi|k h|aym|war|ura| ay|lat|ukt|i t|iya|ull|mas|sha|kir|uch|h k|nch|akp|uma|pip|han|kik|iki|riy|aki| ii|i s|n p|h m|kar|nal|y h|tac| su|nac|mak|n m|nki|k a|mam|iwa|k t|k k|i m|yma| ña|wil|asi|nmi|kap|pal|sam|pam|k i|k l|i i|pan|sum|i w| hu|his| mu|iia|mun|k m|u t|pik|was|ik |ma |hat|k r|akl|huc| im|mal|uyk|imi|n y|anc|y k|a n|iñi| iñ|wak|unk|yka| mi|iña|a u|has|ywa| ak|llp|ian|ha |tar|rmi|i a|arm|las|ati|pur|sak|ayw|hap|yar|uti|si |iyt|uri|kim| ar|san|h p|akk|iy |wat|wpa|y i|u k',kin:'ra | ku| mu|se |a k|ntu|nga|tu |umu|ye |li | um|mun|unt|a n|ira| n |ere|wa |we | gu|mu |ko |a b|e n|o k|e a|a u|a a|u b|e k|ose|uli|aba|ro | ab|gom|e b|ba |ugu| ag|omb|ang| ib|eng|mba|o a|gu | ub|ama| by| bu|za |ihu|ga |e u|o b| ba|kwi|hug|ash|ren|yo |ndi|e i| ka| ak| cy|iye| bi|ora|re |gih|igi|ban|ubu| nt| kw|di |gan|a g|a m|aka|nta|aga| am|a i|ku |iro|i m|ta |ka |ago|byo|ali|and|ibi|na |uba|ili| bw|sha|cya|u m|yan|o n| ig|ese|no |obo|ana|ish|kan|sho| we|era|ya |aci|wes|ura|i a|uko|e m|n a|o i|kub|uru|hob|ber|ran|bor| im|ure|u w|wo |cir|gac|ani|bur|u a|o m|ush| no|e y| y |rwa|eke|nge|ara|wiy|uga|zo |ne |ho |bwa|yos|anz|aha|ind|mwe|teg|ege|are|ze |n i|rag|ane|u n|ge |mo |u k|bul| uk|bwo|bye|iza|age|ngo|u g|gir|ger|zir|kug|ite|bah| al| ki|uha|go |mul|ugo|n u|tan|guh|y i| ry|gar|bih|iki|atu|ha |mbe|bat|o g|akw|iby|imi|kim|ate|abo|e c|aho|o u|eye|tur|kir| ni|je |bo |ata|u u| ng|shy|a s|gek| ru|iko| bo|bos|i i| gi|nir|i n|gus|eza|nzi|i b|kur| ya|o r|ung|rez|ugi|ngi|nya| se|mat|eko|o y| in|uki| as|any|bis|ako|gaz|imw|rer|bak|ige|mug|ing|byi|kor|eme|nu | at|bit| ik|hin|ire|kar|shi|yem|yam| yi|gen|tse|ets|ihe|hak|ubi|key|rek|icy| na|bag|yer| ic|eze|awe|but|irw| ur|fit|ruk|ubw|rya|uka|afi',zul:'nge|oku|lo | ng|a n|ung|nga|le |lun| no|elo|wa |la |e n|ele|ntu|gel|tu |we |ngo| um|e u|thi|uth|ke |hi |lek|ni |ezi| ku|ma |nom|o n|pha|gok|nke|onk|a u|nel|ulu|oma|o e|o l|kwe|unt|ang|lul|kul| uk|a k|eni|uku|hla| ne| wo|mun| lo|kel|ama|ath|umu|ho |ela|lwa|won|zwe|ban|elw|ule|a i| un|ana|une|lok|ing|elu|wen|aka|tho|aba| kw|gan|ko |ala|enz|o y|khe|akh|thu|u u|na |enk|kho|a e|zin|gen|i n|kun|alu|mal|lel|e k|nku|e a|eko| na|kat|lan|he |hak| ez|o a|kwa|o o|ayo|okw|kut|kub|lwe| em|yo |nzi|ane|obu| ok|eth|het|ise|so |ile|nok| ba|ben|eki|nye|ike|i k|isi| is|aph|esi|nhl|mph| ab|fan|e i|isa| ye|nen|ini|ga |zi |fut| fu|uba|ukh|ka |ant|uhl|hol|ba |and|do |kuk|abe|za |nda| ya|e w|kil|the| im|eke|a a|olo|sa |olu|ith|kuh|o u|ye |nis| in|ekh|e e| ak|i w|any|khu|eng|eli|yok|ne |no |ume|ndl|iph|amb|emp| ko|i i| le|isw|zo |a o|emi|uny|mel|eka|mth|uph|ndo|vik| yo|hlo|alo|kuf|yen|enh|o w|nay|lin|hul|ezw|ind|eze|ebe|kan|kuz|phe|kug|nez|ake|nya|wez|wam|seb|ufa|bo |din|ahl|azw|fun|yez|und|a l|li |bus|ale|ula|kuq|ola|izi|ink|i e|da |nan|ase|phi|ano|nem|hel|a y|hut|kis|kup|swa|han|ili|mbi|kuv|o k|kek|omp|pho|kol|i u|oko|izw|lon|e l| el|uke|kus|kom|ulo|zis|hun|nje|lak|u n|huk|sek|ham| ol|ani|o i|ubu|mba| am',swe:' oc|och|ch |er |ing|för|tt |ar |en |ätt|nde| fö|rät|ill|et |and| rä| en| ti| de|til|het|ll |de |om |var|lig|gen| fr|ell|ska|nin|ng |ter| ha|as | in|ka |att|lle|der|sam| i |und|lla|ghe|fri|all|ens|ete|na |ler| at|ör |den| el|av | av| so|igh|r h|nva|ga |r r|env|la |tig|nsk|iga|har|t a|som|tti| ut|ion|t t|a s|nge|ns |a f|r s|män|a o| sk| si|rna|isk|an | st|är |ra | vi| al|t f| sa|a r|ati| är| me| be|n s| an|tio|nna|lan|ern|t e|med| va|ig |äns| åt|sta|ta |nat| un|kli|ten| gr|vis|äll| la|one|han|änd|t s|stä|t i|ner|ans|gru| ge|ver| må| li|lik|ihe|ers|rih|r a| re|må |sni|n f|t o| mä| na|r e|ri |ad |ent|kla|det| vä|run|rkl|da |h r|upp|dra|rin|igt|dig|n e|erk|kap|tta|ed |d f|ran|e s|tan|uta|nom|lar|gt |s f| på| om|kte|lin|r u|vid|g o|änn|erv|ika|ari|a i|lag|rvi|id |r o|s s|vil|r m|örk|ot |ndl|str|els|ro |a m|mot| mo|i o|på |r d|on |del|isn|sky|e m|ras| hä|r f|i s|a n|nad|n o|gan|tni|era|ärd|a d|täl|ber|nga|r i|enn|nd |n a| up|sin|dd |örs|je |itt|kal|n m|amt|n i|kil|lse|ski|nas|end|s e| så|inn|tat|per|t v|arj|e f|l a|rel|t b|int|tet|g a|öra|l v|kyd|ydd|rje| fa|bet|se |t l|lit|sa |när|häl|l s|ndr|nis|yck|h a|llm|lke|h f|arb|lmä|nda|bar|ckl|v s|rän|gar|tra|re |ege|r g|ara|ess|d e|vär|mt |ap ',lin:'na | na| ya|ya |a m| mo|a b|to | ko| bo|li |o n| li|i n| pe|i y|a y|a n|ngo|ki | ba| ma|kok|pe |la |a l|zal|oki|ali|nso|oto|ala|ons|so |mot|a k|nyo|eng|kol|go |nge| ny|yon|o e|ang|eko|te |o y|oko|olo|ma |iko|a e|e m|e b|lik|ko |o a|ako|ong| ye|mak|ye |isa| ek|si |lo |aza|sal|ama| te|bat|o p|oyo|e n| az|a p|ani|sen|o m|ela|ta |amb|i k|ban|ni | es|yo |mi |mba|osa| oy|aka|lis|i p|eli|a t|mok|i m|ba |mbo| to| mi|isi|bok|lon|ato|ing|o b| nd|ota|bot| ez|ge |nga|eza|o t|nde|ka |bo |gel|kan|e k|lam|sa |ese|koz| po|den|ga |oba|omb|oli|yan|kop|bon|mos|e e|kob|oka|kos|bik|lin|po |e a| lo| bi|kot|‘te|ngi|sam| ‘t|omi|e y|ti |i b| el|elo|som|lok|esa|gom|ate|kam|i t|ika|a s|ata|kat|ati|wa |ope|oza|iki|i e| ka|bom|tal|o l|bek|zwa|oke|pes| se|bos|o o|ola|bak|lak|mis|omo|oso|nza| at|nda|bal|ndi|mu |mob|osu|e t|asi|bis|ase|i l|ele|sus|usu|su |ozw|and|mol|tel|lib|mbi|ami| nz|ne |ene|kel|aye|emb|yeb|nis|gi |obo|le |kum|mal|wan|a ‘|pon| ep|baz|tan|sem|nya|e l| ta|gis|opo|ana|ina|tin|obe| ti|san| ak|mab|bol|oku|u y|mat|oti|bas|ote|mib|ebi|a o|da |bi | mb|lel|tey|ibe|eta|boy|umb|e p|eni|za |be |mbe|bwa|ike|se | et|ibo|eba|ale|yok|kom| en|i a|mik|ben|i o| so|gob|bu |son|sol|sik|ime|eso|abo| as|kon|eya|mel',som:' ka|ay |ka |an |uu |oo |da |yo |aha| iy|ada|aan|iyo|a i| wa| in|sha| ah| u |a a| qo|ama| la|hay|ga |ma |aad| dh| xa|ah |qof|in | da|a d|aa |iya|a s|a w| si| oo|isa|yah|eey|xaq|ku | le|lee| ku|u l|la |taa| ma|q u|dha|y i|ta |aq |eya|sta|ast|a k|of |ha |u x|kas|wux| wu|doo|sa |ara|wax|uxu| am|xuu|inu|nuu|a x|iis|ala|a q|ro |maa|o a| qa|nay|o i| sh| aa|kal|loo| lo|le |a u| xo| xu|o x|f k| ba|ana|o d| uu|iga|a l|yad|dii|yaa|si |a m|gu |ale|u d|ash|ima|adk|do |aas| ca|o m|lag|san|dka|xor|adi|add| so|o k| is|lo | mi|aqa|na | fa|soo|baa| he|kar|mid|dad|rka|had|iin|a o|aro|ado|aar|u k|qaa| ha|ad |nta|o h|har|axa|quu| sa|n k| ay|mad|u s| ga|eed|aga|dda|hii|aal|haa|n l|daa|xuq|o q|o s|uqu|uuq|aya|i k|hel|id |n i| ee|nka| ho|ina|waa|dan|nim|elo|agu|ihi|naa|mar|ark|saa|riy|rri|qda|uqd| bu|ax |a h|o w|ya |ays|gga|ee |ank| no|n s|oon|u h|n a|ab |haq|iri|o l| gu|uur|lka|laa|u a|ida|int|lad|aam|ood|ofk|dhi|dah|orr|eli| xi|ysa|arc|rci|to |yih|ool|kii|h q|a f| ug|ayn|asa| ge|sho|n x|siy|ido|a g|gel|ami|hoo|i a|jee|n q|agg|al | di| ta|e u|o u| ji|goo|a c|sag|alk|aba|sig| mu|caa|aqo|u q|ooc|oob|bar|ii |ra |a b|ago|xir|aaq| ci|dal|oba|mo |iir|hor|fal|qan| du|dar|ari|uma|d k|ban|y d|qar|ugu| ya|xay|a j',hms:'ang|gd |ngd|ib | na|nan|ex |id | ji|ad |eb |nl |b n|d n| li|ud |jid| le|leb| ga|ot |anl|aot|d g|l l|b l| me|ob |x n|gs |ngs|mex|nd |d d| ne|jan|ul | ni|nja| nj| gu| zh|lib|l n|ong| gh|gao|b j|b g|nb |l g|end|gan| ad| je|jex|ngb|gb |han|el | sh| da|ub |d j|d l|t n| nh|nha|b m|is |d z|x g| ya|oul|l j| wu|she|il |nex| ch|b y|d s|gue|gho|uel|wud|d y| gi|d b|hob|nis|s g| zi| yo|lie|es |nx |it |aob|gia|ies| de|eib|you| ba| hu|ian|zib|d m|s j|oud|b d|chu|ol |ut | do|t j|nen|hud|at |s n|hen|iad|ab |enl| go|dao| mi|t g|zha|b z|enb|x j| ze|eit|hei|d c|nt |b s| se|al | xi|inl|hao| re| fa|d h|gua|yad|ren| ho|anb|gx |ngx|ix |nib|x z|and|b h|b w|fal| xa|d x|t l|x m|don|gou|bao|ant|s z|had|d p|yan|anx|l d|zhe|hib| pu|ox | du|hui|sen|uib|uan|lil|dan|s m| di| we|gha|xin|b x|od |zhi|pud| ju| ng|oub|xan| ge|t z|hub|t h|hol|t m|jil|hea|x l| ma|eud|jul|enx|l z|l s|b a| lo| he|nga|d r|zen| yi|did|hon|zho|gt |heb|ngt|os |d a|s l|aos| si|dei|dud|b b|geu|wei|d w|x c|x b|d k|dou|l h|lou| bi|x a|x d|b c| sa|s a| bo|eut|blo| bl|nia|lol|t w|bad|aod| qi|ax |deb| ja|eab| nd|x s|can|pao| pa|gl |ngl|che|sat|s y|l m|t s|b f|heu|s w| to|lia| ca|aox|unb|ghu|ux | cu|d f|inb|iel| pi|jib|t p|x x|zei|eul|l t|l y|min|dad',ilo:'ti |iti|an |nga|ga | ng| pa| it|en | ka| ke| ma|ana| a | ti|pan|ken|agi|ang|a n|a k|aya|gan|n a|int|lin|ali|n t|a m|dag|git|a a|i p|teg|a p| na|nte|man|awa|kal|da |ng |ega|ada|way|nag|n i| da|na |i k|sa |n k|ysa|n n|no |a i|al |add|aba| me|i a|eys|nna|dda|ngg|mey| sa|pag|ann|ya |gal| ba|mai| tu|gga|kad|i s|yan|ung|nak|tun|wen|aan|nan|aka| ad|enn| ag|asa| we|yaw|i n|wan|nno|ata| ta|l m|i t|ami|a t| si|ong|apa|kas|li |i m|ina| an|aki|ay |n d|ala|gpa|a s|g k|ara|et |n p|at |ili|eng|mak|ika|ama|dad|nai|g i|ipa|in | aw|toy|oy |ao |yon|ag |on |aen|ta |ani|ily|bab|tao|ket|lya|sin|aik| ki|bal|oma|agp|ngi|a d|y n|iwa|o k|kin|naa|uma|daa|o t|gil|bae|i i|g a|mil| am| um|aga|kab|pad|ram|ags|syo|ar |ida|yto|i b|gim|sab|ino|n w| wa| de|a b|nia|dey|n m|o n|min|nom|asi|tan|aar|eg |agt|san|pap|eyt|iam|i e|saa|sal|pam|bag|nat|ak |sap|ed |gsa|lak|t n|ari|i u| gi|o p|nay|kan|t k|sia|aw |g n|day|i l|kit|uka|lan|i d|aib|pak|imo|y a|ias|mon|ma | li|den|i g|to |dum|sta|apu|o i|ubo|ged|lub|agb|pul|bia|i w|ita|asy|mid|umi|abi|akd|kar|kap|kai| ar|gin|kni| id|ban|bas|ad |bon|agk|nib|o m|ibi|ing|ran|kda|din|abs|iba|akn|nnu|t i|isu|o a|aip|as |inn|sar| la|maa|nto|amm|idi|g t|ulo|lal|bsa|waw|kip|w k|ura|d n|y i',uig:'ish| he|ini|ing|nin|gha|ng |ili| we|we |sh |in | bo|quq|oqu|ni |hoq| ho|ush|shi|lik|qil|bol|shq|en |lis|qa |hqa|n b|hem| qi|ki |dem|iy | ad|ade|igh|e a|em |han|liq|et |ge |uq |nda|din| te| bi|idi|let|qan|nli|ige|ash|tin|ha |kin|iki|her|de | er| ba|and|iti|olu|an | dö|döl|aq |luq| ya|me |lus|öle|mme|emm| qa|daq|rki|lgh|erq|erk|shk|esh|rqa|iq |uqi|ile|rim|i w|er |ik |yak|aki|ara|a h| be|men| ar|du |shu|uql|hri|hi |qlu|q h|inl|lar|da |i b|ime| as|ler|etl|nis| öz|ehr|lin|e q|ar |ila| mu|len| me|qi |asi|beh|a b|ayd|q a|bir|bil| sh|che|rli|ke |bar|hke|yet|éli|shl|tni|u h|ek |may|e b| ké|h h| ig|ydu|isi|ali|hli|k h| qo|iri|emd|ari|e h|ida|e t|tle|rni| al|siy|lid|olm|iye|anl| tu|iqi|lma|ip |mde|e e|tur|a i|uru|i k|raw|hu |mus|kil| is|i a|ir |éti|r b|özi|ris|asa|i h|sas| je|he | ch|qig|bas|n q|alg|ett|les| xi|tid| él|tes|ti |awa|ima|nun|a a| xe| bu|hil|n h| xa|adi|dig|anu|uni|mni| sa|arl|rek|ére| hö|kér| ji|min|i q|tis|rqi| iy|elq|xel|p q| qe|y i|i s|lig| ma|iya|i y|siz|ani| ki|qti| de|q w|emn|met|jin|niy|i i|tim|irl| ti|rin|éri|i d|ati|si |tew|i t|tli|eli|e m|rus|oli|ami|gen|ide|ina|chi|dil|nay|ken|ern|n w| to|ayi| ij|elg|she|tti|arq|hek|e i|n a|zin|r a|ijt|g b|atn|qar|his|uch|lim|hki|dik',hat:'ou |an | li|on |wa |yon| po|li |pou|te | yo|oun| mo|un |mou|ak | na|en |n p|nan|tou|syo| dw| to|yo | fè|dwa| ak| ki|ki | pa| sa|out| la| ko| ge|ut |n s|gen| de|se |asy|èt |i p|n d| a | so|n l|a a|fè |n k| se|pa |e d|u l| re|ite|sa | ch|kon|n n|e l|t p|ni |cha|a p|nn |ans|pi |t m| ka| an|nm |fèt|i s|son|man| me|n m|n a|e p|swa|sou|e k|hak|òt |n y|men|i l|epi| pe|ote|san| ep|i k| si|yen|eyi|a l| ap|i a|yi |pey|je |n t|e a|k m|e s| ni|lib|e n|i t|lit|ran|lè |enn|al |a s| pr|a f|ns | lò|ap |lòt|enm|k l|n e|t l|kla|anm|e y|a k| ma|e t|ay |i m|ali| lè|è a|ye |a y|ant| os| ba|i g| tè|aso|u t|a n| pw|ras| pè|n f|nas|ka |n g|osw| ta|dek|i d|pwo|e m| di| vi|la |i n|u s|sos|bli| te|o t| tr|lwa|ète|a t|le |u y|i f|tan|a c|lar|a m|ete|ara|t k| pi|ibè|bèt|re |osy|de |ati|ke |res|tis|i y|tè |nen| fa|ekl|ze |nal|ons|ksy|ini|che| le|e r|a d| en|aye|he |o p|alw| kò|lal| no|esp|a g|ava|kou|las|way|u f|isy| za| ok|oke|kal|ken|sye|ta |onn|k k|nje|pra|van|esi|pès|kot|ret|sya|n v|lek|jan|ik |a b|eks|wot|è n|di |òl |tra|u k|i r|nou| as|k a|u d|ist|èso|ib | ne|iti|ti |is |y a|des|è l|a r|ont| ke|nsa|pat|rit|sit|pòt|ona|ab |è s| sw|ond|ide| ja|rav|t a|ri |bon|viv| sè|pre|vay|k p|l l|kòm|i o| ra|era|fan|dev',aka:'sɛ |a a| sɛ|ne |ra |a n| wɔ| a |ara|an |eɛ |no | ne| bi| no| as|iar|bia|yɛ |mu |aa | an|ɛ s|e a|ma | ho|bi |man|deɛ| mu|ho |ɛ a|na |a ɛ| ob|obi|e n|a b|n a|so |o n|pa |ama|ɛ o|o a|ipa|nip|ɛ n|naa| na|a w|ana| so| ad| nn|ɛ ɔ|ɛde|asɛ|kwa| on|oni|wan| am|a ɔ|sɛd|wɔ | ah|ɛyɛ| ny|oɔ | n |mma|i a| mm|nni| kw|ie |wɔn|ɛ w|de | ɛy| ba|ase|ɔ n|o b|i m|ɔ a|uo |n n|a m|o s|iri| yi|ni |e s|nyi|di |u n|a o|aho| de|tum| ɛn|ɔn |nya|i n|ɔma|e m|adw| yɛ|umi|die|mi |ɛ ɛ|o k| ab|ɛm |a s| ma|nam| ɔm| ɛs|yin| at| bɔ|o d|ina|pɛ |sɛm|ua |n s|bɔ |adi|ya |e h|aso|mar|ani|kuo|rɛ |fa |a k|ɔde|a h|ba |n b|re |uma|wum|om |ɔ h|m n|yi |u a| sa|se |dwu|ɔ b| nt|m a|erɛ| kɔ|a y|orɔ| nk| bɛ| ɔd|ten|rɔ |hyɛ|saa|ka |ɛ b|e b|i s|ade|am |nka|kor|i ɛ|ene|ena| ns|ban|ɛns| ku|ɛsɛ|ane|nsɛ|fof|ɛɛ | fi|gye|ɔtu| di|ano|i k|o m| ɔt| ko|yɛɛ|bir| ak|im |kye| pɛ|a d|yie|ko |nti|i b|ete|ofo|amm|ye |ri |foɔ|kɔ |bom|abo|ɔ s|ɔne| ɛb|soɔ|for|isɛ|m k|asa|nod|ɛ m|fir|ti | da|e y|sua| be|nii|seɛ|wa |ber| aw|dwe|n f| fo|o ɛ|i h|u b|ɔ m| mf|hɔ |kab|wɛ |to |rib|hwɛ|ibi| dw|dis|nso|ans|tir|u ɛ| ti| hɔ|sa |e o| tu|odi|ɛ y|ia |ofa| ɔn|o w|ɛbɛ|aba| ka|ii |wen|ɛsi|m m|sia|ada|yer|ian|da |set| gy|dua|i d|som|mfa|ɔ w| af|i y|any|ora|rim|wɔd|dwa|nsi',hil:'nga|ang| ka|ga |ng | sa|an |sa | ng| pa| ma|ag |on |san|pag| an|ung|kag|a p|n s|a k|n n|a m|ata|kat| ta|gan|g p|ay |tar|g k|ags|run|ala|aru|gsa|tag|a s|g m| mg|mga|n k|a t|od |kon|g s|a n|ing|a i|man|g t|agp|tan| si|n a|y k|mag|gpa|may|hil|pan|ya |ahi|la |g a|sin|gin|ina|aya|ana|ili| pu|han|g i|yon|nan| in|way|uko|gka| gi|aha| uk|ilw|lwa|asa|apa|kas|syo|at |ban|lin|iya|kah|n p| na|o n|lan|a a|in |ngk|g n|ini|aba|pat|pun|a g|ali|o s| iy|yan|agt|tao|ngs|gba|kab|wal|ngo|al |nag|agk|o m|ni |i s|aga|ano| wa|isa|abu|kal|a h|dap|ong|a d|mat| tu|gso|no |aho|aki|sod|agb| da|asy|ila|d k|pas| hi|agh|d s|n m|na |lal|yo |di |til| la|o k|s n|non|gay|sal|a b|god|ao |ati|aan|uha| is|ka |aka|asu|ngb|o a|ama|ato|atu|uga|paa|but|una|n u|bah|uan|iba| di| ba|pah|bat| du|ulo|os |y s|nah| ko|aag|agi|sil|gi |i m|hay|yag|gon|y n|sta|n d|ot |oha|tun|ida| pr| su|a l|uta|m s| al|do |uli|sug|n t|as |lon|sul|og |pam|pro|him|gua|alo|lig| bi|bis|asi|ula|ton|ksy|gtu|a e|k s| ib|n b|maa|ugu|ko |lib|ron|i a|hi |hin|tek|lab|abi|ika|mak|bot|aoh|ok | hu|ghi|ind|ote|tok|i n|t n|g e|eks|dal|uma|ubo|tum|hat|to |ado|kin| ed|rot|ho |ndi|inu|ibu|y a|nta|ad |gko|lah|duk|abo|iko|nda|aro|gal|mo |g o| bu|int| o |n o|aay|da |gsu',sna:'wa |a k|ana|ro |na | ku| mu|nhu|dze|hu |a m| zv|mun|oku|chi|a n|aka|dzi|ka |zer|ero| ch|che|se |unh|odz|rwa|ra |kod|zvi| ne| pa|kan| we| dz| no|ika|va |iri| an|kut|nyi|o y|yik|van|nek|ese|eko|zva|idz|e a| ka|ane|ano|ngu|eku|cha|ung| yo|ri |ake|ke |ach|udz|iro|a z|u w| va|ira|wes|ang|ech|nge|i p|eng|yok|nok|edz|o i|irw|ani|ino|uva|ich|nga|ti |zir|anh|rir|ko |dza|o n|wan|wo |tan|sun|ipi|dzw|eny|asi|hen|zve|kur|vak|a p|sha|unu|zwa|ita|kwa|e k|rud|nun|uru|guk|a c|a d| ya|a y|bat|pas|ezv|ta |e n|uti| kw|o k|o c|o m|ara| ma|si |ga |uko|ata|ose|ema|dzo|uch|hip|kuv|no |rus|hec|omu|i z|wak|o r|kus|kwe|ere|re | rw| po|o a|mwe|yak|mo |usu|isi|za |sa |e z|uta|gar| in|hin|nem|pac|kuc|we |ete| ye|twa|pos|o d|a i|hur|get|ari|ong|pan|erw|uka|rwo|vo | ak|tem|zo |emu|emo|oru| ha|uit|wen|uye|kui| uy|vin|hak|kub|i m|a a|kud| se| ko|yo |and|da |nor|sin|uba|a s|a u| ic|zvo|mut|mat|nez|e m|a w|adz|ura|eva|ava|pi |a r|era|ute|oko|vis| iy|ha |u a|han|cho|aru|asa|fan|aan|pir|ina|guv|ush|ton| hu|uny|enz|ran|yor|ted|ait|hek| ny|uri|hok|nen|osh| ac|ngi|muk|ngo|o z|azv|kun|nid|uma|i h|vem|a h|mir|usa|o p|i n|a v|i k|amb|zan|nza|kuz|zi |kak|ing|u v|ngw|mum|mba|nir|sar|ewo|e p|uwa|vic|i i|gwa|aga|ama|go |yew|pam',xho:'lo |lun|oku|nge|elo|ntu|tu |e n|ele| ku|nye|ye |nga|ung|la | ng|lek|a n|o n|yo |o l|e u|nel|gel|a k|ko |ho |ulu|ke | ne| na|lul|we |le |wa |ngo| kw|ule|kub| no|a u|onk| um|nke|o e| lo|ela|kun|ama|any|unt|ang|eko|uba|elu|ezi|mnt| wo|a i|eyo|alu|lel|umn|lwa|kwe|olu|ba | uk|kuk|won|ukh|une|uku|gok|nok|enz| un|khu| ok|the|e k|zwe|kan|eki|aph|ane|uny|ile|o z|aku|ley|lok| ez|het|eth|ath|oka|pha|sel|ala|o y|kul|akh|kil|enk| in|esi|o k| yo|use|hul|u u|tho|obu|wen|ana|nku|khe|o o|e a|na |kho|ban|a e|ise|ent|gan|uth|ni |kel| zo|he |izw|o w|hi |elw|nam|ing|eli|fun|za |lwe|eng|ya |kwa|fan|isa|o a|ndl|ntl|ayo|eni|gen|hus|uhl|iph|tha|nzi|isw|sa |phi|aba|ben|und|ume|thi|ha |alo|ka |ink|hla|lal|wan|i k| lw|i n|bel| ba|o u|azi|e o|swa|ngu|bal|pho| ab|man|kut|emf|e i|mfa|a a|e e|een|int|uph|eka|ebe|seb|lan|nee|zi |o i|mal|sha|sek|dle|ziz|mth|nen|zel| se|okw|tya|ike|lin|tla|ene|sis|ima|ase|yal|ubu| ak|ant|sen|olo|wak| ko|a o|mfu|ezo|sid|nay|oko| ub|ulo|zo |do |isi|wez|iso|han|nte| ph|zim| ya|ga |li | le|iba|ham|ube|kup|aza|jik| ul| en|eem|phu| ol|and|imf| es|o s| im|kuf|u k|kwi|nak|ma |nan|ety|kuh|kus|yol| am|hel|idi| so|lis| nj|nje|jen|tsh|aka|zin|kuz|‐ji|no |ufu|ale|ong| el|bo |a y|e l|men|yen|lum',min:'an |ak |ang| ma| da| ka| sa|ara| ha|yo |nyo|hak| ba|ran|dan|man|nan|ng | pa| di|kan|ura| na|ata|asa|ok |nda|ala| pu|pun|uak|ntu|n d|k m| ti|ah |o h|n s|k u|n k| ur| un|tua|n b|and|unt| ta|uny|n p|tio|iok|ama|pan|ek |ban|jo |n m|k h|k d|ado|nga|aan|g p|tan|aka|ind|at |dak|dap|o p|tau|pek|uan| at|amo|mar|ape|au |kat|mo |sas|ari|asi|di |o s|ia |ngg|bas|ika|sam|am |lia|o d|san|gan|sia|tar|n n| jo| su|anu|lam|gar|o t| in|par|sua|dek|sar|k s|ri |o m|ana|bat|asu|ko |ai | la|ant|dal|lak|aga|alu|iah|o u|n a|tu |k a|adi|rad|i m|mal|dok|usi|aku|i d|k k|al |aro|eka|neg|ega|ato|to | ne|mam|o b|eba|ian|beb|n u|um |si |aba|rat|uah|ro |mas|ila|a d|ali|uka|ard|kam|ti |atu|nus|dar|ami|n t|sa |in |amp|kal|car|lan|aha|kab|so |rde|un |i k|gsa|das|ngs|aca|yar|ka |ati|ar | an|uku|ras| ko|sya|mat|k n|aya|nta|lo |any|sur|kaa|dil|kar|o a|u d|k t|pam|dia|ra |iba|lai|i t|lah| bu|mpa|kum|abe|n h|ili|nny| as|u p|aki|amb|sac|as |k b|h d|uli|ajo|a n|raj|n i|dua|ndu|k p|i p|itu|lin|han|huk|o k|rik|a b| li|ik |ggu|jam|bai|a a|i a|nia| ad|i j| hu|gam|sal|aso|ngk|sad|apa|ann| mu|ony|dik|bad|ain|did|min|l d|ada|bul|rga|tin|ga |ani|alo| de|arg|ahn|sio|hny|n l|sti|awa|uju|per|bak| pe|tik|ans| pi|a s| um|bag|ndi|anj|mba',afr:'ie |die|en | di| en|an |ing|ng |van| va|te |e v|reg| re|n d| ge|ens|et |e r|e e| te| be|le |ver|een| in|ke | ve| he|eg |het|lke|lik|n h|de |nie|aan|t d|id |men| vr|nde|eid|e o| aa|in |of |der|hei|om |g v| op| ni|e b| el|al |and|elk|er | me|ord|e w|g t| to| of|ers| we| sa| vo|ot |erk|n v|vry|ge |kee|asi|tot| wa|sie|ere| om|aar|sal|dig|wor|egt|gte|rdi|rd |at |nd |e s|ede|ige| de| ’n|n a|eni| wo|e g| on|n s|’n |e t|erd|ns |oor|bes|ond|se |ska|aak|nig|lle|yhe|ryh|is |eli|esk|ien|sta|vol|ele|e m| vi|ik |r d|vir|edi|kap|g e|ir |es |sy |ang|din| st|ewe|gem|gel|g o| is|el |e i|op |ker|ak |uit|ike|nse|hie|ur |eur| al|e a|nas|e n|nge|ier|n o|wer|e d|ap | hu|ale|rin| hi|eme|deu|min|wat|n e|s o| as| so|as |e h|del|d v|ter|ten|gin|end|kin|it | da| sy|per|re |n w|ges|wet|ger|e k|oed|s v|nte|s e|ona|nal|waa|d t|ees|soo| ma|d s|ies|tel|ema|d e|red|ite| na|ske|ely|lyk|ren|nsk|d o|oon|t e|eke|esi|ese|eri|hul| gr|ig |sio|man|rde|ion|n b|n g|voo|hed|ind|tee| pe|rso|t v|s d|all|n t|rse|n i|eem|d w|ort|ndi|daa|maa|t g|erm|ont|ent|ans|ame|yke|ari|n m|lan|voe|n ’|nli|rkl|r m|sia|ods|ard|iem|g s|wee|r e|l g|taa|sek|bar|gti|n n|lin|sen|t o|t a|raa|ene|opv|pvo|ete| ty|arb| sl|igh|dee|g a|str|nsl|sel|ern|ste',lua:'ne |wa | ne|a m| ku|a k| mu|di | bu|a b| di|e b|tu |nga|bwa|ntu| bw|udi|a d|e m|i b| ba| ma|shi|adi|u b|a n|la |ons|mun|i n|ung|nsu|ga |yi |ya |na |unt| dy|idi|e k|buk|mu |ika|esh|su |u m|ku |nde|any| bi|lu |nyi|end|yon|dik|ba | ci| ka|ang|u n|u y| mw|ka |i m| yo|we |oke|tun|de |kes|hi |kok|mwa| kw|e n|ban|dya|sha|u d|ken|kwa|ji |ha |wen|dit| ud|a a| an|mwe|itu| pa|le | a | wa|nji|kan|kum|ibw|bwe|a c|ant|ena|yen|mba|did|e d|ala|u u|ish|mak|bul|i a|nda|enj|u a|ila|pa |ako|ans|uke|ana|nso|amb|hin|umw|kal|uko|i k|bad|aka|ela|ele|u w|u k|du |ja |bu | mi|ind|ndu|kwi| ns|mbu|atu|bud|dil|ile|sun|eng|ula|enz|nan|nsh|kad|alu| cy|bis|kud|lon|u c|gan|dib|da |dye|bid| by|ukw|i d|aa |ngu|a p|sam|isa| aa|ilu| na|aba|lel|ye |dim|cya|kub|so |ond|kus|mat|nge|e c| bo|aku|bak|mus|ta |umb|ulo|elu|man|iki|mon|ngi|abu|mud|kuk|omb| mo|und|diy|kwe|umu|mal| ke|ush|gil|uba|imu|dis|wil|wu |san|gad|uka|bon|ma |aci|mik|wik| me|pan|iku|nza|ben|ulu|ifu|iba|kak|ata|som|ong|e a|apa| tu|o b|umo|bya|utu|uja|yan| be|ke |akw|ale|ilo|uku|cil|tup|kul|cik|kup|upe|bel|amw|ona| um|iko|awu|and|za |ike|a u|ima|muk| ya|mum|me |map|ita|iye|ole|lum|wab|ane| lu|nu |kis|mbe|kab|ine|bum|lam|pet| ad|fun|ama| mb|isu|upa|ame|u p|ubi',fin:'en |ise|ja |ist| ja|on |ta |sta|an |n j|ais|sen|n o|keu|ike|oik|lis| va|ell|lla|n t|uks| on|ksi| oi|n k| ka|aan|een|la |lli|kai|a j| ta|sa |in |mis| jo|a o|ään|än |sel|n s|kse|a t|a k|tai|us |tta|ans|ssa|kun|den|tä |eus|nen|kan|nsa|apa|all|est| se|eis|ill|ien|see|taa| yh|jok|n y|vap|a v|ttä|oka|n v|ai |itt|aa |aik|ett|tuk|ti |ust| ku|isi|stä|ses| tä| tu|lai|n p|sti|ast|n e|n m|tää|sia|unn|ä j|ude|ä o|ste|si |tei|ine|per|a s|ia |kä |äne| mi|maa| pe|a p|ess|a m|ain|ämä|tam|yht| ju|jul|yks|hän|ä t| hä|utt|ide|et |llä|val|sek|stu|n a|lä |ami|hmi| ke|ikk|lle|iin|sä |euk|täm|ihm|tee| ih|lta|pau| sa|isk|mää|ois|un |tav|ten|dis|hte|n h|iss|ssä|a h|ava| ma|a y| ei| te| si| ol|ekä|sty|alt|toi|att|oll|tet| jä| ra|vat| mu|iel| to|mai|sal|isu|a a|kki|at |suu|n l|väl|ää |uli|tun|tie|eru| yk|etu|vaa|rus|muk| he|ei |a e|kie|sku|eid|iit| su|nna|sil|oma|min| yl|lin|aut|uut|sko| ko|tti|le |sie|kaa|a r| ri|sii|nno|eli|tur|saa|aat|lei|oli|na | la|oon|urv|lma|rva|ite|mie|vas|ä m| ed|tus|iaa|itä|ä v|uol|yle| al|lit|suo|ama|joi|unt|ute|i o|tyk|n r|ali|lii|nee|paa|avi|omi|oit|jen|kää|voi|yhd|ä k| ki|eet|eks| sy|ity|ilö|ilm|oim|ole|sit|ita|uom|vai|usk|ala|hen|ope| pu|auk|pet|oja|i s|rii|uud|hdi|äli|va | om',run:'ra |we |wa | mu|e a|se | n |a k|ira|ntu|tu | ku| um|ko |a i|mu |iri|mun|hir|ye |unt|ing|ash|ere|shi|a n|umu|zwa| bi|gu |ege|a a|za |teg|ama|e k|go |uba|aba|ngo|ora|o a|ish| ba| ar|ung|a m| we|e n|na |sho|ese|nga| ab|e m|mwe|ugu| kw|ndi| gu|ate|kwi|wes|riz|ger|u w| at|di |gih|iza|n u|ngi|ban|yo |ka |e b|a b| am| ca|ara|e i|obo|hob|ri |u b|can|nke|ro |bor| in|bah|ahi|ezw|a u|gir|ke |igi|iki|iwe|rez|ihu|hug|aku|ari|ang|a g|ank|ose|u n|o n|rwa|kan| ak|nta|and|ngu| vy|aka|n i|ran| nt| ub|kun|ata|i n|kur|ana|e u| ko|gin|nye|re | ka|any|ta |uko|amw|iye| zi|ga |ite| ib|aha| ng|era|o b|ako|o i| bu|o k|o u|o z| ig|o m|ho |mak|sha| as| iv|ivy|n a|i b|izw|o y| uk|ubu|aga|ba |kir|vyi|aho| is|nya|gan|uri| it| im|u m|kub|rik|hin|guk|ene|bat|nge|jwe|imi| y |vyo|imw|ani|kug|u a|ina|gek|ham|i i|e c|ze |ush|e y|uru|bur|amb|ibi|agi|uza|zi |eye|u g|gus|i a| nk|no |abi|ha |rah|ber|eme|ras|ura|kiz|ne |tun|ron| zu|ma |gen|wo |zub|w i|kor|zin|wub|ind| gi|y i|ugi|je |iro|mbe| mw|bak| ma|ryo|eka|mat| ic|onk|a z| bo|ika|eko|ihe|ukw|wir|bwa| ry| ha|bwo| ag|umw|yiw|tse| ya|he |eng| ki|nka|bir|ant|aro|gis|ury|twa| yo|bik|rek|ni | ah| bw|uro|mw |tan|i y|nde|ejw| no|zam|puz|ku |y a|a c|bih|ya |mur|utu|eny|uki|bos',slk:' pr| a |prá|ráv| po|ie |ch |ost| ro|ho | na|vo |ani|na | ne|nos|ažd|kto|kaž| ka|má |né |ávo|om | má|ebo|ti | v | al|ale|leb|bo | je| za|ých|o n|ždý|dý |ia | sl|mi |ova|sti|nie|van|to |eni|ne |áva|lob|ého|slo|rod|tor|rov| sp| zá|á p|o v|a p| kt|ý m| sv|voj|bod|obo|nia| ná| vy|ej |je |ať |o p|a v|a s|áro|a z| sa| ma|a n|e a|e s|mu |mie|kla|nár|svo|spo| by|ovn|by |roz|sa |ľud|iť |odn| vš|ov |i a|néh|vše|o s|va |o a| ľu|oci|pre|nu |a m|u a|ený|e v|ný |nes|a k|zák|pod|ným| do|u p| k |u s|áci|ajú|byť|yť |nýc|eho|ran|pol|tát|stn|jeh|a r|šet|ými|lad|čin|ému|a o|edz|ť s|kon|stv|oré| sú| ni|e z|pri|och|ny |štá|sť |oje|vna|tre|u k| či|ko |é p|maj|smi|a a|etk|nak|ým |med|dov|prí| ob|iu |uds|osť|esm|e b|m a|hra|i s|rác|bez|vať|chr|e p| ab|jú | št|žen| ho|čen| de|i p|ť v| vo|dsk|pro|nom| in|ou |du |že |aby|est| bo|ré |bol| so|nú |olo|kej|áln| oc|obe|ky |dzi|dom|áv |por|lne|rav|aké|ens|pra|ok | že|tné| ta|ako|res| vz|i k|ami| tr| ak|ní |len|o d|del|ský|cho|ach|ivo|h p|ože|iál|inn|slu|kra|loč|očn|ju | os|anu|oju|voľ|ákl|str|é s|ené| ži|niu|sta| st|ved|tvo| me|dno|m p|de |ké |kým|ikt|stu|é v|i v|vyh| to|v a|odu|hoc|a t|ím |ly |hov|y s|soc|júc|ú p|odi|vod|liv|aní|ciá| ve|rej|ku |ci |ske|sob|čno|oso',tuk:'lar| we|we | bi|yň |ary|ada|da | he| ha|an |yny|kla|dam|de | ad|yna|er |na | ýa|ir |dyr|iň |bir|r b|ydy|ler|ara|am |yr |ini|lan|r a|kly|lyd| öz|mag|nyň|öz |her|gyn|aga|en |ryn|akl|ala|dan|hak|eri|ne |uku|ar |r h|ga |ny |huk| de|ili|ygy|li |kuk|a h|nda|asy|len| ed|bil|atl|ine|edi|niň|lyg| hu| ga|e h|nde|dil|ryň|aza|zat|a g|‐da|a‐d|eti|ukl| gö|ly | bo|tly|gin| az|lma|ama|hem|dir|ykl|‐de|e d|ile|ýan|a d|ýet|ýa‐|ynd|lyk|aýy|e a|ünd|ge | go|egi|ilm|sy |ni |etm|em‐|lme|m‐d|aly|any| be|tle|syn|rin|y b|let|mak|a w|a ý|den|äge|ra | äh|mäg| du|n e|bol|meg|ele|ň h| et|igi|ň w|im |iýa| ýe| di|r e|ek | ba|ak |esi|ril|a b|in |p b|deň|etl|agy| bu| je|bu |e ö|y d| hi|mez| es|ard| sa|ähl|e b|yly| ka|esa|mek| gu|n a|e t|lik| do|e g|sas|ill|nma|ň a|ram|ola|hal|y w|ýar| ar|anm|mel|iri|siý|ndi|ede|gal|end|mil|rla|göz| ma|n b|e ý|öňü|ňün|n h| tu|hiç|yýe| ge|my |iç | öň|n ý|tla|ň ý|lin|rda|al |lig|gar| mi|i g|dal|rle|mal|kan|gat|tme|sin|and|ň g|gor| ta|öwl|ýle|y g|e w|ora|tiň|ekl| yn|alk|döw| dö|ere|m h| me|dur| er|asi|tut|at |çin|irl|umy|eli|erk|nme|wle|gur|a ö|aýa| çä|nun| ki|ras|aml|up |ýaş|tyn| aý|ry |ň d|baş|ip |gi |z h|kin|z ö|n w|ter|inm|eýl|i ý|kim|nam|eň |beý|dol| se| te|r d|utu|gyý|ez |umu|mum',dan:'er |og | og|der| de|for|en |et |til| fo| ti|ing|de |nde|ret| re|hed|il |lig| ha|lle|den| en|ed |ver|els|und|ar | fr| me|se |lse|and|har|gen|ede|ge |ell|ng |at | af|nne|le |nge|e f|ghe|e o|igh|es |af |enn| at|ler| i |ske|hve|e e|r h|ne |enh|t t|ige|esk| el| be|ig |tig|fri|or |ska|nin|e s|ion| er|nhv|re |men|r o|e a| st|ati| sk| in|l a|tio| på|ett|ens|al |tti|med|r f|om |end|r e|del|g f|ke | so|på |eli|g o| an|r r|ns | al|nat|han| ve|r s|r a| un| he|t f|lin| si|r d|ter|ere|nes|det|e r| ud|ale|sam|ihe|lan|tte|rin|rih|ent|ndl|e m|isk|erk|ans|t s|kal| na|som|hol|lde|ind|e n|ren|n s|ner|kel|old|dig|te |ors|e i| hv|sni|sky|ene|vær| li| sa|s f|d d|ers|ste|nte|mme|ove|e h|nal|ona|ger| gr|age|g a|vil|all|e d|fre|tel|s o|g h|t o|t d|r i|e t| om|arb|d e|ern|r u| væ|d o|res|g t|klæ|øre|n f| vi| må|ven|sk | la|gte|kab|str|n m|rel|e b|run|rbe|bej|t i|ejd|kke|t e|g d|rkl|ilk|gru|ved|bes| da|nd | fu|lær|æri|rdi|ærd|ld |t m|dli|fun|sig| mo|sta|nst|rt |od | ar| op|vis|igt|ære|tet|t a|emm|g e|mod|rho|ie |g u|ker|rem| no|n h| fa|rsk|orm|e u|s s|em |d h| ge|ets|e g|g s|per| et|lem| tr|i s|da |dre|n a|des|dt |kyt|rde|ytt|eri|hen|erv|l e|rvi|ffe|off|isn|r t| of|ken|l h|rke|g i|tal|må |r k|lke|gt |t v|t b',als:'të | të|dhe|he | dh|në |ë d|e t| e |et |ë t|imi|për|ejt|dre|rej| pë| dr| në|it |gji|sht|ve |jit|ë p| gj|ith| sh| i | li|het|e p| nj|t t|ër |ë n|in | ve|me |jtë|e n| ka|ara|e d|ush|n e|tet| pa|jer|hku|a t|re |ën |ë s|sh | ku|së |t d|ë m|kus|mit|lir|ka |ë k|jë |se | si| që| ba|etë|që |ë b|si |ë g|eri|thk|nje|eve|e k|e s|jet|ose|bas|ohe| os|ra | mb|iri|h k|min|shk|ash|rim|ndë| nd|një|jta|e m| me|eti|do | du|es |rë |e l|mi |anë|tar|t n| as|dër|hte|end|tën|vet|uar|und|ësi|kom|tje|duh|ndi|at |ave| ko|ri |ta |ë v|shm| de|ar |omb|i d| kë|i p|jes| ng|uhe|nga|i n|en |ë e|ga | ar|e a|ës |hme|bar| pe|htë|ë l|ur |ë i|isë|ime|sim|ris|tës|art|ëm |cil|tim|tyr|ësh| ma|shë|or |t a|kët|gje| ci|r n|e v|par|nuk|ëta|rgj|i i|ish|uk | nu|ë r|are| je|ë c| pu|atë|lim|lli| ës|ë a|i t|mar|ore| së|tit|lar|per|t p|rat|ite|inë|t s|riu|ke |ërg|a n|edh| pr|esi|irë|ërk| po|hë |ë j|i s|a e|ht |mba|roh|im |ari|e b|lit|ti |asn|tav|snj|t e|ik |tij|k d|qër|hëm|ras|res|otë|nal|mun| an|kla|ven|e q|tat|t i| fa|ij | tj|igj|te |ali|bro| di|roj| ti|uri|ojë|ë q|çdo|det|n p| pl|ekl|ind|erë|vep|dek|nim|ive|ror|sho|hoq|oqë|ëri|pri|r d|shp|esë|le |a d|shi| mu|dis|r t|ete| t |ë f|ëzo|zim| çd|mbr| re|e f|jen|i m|iut|n k|tha|s s|lot',nob:'er | og|og |en | de|for|til|ing|ett| ti|et | ha| fo| re|ret|il |het|lle|ver|tt |ar |nne| en|om |ell|ng |har| me|enn|ter|de |lig| fr| so|r h|ler|av |le |den|and| i | er|som| å |hve|or |t t|ne | el|els|re | av|se |esk|enh|nge|ska|nde|e o|ete|gen|ke |lse|ghe|ten|men| st|r s|fri|igh|ig | be|e e|nhv|r r|tte|ske|te | på| ut| sk|al | in|sjo|på |der|e s|ner|rin|jon|t o|unn|e f|han|asj|tig|ed |es |g f|sam|ent|tti|ene|nes|med|ge | al|r o|ens|r e|eli|isk|lin| ve|nin|g o| sa| an|t f|itt|lik|end|kal|r f|t s|rih|ihe|nas|nte|e r|ns | si|lan|g s|mme|ige|l å|erk|dig| gr|n s|ren|r a|all| na|kte|erd|ere|e m|und|r u|res|tel|ste|gru|inn|lær|ers| un|det|t e|arb|ale|del|ekt|ven|t i|g e|bei|eid|e a|n m|e d| ar|rbe|e g| bl|ans|klæ| li| he|g t|æri|sky|run|rkl| la|sta|sni|kke|m e|rt |mot| mo|e n|tat|at |e h|e b|ove|e t|jen|t d|str| må|r m|n e|ors|rel|ker| et|n a|bes|one| vi|nn |g r|e i|kap|sk |ot |ndi|nnl|i s| da|s o| no|id |ger|g h|vis|n o|bar|s f|ndl|t m|g a|opp|t a|dis|nal|r d|per|dre|ona|ære|rdi|da |ute|nse|bli|ore|tet|rit| op|kra|eri|hol|old| kr|ytt|kyt|ffe|emm|g d|l f| om|isn| gj|å d|ser|r b| di| fa|n t|r k|lt |set| sl|dom|rvi|me |l e|gre|å s|må | tr|nd |m s|g i|ikk|n h| at|tes|vil|dli|g b|d d| hv|rav',suk:'na | mu| bu| na|a b|ya |hu |a n|we | gu|nhu|a g| ba|a m|ili|wa | ya|li |unh| bo|mun|ali|bul|han|bo |i m|ilw|uli|ang|lil|la |i b|e n|ga | wi|kil|mu | al| se|u a|ge |kge|ekg|sek|lwe|ose|le |lo |bi |ulu|e y|kwe|ila|and|e b|i n|yo |ng’|a s|nga| ns|si |abi|nsi|ina|lin|aki|se |ban| ly| gw|dak|lu |ngi|gil|a w|o g|akw|u b|ile|anh|ka |ilo|a l|ubi|e g| nu|o n|ja |gan| ng| ma|lya|nul|g’w|ani|ndi|u m|iya|wiy| ji|jo | ka|yab|lwa|ada|o b|e k| ad|gwi|ho |gub| ku|ing|o a|o l|ula|ika|a i|u n|dik|iha|shi|ayo|gun| ja|ha |biz|o j|lag|ma |wen| sh|ele|ung|o s|gi |gul|mo |lan|iwa|a k|ala|iki|jil|ola|ji |a a|yak| li|nil|iza|agi|aha|man|bos|iga|kuj| ha|ana| lu| gi|iti| mh|uga|uyo|win| ga|za |a y|ki | nd|oma|ene|o w|a u|mah|yos|sol|hay| mi|iko|ong|aga|iku|gwa|i a|ndu|pan|u g|e i| ab|ujo|ida|nya|ibi|duh|but|i y|u w|iji|nhy| we|nik|aya|uhu|nda| il|je |abo|aji|lel|ubu|nay|ba |lug|lon|ale|mil|da |a j|dul|o m|mha|aka|e u|g’h|udu|lyo|e m|e a|gik|bus|bal|sha|wit|twa|ngh|nek|wig| um|okw|any|uma|ima|uso|bud|’we| ij|hil|bil|a h|imo|ita|no | ih|gut|nha|ne |iso|ulo|uno|yom|’ha|u l|elo|eki|wel|hya|ngu|omb|som|mbi|i g|o i|u i|bak| is|ugu| yi|utu|eni|tum|umo|u s|tog|inh|’wi|lit|waj|e j|ule|jiw|u u|kub|kul|lik|uto| uy|upa',sag:'tî | tî|na | na| ng|a n|ngb|gö |ngö|nga|nî | lo|lo |zo |bi |la |gbi|ang| sô|sô |î l|gan|ö t| zo|o n| wa|a t|îng|i t|ngü|gü | al|lîn| nd|a l|ê t| kû|äng|î n| te|wal|ala|alî|î k|ë t|î m|â t|î â|ô a|î b| mb|ûê |gâ |örö|ngâ|kûê| lê|o k|a â|e n|ko |î s| kö|ter|dör|köd|ödö|ï n|a k|lêg|gë |ôko|ëpë|mû |pëp| pë|o a|êgë|eke|yek|ke |ü t|î t| ay|o t|bên|ê n|rê |pëe|ra |ëe |erê|rö |tï |kua|aye| nî| ôk|ua |a z|ä t| âl|â n|ïng|î d|ö n|âng|ênî| am|î z|ten|âla| yâ|ê a|mbê|a m|û n|a y|ne |ene|rä |î g|a s|bê | ku|arä|ndi|ga |diä|ëng|iä | du| ân|amû|dut|öng|yâ |utï|ro |önî|lï |a p| gï|oro|lë |î a| âm|ndo| sê|ngô|do |i n|o s|ndö|âra|e t| bê|gba|ûng| mä|sâr| sï|î p| gb|ö k|e a|yê |a a| âk|dö |ara|ba |ï t| tö|a w|zar|tön|î w|war|ndâ|a g|ana|në |ênd| të|ta |ban| lë|zön|î f|nzö| sâ|sï |tën|o w| nz|sên| âz| da| za|îrî| në|nën|ate|ä s|bâ | at|o l|ënë|o ô|fa | kp| ma|o p| mû|kân|a b|bat|ata|ô n|se | kâ|alë| ko|ông|da |ë s|üng|ë n|ibê|rös|mbë|bët|ëtï|âmb|mbâ|ïgî|mba|gî |tän| po|bûn|gï |amb|ü n|gbï|ôi |gôi| af|rë |erë|lê | as|afa|âzo|i p|sor| ad|i s| ba|gïg|ä n|bät|dë |ö â|kûe|ûe |kpä|päl|älë|e z|ätä|ö w|ngi| yê|köt|ötä|tä |ê s|kod| hï|hal|hïn|lëz|ëzo|ngä|gän|odë|ö m|mar|sär|pä |ärä|îan|rän|bîa|a h|gi |bor|du ',nno:' og|og | de| ha|er |en |ar |til| ti|lle|ett|il |ret|om |et | re|le |har|enn| me| al|all| fr|ne |tt |re | å | i |nne|and|ing|ska| sk|men| fo|det|den|ver|for|ell|t t|dom| so|de |e s| ve| ei|ere| på|al |an |e o|e h|fri|sam| sa|l å|på |leg| el|ler|som|ein|ei |nde|av | st|dei|or |ten|esk|kal|gje|n s|tte|je |ske|rid|r r|i s|te |nes| gj|eg |ido|med|e f|r s|st |ke |jon| in|r f|sjo|asj|nas|ter|unn|ed |kje|han|ona| er|t o|t e|g f|ski|e m|ast|ane|e t| av| gr|lan|ste|tan|å f| na|der| sl|t s|seg|n o|r k|nga|ge | an|g o|at |na |ern|nte|ng | ut|lik|e a|bei|gru|e i|arb|kil|g s|lag|eid|r a|e d|g d| si| få|ame|a s|e r|rbe|jen|n m|r d|n e|nn |e n|erd| tr| må| bl| mo|ren|run|nin|bli|kra| kr| at|ege|n i|me |nsk|ins|år |frå|in |lov|v p|end|mot|ale|e v|å a|få |rav|int|nal| ar|sta|e k|t f|ome| la|ot |t a|sla| ik|nle|itt| li| kv|id |kkj|ikk| lo|nad|å v|tta| fa| se|gen|ld |å s|kan|g t| ka|r l|god|n a|lin|jel|ild|dig|ha |l d|kap|ve |ndr|g i|g a|inn|var|rna|r m|r g|a o|dre|d a|n t|ag |kår|mål|ig |va |i d|t m|e e|n d|tyr| om|g e|eve|då |e u| då|und| no|ir |gar|g g|l h|se |ga |d d|l f|ker|r o|å d|eld|ige|t d|t i|t h|oko|nnl|rel|nok|rt |lt |åse|jer|ta |ik |ial|eig|r p|i e|olk|bar|osi|kte|sos|lir|opp| un|ad | be',mos:' n |ẽn| a | se|a t|sẽ|̃n | ne|a s| ye|e n| ta| tɩ|n t| pa|tɩ | la| so|nin| ni| b | fã|fãa|ãa |ng |a n| bu| tõ|la |ẽ | te|tõe|ne |ye |a a|or | ya| to|ed |ned|pa |e t|õe |tar|em |tẽ|g n|ã n|n m|aan| ma|sor|buu|n y|maa|uud|a y|r n|ins|n p|ud |ra |paa|ɩ n|a b| wa|d f| na|me |n d|ara|n b|sã |taa|n w|bã |an |yel|eng|aal|ɩ b|n n|gẽ|̃ng|og | ka| bɩ|bɩ | tʊ|gã | yɩ|na |am |e b|ame|wa |g a|d b|aam|ab |mb | bã|ãmb| ba|m n|wã |aab|a m|aa |saa|ga |nsa|yaa| wã|a l|tog|ore|n s|nd |ʊʊm| sõ| sã|ãng|seg|egd|d s|el |tʊʊ|ngã|ba | tũ| da|ã t| me|b s|re |dat|l s|d n|ɩ y|ã y|dɩ |aoo|g t| kã|m t|ing|r s|a p|b y|b n|gdɩ|men|dã |vɩɩ| vɩ|lg |oor|ã s|n k|al |rã |nga|ar | le|gr |d a|neb|̃nd|ɩɩm|ĩnd|yɩ |lem| pʊ| bʊ|pʊg|nge|to |b t|ɩ s|g s| mi| ke|a k|bãm| we|kao|ilg|wil| zĩ| no|kẽ| ra|m b|ʊge|b k| bũ|oog|ã p|bũm|ngr|at | wi|gam| ko|eb |g b|sõn|ãad|ã f|õng|ɩm |m s| yi|ũmb| yã|ʊm |oy |wẽ|noy|ʊmd|da |ren|a z|ya | gã|le |b p|ɩ t|n g| f |ni |soa|oab|i t| sɩ|lag| ti|te |o a|s n|oga|go |tũ |gem|age|a w|̃ n|in | yõ|a g|b b|aor|ka |ẽe|tũu|aas|a r|e y|ag |eg |r t|e a|ã k|iid|e p|neg|o t|ate|oa |e s|ũ n|mã |ms |ell|eem|ẽm|b w|̃ms|too|ik | zã|zĩn|kog|bao|r b|s a|bui|uii|ogl|aba|alo|loa|kãa|od |l b|ll |nda|kat|aka',cat:' de| i |es |de |la | la| a | pe|per|ió |ent|tat| se|nt |ret|ts |dre|at | el|ls | dr|men|aci|a p|ció|ona| co|a l|al |na |s d|que|en |el | to|s i| qu| en|e l|ns |tot|et |t a|ers| pr|t d|ons|er | ll|ion|a s|ta |a t|con|els|s e| l’|rso|res|als|son| un|est|cio| re|pro|ita|cia| in|les| o |ue |del|lli|té | té|ia |ame|é d|sev|ota|nac|i l| al|s p|a d|ar |a i|ual|nal|a c|ant|nci| le|ert|sta|rta|ser|t i|i a|l d| no|va |ats| d’|s n|re |s a|e c|eva| na|rà | ca|ues|com|lib|és | so|ibe| es|ets|ber|da |r a|no |una|l’e|s l|ter|sen|ran|ure|des|man|i e|l p|t e|n d|e d|e e|om | di|cci|igu|a a|s t| pa|i d|tra|s o|aqu|tre|vol|ect|a u|l i|gua|ide|s s|ada|ene|ial|nta|ntr|ens|soc|cte|ra |oci|hum|uma|cla|ali|lit|erà|cti| aq| hu|ici|pre|era|ess|uni|nte| fo| ni|ble|sse|tes|alt|eme|ass|ica|seg|o s|ote|rac| ig| po|ans| és|a e|un |us |mit| ma|r s|se |ssi|s h|a m|r l|nit|l t|ènc|ó d|ten| te|ir |i p|tal|eta|dic|i i|hom|t q|par|egu|s f| as|n l|ria| mi| ac|lic|int| tr|act|eix|n e|s c|ont|nse|ecc|t t|ltr|amb|qua|l’a|eli|ura|an |ist|e t|ó a|one|nam|ing|lar|o p|esp|rec|lig|a f| ha|iva| am|lle|t s|rot|mat|liu|tiu|iur|n a|fon|ots|inc|ndi|e p|seu|olu|gur|i c|més|der|rna|ina|for|igi|cie|bli|ic |mb |in |art|ol |rom|nin|omp',sot:' le|le |ng |ho | mo| ho| bo|a h| e |lo |ya |ba |e m|a l| ya| ts| ba|na |ong| ka|a b|tho|e t|sa |elo|olo|a m|ets| di|o e|la |mon|oth|tsa|o y|ka |eng|a k|oke|kel|a t|g l|tok|ang|o t|tla|mot| se|o l|e b| na| ha|lok|wa |e h| tl| a |aba|o b|tse|ha | o |hab|e k|tjh|a d|tso|jha| to|se |so |oko|e e|tsh|dit|pa |apa|o n|e l|loh|kol| ma|o m|a e|ela|ele|ana|a s|let|bol|ohi|a a|tsw|kap| ke|hi |g o|ohl|eo |ke |ona|set|o k|o s|di | kg|e d|aha|lan|bot|bo |ito|o h| mm|hle|eth|ena|i b|ala|ats|moh|swa|lwa|g k|atl|abe|g m|ola|phe|bat|ane|a n|mel| me|o a| ph|ebe|ell|hlo|tlo|etj|mat| sa|g t| th|g y|lat|mol|g b|g h| en|she|the|seb|nan|lek|boh|hae|kgo|hel|e s|edi|wan|me |kga|ae |to |a f|ath|lao| hl|han|ile|nah|we |ume|kan|otl|len|aka|efe|ire|bel|bet|rel|swe|mme|sen|a p| ko|g e|atj|lel|its|bon|oho|eha|shi|man|ano|nts|he |lal|eka| fu|o f|heo|got|all|ao |het|hat|get|ban|hal|kge| wa|a y|lla|fum|mmo|kar|alo| ef|thu|e y|wal|tha|san|hon|tlh| he|e n|ben|hla|ing|uma|pha|o o|si | tu|tum|llo|lle| ta|pan|hen|mo |nen|hir| lo|son|ots|tab|ama|ato|din|lap|hil| eo|dis|oka|elw|tsi|llw|i m|hol|pel|iso|no |e a|fet|lwe|adi| fe|fen|hwa|opa|kop|are|amo|ret|emo|i k|isa|o p|o d|i l|gat|dik|i t| nt| la|ame|shw|hah| am|nya|ita|mab',bcl:'an | sa|in | na|ng |sa | pa|na |nin|ang| ka| ni| ma| an|pag| as|sin|asi|n s|ion|n n|cio|a m|on |ban| de|n a|ga |kan| mg|a p|mga|a n|os |rec|ere|der|cho|ech|n p|aci|aro|n m|man|a s| la|n d|o n|asa|n k|g s|kat|sar|ata|ay |o s|al |ong|n l| o |a a|ho |a k|igw|tal|gwa|amb|kas|sai|mba|wa |ara| ig|agk|o a|lam|ro |o i|gka|ali|apa|nac|san|aba|g p|ina|a d|iya|yan|ing|lin|may|ink|aiy|nka| ba|aka|a i|yo | in|ag |abo| da|aha|ini| ga|tan|s n|nta|ano|agt|s a|kai|ad |hay|ida|hos|o m|og |ia |iba|ent|han| ta|par|n i| hu|at |ron|a b|g n|ant|g m|nal|ayo|a g|dap|mag|no |sta|aya|iri| pr|nga|ran|cia|g k|es |pat|li | co|dad|l n|y n|bos| si|mak|pro|ala|men|gan|aki|nte|lan|o k|con|t n|gab|a l|g d|ona|n b|ta |do |nda|aan|as |uha|agp|a c|uli|awo|taw|pan|n o| so|hul|i n|ter|ado|ags|g a|tra|min|anw|tay|kam|nwa|waa|g o|a o|kap|ain|bal|bil|ami|g i|d a|res|ra |nag|gta|ton|n e|ba |nan| mi|kab|en |bas|gpa|nes|o p| di|pin|ika|l a|n g|ind|isa|cci|ili|ial|ecc|tec|nci|ios|bah| es|one|pak|om |imi|agi|ico| re|ana| bi|a e|nid|rim|rar| se|rab|s s|hal|i a|buh|sab|cri|ubo|bo |gi |wo |rin|int|agh|ipa|sii|ibo|ani|to |sad|hon| le|iis|a t|ast|say|lar|n c|aag|ote|rot|n t|y m|ici|paa|ley|ey |yag|aen|dan|ni | pu|atu|lab|sal|ica| gi',glg:' de|os |de | e |ión| a |da |to |ció|ere|ón |der|ito|en |a p| co|ent|eit|n d| se|rei|ade|as |aci|dad|s d| pe|per|o d|s e|e a|e d|men| da|nte|ers| pr| te|do |al |rso|ida|es |ten|soa|oa |que| to| po| o |a t| in|a e| li| do|cia|te |tod|res|o a|pro| re|tos|est|ra | es| ou|dos|lib|con|a d|nci|o e| na|e e|a a|a s|ber| á |oda| pa|e o| qu|e c|ue |ar |nac| en| sú|tra|s p| un|súa|com|ou |ia |nto|ser|a c|er |ns |a o|se |des|is |ter|s n| ca|ado|or |óns|sta|úa | no|rda|s s|ibe|rá |erd|era|no |nal| as|ica|e p|eme|erá|pre|sen|das|e n| ni|e s|por|ais|par|ant|ara|ame|cci|ona|io |o p|n p| di|cto|s t| so|o t|o á|nin| me| os|cio|enc|unh|n e|n c|nha|ha |ntr|ion|n s|á s|n t|s o|ese|nta|ect|e i|o s|e l|so |nid|oci|soc|ont|dic|ici|e t|tad| ac|tiv|ndi|ali|gua|l e|rec|a l| ig|omo|cas|o m|re | ma|ing|na |igu|vid|eli|ngu|und|s i|rac|a n|cla|cti|seu|ria|on |ase|o n|lic|s c|man|lid|a u|uni|ta | ó |ual|ido|ori| fu|ind|nda|ste|s a|tes| tr|act|ial|fun|dis|ecc|o ó|cal|mo |un |e r|iva|n o|ca |n a|o c|esp|ome|o o|seg|sti|r a|tor|r d|egu|ada|lo |nde|r o|uma|ote| el|alq|lqu|uer|spe|a i|tar|bre|tri|hum|olo|cie|ren|ena|ari|mat| fa|med|ura|lar|edi|ver|ixi|á p|ibr|gur|int|pen|rot|a f|cac|s f|ili|rio|ma |a v| vi|rim|len|ita',lit:'as |ir | ir|eis|tei| te|s t|os |uri|ti |us |is |iek| pa|ai | vi|vie|tur| ki|ri |žmo| tu| žm|ien|ės |ių |ali|ais|mog|vis| ka|lai| la|ini|i t|s i|s ž|sę | į |isę|ena| ne| pr| bū| jo|pri|kie| ta|kvi|nas| su|ekv|mas|gus|būt|tin|isv|s s|ogu|isi|mą |mo |ant| ar|s k|ama|kai|ūti|s a|s v|aci| ti|s n| sa|s p|oki|cij|inė|ar |val|ms |tai|jo |i b| na|gal|sav|kur|aus|men|rin| ap|imą|ma |sta|ę į|ina|i p|imo|nim|i k| nu|ima|oti|mis| ku|jos|lyg|dar|išk|je | at|tas|kad|r t|tų |ad |tik|i i|nės|arb|i v|ijo|eik|aut|s b| įs| re|iam|sin|suo| be|isu| va|li |sty|asi|tie|ara|lin|isė|i s|ą i|jų | ly| ga|vo |si |r p|tuo|aik|rie| mo|din|pas|mok|ip |i n|rei|ybė|mos|aip|r l|ntu|įst|į t|gyv| iš|nti|tyb|ų i|pag|kia|kit|es |uot| sk|jim|tis| or|aud|yve|ven|mų |als|ų t|nac|avo|dam|ą k|i a|s j|oje|agr|kla|gau|neg|nių|o k|ega|iki|aug|ek |tat|ieš|tar|ia | ši|ios|ška|sva| to|tau|int|sau|uti| as|io |oga|san|mon|omi|kin|ito|s g|ome|r j| ve|aty|kim|nt |iai|lst| da|ją |min|r k|o t|nuo|tu |ver|kal|am |usi|o n|o a|ymo|tym|vę |ati| ji|o p|tim|ų n|paž|ter|s š| vy|alt|ksl|ing|ų s|oma|šal|ran|e t| ni| ša|ava|avi|nie|uom|irt|elg|jam|ipa|kių|tok|eka|tos|oja|kio|eny|nam|s d|ndi|amo|yti|gri|svę| gy|lie|ėmi|ats|ygi|soc|sie|oci|pat|cia',umb:'kwe|oku|a o| ok|nda| kw| om|da |wen|e o|a k|la |ko | ly|end|nu |ka |o l|oko|mun|omu|unu|kwa|wa | ko|a v|o y|omo|mok|ali| vy|eka|olo|i o|osi| yo|lyo|mwe|si |okw|we |lo |iwa|o k|i k|le |te |a e|ete|gi |kut|sok|ong|iso| ya|vo |ang| ey|wet|ata|a y|o o|yok|ofe|fek|kuk|ela|a l|ilo| wo|owi|nga|iñg|kul|oka|vyo|uli|u e| va|li |ñgi|kal|wat|ta |u o|eci|ngi|ovo|ye |so | li|oci|yo |wiñ|nde|ga |ing| nd|ili|nge|ci |eye|ala|vya|e k|kol|isa|a a|lom|lon|go |avo|ako|ovi|pan| ol|uka|ngo|lya|ti |o v|akw|yal|olw|uti|imw|eli|alo|ge |ung| ku|a u|lis| al|onj|ati|wal|ale|e l|sa |i v|and| ov| yi|ika|ukw|ele|lil|yos|he | oc|yov|iha|ikw|omb|val|lin|lim|ahe|apo| ka| ye|yom| vo|lik|i l|kok|wav|aka|cih|o e|tiw| ke|yi |i w|ama|e y|lof|yow|yol| ek|kov|ole|vak|vik|tav|omw|a c|upa| el|ila| lo|aso|su |e v|lyu|ava|ñgo|lwa| wa|gis|gol| ce|tis|ave| on| es|po |wil|va |eso|kup|co | la|yam| ak|wam|iyo|ekw|e e|i c|tat|i a|a n|yah|eko|lwi|ita|lit| ec|kwi|upi|i y|epa|kan|kiy|nja|dec|asi|e u|yav|asu|mak|lap|yim|tya|vos|kas|cit| ha|lel|u c|a w|emb|u y|ola|yon| os|win|lye| ca|eyo| uk| ci| ow| yu|ayi|vel|liw|has|iti|sil| et|yuk|o w|umb|ulu|ya |wi |anj|kat|ngu|wom|o a|uva|esu|usu|mbo| co| of|mat|o c|ca |cel|vi |u l|ba |kon|mbe|wiw',tsn:' le|le |go | mo|ng | ts| go|lo | bo|ya |we | di|gwe| ya|ong|ngw|sa |olo|elo|a b|tsa|tsh| e |tlh|a l|o t|e t|a g|e m|wa |a t|o y|eng|na |e l| kg|wan|kgo|mo |o n|tse|a k| tl|ets|ane| ba|dit|mon|ele|hwa|shw|la |ka |a m|nel| na| ka|e d|o l| o |o m|ba |se |e g|e e|bot|a d| a |di | ga|ots|tla|otl| se|lol|o b|tho|so |lho|tso|o g|ang|got|e b|ga |lel|seg|o e|its|gol|ose|ho |oth|let|e o|lha|ego|aba|hab|e k|ano|los|a n| nn| ma|eka|g l|šha|tšh|kan|alo|ola|lhe|ela|aka|sen|gat|tsw|kga| nt|mol|o a|nng|o o|o k|aga|atl|o s|bat|tlo|agi|yo |len|g y|edi|e y| th|g m|dik|to |tir|e n| ja|a a|mel|o d|ana|ire|g k|rel|swe| yo|bon|gag|lek|e s|mot|kwa|i l| te|a s|he |agw|ats|iwa|i k|itš|ona|no |a e|mai|any|lao|ikg|she|ntl|lwa|dir|g t|lon|ale| sa|ao |hel|shi|tle| wa|ume|log|jwa|itl|pe |hir| jw|non|iti|a y|set|hok|ira| ti|odi| me|gi |e j|tek|etl|a p|ko |ath|ala|hol|bod|tet|mog|han|nya| mm|g g|nag|i t|adi| lo|oag|i b|nna| ko|the|lan|re |thu|wen|hot|nyo|hut|o i| ne|pol|me |tum|ope|ame|gan|emo|ore|wel|nts|oko|okg|iro|ro |tha|elw|amo|gor|ing|jal|isi|nan|ogo| it|jaa|si |oga|heo|gon|diw|pa |opa| kw|lat|are|bo |o j| ke|ke |ile|gis|o f|rag| ph|bok|aak|kar|rwa|nye|g a|atš|mok|ago|okw|hag|ate|ato|uto|gwa|mme| fa|fa | op',nso:'go | le|le | go|a g|lo |ba | di|ka |o y|ya | ka| ya|ng | ma|a m| mo| tš|elo|etš|e g|a l|o l| bo|a k|a b|e t|na |o t|tok|wa |e m|a t| ga|la |ang| a | ba| se|man|tše|oke|o k|ša |kel|dit|tša|tho|we |ele|a d|o g|o a|a s|o b|gwe|e d|ho |o m|ego|e l| na|tšh| to|šo |še |oko|ga |di | o |olo| e |let|ong|gob| ye|oba|ago| tl|tšw|mo |e b|re |g l|ngw|aba|tšo|swa|šha|ane|tla|hab|o n|ona|ito|ela| kg|ogo| th|oth|wan|eo |e k| sw|lok|kgo|log|ye |o d|a n|ola|g o|e s|set|hlo|kol|se | wa|lel|ao |eng|o s|šwa|mol| ts|eth|net|ano| bj|a y|o e| ke|thu|hut|šwe|ge |itš|leg|rel|alo|to |ohl| ge|mog|kan|e e|ire|nag|ke |eba|aka|pha|gag|bot|o w|aga|a a|mot|are|mok| yo|gor|oka|ko |gon|no |ore|ana|agw| wo|bon|bat|lwa|tse|bja| ph|din|yo |e r|šeg|e y|ath|nya|get|lao|sa |wo | re|wag|odi| sa|seb| me|utš|oph|mel|iti|kge|ato|kar|o o|šom| la|o f|phe|edi|hir|ala|pol|lat|ušo|i g|a p|g y|the| fi|ume|wel|bop|hel|emo| du|ile|gwa|bo |ale|tle|lwe|lek|ban|ta | lo|lon|o š|dir|mae| mm|tlh|god|pel|a w|weg|eka|elw|atš|išo|aem|šhi| ko|gam|rwa|mmo|boi|e n|ntl|pan|amm|i l|i b|hle|hla|leb| am|šon|jo |len|i s|kop|ret|gel|ing|opa|yeo|dum|sen|e a|ape|ase|kwa|lef|mal|amo|oge|bjo|oik|mon|kga|okg|a f|tsh|boh|uto|ika|ahl|ja |adi|iša|gab|hom|abo',ban:'ng |an |ang| sa|ing|san| ma| pa|ane|rin|ne |ak |hak| ha| ka|n s| ri| ke|nga| ng|man|in |lan|a s|ara|ma | ja|n p|n k| pe|g s|g p|pun|asa|uwe|gan|n m|nin|sal|pan| la|alu|iri|sa |lui|jan|adi|a m|adu|uir|ra |yan|mad|kan|wan|duw|ur |tan|g j|anm|we | tu|nma|ika|awi|nge|ah |tur|ih |ban|ka |e h| ne|n n|en |nte|un |ngs|eng|anu|beb|aya|ani|ana|ian|a p|ala|bas|nan|gsa|ngg|uta| da|gar|aka|eba|da |apa|asi|ama|lih|aha| wa|ten| ut| ta|a n|ebe|are| wi|han|aje|keb|oni|nik|ent|aki|uni|ata|wia|iad|g n| pu|jer|ero|ron|aan|k h|saj|din|sak|a t|nus|dan|n w|pen|usa| ba|ngk| pi|ant|sam|e p|taw|n r|ate|wi |nen|i m|ega|neg|iwa|pat|atu|e s|ami|ipu|g k|ina|mar|kat|kal|aga|sar|ran|kin|per|g r|ndi|arg|ar |ksa|e m|ren|nya|al |tat|ida|ela|h p|aks|ntu|ngu|ado|lak| ny|oli|at |wen|ep |i k| se|dos|h s|n l|dad|gka|eka|a k|rep|eda|n h|par|upa|ena|swa| sw| in|nay|ewa|ung|era|ali|a u| mu|eh |nip|r p|e k|n t|k p|ras|i n|uku|n i|wah|eri|g m|pak|n b|r n|ayo|nda|mal|mi |um |dik|os |osa| mi|yom|na |teh|awe|k r|lar|car|tah|sia|g h|ti | hu|ut |huk|kum|sti|ewe|tuk| me|rga|pin|h m| su|gi |ari|n d|a w|ta |uan|gaw|gen|h r|on |war|tut|lah|pag|gay|r m|n u|ada|ira|a b|ngi|end|kew|g t|min|ggi|gda|jag|as |rap|agu| an|e n|ngd|s k|ila|eta',bug:'na |eng|ng | na| ri|ang|nge|nna|ngn|gng|ge |sen|a r| ma| pa| si| ta| ha|ri |hak|app|tau|ak |au |ddi|a t|ase|edd|ale|a n|nap|gen|len|ass|pa |e n|ai |ria|enn|ega| ru|upa|rup|ias|a a|ing|inn|a s|pun|ngi|nin|e p|ini|nai|ga |lal|gi |sin|ppu|are|ae |ye | ye|ana|g n|sed|ada|le | as|i h|a p|ama|g r|i r|man| se|una|ara|ra |di |ssa|ren|a m|pad|e r|ila|ban|asa| ke|san|din|e a|ura| la|ane| de|nas|e s|i a|ipa|pan|u n|ann|i l| ad|da |ala|aji|ole|att| pu| e |ong|i s| ba|pur|aga|lai|i p|lan|g a|ngs|sal|ola|gsa|g s|a b|i n|ppa|rip| we|a k|g m|asi|wed|akk|mas|i m|ril|u r|reg|g p| pe|ung|gar|neg|sse| po|e m|k h| ar|pas| ne|map|ian| te|nar|pol|ett|ran| ja|bas|eba|jam|beb|ena|par| al|sib|ebe|ngk|uru|keb| sa|ain|ttu| mo|aka|unn|add|iba|sa |gan|gka|nen|bbi|i t| at|atu|kan|nan|uan|leb|rus|de |e d|ton|ata|tu |ssi|ro |e y|cen|kun|awa|ell| wa|k r|mak|wa |uwe|ire|ebb|gag|apa|sae| tu| ia|tte|mat|sim| to|a d|o r|ta |nat|ece|tur|la |ie |dec|ko |kel| di| hu|nca|caj|pak|rel|ma |lu |g t|bol|uku|e e|ter|jaj|tta|we |bir|deg|huk|e h|dan|ure|baw|kol|rit|kko|ele|arg|rga|llu|oe |lin|use|ari|auw|pat|mul|elo|ula|iti|gau|an |u p|nga|g y|a h|ekk|sil|ka |e w|ade|anc|iga|sip|ten|a y|e t| me|nre|aja|ji |rek|a w|dde|per|iko|sik',knc:' a |ro |be |nzə|ye |a a| ha| kə|abe|akk| ka|zə |adə|a n|a k|kki|hak|mbe| la| ad|ndu| nd|wa |ben|en |ma |də | ya|o a|əbe|ə a|ga |e a|əga|lan|əna|lar|aye|aro|kin|inz|rdə|ard|ana|yay| ga|əla|kəl|ji |awa| mb|bej|eji|kən| ba|an |uro|du | na| ku|anz|dəg|nəm|kal| nə|e m|na |gan| du| sh|shi|amb|n k| su|ara|u y| ta|so |a d|kam|wo | ye| sa|e h|a s|sur|aso|au | au|iwa|nyi|kur|a l| da|kar| as|dəb|iya|kiw|o k|obe|e s|ada|ama|and|u a|aa |ta |ima|n n|la |əwa|nga| ci|ba | ab| nz|əgə| fa|ənd|ata|ndo|ya |tə |nza|ə n|ndi|a g|in |nam| fu|ə k|aya|a t|tən|a b|təg|ru |uru|inb|am |e k|al |ida|mga|aar|a h|baa|ə s|nab|dəw|dun|asa|nya|owu|gad|taw|o w|gən|a y|kat|dam| sə|o h|əra|e n|awo|ade|əmk| wa| wo|amg|dən| tə|a f|ala|i a|zəg|o n|uny|iga|zən|əli|wur|u k|o s|wan|za |din|utu|e l|san|i k|uwu|wu |awu|n a|on |de |da |nba|mka|yi |gay|tam| ng|laa|gin|azə|bem|gai|taa|ibe|rad|adi|fut| mə|wow|wak|ali|kun| an|mər|o t|yab|nad|aim|əgi|i n| aw|liw|cid|u s|edə|atə|any|do |apt|lka|alk|dar|rta|bed|tu |ela|ndə|uwo|gal|yir|wum|n y|ayi|n d|mma|zəb| yi|nan|ltə|lmu|ilm|mar|bel|raj| il|ero|m a|utə|enz|iro|alw|uma|umm| um|e g|how|kka|o f| ny| ho|fuw|ə h|ang|tin|zəl|o g|ema|ən |no |a i|a m|wal|əny|iwo|lil|ədə|ə f|rtə|hi |diy|mu ',ibb:'ke | nd| mm|me | ke|e u|ndi|o e| em|mme|de |en |e n|owo| en| ow|wo |i e|mi |ye |emi|nye| un|e e|edi|ene| ek|yen|eny| ed|e m|nen|une|ana|n e|e o|e i| ye| uk|et |n n|eke|na |e k| mb|em |ne | id| es|un |kpu|ede|iet|ndo| nk|o k|di |kpo|ukp|did|am |an |kie|nam|kem|esi|o u| nt|idu|eme|o n|t e|no |yun|mo | uf|ho |mmo|nyu| in|o m|kpe|o o|sie|oho| kp|do |din|ie |ono|kpa|m e|ri |nkp|dib|on |e a|uke| ki|boh|a k| et|po |ida|dut|m u|ked|ded| ub| of|ond|ru |uru|pur|in |ut |du |eko|a u|ina| ot|mbe|n o|bet|iny|man| ak|op |idi|ikp|i o|edu|kon|ade|om | us|uan|wem|a m|uwe| uw|puk|ak |ode|ro |t m|a e|oro|a n|n k|u o|to |te |bo |akp|ufo|ok |dik|pan|mbo|bio|i m|ide|ini|fur|uri|ban|ofu|ubo|n i|o i|uto|iso|dom|omo|ema|diy|fen| nw|dis| ny| is|ni |usu|n m|u u|fin|tom|eto|pem|ed |m m|ibo|oto|o a|sua|wed|nwe|m n| ut|mde|dud| eb|ara| as|i n|oki| ob|nte|mok| ik| an|kar|m k|o y|t k| on|i u|nwa|n y|asa|ama|re |ufi|uka|io |nek|i k| or|pon|top|sun|ion|se |aha|t o|k n|e y|ere| ef|mba|mad|isu| mi|kor|ra |ian|i a|ka |a a|k m|ko |da |t i|ena|obi| ey|ha |dia|ti |aba|uk |u m|d e|dem|san|a o| se|pa | ab|tod|n u|p m|ude|fok|k u|efe|uku|nti|nka|ibi|son|he |pe |nto|dak|a y| od|nde|eye|anw|ndu|mbu|so |ebi|bie|nda|sin|med|tu ',lug:'a o| ok| mu|oku|mu |wa |nga| ob|ga |tu |ntu|a e|na |bwa|a a|ang|ra |aba| n |ba |a m|wan|a n| ng| ab|li |obu|unt|a k|era|ibw|dde|oba|a b|u n|za |la |mun|ban|ali|ka |emb|iri|bul|ate|mbe|i m| ek|tee|eek|uli| bu|u a|edd|sa | ku|ant|ana|eki|u b|be |dem| eb|ama|n o| om|ira|omu| ki| ed|ye |ala|amu| am|e o|gwa|nna| er|kuk|y o|kwa| en|okw|eer| ly|inz|ula|kus|kir|u e| ba| em|eri| ky|any|onn| wa| ye|ggw|ina|kol|n e|awa| bw|uyi|u k|eka|yo |bwe|ola|o e|usa|o o|kwe|mus|yin|bal|i e|u m|ngi|e m|bir|riz|ere|ri |ebi|kul|aga|nza|kub|ekw| eg|ko |a y|u o|we |kut|mat|e l|e e|a l|aan|ger|no |kan|sin|nka|gir|uso| at|a g|iza|gan|nyi|zes|uku|wo |nge|zib|isa|izi|ya |egg|ufu|rir|lin|wam|wal|eby|a w|i o|bee|oze|esa|eta|iko|ebw| ma|ako|bon|tuu|kin|uki|de |zi |kug|yen|ino|e b|obo|aka|ulu| te|ne |lwa|ma |y e|lye|kuy|nsi|i y|gi |utu|ly |imu|e n|taa|asa|enk|ku |o n|o b|sob|si |una|bun|usi|san|e k| ag|uka|uga|ata| ol|rwa|wen|ing|wat|kik|o k| by|nya|ong|kye|by |kyo| bo|ewa|yam|bye|ubi|ngo|kis|ani|boz|kit|i n| aw|ky | al|sib|muk|awo|uko|umu|ibi|uma|afu|olw|eky|tab|ung|buy|ini|uum|saa|y a|lal|mag|ro |end|add|enn|kib|ens|ole|ni |mbi|o a|i k|gat| og|maw|and|kuu|a z|wet|igi|yig|emu| ne| gw|a t|nzi|n a|gya|amb|uwa|ulw| ey',ace:'ng |an |eun|ang| ha|peu|oe |ak |on |nya| ny|yan| ta|ngo|ung|gon|na |ah | pe|reu| ng| ba| ke|hak|meu|keu| me|eut|at |ure| na|ban|ee | di|teu|roe|ata| ur|ara| be|seu|han|a h| sa|am |dro|eur|um |n n|tie|iep| ma| la|ala|nan|g n|ut |ong|a n|ep |tan| te|tap|jeu| ti|eul|eub|eu |eug| da|eum|eh |euk|ra |ih |n p|uga|ai |n b|a t|e n|lam|eba| se|beb|n t|awa|om |a b| ka|asa| at|eus|and|nyo|oh |ta |ka |h t|n k|p u|man|e t|n d|n h|ana|dan| pi|ape|a s|neu|nda| si|t n|bah|ula|yoe|a k|h n|dum|euh|g d|e p|eng|e b| le| pa|ngs|sia|ran|ma |g k|un | wa|ndu|lan|una|heu|ura|n m|lah|sa |n a| ra|aba|g s|a p|ia |und| je|wa |kat|bak|k n|anj| dr|asi| bu|nga|beu|uny|yar|sya|hai|k m|k t|k a|ama|aan|ek |a m|ok |g h|aka|sab|g p|i n|uta|khe|h p|ue |uka|har|ari|di |e d| su| um|t t|a l|ya |san|e s|gan|uko|gsa|e u| li|kan|bat|lee|aro|ot |n s|leu|ina|h d|lak|oih|yat|n u|kom|pat|ate| ne|ngg|nje|taw|mas|uma|sid|anu|umu|aja|si |uh |h m|rat|aya|sal|et |soe|t b|n l|aga|taa|usi| ja|ute|m p|en |dek|ila|a d|ube|dip|gam|any|lin|tam|don|ika|usa| ji|rak|idr|h b|nus|adi| as|dar|ame|n j|ngk|m n|eup|h h|bue|k h|huk|euj|g b|gar|eka|gah|upa|ile|sam| bi|h s| de| in|mum|‐ti|t h| hu|k k|pho|dil|ep‐|nta| ge|geu|h l|hat|ie |tha|use|ieh|sas',bam:' ka|ni |a k|ka |an | ni|kan| bɛ|n k| la|i k|ya |la |ye |ɔgɔ|na | ye|bɛɛ|ɛɛ |en |li |sir|ɛ k|ama| ma|ira|a d|ra |ali|’a | da|man|a n|a b| i |ma | kɛ| wa|gɔ |wal|mɔg|ana|n n| ba| ja|ɔrɔ| mi| kɔ| k’| mɔ| jo| si|min|iya|dan|len|i m|’i |in |kɔn|ko |aw |den| sa| o | n’|ara|bɛ |i n|jam|ɔnɔ| na|ɛrɛ|a s|i j|ani|n b|a m|i d| fɛ| tɛ| an|osi|jos|a y|kɛ |a l|iri| ko| di|ɛ b|ada|ila|ɛ m|i t| fa|nɔ | de| ha|asi|tɛ |ari|a j|raw|a t|ɛ s|ale|a f|tig|ɛn |aya|dam|a i|i b|sar|si |riy|ɲa |n y|nu |inn|e k|ɔn |rɔ |ang|a w|o j|w n|nnu|k’i|nti|nɲa|ade|abi|bil|ala|hɔr|kal|had|igɛ|i s|a a|mad| a |aga|u k|kab|a ɲ|aba| ti|olo| hɔ|o b|ɛ j|i f| ta|ɔ k|aar|baa|ɛ n|n’a|kun|ugu|iɲɛ|diɲ|n j|k’a|a h|rɛ |ati|ɔ m| se| cɛ|ɲɔg|bɔ | tɔ|i y|lan|i h| ɲɔ|tɔn|don|nɛ |inɛ|ga |i l|ɲɛ |ile| fo|o k|ɛ l|nna|ili|un |gɔn|maa|fɛn|n d|ant|n i|aay|go |da | jɛ|u b|ri |rɔn|aka|lak|ɔnɲ|e m|ɔ b|nin|nw |cɛ |w k|yɔr|n o|o f|nga|jo |o m|nen|n’i|on |ɛ t| ku|o l|igi|ɲɛn|anb|fɛ |ɔ s| bɔ|n m|e b|afa|nka|n f|nma| fi|’u |ɔ n| ɲɛ|fan|i ɲ|ti |a o|dil|ɛ d|uya| sɔ|ago|ɛ y|e f|ɛmɛ|mɛn|aju|e d|bɛn| jɔ| fu|til|bag|fur|n t|uru|kar|atɔ|be | d’| du|d’a|oma|lom| u | do|riw|taa|w l|mɛ |gɛ |imɛ|n w|iir|nni|iim|amu|so |bal| ɲa| b’|gu |ɛɛr|’o |iwa|n s|wol|ele|ɲan',kmb:'a k| ku|ya |la |ala| mu| ki|a m| o |u k|ni |o k| ni|kal| ky|mu | ya|lu |dya| dy|a o|ang|kya|a n|tok|i k|oso|so |kwa|nge|xi |na |elu|nga| kw|wa | wa|a d|hu |kut|thu|uka|oka|mut| ka|a i|mba|uth|ka |gel|ba |u m|u y|ku |ene|u n|ga |kuk|ban|ixi|i m|e k|wal|oke| mb|kik|kel|ne |u w|ela|uto|i y|ana| ng|iji|a y|kit|ma | ji|nda|ngu|yos|kum|ulu|ji |i d|isa|und| it|and|ong| mw|u i|iba|ika|wen| di|ten|ilu|ila|ndu|ye |sa |kub|aka|ena|amb|ung|olo|a w|ngo|kil|oxi|lo |muk|ke |sok|du |mox|ate|o w|kus|wat|ta | wo|gu | ph|u d|ito|ita|e m|alu|a j|kis|tun|uma|wos|luk|o m|san|mwe|a a|di |imo|ula|wan|nji|jix|i j|a t|kij|idi|kan|uku|gan|kul|e o|kye|adi|ato|o i| ja| ix|da |nu |o n|uta|kud| yo|i n|udi|ki |su |tal|a u|lun|e y|u u| ye|jin|iki|pha|hal|wij|we |a s|lak|ikw|go |tes|fol|itu|eng| ke| uf|yen|ing|yat|ele|utu|kyo|o y|kwe|kwi|uba| en|kib|ite| we|dal|i o|yan|ge |eny|tan|uki| ik|dib| im|esu|lon|kat|atu|e n|ja |i u|jya|vwa|kam|i w|ute|ini|uke|lel|esa| se|xil| ut|fun|unj|ufo|mbo| a |uso|kim|mun|u p|nen|ukw|u o|i i|umu|han|gon| il|lan|ata|te |i a| ko|jil|o a|nde|nyo|eka| at|o d|exi|ijy|tu |usa|tul|kuz|ilo|dis| un|u j|dit|ufu|ote| ib|ivw|mwi| bh| ha|se |bul|ubu|win| os|imb|bha|ama| to|axi|inu| uk|sak|kos|bot',lun:'la | mu|ng | ku|a k|tu |ntu|chi| ch|a n|aku|di |mun|ma |unt|a m|g a| a | na|ela|ndi|aka| we|ima|jim|shi|eji|u w|i k| ni|ind|wu |i m|a w| in|a i|u m|hi |awu|na |kul|wej|lon|cha| ja|sha| kw|a c|i n|nak|ala|mu |wa |ing|ka |ung|kum|a h|ulo|him|mbi|muk|u c| wa|hak|iku|nsh|yi | ha|bi |amu|imb|ewa|wen|kwa|ang|adi|idi|kut|esh|ana|g o|ila|ha |tun|u j|ong|nik|kuk|tel|ovu| ov|u n|han| an|ate|vu |a a|kal|ula|kwi|jak|u a| ya|a y|ilu|u k| he|ham|and|uch|kus|ond|eka|hel|kew|zat|del|hin|uku|nde|i j|enk|i a|uka|eng|ach|lu |nat|nji|ona|mon|awa|nke|umo|ins| yi|a d|ama|udi|wak|i h|ati|i c|wan|ta |bul|mwi|ata|ayi| ak|uma|i y|ina|ich|itu|uza|kuz|nin| mw|ku |kin|wun|sak|naw|nyi|ni |ant|muc|wal|ish|u y|mul|kud|waw|uke|wes|uki|i i|kam|yid|wit|da |akw|kad|yan| di|ken|uta|ika|imu|iya|nda| ns|mbu|ya |ule|dil|iha|kuy| ko|hik|eni|ahi|kuh|si |kun|ush|umu|atw|g e|his|dik|ji |any|li | ye|dim|kos|osi|hih|wat|eyi|ney| ne|amb|twe|til|wil|nu |kwe|u h|etu|tiy|ja |nan|ash|mwe|win|was|hit|iti| wu|iwa|wah|lem|g i|tam|din|hu |haw|nga|kay| ka|hid|yin|isa|iki| ma|jaw|jil|che|mpe|omp|eta|tan|jin|hiw|usa|umb|eme|inj| hi|ulu|ubu|nam|wik|mpi| da|ale|ite|tal|twa|ahu|end|nka|mba| at|ga |mes|dic|iwu|yej|kan|kuc|iyi|sem|emb|lun|una',tzm:'en |an | ye| d | n |ad |ur | ad|n i| s |agh|ḥe|n t| i |dan| ta| lh|lḥ|d y| gh|ell|n a|ra |̣eq|i t|eqq|s l|mda|ett|n d|d t|akk|la | ti|qq |hur|di | di| am|gh |ghu| is|t i|r s|in |nag| na|a y|is | te|a d|n n|yet|n g|ll |ara|ghe|ma | we| ar| wa|n s|l a|n l|sen|edd| ak|it |li | le|dd |ull|lla| id|d a| ur|rfa|erf|kul| yi| ku|as | se| ma|zer|amd|a n|lli|lel|men|t a|kw | de|t t|nt |kkw| im|fan|a i|a t|eg |n w|i d|q a|rt |ar |gar| ag|es | tl|ize|emd|i w|i l|deg| as|ken| dd|n u|lan|d i|a a|wak|tta| tm|d u|er | tu|wem|at |ddu|tle|w d|n y|t n|sse|r a|mur|s t|tam|gi | tt|yes|wan|r i|tim|na |wen|twa|d l|ttu|kke|wa |nen| iz|iḥ| u |win|d n|ame|s d|ent|ḍe|hel|a l|hed|ess|t d|mga|arw|i n|ḥu|mi |mad|agi|i g|der|udd|s n|rwa|̣en|awa|i i|ya |h d|iya|s y|msa|uḥ|idd|urt|un |n m|ane|em |sef|lsa|ili|q i|qan|leq|siy| ik|el |err| in|yed| la|ant|den|tag|man|g w|mma|yen|len|tmu|i u|aw |taw|r y|wad|edm|ṣe|hla|t l|̣er|ala|asi|ef |u a|tte|ddi|ttw| lâ|imi|l n|til|al | ne|am |̣ud| lq|iḍ| ya|dda|̣ṛ|med|ren| ss|gra|m a|ghl| il|chu|tem| ll|khe|way|eln|lna|ana|ukl|duk|gha|lt |ni |all|i a|tal|ray|nes|s k|tes|naw|ert|ila|awi|lqa|kra|anu|nun| kr|ikh|ezm|n k|iwe|iwi|ima|net|ser|s u|ir |yeh| an|aya|ehw|hwa|esk|dde',war:'an |ga |nga| ka| ng| pa| ha|han|pag|in |ata| hi| an|mga| mg| ma|kat|hin|a m|ay |a p|ya |ung|a k|gan|on |n h|n n|ug |n p|n k| ug|n m|da |a h|n i|ha |iya|adu|dun|tad|a n| ta|ada|sa | iy|ara| na| di| o |pan|may|a t|ang|ud |ana|n a|o h|o n|taw|n u|ags|yon|y k|al |tag|asa|kad|o p|man| ba|awo|gsa|wo |ag |gad| in|a a|a u|ina|syo|a i|a s|od |ing|agp|ala|asy|ngo|n b|ali|nas|san|aka|a d|ra |g a|was|g h|aha|gpa|agt|to |ad |n t|tun|ng |usa| wa| tu|ini|iri|tan|ahi|kan|ray|nal|war|dir|i h|gka| us|god|g p|ri |a b|nan|ida|o a|i n|bal|y h|kas|uga|hat|tal|nah|awa|ni |pin|uha|buh|o m| bu|gud|aba|at |no | pi|bah|g m|ili|him|aya|atu|d h|agi| su|agk|lwa|mo |d a|alw|sya|uma|ano|int|kal|upa|mag|yo |o u|agb|n d|asu|lin|a o| ko|ona|did|hiy| bi|as | ki|l n|sud|iba|hi |o k|kon|ira| la|gba|pam|amo|g i|ton|gin|n o|uro|ho |os |la |g k|gtu|d m|aud|aag|t h|gi | gu| ig| ir|n g|abu|aho|ami| sa|ati|par|kau|ern|ban|tra|gar|ama|ras|yan|adt|tum| un|ka |aga|aso|api|dto|kin|tik|mil|iko|rin|sal|ika|a g|ila|mah|lip|rab|non|agu|ak |dad|lau|d n|ko |it |pak|n e| ti|una|i m|lig|s h|bay|ro |sug|mak|n w|naa|g n| so| ag|yal|nte|lal|ba |aup|lan|ihi|y b|kah|tub|bye| am|ari|yer|uka|ani|uyo|oha|ito|n s|upo|ent| pu|sam|iin|til|mat|ato',dyu:'a’ | kà| ká|kà |ye | ye| à |ya’|ni | bɛ|kán|la |án |ya |ɔgɔ| ni| la|ɛɛ |ká |na |a k| mɔ|bɛɛ|mɔg| i |nya|á k|n k|ɔrɔ|’ k| mí|’ l| kɛ|mín|’ y|ín | mà|à k|ɛ k|’ m|ma | ya|à m| wá| jà| ní| be|be | ò |i y|ní |i’ | lá|ra |iya|ɛrɛ|n’ |n n| há| kɔ|te |wál|àma|jàm| te|áli|a b|ima|man|à à|hák|e k|lim| kó|ɔnɔ|mà |n b|i k|ɛn |gɔ |e b|n y|ɔ’ |ana|’ n|o’ | sà|ɛ y|’ s|kɛ |à l|rɔ |e à|kɔn|li’|àni|a m| dí|aw |rɛ |ɔ k|’ b| bá|à b|a à|ákɛ|riy|e s|gbɛ|nɔ |a j| bɔ| ù | sɔ|bɛn| sí|à y|sàr|e m|ara|kó | fà|à s| àn|dún| là|en | sì|an’| fɛ|úny| dú|a n|a y|ɛya|àri| gb|in |kɛr|kan|’ t|dí | cɛ|nin|yaw| tá|na’|e w|mìn|ìna|lá |ɔn | mì| ɲá|à d|ali|n m|yɛr| yɛ|sɔr|gɔ’| tɔ|ama|báa|nga| dà|i m|i à|sìg|ìgi|yɔr|gɔn|w n|áar|a d| sé|ána|àng|len|à i|si |ɛra|á d|bɛr|a s|bɔ |ólo|a h|i b|ɔ s|ɛ l|den|ɛ’ |à t|àra|ɔya|gɔy|kɛy|ógo|u’ |aya|’ d| má| dɔ|ra’|a f|ɔny|’ f| ó |ili|sí | se|se |ko |cóg|a t| có|dén|hɔr|ɔɔn| hɔ|ma’|lan|ika|ina|kàl| a |àla|n s|ɛ m|i t|rɔn|tig|ànt|a w|tá |e n|i s|à n|nna| í |’à |ò k|a g|n d|an |ga |fɛn|ɔ à|li |e i|ɛɛɛ|kél|ati|so’| yé|i f|áki|dàn| k’|i n|k’à| nà|í i|í à|lik|yé |igɛ|e’ |e ò|go | lɔ| na|ɔ b|w l|í t|rɔ’| dò|ò b|min|ti |àga|ow |n t|mad| mi|ò l|éle|gi |ɲán|í y|kil|dɔ |nba|i ɲ|gu | wó|ɛli|i l|úru',wol:' ci|ci | sa|am |sañ|añ | na| ak|ak |lu |it | mb| am|aa |na |al |ñ s|ñu |ne |mu |te |pp | ne| ko|m n|i a| ku| ñu| te| mu|baa|u n|ko |u a|mba|a s|e a|ay | wa| lu| do|ar | ni|u m|nit|oo |épp| ta|oom|gu |t k|i b|ku |u k| it|éew|rée| ré|u y|xal| aa|kk |i d| bu|doo|i w| bi|war|u c| yi|aay|llu| li|fee|loo| xe| xa| ya|taa| di|yi |ama|on |u j|yu |eex|ew | yo|boo|xee| bo| wà|àll|wàl|mi |o c|ir |mën| më|yoo|ul | gu|nn |en |oot| du| so|oon|e m|dam|een|u d|i n|uy |eet|i m|ara| ba|bu |a a|ata|okk|aad| lé| ay|ju |ada| nj|nam|und|axa|dun|m a|enn|r n|aar|ex |taw|ala| jà| pa|et |di |ën |ana|ral|ota|k s|awf|naa|wfe| gi|u l|igg|aju| dë|ma | aj|ti |u t| se|ax |gée|mbo| ja|ool|bii|li |a m| ke|see|m c| ye|i l| ng|yam|ngu| yu|w m|an |ken|n w| lo|i s| me| de|m m|i t|om |u x|n t| an| mi|jaa|laa|ee |bok|lig|p l|n m|t y|ggé|k l|a l|lép|àpp|jàp|aam| jë|aax|ekk|nd |góo|ewa|ndi|tax|a d| da|amu|éey|gi | su|k c|n n|l b|o n|k t|p n|jàn|àng|gir| jo|a c|n a|n c|ñoo|i ñ|a n|kaa|ba |m g|le |une|kan|e b|la |nda|lee|i j|ang|aat|k n|ey |ant|iir|a y|l a|e n|nan|añu|men|j a|ok |k i|nee|l x|omi|i c|oxa|aw |g m|dox|nte|opp|u w|ngi| mo|omu|y d|are|i k|aan|em |du |a b|njà|ñ ñ| ti|m r|kun|ddu|ali| së| la|eg | ma|ëra|ng |xam|mul',nds:'en |un |at |n d| da| de| un|een|dat|de |t d|sch|cht| ee| he|n s| wa|n e| vu|vun|ech|rec|ht |er |ten| to|tt | si| re|ver| ge|nne|t w|n w|ett|n h|n v|k u|n u| el|gen|elk|lk |t u|ien|to |ch | ve|wat|sie|war|het|it | an|n f|ner| mi| in|ann|rn | fö|ör |r d| fr|t r|hte|orr|ich|för| sc|rie|eit| or|den|nsc|ege|fri|rer| st|t g| up|aar|t a|nd | is|ll |rre|is |up |t e|chu|rt |se |ins|daa|lt |on |t h|oon|che|all|n g| ma|rrn|min| se|ell|hei| na|t s|n i|n a|nn |len| sü|in |rd |nen| we| bi|n m|e s|ven|ken|doo|sse|ren|aat|e m|ers|n t|s d|n b|lle|ünn|t t|n o|ik |kee|e g|t v|n k|hen|arr| dr|heb|lie|ebb|e v| al|e a|llt| ke|hn |he | wi|cho|ehe|ok |ard|sta|men|ill|gel|tsc| ok| do|an |düs|ene|erk| gr| dü|weg|ie |ede|ieh|r s|sün|üss|und|raa| dö|röf|drö|t m|ats|öff|e f|ünd|e w|dör|ens| gl|rch|sik|ig |kt |örc|ere|gru| ün|ff |ahn|nre|mit|st |al |aal|hon|ert|kan|nat|der|dee|enn|run| so|eih|lic|ehr|upp|iht|nwe| fa|pp |eke|e r|unw|t n|taa|hup| ka| be|bbt| wo|p s|el |as |t f|bt |e e|nee|maa|huu|eve|nst|ste|mee| ni|inn|n n|ern|iet| me|hör|dde|ent|n r|t o|öve|are|arb|ite|ter|l d|ach|nic|bei| as|lan|t b|d d|t i|ang|ame|rbe|utt| ut|pen| eh|uul|iek|hr | ar|r t|ul |e d|art|n ü|one|eer|na |nte|mut|ete|üd | mu|üüd|lüü',vmw:'tth|la |thu|a e|na |hu |kha|a m|we |ana| mu|a o|awe|ela|ni |ala|hal|edi|to | ed|ire|dir|eit|ito|rei|ya |a n|wa |mut|a w| wa| ni|akh|aan|u o| on|o y|okh|utt|a a|haa| n’|wak|nla| wi|ari| yo| si| ok| ot|iwa|ka |iya| sa|ne |apo|lap|ale|le | oh|oth|att|the|mul|aka|oha|kun| el|aku|oni|mwa|ha |e s|unl|tha|ott|ele|ett|e m|o s| va|ene|e n|e o| ya|oot|hav|ade|ihi|iha|ihe|de |o o|e a|eli|hen|amu|e w| aw|hel|dad|ra | at|po |i m|lel|wi |o n|owa|e e|ula| en|ta |o a|i a|moo|waw|ina| ak|ota| mo|sa |a s| so|han|ara|var| kh|a i|ri |aya|itt|anl|row| mw| et|i o|ika|’we|nro|i e|n’a|her|lan|nak|sin|lo |elo|vo |u e|eri|n’e|oli|thi|u a|a’w|ida| ah|a v|liw|kan|him|lib|yar|riy|ona|onr|erd|wal|hiy|aa |ibe|rda|wan|ber|era|avi|hiw|nna|i v|hwa|lei|mih|vih| ep|khw|ntt| na|ko |ia |sik|aha|iwe|e k|hun|una|mu |avo|ikh|laa|riw| ma| an|e y|kel|’el|huk|u y|phe|kho|pon|i s|nid|upa|ath|ila|yot|eko|ali|tek| es| it|o e|uku|wih|nan|tte| a |mur|’at|i w|ani|ulu|nih|wel|lik|ira|ane|a y|nkh|saa|ro |n’h|wir|i n|ile|som|u s|hop|inn|ei |ont|kum|yaw|saw|iri| eh|tel|tti|ola|aki|mak|ret|uth|nnu|a k|nuw|ahi|enk| il| nn|ena|va |yok|ute|soo| pi|lal|ohi|hik|mpa|uwi|lih|har|kin|aph|ma |ope|man|ole|uma| oo|mpw| v’|nal|ehi|nin|uni| ek|khu',ewe:'me |ame|e a|le |wo |kpɔ| am|ɖe |ƒe | si| me| wo|be |si | le|sia|esi|la | la|e d| ɖe| kp|pɔ |aɖe|e l| be|e w| ƒe|e e|dzi|na |nye|a a| du|ye | ŋu| na|duk| dz|ukɔ|e s|ome| mɔ|e n| aɖ|kpl|nya|gbe|e b|e m|ple|ɔkp|ɔ a|pɔk|woa|ɔ m|kɔ |evi|nɔ |ŋu |ke | nu|ɔ l|mes|awo| o |iwo|ɔnu|e ɖ| ab|ya |ekp|e k|ɔwɔ|u a| al|nu |ia |ɖek|e ŋ|kpe|ɔme|o a|iny|zi |dze| ny|o k|eme|eƒe|o n|iam|egb|mɔn|blɔ|i n|wɔ |a m| eƒ|o d|alo|siw|ɔɖe|lo |o m|eke|e g| bu|eny|ubu|ŋut|ɔ s|bub|lɔɖ|enɔ|meg|akp|abl| ha|e t| ta| go|mek|eɖo|ukp|li |nɔn|to |any|a l|etɔ|ɔ ƒ| ey|e h|nuk|gom|ɔ ɖ|ɔe |bɔ |ɖo |i s| to|anɔ|a k|ɔnɔ|e x|awɔ|e ƒ|tɔ | ƒo|mev| es| ɖo|ɖes| xe|i w|tso| wò|wɔw|mɔ |iaɖ|i l| ag| li|ã |o ƒ|odz|a s|agb|yen| ts|bu | he|bet| gb|o e|ewo|a e|ɔna|i d|ti |ele|dɔw| ka|i a|uti|peɖ|ta | an|afi|a ŋ|a ƒ| ad|ƒom|se |ɔwo|xex|exe|oma| ma|vin| dɔ|o l|wɔn|eye|a n|i t|vi |ɔ b|so |edz|gbɔ|ɖev|ado| se|ɔ n|oto|ene|eɖe|xɔ |nan|ɖod| af|ben|zin|ee |de |ɖok|dzɔ|gɔm|adz|ɔ k|wom| gɔ|uwo|i ɖ|a d| vo|a t|o g|i b| xɔ|oɖo|i m|e v|ats|o ŋ|sɔ |ovo|i e| at|vov|ne |ɔ e|kat|o s| ne| aw|da |wòa|eŋu| as|asi| el|o t|yi | sɔ|men|a b|ze |mee|uny|te |dom| ak|man|ẽ |i o|ie |ana|ata|ui |axɔ|u k|ɖoɖ|tsi|ema|rɔ̃|ded|ɔ g|ena| en|kɔm|met|u s| eɖ|oku|kui|mew|xem',slv:' pr|in | in|rav|pra|do |anj|ti |avi|je |nje|no |vic| do|ih | po|li |o d| za| vs|ost|a p|ega|o i|ne | dr| na| v |ga | sv|ja |van|svo|ako|pri|co |ico|i s|e s|o p| ka|ali|stv|sti|vsa| ne| im|sak|ima|jo |dru|nos|kdo|i d|akd|i p|nja|o s|nih| al|o v|ma |i i| de|e n|pre|vo |i v|ni |red|obo|vob|avn|neg| bi|ova| iz|ove|iti|lov|ki |jan|a v|na | so|em | nj|a i|se | te|tva|oli|bod|ruž|e i| ra| sk|ati|e p|aro|i k| ob|a d| čl|eva|rža|drž| sp|ko |i n| se| ki|ena|sto|e v|žen|nak|kak|i z|var|ter|žav| mo|di |gov|imi|va |kol|n s| z |mi |ovo|rod|voj| en|nar|ve | je|pos|a s|ego|vlj|jeg| st|h p|er |kat|člo|ate|a z|enj|n p|del|i o|lja|pol|čin|a n|ed |sme|jen|eni| ta|odn| ve| ni|e b|en | me|jem|kon|nan|elj|sam|da |lje|zak|ovi|šči|raz|ans|ju |bit|ic | sm|ji |nsk|v s| s |n v|tvo|ene|a k|me |vat|ora|krš|nim|sta|živ|ebn|ev |ri |eko|o k|n n|so |za |ičn|ski|e d| va|o z|aci|cij|eja|elo|dej|si |nju|vol|kih|i m|nst|kup|kov|uži|la |mor|vih| da|h i|lju|otr|med|o a|sku|rug|odo|ijo|dst|spo|tak|zna|edn|vne|ara|ršn|itv|odi|u s|čen|boš|nik|avl|akr|e o|vek|dno|oln|o o|ošč|e m|ta |vič|bi |pno|čno|mel|eme|olj|ode|rst|rem|ov |ars| bo|n d|ere|dov|ajo|kla|ice|vez|vni| ko|ose|tev|bno|užb|ava|ver|e z|ljn|mu |a b|vi |dol|ker|r s',ayr:'apa|nak|aka| ja| ma|ata|ana|aña|asi|aqe|cha|aki|ñap|jha|mar|aw |kan|ark| ch|una|aru|paw|ti |jh |pat|jaq|rka| ta|a j| ar|hat|ama|tak| wa|ach|iw |a a|ani|a m|spa|na |kap|ki |taq|pa |jan|sa | uk|qe |kis|kas|ha |ina|niw|may| kh| am|at |ati|pan|i j| ya| mu|iti|ka |ayn|t a|as |amp|ch |a u|an |pjh|yni|mun|iña|uka|ajh|ru |w k|hit|ñan|h a|is |isp|qen|khi|isi|has|ejh|e m|sis|atä|oqa|nch|rus|kam|siñ|han|mpi|kañ|qha|sin|asp| in|ham| uñ|ñat|hañ|qat| sa|yas|yat|ita|äña|ska|tap|asa|kha|sit|täñ|tha|arj|ma |a t|ta |tas|nka|sti|iri|sna| ji|a y|ara|pas| as|ñja|rjh| ku| ut|hap|tat|kat|tis|pi |apj|jam|noq|aya|i t|i u|ukh|ura| ka| ju|ans|qas|uñj|asn|a c|nin|aqa|kaj|nañ|sip|i a|us |i m|kun|w u|anc|api|ino|ili|uya|pac|tan|jil|ña |lir|utj|w j|s a|ipa|chi|kiw|w m|kak|muy|pis|rak|hac|isa|njh| lu|mas|amu|ena|nsa|w t|nan|ali|s j|ink|tay| a |upa|wak|a k|way|wa |in | ay|tañ|s m|jas|mp |lur|ank|khu|rañ|h j|t m|iru|eqa|ayt|yt |heq|che|anq|en |lan|rin|ipj|i c|mat|qpa|aqh|tja|awa|uki|k a|qej|anj|sap|pam|usk|yaq|kar|nip|llu|wal|run|yll| aj|lin|a w|ayl|n m|jac|isk|naq|ast|h u|ni |ath|a i|ayk|jhe|aqp|h k|uch|inc|hus|sar|s u|s w| pa|nap|ap | un|ak |n j|tir| ak|ns |s c|ust|arm|ask|war|ri |man|pit|qer|juc|sir|n w|hik|ika',bem:' uk|la |uku|wa |a i|a u| mu|kwa|ali|ya |shi|a n|amb| na|sam| pa|ula|ta |nsa|fya| no|nga| ya|mbu|bu |ata| in| ku|a m|lo |se |nse| ba|ntu|kul|ons|ala|ang|ins|aku|li |wat|mo |tu |alo|a a|ngu|ili|nok|ika|na |nan|a p|ing|a k| al|mu |gu |o n|sha| ca|ila|oku|e a|ikw|yak|ka |lik| um|ana|lin|yal|ga | ci|aba|lwa|ku |ish| fy|uli|a b|u u|unt|i n| on|kal|lil|u y|ba |hi |ukw|amo|po |ulu|kan| sh|kup|ko |we |and|a c|aka|le |u n|cal|o u|ha |ile|ama|umu|bal|kus|akw|u m|mul| if|o a|kut|nsh|o b|ung|apo|e n|kub|mun|uci|yo |mbi|nka|cit|bul| ab|any| bu|pa |ne |u c|u b| ka|abu|ndu| fi|e u|a f|ton| ne|ant|no |i u|u a|ban|o i|cil|cin|ify| ng|pan|tun|gan|nda|kuc|kwe| ns|o c|ngw|o f|ans|fwa|a l|pam|tan|ti | am|kum|kuk|lan|u s| is|wil|du |nya|und| ic|e k|wal|aya|bi |bil|ubu|ush|fwi|int|nta|utu|twa|wab|afw|ela|o m|uko|ako| ta|lam|ale|gwa|win|u k|apa|ma |onk|way|kap|i k|imi|a o|upo| im|iwa|mba|o y|ngi|ici|pak|lul|ind| ma|e p|de |nde|gil|e b|iti|uti|ilw|a s|imb|da | li|uka|hiw|umo|pat|afu|kat|ine|eng|fyo|bun| af|uma|kuf|alw|til|ita|eka|afy|mas|e y|tul|but|nto|usa|kwi|mut|i i| ak| ap|bom|umw|sa |ont| wa|ilo|u f|baf|fik|ina|kab|ano|pal|ute|nab|kon|ash|bwa|ifi| bo| bw|lya|atu|ubi|bik|min|aik|cak|nak|men|ubo|ye |hil',emk:' ka|a k|ka | la| a |la |an |kan| ma|a l|ni |ya |na |ama|a a|lu |n k| di|ɛɛ |di |a m|ma | bɛ| ja|ana|a b|aka|bɛɛ|man|iya|a d|ara|dɔ |jam|alu|en |a s| si| sa| mɔ|mɔɔ|ani| ye| dɔ| tɛ|ye |i s|i a|den| ba|riy|tɛ |sar|ɔɔ |da | al| kɛ| ni|ari|ila|a j| i |a t|n d|ɛn |ɲa |kak|ra |ada|ɛ k|i k|i d|len|u d|ele|nna|sil|n n|n m|olo| se| bo|ade|aar|ɔdɔ|ɛ d| kɔ|ɔ a|ank|ɔn | fa|fan|a ɲ|se |lak|lo | da| na|bol|kel|e k| wo|i m|aya| ke|ko | ad| mi|nu |baa| sɔ|dam|nda|ɔnɔ|mɛn| ko|a f|and|ala|ɛ y|ɔ b|ɛ s|le |ɛ m|i l|i b| wa|n s|a i| de|ina|li |ɔya|mad| mɛ|aba| le|n a| ha|a n|ɔ s|u l|nɲa|han|n b|sɔd|dɔn|kɔn|kɛ |ata|nɔ |kar|dan|in |u k|ɔ m|kɛd|ɛda|i j| su|nnu|a w|ɔ k|nka|lat| gb|ɲɔɔ|aji| an|a h|nin|olu|u m|kun|a g|on |asa| ku|ibi|jib|don| lɔ|i t|waj|bɛn|ɛnn|ban|ɔrɔ|wo |ran|si |ɛ b|ɛnɛ|ɛ l|mak|suu|e m|ii |i f| ɲi|e a|o m|ɲin|enn|usu|ba |ɛdɛ|yan|taa|nan|u b|u t| ɲa|nal|nba|ɲɛ | ɲɔ|law|ati|nad|rɔy|hɔr|a y|iri|sii| hɔ|mir|ti |enɲ|bɔ |u s|n t|u y|ini| te|ta |kol|enb|awa|bat| fu|nki|kil|ili| du|bar|ɛ j|fɛn|fɛ | do| dɛ|gbɛ|su |uus|aam| ta|afɛ|may|lɔ |nni|ɔnn|lɔn|maf|o a|e d| bɔ|din|sab| fɛ|ɔ j|o y|i w|tan|ɔɔy|dɛɛ|bɛd|kad|min|ɔlu|dal|ɔɔl| tɔ|ɔɔn|e f|biy|ali|e b|kɔd|te |wol|bi |e w| mu|ida|du |ant|nɛn|dɛ |ɛ a|dah',bci:'an |be | be| ɔ |un | i |ran|sra|wla| sr|kwl|in |la | kɛ|n b|kɛ |n s|n k| kw| ng|n n|lɛ |a b|n m|le | nu|a k|nun|i s| a |man|n i|ɛn |e k|ɛ n|kun|n ɔ|mun| ni| ti| mu|nin|nga|ti | n |ɛ ɔ|e n|ɔ n| su|ga |ɔ f| fa| ku| li|e s|su |a n|a s|a ɔ|ɛ b|i n|e a| sɔ|wa |sɔ |i k| ma| le|ɛ i|tin|ɔ k|di | at|ata|ta |ɔ l|fat| mɔ|ati|mɔ |lik|akw|ɛ m| sɛ|lak|e w| sa|dɛ |ndɛ|mɛn|i b| mm| yo|iɛ |ba | nd|nvl| nv| kl|vle|sɛ |a a| mɛ| fi|ke |und| wu|ɛ s|n a|mml|liɛ|mla| ka|ike|yo |ɔ t|ngb|i a|e b|a m| an|ɔ ɔ| di| yɛ| si| bo|e t|ndi|bo | ye|o n|n t|e m|fin|e y|n f|sa |ɔ b| fɔ|dan|n y|fa |i i|uma|yɛ | ju| ny|ɔ i|nan| na|kan|ɔun| tr|wun| b | o |n l| aw|a y|b a| wa|fɔu|i f|ɛ a|ing|ge |uɛ |i w|a w|nge|klu|ka |gba|e i|awa|o m|jum|ɔ y|ɛ k|wie|a i|ie | fl|e f| wl|tra| ba|lo |lun| ak|ang|ye | wi|e l| kp|uan|i m| uf|uwa|n w|sie|flɛ|kpa|alɛ|luw|flu|o i|kle|ua | da|nyi|nzɛ|wuk|ɔ s|wo |e ɔ|ika| wo|wan|bɔ |ian| bl|wlɛ| bu|anz|o ɔ| af|aci|u b|bu | ya|ɛ w|ufl|bɔb|te |zɛ |ɔ d|a t|elɛ|i t|ci |nua|fuɛ|ɔbɔ|u i|anm|i l| w |w a| bɔ|o b|lu |se |u m|ilɛ|iɛn| ja|a j|afi|i ɔ|n u| se|unm|nda|yek|bɛn|gbɛ|eku|ɛ l|nma|kac|u s|san|ko |o y|o s|a l|u n|si |anu|aka|any|ɛ d| ko|n j|ɔ w|u a|fi | yi|anw|i j|uka|fiɛ|a d|o a|lel| kɔ|ɔlɛ|ɔn |a f',epo:'aj | la|la |kaj| ka|oj | de|on |de |raj| ra|iu |ajt|as |o k| ĉi|e l|j k| li| pr|eco|aŭ |ĉiu|jn |ia |jto|est| es| al|an | ki|pro|io | ko|en |n k|kon| ti|co |j p|o d| po|ibe| aŭ|ro |tas|lib|ber|aci|toj| en|a p| ne|cio|ere|ta | in|to |do |o e|j l|n a|j d| se|a k|j r|ala|j e|taj| re|rec|iuj|kiu| pe|o a|ita|ajn|ado|n d|sta|nac|a a|nta|lia|ekt|eni|iaj|ter|uj |per|ton|int| si|cia| ha|stu|a l|je | je|al |o ĉ|n p|jta|tu | ri|vas|sen|hav|hom| di| ho|nte|a e|ali|ent| so|nec|tra|a s|ava|por|a r| na|igi|tiu|sia|o p|n l|ega|or | aj|soc|j ĉ|s l|oci|no | pl|j n|kto|evi|s r|j s|ojn|laj|u a|re | eg|j a|gal|ers|ke |pre|igo|er |lan|n j|pri| ku|era|ian|rim| fa|e s| ju|e a|ika|ata|ntr|el |is |u h|li |ioj|don|ont|tat|ons| el| su|go |un | ke|ebl|bla|n s|oma|ĉi |raŭ|kla|u r|ne |ili|iĝo|o t|s e|tek|men|nen|j i|nda|con|a d|ena|cev|moj|ice|ric|ple|son|art|a h|o r|res| un|u s|coj|e p|ĝi |for|ato|ren|ara|ame|tan| pu|ote|rot| ma|vi |j f|len|dis|ive|ant|n r| vi|ami|iĝi|sti|ĝo |r l|n ĉ|u l| ag|erv|u e|unu|gno| ce| me|niu|iel|duk|ern| ŝt|laŭ|o n|lab|olo|abo|tio|bor|ŝta|imi| ed|lo |kun|edu|kom|dev|enc|ndo|lig|e e|a f|tig|i e| kr| pa|na |n i|kad|and|e d|mal|ono|dek|pol|oro|eri|edo|e k|rso|ti |rac|ion|loj|j h|pli|j m',pam:'ng |ing|ang| ka|an | pa|g k| at|ala|g p|at |apa| ma|kar|lan| ki|ata|kin|pam|g m|ara|tan|pan|yan| a |pat| in| ba|aya|n a|g a|ung|rap|ama|man|g b| ni| di|nin|din|n k|a a|tin|rin|a k|ami| la|tun|n i|ari|asa|nga|iya|ban|ati| me|nan| da| sa| na|t k|gan|g s|bal|etu|mag|a i|met|sa |la |ant|kal| iy|kap|a n| mi|in |ya |aka|tau| o |san|n d|au |lay|ana|mak|yun|na |ika|a m|ipa|ran|atu| al|n n| ta|ti |ila|g l|ali|kay|nsa|aga|a p|iti|g t|par|u m|ans|nu |al |g i|t p|iwa|a d|syu|t m|sab|anu|un |uli|mip|ra |aki|aba|u a|mal|as |mil| it|una|bla|abl|ita|awa|kat|t a|ili|kas|g n|lag|da |tas|i a|wa |n l|lal|dap|mas|bat| pr|abi|ap |a b| e |mik|ani|sal|li |ad | an|ral|ira|gal|a r|lin|g d|nte| li|ale|kab|e p|ula|wal|lit|nti|s a|lip|nta|pro|te |ie |wan|ag |tu |upa| ya|g e|tek|usa|g g|bie|o p|it |pun|ian| bi|lat|aku|be |n p|sas|iba|yat|alu|tul|e m|kan|l a|nap|t i|lir|u k|isa|pag|abe|len|e k|rot|en |bil|mam|ksy|ngg|lam|p a|ily|liw|eks|ote|n o|gga|u i|eng|ipu| tu|lya| ri|aul|pas|dan|uri|ema|lab|ta |lak|are| ar|ail|tam|o a| ke|ril| pe|sar| ra|ina|asi|ka |art|pak|sak|mit|rel|i k|gaw| ul| re|inu|i i|mun|abu|asy|mba| pi|ags|obr|gpa|a o|am |n m|mem|o k|isi| mu| nu|mis|nun|era|ndi|ga |agp|aun|mab|anm|lub|gla|e a|nme',tiv:'an | u | sh| na|nan|en | a |ha |sha|shi| i |er |a i| er|or | ma|ar |gh |n i|n u|a m| ve| ci|n s|han|u n| ke|lu |man| lu|n m|yô |a u|u a|n a|r n|a k|mba|in |ii | ha|kwa|ken|n k|na |hin| mb|a a| kw|n n| ga|ga |cii|agh|a n|aa |wag|ve |a s| yô|nge|ba |r u|u i| gb|ana| or|a t|mao|r i|ity|ma |aor|anm|nma|gen|oo | ta|ir |ren| kp|i n|ang|r m|e u|gba| ng|r s| ia|ere|ugh| it|ian|doo|ese|uma|kpa| la|u k|n g|ngu|gu |om |oug|on |ol |a h|ior| ts| he| ne|tar|h u| ka|la |n t|se |e n|r a|a v|hen| ku|aha|mac|yol|i u|ace|ge |ce | de|ish|u t| io| do|tom|hi |a e|u u|o u|i m|iyo|i d|bar|ave|ua |u s| te|igh|a l|e a|m u|a w|un |n c|n e|ne |ev |r k|ind|ene|sen| is|ndi|ker|era| to|a o|ima|u v|a g|paa|n h| wo|di |yar|tya|ase|e s|de |n y|ee |end|him|tes| mk|u m|ka |tyô| mz|won|u e| um|u h| wa| mi|yan|tin|ran|ie |hie|a c|hir|i a|e k|i v|mak| in| za|r c|nen|e l| ig|i k|kur|nah|tse| ik|ves|eng|rum|mzo|men|zou|i l|e i|a d|i e|i i| ya| vo|mlu|ô i|inj|nja| as|vou|ura|ron|gbe| iy|r t|ôro|a y|oru|e e| zu| ti|ra |n l|ci |u l|ver|kpe| fa|was| ml|e m|em |io |mi |da |civ|môm|ant|see|ivi|wan|vir|nda| ij|soo|zua|lun|ea |vea|wa |ôm |av |hio|ake|a f|igb|l i|u z|r l|zan|nta|e g|hem|h s| mt|ded|iky|o s|r g|do |ndo|iji| hi|e h',tpi:'ng |ong|lon| lo|im | ol| na|la | ma|pel|ela|ri |at | bi|ait|na | yu|ol |gat| ra|bil| ka|ilo|man|rai|t l|it |eri|mer| o |wan| i |mi |umi| wa|ing|yum|ta |t r|tin|eta|get|lge|olg|iga| ig| sa|ara|em |rap|i o|ap |nme|anm|in |ain|an |a m|ant|ape|nar|m o|i n| no|g o|g k|i i|as |ini|mas| me|n o|sim|tri|kan|kai|ntr| ga| st|a s| pa|gut| ha| wo|g y|yu |a l|g s|ama|m n|ok |g w|wok|spe|a k|i b|i m|g l|i l|sin|sam|pim|m l|kam| gu|l n|amt|tpe|g n| in|ts |a i|mti|utp|isp|kim|its| la|isi|aim|api|lo |o m|g b|tai| di|a o|dis|a t|p l|en |map|t w|s b| lu|luk|sem|no |tim|lai| ko| ki|ave|ols|nog|m k|lse|sav|nem|ve |a p| fr| em|nim|tu |i y|nka|et |m y| ti|g t|nap|g p|sta|tap|aun|a n| tu|un |asi|fri|pas|n m|m g|l i|aut|ane| sk|kau|t n|nta|sen|n s|oga|i g|g g|m i|kis|o i| ba|tok|os |usi|m s|ngt|anp|a w|s n|a h|s i|iki|i s|sai|l m|npe|ari|o l|o b|g r|ik |uti|iti|gti|aik|ut | to|a g|ili|a y| pi| ta|kin|ni |n b|lim| ye|yet| we|k b|ina|g m|uka|str|ins|rid|a b|anw|nsa|nwa|m w|m m|dom|ot |hap|ido|aus|i w| ne| si|n i|t o|dau|ese|rau|ank|sap|o k|m b|nin|pos|o n|am |go |s o|s l|u y|pik|vim|ivi|es | go|n n|kot|ron|ple|g d|a r|kul|ali|sku|apo|om |g h|l l|s s|ti |les|t m|gav|eki|nai|mek|kom| as|ind|nda|ip |liv|ul |ati',ssw:'nge|eku|a n|ntf| le|e n| ng|tfu|lo |la |nga| ku|fu | ne|o l|khe|tsi|nkh|le |he |unt|elo| lo|si |ele|a l|ni |ung|mun|ma |lun|lel|wa |lek|nom| um|eni|oma| no|kut|hla|onk|a k|e l|ent|e k|gel|ela|ko |eli| ba| la|pha|ats| em|o n|ang|ema|eti|nel|nye|ban|ulu|uts|hul| na|aka|tfo|e u|lan|oku|lok|won|khu|esi|lul|a e|ule|ala|umu|tse|akh|ye |ve |i l|nek|ana|ane|lil|kwe|aph|na |we |ke |aba| wo|nti|ndl|ale|i n| ye|ba |ilu|gek|gan|lab|any|hat| li|tin|wen|gen|kel|len|ndz|fo |and|let|eko|e b|lwa| ka|te |set|nem| kw|mal|ka |ant|alu|ne |phi|ing| un|u u| ek|ise|une|e e|kul|nal|lal|mph|o y|uhl|fan|‐ke|ile|i k|kub|ukh|ben|kan|ako|a b|kat|eke|ive| ti|sek|nak|sit|seb|u l|alo|yel|kho|wo |kha|les|o e|ngu|kus|lom|ini|ikh|elw|isa|sa |fun|e w|ebe|o k|jen|iph|eng|kwa|ahl|uph|emb|be |tis|lwe| si|etf|isw|uma| se|ene|ta |nan| im|i e|enk|e a|abe|kun|ume|hak|nen|dle|ase|sen|kuv|tel|ebu|omu| in|lin|sel|tfw|nhl|a i|e i|kuk|uba|ti |kuf|mhl|bon|ula|sin|int|fut|dza|lak| wa|ind|ave|ali|yen|ete|to |ngo|use|kuh|hol|ze |a‐k|ona|a a|se |nje|und|swa|lon|eki|ike|i a|lis|tsa|gab|sim|i w|its|fol|e t|o m|hi |ndv|phe| ya|ma‐|utf|sik|liv|bun|cal|nta|ata|gal|mel|ute|wem|gap|han|uny|oba|alw|ili|a w|mbi| bu|gob| at|awo|ekw|dze|u n|emp',nyn:'omu| om|ntu|tu | ku|a o|ra | ob|wa |obu|ari|a k|mun|a n|unt|mu |uri|nga| mu|aba|ri |a e| na|e o|gye|rik|ho |a a|han|ang|re |ga |iri|bwa|oku|aha|bur| bu|na |eki|ka |iku|ire|uga|ndi|ush|ban|ain|ere|ira|we |kur|sho| ek| ab|ne |ine|a b|and| ni|u a|e k|sa |u b|iha|i m|e n|kir|be |aho|bug|ibw| eb| ba|ing|ura|gir|u n|kut|ung|ant|abe| ah|ye |e b|i n| bw|kwe|ebi|era|iki|ba |ro | kw| ok|uba|gab| no|zi |bir|i k|u o|o o|rwa|o e|kub|end|ama|mer|eka|kug|ate|tee|di |rir|bus|kuk|rin|ish|sha|i b|wah|ha |u m|bwe|ngi| ai|ara|kwa|kan|o g|za |ngo|kuh|ana|i a|eme|eek|i o|baa| ka|go | gw|nib|zib|ash| or|iro|she|o k|u k|iin|o b|iba|oon|gan|agi|ngy|hem|mwe|ona|oro|bwo| ar|ya |i e|uru|nar|eir|uta|tar|kwi| ti|egy| n |hi |bar|isa|ute|o a|shi|ora|e e| en| ki| nk|riz|nda|da |ja |si |nsi|wen|yes|tek|yen|aga| am|o n|rei|rag|ki |obw|mur| ha|ris|wee|amb|aab|bya|kus|ugi|a y|ind|ata| ne|bas| ky|ija|hob|ikw|mus|gar|a g|eky|dii|bor|aar|ibi| we|aka|ham|emi|ekw|rer|ini|har|gi | bi|naa|kor| er|gwa|n o|iza| by|eih|yam|iho|rih|i y|ete|o m|eby|but|a r|ika|mag|ozi| em|ong|iik|iko|uka|nik| yo|sib|eri|utu|tuu|amu|uko|irw|nka|ani|yaa|u e|mut|roz|mub|ens|aij|nis|uku|kye|nde|der|e a|nok|nko|asa|aas|hab|obo|ent|ahu|rye|oba|kih|yob',yao:'chi|ndu| wa|du | ch|a m|aku|akw|ni |kwe|und| mu|wak|wan|mun| ku|la |e m|wa |ulu|amb| ak|kut|u w|ali|mbo|lu |we | ma|le |ufu|ful|ila|a k|bo |a n| ga| ni|amu|kwa|se | na|ose|hil|nga|go |aka|and|ang|na | uf| pa|ete|uti|jwa|kul| jw|son|ngo|lam|e u|ne |kam|oni| so|u j|e a|ele|a c|ana|wal|ti |isy|cha| yi|gan|te |ya |mwa|lij|wet|che|ga |yak|ili|pa |e n| ya|o s|nda|i m|ula|jos|i a|ile|ijo|li |e k|o c|a u| mw|ich|mul|uch|o m|asa|ala|kas| ka|i w|ela|u a|ach|his|nam|lan|yin|i k|ind|ani|sye|yo |si |pe |gal|iwa|man|sya|aga|a w|o a|ule|ikw|asi|kus|ope|ma |gak|e w|jil|kap|hak|ika|ite|aji|mba|u g|ase|mbi|kum|uli|any|ape|a y|ekw|mal|imb|ja | al|end| ng| ja|mas|usi|kup|e c|pen|ye |anj|ka |a j|a p|lem|o n|ama|him|ago|sen|eng|ane|ako|mch|ola|och|oso|ena| kw|sop|lek|pel|gwa|hel|ine|gam|u y| mc|i y|awo|ons| mp|ole| li|wo |i u|hik|kol|auf|mka|tam|syo|e y|mpe|ten|ati|mau|nji|wam|muc|ong|i g|kan|uma|je |iku|nag|kwi|da | ul|cho|ngw|ene|iga|ano|esy|ion|upi|pag|o k|eka|wu |uwa|kuw|sa | un|a l|bom|iya|uni|jo |ale| ji|apa|yil|lil|uku|i n|o g|a a|o w|waj|mus|ipa|pan|pak|one|i c|ujo|duj|emw|nya|tio|jak|oma|nja|hiw|dan|apo|e j|poc| wo|lic|alo|eje|ing| mi|e p|lo |lig|a s| yo|ung|no | m |upa|ata| bo|nde|he |i j|was',lav:'as |ība| un|un |tie|ies|bas|ai | ti|esī|sīb|ien| vi|bu |vie|ir | ir|ību|iem| va| pa|em | ne|s u|am |m i|šan|u u|r t|pie| ci| sa|ās | uz|vai| ka| pi|brī| iz|rīv| br|uz |cij|dzī|ena| ar|ar |isk|s p|es | at|āci| ap|ot |nam|viņ|inā|ikv|kvi| no|s v| ie|vis| ik|i i|pār|u a|ju |nu | pr|edr|vīb|īvī|iju|drī|u p|dar| st|lvē|cil|ilv|s t| la|iņa|ana|s i|n i|īdz|s s|kā |tīb|i a|ija|bai|ībā|ied|s n|arb|val|līd|s b|aiz|tu |iec|cie|ām |gu |vēk|īgu|īgi|ka |jas|umu|mu |t p| jā|u v|zīb|ska|lst|als|kum|gi |s l| tā|jot|stā|st |n v|vēr|a p|arī|aut|n p|ama|kas|u k| da| ta|nīg|izs|ojo|anu|ņa |u n|sta|s a|ba | ai| so|s d|a u|ā a|stī|cīb|m u|i u|son|not|mat|sav|iev|ā v|jum| kā|u t|ned|ajā|s k|u i|i v|līt|ēro| pe| dz|i n|per|u d|īks|kat|nāt|līb|nāc|rdz|nīb|pil|rīk|kst|a s|cit|pam| pā|ekl|tau|u s|bie|jā | re|i p|kur|a a|t v| li|evi|tis|evē|bā |ma |rīb|a v|os |ras|abi|nev|iku|skā| ve|lik| lī|nas|t k|ant|uma|roš|kād|zsa|sar|ciā|mie|ais|eci|oci|oša| je|jeb|būt|atr|n b|ieš|rso|ers|soc|enā|a t|t s|īša| be|bez|āda|ebk| ku|glī|isp|tot|spā|roj|lie|pre|ret|aul|na |tra|iet|du |zgl|āt |ard|kt |ier|izg|ikt|paš|iāl|nod|ts |eja|ā u|sab|eno|ēt |ta |tik|tīt|ecī| de|īga|tar|arp|r j|īst|tās|ja |enī|atv|vu |ārē|rēj|rie|oši|dro',quz:'una|an | ka|nan|cha|ana|as |apa|pas|man|lla|aq |sqa|ta | ru|run|kun|ach|qa | ll|pa |paq|na |nta|chi|npa| ma|nch|aku|anp| ch|in |a r|ant|hay|mi |taq|ay |ama|asq|qan|tin|kuy|chu|lap|a k|yta|a a|ima|wan|ata|spa|all| wa|n k| ja|ipa| ya|nin|ina|aqm|his|qmi|a m| ju|pi |anc|nap|iku|aus|usa|kau|pan|nak|kan| mu|naq|aqt| pa|kam|aqa|kay|i k|kus|un |ank|isq|nku|may|yku|ayn|a j|a l|ayt|qta|ati|a p| pi| ri|aci|lli|lin|ayk|uku| al| at|n r|yac|ion|pip|han|inc|n j|ayp|yni|qpa|nac|say|asp|uy |mac|s m|cio|awa|a c|laq|tap| yu| im|a y|yoq|n m|asi|mun| de|has|n a| as|n c|int|uch|nma|s k|oq |ari|q k|hu | na|ypa| tu|tuk|tun|atu|rim|q r| sa|jat|yan| ji|nat|anm|jin|a s|api|hik|uya|nti|pac|tan|ash|mas|n p|n l|k a|ura| su|a q|yuy|n y|ech|q j|unt|yay|ypi|is |lan| qa|usp|kas| an|a w|s w|inp|sin| ta|ma |a t|shw|q a|hwa|uyt|nmi|sim|ere|rec|der|uma|s t|isp|n t|ña | ni| ay|upa|nam|hur|war|waw|imi|nka|sap|kaq|s j|was|y r|usq|kin| un|inm|qas| si|ani|tiy|t a|sta|pay|pis|maq|hin|ha |arm|npi|rmi|ink|aqp|q c|la |i p|nis|yma|nk | ku|aym|nal|hak|rik| ti|unc|niy|y s|iyo|juc| qh|ist|pap| aj|s y|cho|onq| re|ayo|iqp|n s|s p|os |i m|t i|ras|ita|piq|qsi|ku |yqa|mik|q y|eqs|pat|tak| pu|lak|i r|ipi|iya|ywa|muc|a n| qe|san|jun|y l',rmy:' sh|ri | a |shi|hi |i s|ti |ea |ari|i a| ca|rea|tsi|i c| s |a a|ndr|tu |câ |dre|i n|ept|ptu|rep|li | nd| di| un|a s|are|i u|ats|la | la|i l|ear| li|lje|di |ati|lui|ui |a l| tu|tat|â s|ei |sea| ti| câ|un |jei|or |caf|afi| lu|â t| ar|ali|i t|fi |ilj|a c|bâ |râ |car|ibâ|lor| cu|nâ |icâ|a n|i d|s h|hib|tâ | hi|â a|si |u c|eas|tur|tul|ber|â c| in| co|lib|u a|n a|cu |ibe|u s|tea|lu |tsâ|ul |tse|int|a p|i i| pr|u p|i p|url|i m|lji|min|sti|alâ| al| pi|sht|nal|â n| si|ji |â p|rar|ert|sii|ii |nat|til|u l|sâ |lâ |â l|sta| nu| ic|i f|nu |ist|mlu|ili|a t|ots|uni|rta|a d|its|â d|pri| ts|oml|i e| de| na|sia| po|gur|tut| st| at| ân|ura|al |ita|anâ| ma|ips|can|oat|tsl| su| as| so|ând|nts| ap| ea|sh |nit| mi|ent|a i|ate| ac|poa|ilo|sot|ina|ash|ona| lj|âts|rli|lip|â i|unâ|t c|iti|bli| u |nji| fa|zea|tât|ril| om|urâ|con|i b|sig|igu|ntr|pur|par|ntu|let|com|iil| ni|eal|ind|r s|hti|at |ucr|art|adz|arâ|itâ|rtâ|inj|uri| eg| sc|atâ|sin|ral|pse|asi| ba|r a|apu|âlj|ia |chi| va|sun|ter|rlo|ica| pu|luc|unt|i v|ise|ini|est|ast|gal|ega|act|nda|ead|uts|a u|imi|ma |ra |pis|s l|ets|a o|va |pi |lit|scâ|asc|ial|sa | ta|rim|tar|alt|idi|tlu| gh|era|ant|eri|aes|a m| nâ| ae|oar|nea|pro|apt|ana|ta |atl|lic|l s|iun|nte|mil',src:' de|de |e s|os | sa|tzi|tu | su|one| a |sa |ne | e | in|ent|ion|der|su |zio|ere|as |e d|a s|u d|ret|es | cu|ess| pr| so|s d|men|ale|ade|atz| s |re |e c|sos|in |s i|chi| un|nte|ten|etu|er | pe|et |e e|ida| te|le | is| ch|ene|are| es|a p| si|u s|a d|pro|hi |dad|te |sse|tad|zi |e t| on|e i|s e|nt |nzi|u a|sso|onz| co|ame|cun|tos|e a|sas|a c|ntu|net|na |e p|at |nes|du | li|t d|n s|son|s a| o |ber|ro |pes|u e|int|zia|nat|i p|ia |res|nu |un | re|sta|s p|ter|era| po| di|per|s c|t s|rar|ser| at|e o|s s|ibe|lib|si |tra|ust|u c|rta|unu|cus|ntz|adu| to|da |nal| na|ant|egu|eto|und|ine|i s|a e|otu|u p|t a|ert|est| da|a a| fa|ist|ona|pod|s o|pre|iss|ra | ma|ica|tot|les|ntr|una|sua|con|dae|ae |s n|man|sia|ndi|nid|ada|a l|nta|o s|a i|ua |ide| ne|otz|min|rat|iat| pa|nde|ode|dis|ren|ali|a u|ta |u o|sot|u t|ime|ssi| as|o a|pet|e u|nsi|fun|lid|epe|eru|unt|st |t e|end|us | fu| ca|ner|dos|s f|ass|nda|uni|das|iu |ind|a t|ial|a f|ghe|gua| eg|a n| se|ont|etz|s m|s ò|sti|t p|ual|nen| me|sen|com|ura|a b|lic|a o|pen|ado|nos|inn|des|seg|e f|din|òmi|ire|a m| òm|e l|dep|ènt|for|ena|par| tr|u i|ara|cra|sid| no|s u|u r|suo|e n|pri|ina| fi|ria|gur|art|det|s t| bo|tar|emo|run|ama|icu|isp|dam|e r|itu|cum|tut|eli| bi',sco:' th|the|he |nd | an|and| o |al | in|ae |in |es |ion|cht| ta|tio|or |t t|ric| ri|ich|tae|on |s a|is |e a| aw| be|s t| he|ati|ent|ht |ts |e r| co|er | na| fr|bod|ody|his|dy |hes| fo|e t|o t|for|it |ng |ty |n t| or|be |fre|ree| hi|l a|ing|awb|wbo| sh|s o|ter| on|sha|nat|r t|nal|an |n a| as|hal|e o|y a|d t|tit| pe|l b| re|y h|aw | ma|nt |men|air|ce | pr| a | ti|hts|e f|e c|le |eed|edo|dom|n o|e s|ons|d a|res|e w|man| wi|d f|ed |sta|ar |t o|ona| it|ity|at |as |her|ers|t i| de|con|til|il | st|nti|e p|e i|e g|nce|ny | so| di|nte|ony|ns |und|ith|thi| fu|ie |ir |oun|ont|e e| un|pro|oci|nae|y i|lit|soc|com|nin|en |ic |ne |r a| me|ly | wa|ear|ual| en|ame|uni|r i|e h|hum| is|ane|uma|ess|inc| fa|equ| hu|ver| eq|e m|hei|o h|ms |d o| ha|wi |t n|s f| no|t a|int|cla|rit|qua|d i|iti| se|rsa|y s|ial| le| te|e d|r o|ive|r h| la|nit|om |ite|s r|cie|s i|ali|cti|cia|re |aim|rat|ld |tat|hat|rt |per|s h|n f|dis|tha| pu| we|g a|oms|eil|ntr|fai|tri|ist|ild|e u|r s|dec|lea|e b|hau|imi|mai|s n| ac|elt|lt |l t|omm|d p| ga|din|war|law|eme|y t|era|eir|art|ds |s e|ral|nor|tel|ge |g o|eik|eli|rie|rou|nda| gr|lan|mei|ate| ge|n i|ten|id |s d|ors|iou|bei|sam|nta|sec|mmo|lar| tr|ful|ul |mon|s w|anc|l o|gar|ern|ara|d s',tso:' ku|ku |ni |a k|hi | ni|a n| a |i k|ka |i n|wa | ya| ma|la |ya |na |a m| ti| hi|fan| sv|nel|hu |a t|ane|ela| ka|iwa|u n| na|svi|lo |nhu|a l|a h|ele|le |ndz|u k|va | xi|a w|vi |mbe| à |elo|wu | wu|eli| mu|u y|mun|i l| le|nga|umb|lan|nfa| va|u l|be |u h|li |kum|tik|ihi|iku|aka|unh| wa|a s|liw|isa|i m| fa|ma |anu|nu |u t|han| la| ng| wi|wih| ha|a x|yel|a a|lel| nf|i h|ta |ana|o y|e k| nt|u a|i a|eni| li|ndl|ga |any| ko| kh|van|u w|u v|amb|a y|ti |sa |pfu|i t|i w|in |lek|e y|ang|and|ati|yi | è |irh|sva|mat|ani|i s| nd|a v|mel|yen|hla|isi|hin| ye|eke|n k| lo|ulu|kwe|hul|thl| kw|nth|tin|mah|wan|ava| mi|ko |khu|u s|à n|dle|lul|ule|tir|o l|i y|aha|aye|kwa|inf|à k|è k|rhu|mba| th|fum|end|anh|xi |dzi|kel|a f|u f| lè|we |may|eka|nye|gan|dze|vu |ham|xim|mis|thx|aku|tà |xa |hlo| tà|eyi|ima|nti|eki|ngo| si|u p|vak|ngu|lak|ume|oko|lon|a è|o n|lok| ta|zis|hak|u m|i à|ke |i x|u x|rhi|ha |awu|dza|u à|za | là|n w|ung|e n|a à|i f|esv|les|vik|siw| y |à m|to |mha|ola|sav|ond|nya|kot|kol|uma|e h|mbi|e s|naw|ths| dj|fun|mu |a u|xiw| ts| hl|u d| lw|nyi|ki |ong|sun|lwe|ike|ind|nis|xih|e a|èli|imu|sel|sek|iph|zen|lum| pf| xa|sin|umu|sim|ave|kar|ala|wey|sik|o t|avu|wav|oni|ile|wak| yi|ali| hà|gul|e l|ba |i v',men:' ng|a n|i n|ɔɔ |ti | ti|i l| i | ma| nu| gb|ngi|a k|aa |gi | kɔ|ia |ɛɛ |ei | na| a |ma |hu | ye| ta|kɔɔ|a t|na | hu|a m| kɛ| nd|gbi|ya |bi |i y| lɔ|a h|ɛ n|ii |ɔny|u g|i h|nya|uu |lɔn| kp|i m|ngɔ|nga|la |i t|kɛɛ|lɔ |i k|ɔ t|mia| mi|a y|nge| ji|ee |gaa|a a|ɔ n|ɔ i|gɔ |ind|tao|ao | hi|num| le| yɛ|umu|mu |ung|nda|hin|ye |i g|hou|hug|e n|ugb|ni |a l|sia|ndɔ|nuu|a i|maa| ya|ahu|gba|u k|mah|oun|ɔma|le |da |i w|ɔlɔ|i j| va| ɔɔ|eng|i i|va |yei|dɔl|li |lei| sa|yɛ |kpɛ|yil|isi| la|bat|a w|u n|e t|ta |ahi| ki| wo|ɔ k|e a|ɛlɛ|saw| lo|o k|ji |gbɔ|pɛl|uvu|ili| ho|vuu| gu|nde|aho|gbu|ɛ t|ale|ila|nah|kɛ |ɛi |ndu|kpa| wa|nuv|ge |e m| ny|e k|atɛ|wei|awe|a g| ii|bua|ie |awa|wot|yek|kɔl|ulɔ|ing|ga |gul|tɛ |ɔle|u t|gbɛ|ɔ y|nun|wa |hei|ani|ɛ k| tɔ|bɔm|ɛ g|ein|taa| ha|ang|uni|u i|ekp|ɔ g|lɛɛ|kpɔ|a v|kpe|ote|i b|te |u m|tii|ɔ s| we|ɛ h|baa|pe |ɛ y| ɛɛ|i ɛ| ba|fa |a j|bu |ifa|kia|jif|u l|eke|ama|gen|u w|lee|lɛ | lɛ|ɛmb|a b|e y|aah|hii|ngo|bɛm|lek| wi|ui | yi|u y|bɛɛ| he|u a|e h|ɔ m|uah|o g|yen|yan|nyi|aal|hi |wu |yee|maj|ajɔ|jɔɔ|nye|mbo|e g|u ɔ|ong|ka |oi |lon|dun|uny|ɛng| sɔ|lɔl|nyɛ|lii|a p|oyi|iti| bɛ|lɔm|akp|e i|ɛ i| ka|jis|oko|i p|ɔla| wɛ|a s|ewɔ|iye|dɔɔ|lok|gua|ɛ b| li|u h|nin|wee|lah|ula| ga| du|i v',fon:'na | na| e | ɖo|ɔn |ɖo |kpo| kp|nu |o n| ɔ | nu| mɛ| gb|mɛ |po |do |yi |tɔn| é | si|gbɛ|e n|in | to| lɛ|lɛ | tɔ|nyi| al|wɛ | do|bo |ɛtɔ| ny|tɔ |e ɖ|ɖe | bo|okp|lo |ee |ɖok|to |ɔ e|bɛt| wɛ| ac|a n|sin|acɛ|o t|o a|ɛn |i ɖ|o e|bɔ |ɔ ɖ| bɔ|cɛ |ɛ b| ɖe|a ɖ|ɔ n|ɛ ɔ|n b|an |nɔ |odo|ɛ ɖ|o ɔ|ɛ n|ɛ e|ɖɔ |ji | ɖɔ|lin|n n| en|bi |o ɖ|mɔ |n e|pod| bi|lɔ | mɔ|n a|nɛ |ɛ k|i n|un |ɔ m|i e|mɛɖ| hw| ji| ye|ɛɖe|enɛ| ǎ |alo|o s|kpl|u e|a d|ɔ b| nɔ|alɔ|ɔ é|ɔ g|ɖee|si |n m|gbɔ|a t|n k| yi|sɛn|jɛ |e k| wa|o m|e m|é ɖ| jl|hɛn|e e| hɛ| sɛ|nnu|nun|wa |n ɖ| ee|é n|kpa|unɔ|bɔn|ɔ t|a s|ɛ é|u k|ɔ w|inu|e s|i t|zɔn|o l|a y|o g|bɛ |ma |n t|e j|ɔ s|ɔ a|o b|a z| zɔ|jlo|i k|nuk|ɔ k|a e|ɔ l|u t|kɔn|xu |e ɔ| lo|hwɛ| ka|eɖe|o y|e w|jij|sis|n l|ixu|six| su|ali|isi|ukɔ|ɛ a| ay|ayi|su |n g|u a|a b|n d|dan|nmɛ| ta|n ɔ|etɔ|e g|o j| we|onu|wem|ba |ema|ɛ g|o h|ɛ s|ɛ t|i s|u w|n s| sɔ|bǐ | bǐ|hwe|a m|sɔ |lɔn|o d|u m|ple| ma|ɛ l|azɔ| az|tog|ye |i l|hun| jɛ|o w|ogu|o k|u g|kan|oɖo|elɔ|gbe| le| el|wu |ka |ɛ w|n w| li|sun|esu| hu| i |ɖó | ɖó|plɔ|ɖi |ɖè |ɛnn|pan|i m|yet|xo |iin|tii| ti| fi|e b|zan|i w|poɖ|ɖes|a j|ann|a g|gun| ɖi| tu|gan|ɛ m| wu|u s|ɔ y|a l| da|u n|u l|ɔnu|obo|ɔ h|vi |lee|ijɛ|ta |e a|ya |nuɖ|ɔ d|wen| tɛ| ga| ɛ | xo',nhn:'aj |tla| tl| ti|ej |li |j t|i t| ma|an |a t|kaj|tij|uan|sej|eki| no|chi|ij | ua|ma | to| te|j m| ki|noj|ika| se|lis|j u|aka|laj|tle|pa |pan|j k|ka | mo|amp|ali|ech|uaj|iua|j n|man|oj |och|tek|tli|kua|ili|a k|se | pa|ano|ise|ual|mpa|tec|n t|en |len|iaj|is | ue|a m|jto|ajt|pia| am|uel|eli| ni|ya |oua|j i|ni |hi |tok|kin|noc|one|lal|ani|nek|jki|ipa|kit|oli|ati|amo|j s|kam|aua|ia |tim|mo | ku|ant|stl| ik| ke|opa|ase|nij|ama|i m|imo|ijp|ist|tl |ijk|tis|mej|itl|tik|mon|ok |lak|par|n n|ara|ra |tit|kej|jpi|a s|ojk|ki | o |alt|nop|maj|jya| ka|iti|cht|ijt|uam|a n|kiu|lat|leu|o t|ita|lau| ip|tep|kia|jka|n m|ana|lam|kij|nka|tou|epa|n s|til|i n|i u|e t| ak|s t|k t|lti|nem|lan|eyi|mat|nau|ose|emi|j a|ntl|uat|uey|jtl|nit|nti|kip|oka|onk| on|eui|i k|kat|j p|ini|toj|kem|ale|ajy|ame|ats|pal|iki|ema|uik|n k|eua|ach|e a|ijn| sa|mpo|tot|otl|oyo|mil|hiu|eka|tol|ajk|uak|ite|san|pam|atl|yek|tia|ate|ino|jua|a i|ipi|j o|tsa|oke|its|uil|o o|jne|oju|tos|kui|oui|a a|yi |kol|ote|a u|i i|n a|ken|chp|iko|as | ne|tin| me|ank|jti| ye|kon|ojt|aui|xtl|ine|tsi|kii|you|ko |ejk|o k|uas|poy|tst|ejy|nok|las| ya|yol|hti|pou|siu| in|nel|yok|mac|ak |hik|sij| si|sto|htl|jke|nko|jch|sek|mot|i a|ela|ui |kis|mel|axt| ax|ijc|nan',dip:' ku|en |ic |ku | bi|bi | yi| ke|an |yic|aan|raa| ci| th|n e| ka| eb| ra|c k|c b|n a|ci |in |th |kua|ny |ka |i k|ŋ y|i l|ben|k e|ebe| ek| e |höm|nhö|öm | al|ai |kem| ye| nh|eme|m k|men|i y|t k|n k| la|c e|ith| er|lɛ̈|thi|alɛ|ua |t e|ek |ɛ̈ŋ| lo|ɔc |n t|ŋ k| ep|u l|it |yen|kɔc|̈ŋ |de |k k|pin|a l|i r|n y|epi|n b|lau|at |iny|aci|aai|u t|ken|au |ok | te|a c|ath| pi|ke | ac|e y|cin|u k|oŋ | lu| ti|a t|uat|baa|ik |tho|yit|ui |hii|u n|h k|e r|n c|te |kek| lö|l k|h e| lɛ|hin|thö|m e|ɛŋ |n r|n l| et| mi|ëk |i b|ekɔ|era|eŋ |e w|i t|el |ak |nhi|iic|a k|i e|pio| ny|ŋ e| aa|nde|u b|e k|kak|eba|ök |k a| ba| en|ye |lɛŋ| pa|iim|im |köu|e c|rot|e l| le|öŋ |ot |ioc|c t|i m|r e| kö| kɔ|eth|y k|oc |ŋ n|loo|la |iit| el| we| ey|i p|uny| ro|ut | tu|oi |e t|enh|thɛ|m b|hok|pan|k t|ëŋ | wi|yii|tha|wic|pir| li|u e|bik|u c|ën |ynh|y e|lui|eu |ir |y b|nyn|uc |n w|mit| ec|öun|any| aw|ɛt |ɛ̈ɛ| dh| ak|and|loi|wen|l e|höŋ|e e|thë|aku|̈ɛ̈|kut|am |eny|u m|i d|iek|k c| ko|tic|leu| ya|u y|tii| tö| ma|nyo|tö | ew|hök|den|t t|hëë|i n|k y|i c|cit|h t| ed|uee|bai|ɛ̈n|öt |eri|ɛ̈k|awu|rin|a p|cɛ̈|hai|kic|t a| të|tue|cii|hoŋ| bɛ|ooŋ|n p| cɛ|̈k |c l|u p|uk |c y|löi|i a|eke|dhi|wel|thk|eeŋ|öi |elo|n m|r k|ien|om |hom| wa|nho',kde:'na | na| va| wa|la |nu |a k| ku|a w|ila|wa |a v|chi| mu|unu|e n|mun|van|a m|a n|ya |le |ele|sa | ch|asa|amb|ana|was|lam|mbo|ohe|ave| vi|ne |bo |aka|e v|a u|u a| n’|u v|e m|ke |anu| li|ve |vel|ake|ala|hil|ile| pa| av|ng’|a l|he |ing|ene|ela|ili|ika|vil|ngo|vak|ali| di|uku|wun|any|lan|a i|mbe|a a|uni|e a|ama| ma|go |nda|bel|emb|wak|kuw|nya| mw|ola|a d|den|lem|a c| il|ulu|kol|g’a|o v|nji|kan|ji |au |ma | au|lil|mbi|uwu|lik|ye |’an|kuk|din|ula|no |and|umi|kum|eng|ane|dya|ong|o l|ach|mwa|e w| ak|an’|a p|kal|nil|lew|mad|n’n|voh|ilo|wen|aya|apa| vy|kut|ale|va | al|ang|ava|kul|hin|o m|hel|e k|ond|hi | la|lin| lu|idy|dye|u l|da |ole|ka |ani|ndo|ton| in|ewa|lov|o c|dan|u m|cho|uva|ia |pan|kam|we |ove|nan|uko|bi |kav| ya|lim| um|eli|u n|nga|uli|lia|mil|o n|’ch| kw|li | an|aha|dil|ata| dy|e l|n’t|i v|tuk|hoh|u i|hev|ni |niw|und| ul|ade|lel|kay|lon|e u|ino|i n|nje|uwa|she|yik| ly|hum|ako|i w|uma|vya|kwa|ba |’ma|val|kil|mwe|mba|mu |pal|umb|wav|hih|ulo| ka|e c|nde|wal|ima|’ni|lun|ihu|a y|vin|yoh|e i|vyo|inj|u c|kup|kuv| ki| m’|a s|e p|dol|lek|awa|o u|n’c|iwa|imu|anj|mal|yen|u w|yac|bil|oja|o a|ha |utu|ech|i d|uka|taw|n’m|ita|awu|ina|m’m|i a|itu|hon|lu |atu|mak|iku|lya|lit|jel|evo| vo|i l|mah|hap',snn:' ba|ye |bai| ye|ai |e b| ca|ai̱|ia |ji | ne| si|i̱ | go|goa|sia|i n|e c|a y|i y|̱ b| ja|se |aye|i j|a b|jë |iye|e g|re |oa |hua|yë |quë| gu|hue|e̱ |u̱i|gu̱|ne | ma|̱i |je̱|eo |e s| hu| ña|bay|o y|ñe |ja |ajë|to |aij|deo| ñe|a i|ayë|ba | ji|beo|cat| de| be|e j|i s|mai|e e|bi |a ñ| co| e |ato|uë |ña |i g|e ñ|i b| iy|cha|ë b|eba|coa|na | ts|e y|̱je|reb| i | ti|i t|ja̱|ach|ue |e i|i c|ni |oac|e t|a ë| re|je |aiy|oji|eoj|a̱j|oye| ë |ë t|cay|ija|ico|ihu| sa|i d|ere|a c| qu|ahu|iji|ca |ua | yë| to|a h|ase|ues|ë s|aca| se|uai|e d|ese|asi|caj| ai| tu|tut|utu|ë c|yeq|equ| na|cai| i̱|ti |mac|e m|ë g|ebi|a a|ani|tu |e n|yeb|eje|oya|toy|co̱|a m|̱ t|ije|sic|eso|eoy|a t| a | te|haj|cah|oas|are|i m|a s|ehu|añe| da|o b| do|i i|i r|e r|neñ|yer|huë|ë y| o |jai|a j|aje|a g|ibë|ëay|aña|aja|a o|coc|bëa|oca|sos|doi|oi |aco|eñe| jë|ë d|ë j|cas|ëca|hay|ea |̱ g|ari|tsi|yij|sai|̱ c|osi|teo|o h|co |̱re|nej|ëhu|o s|ose|jab|̱ni| me|rib|ñes|si |yaj|jëa|uaj|ë m|dar| yi|oe |e o|nes|i̱r|ma |nij|i h|oja|uëc|ama|ë i|i̱h|o̱u|̱uë|̱hu|aqu|ëco|e a|a̱ |ëja|̱ñe|o̱a|go̱| ëj|ñe̱|tia|abë|sih| bi|tsë|sëc| je| cu|̱ a|ned|cab|a d|ore|me | oi| ro|jay|tso|ë r|eye|ta |bë |ñaj|soe|̱ca|o̱c|año|o c|ire|ohu|uej|ñej|i a|ñas|ë q| ju|ban',kbp:'aa | pa| se|se |na |nɛ | nɛ| yɔ| wa|yʊ | ɛy|ɛ p|ɖɛ |aɖɛ|a ɛ|a w|ɛwɛ|ɛna|yɛ |ala|ɛ ɛ|ɛ s|ɔɔ |yɔɔ|ɩ ɛ| ɛ |paa|e ɛ|e p|ɛyʊ|aɣ | pɩ| ɛw|a p|waɖ|ʊʊ |a n| ta|yɔ |yaa|yɩ |wɛn|la |taa|ʊ w| tɔ|a a|ɔ p|ɛya| kɩ| ɩ |ɩyɛ|a t|ʊ ɛ|a k|wɛɛ|tɔm|ɔm |ɛ t|wal|ʊ n| wɛ| ŋg| tɩ|ɛ n|ɛ k|kpe|ɛ ɖ|maɣ|zɩ | an|ʊ t|ɛ y| pʊ|nɩ | tʊ|ɛyɩ|ɩɣ |ɩ t| we|ɩ y|anɩ| pɔ|a s|gbɛ| pɛ| ɛs|pa |kpa|ɛɛ |wɛ | nɔ|daa|nɔɔ|ʊ y|ama|ya | kʊ|tʊ |pal|mɩy|ayɩ|ɩ p|ɩna|tɩ | ɖɩ|ʊ p|ɔ ɛ| ɛl| mb|ɔ s|ŋgb|a y|ɩma|ɖɩ |ʊ k|ɔɖɔ|ɩ n|bʊ |mbʊ| ɛk| kp|ɛja| ɛj|tʊm|jaɖ|paɣ|kɛ | ye|ɛyɛ|alɩ| na|i ɛ| ke| ya| ɖɔ|ɩ ɖ|ɔɔy|nda|ɖɔ |fɛy|ɣ ɛ|ɩ s|jɛy|yi |ɖɔɖ|ɛla|lɩ |kɩm|kɩ |aŋ |bɛy|pee| ñɩ|lab|ɩzɩ|pe |eyi|ŋ p|ɩ ɩ|ɛzɩ| fa|ɔyʊ|aʊ |ʊmɩ|ʊyʊ|ʊma|a l|sɔɔ|a ɩ|ekp|ʊ s| aj|ajɛ| ɛt|iya|wey|ɩ k|ʊ ŋ|ma |kan|ɩsɩ|laa|ɔyɔ|ɩm |li | kɛ| lɛ|and|sam| sa|ɣtʊ|ɔ k|day|ɔɔl|ɣ p|sɩ |ɔŋ |ɩfɛ|akp|pak|sɩn|pɩf|naa|ndʊ|kul| ha|aɣt|ɔ y|uli| ɖe| kɔ|eek| pe| sɔ|m n|ŋga|ee |ga |ɖʊ |maʊ|m t|e e|ɣna|ɣ s|ŋgʊ|abɩ|akɩ|a ñ|yaɣ|pɩz|eki| ɖo|maŋ| la|yee|ana|tɩŋ|ɣ t|pad|ñɩm| ca|ɛ a|a ɖ|pɩs|ina|dʊʊ|ɖe | ɖa|a m|lɛ |ked| ɛɖ|lak|aka|gʊ |asɩ|ʊ ɖ| ɛd|dʊ |nʊm| nʊ|ñɩn|ba |ɛpɩ|pʊ |ada|ɛhɛ|hal| a |le |zɩɣ|ɛɛn|ɛsɩ| le|aɣz|uu |nɖɩ|e t|ŋ n|ɛda|lɩm|e w|ɔ w|ɩ a| ɛp| nɖ|ɛkɛ|i p|ɣzɩ|alʊ|zaɣ|bɩ |ɛ l|ɩkɛ|ɔ t|e y|ɖam|aaa|pɛw',tem:'yi | yi| ka|a ʌ| tə|uni|ni |wun| ɔ | aŋ| wu|ka | kə| kʌ| ʌŋ|nɛ |kə |tək| ʌm|əkə|ɔŋ |mar| ɔw|a k|ma |i k| a |wa | mʌ|i t|ri |ɔwa|thɔ| th| ma|ari|i m|a a|ʌma|aŋ | o | ba|tha|ba | kɔ|a y|ŋ k|ɔm |‐e | rʌ|lɔm|kɔ |i ɔ|kom|o w|ʌnɛ|te |mʌ | ŋa|i o|əm |hɔf|ɔf |alɔ|om |a m|ɔ b|ɔ y|aŋf|fəm|hal|kəp| mə|ŋfə|ʌth| tʌ|a t|a r|ŋ y|ŋth|ŋa | ʌt|ɔ k|e ɔ|ɛ t| ro|wan|ema| gb|ank| ye|th |yem|nko| mɔ|ʌwa| sɔ|kʌm|m a|kət|ʌmʌ|anɛ|rʌw|ɔ t|ʌme|ʌŋt|me |ʌte| bɛ|hɔ |a ɔ|ki |ʌŋ |m ʌ|m k|ar |ŋ ɔ|yɛ |əth|ɛ ʌ| ta|i a|ta | ʌk|ə k|thi|et |pet|pa |ŋɔŋ| te|ŋe |i ʌ|ra |i r|əpe| ŋɔ|ɛ k|ʌ k| yɔ| rə|kʌt|rʌ | yɛ|bɛ |e a|e t|ro |ɔ ʌ|akə|thə|ɔ m|a‐e|əpa|a w|kəl|ə b|yɔ |ə t|mɔ |bot|ŋ t|e y|əŋ |mʌs|gba|e m|m r| bo|ʌŋe| ak|ɛ a|nʌn|ləŋ|ələ|sɔŋ|ŋ b|təm|wop|ʌ a|ə y|kəs|sek|ə s|tʌt|li |ot | ko|ɛ ŋ|ŋ a|ekr| ra|ɔth|sɔt|ʌse|ath|ru |t k|ɛ m|e k|ɛth|ma‐|po | po| wo|ʌrʌ|i y|m t|m ŋ|tʌŋ|tɔŋ|e w|gbʌ|tə |nth|ʌyi|ʌlə|hən|ʌ ʌ|op |iki|ʌkə|rʌr|ʌru|ŋgb|sɔ |əyi|rʌn|gbə|ɔ a|ər |ɔkɔ| pə| ʌr|ənʌ|ləs|nka|ith|əli|ʌy |bəl|mʌy|ran|o ɔ|ɛ r|ant|f ʌ|mə |ti |f t| tɔ|əs |r k|hi |yik|ɔ ɔ|rək|kar|ʌ t|mʌt|lɔk|ayi|krʌ|pan|na |kʌr|mət|tət|tho|pi |mʌl| to|to | wa|ʌgb|thɛ|ə g|bas|eŋ |aŋk|ɔ r|thʌ|o t|ɛŋ |i‐e|kʌ |kʌs|mɔŋ|o d|kɔŋ|din|ɔ g|kəw|di |ŋ w|əma|ɛr |ʌ y|ək |ŋko',toi:' ku|a k|wa | mu|a m|la |ali|ya |tu |i a|e k|a a|aku|ula|ntu|ang| al|lim|lwa|kwa|aan|mun|mwi|de |ulu|ngu|wi |imw|luk|gul|na |ele| ak|kub|ons|unt|kul|oon|se |ant|nse| oo|zyi|gwa|si | ba|ba | lw|zya|uli|ela|a b| ci| ka| zy|waa|and| an| kw|ili|uki|eel|uba|nyi|ala|kut|ide| ma|kid|isi|uny|i m|kun|cis| ya|li |i k|nga|a l|yin|kuk|ka | ul|kus|ina|laa|nte|ila|tel|mul|wab|wee|nda|izy|ede| am|led|amb|ban|we |da |ana|kwe|e a|lil| bu|o k|bwa|aka|ukw|o a|ati|uko|awo|yan|ko |uci|ilw|bil|bo |a c|wo |amu|law|mbu|i b|bul|umi|ale|abi|kak|e m|u b|akw|u o|ti |sal|kuy|ung|bel|wak| bw|o l|ga |kal|asy|e u|lan| mb|lo |usa|ika|asi|aam|a n|ule|bi |cit|bun|kup|egw|muk|igw|u k|u a|mbi|wii|kum|a z|aci|ku |yi | mi|yo |le |mas|yig|ubu|kka|i c| ab|ene|ne |no |a y| wa|abo|ndi|uta|syo|aya|aba|len|kuc|eya|o y|mal|ind|lem| lu|ukk|mo |eka|mil|mbo|ita|uka|ama|lik|u z|ndu|mu |nzy|zum|bal|abu|upe|bam|syi|u m|liz|int|ta |yak|ley|e b|nzi|lii|kab|uti|ube|uum|i n|cik|ezy|iib|iba|ani|iko|iin|ile|was| ca|zye|alw| aa|sya|uku|twa|min|tal|muc|umu| nk|du |azy|onz|lek|kon|buk|o m|yik|i z|lwe|u u|oba|kwi|imo|gan|zil|del|usu| we|peg|yee|ngw|sum|imb|ump|mpu|nde|end|i o|yoo|o n| nc|a u|mi |ano|uya|o c|di |mba|yil|yal|ako|a o|isy|izu|omb',est:'sel|ja | ja|le |se |ust|ste|use|ise|õig|mis| va|gus|ele|te |igu|us |st |dus| õi| võ| on|on |e j| in|ini|nim|ma |el |a v|iga|ist|ime|al |või|da | te|lik| ig|adu|mes|ami|end|e k|e v|l o| ka|est| ra| se|õi |iku| ko|vab|aba|tus|ud |a k|ese| ku|l i|gal|tsi|lt |es |ema|ida|ks |a i|n õ|lis|atu|rah|tam|ast|sta|e t|s s| mi|ta |ole|stu|bad|ga |val|ine| ta|ne | pe|nda|ell|a t|ali|ava|ada|a p|ik |kus|e s|ioo|tes|ahe|ing|lus| ol|a a|is |vah|a s|ei | ei|kon|vas|tud|ahv|t k|as |a r|s t|e e|i v|eks|oon|t v|oni|kõi|s k|sio|sus|e a|gi |mat|min| pi|s v|oma|kul|dad| ni|e p| om|igi|tel|a j|e o|ndu|dse|lle|ees|tse|uta|vus|aal|aja|i t|dam|ats|ni |ete|pid|pea|e õ|its|lma|lev|nis|dis|ühi|sli|i s|nen|iel|des|de |t i|et |nin|eva|teg|usl|elt|ili|i m|ng | ee|tem|ses|ilm|sek|ab | põ|ait| ne|õrd|sed|võr|ul | üh| ki|abi| kõ|ega|rds| vä|ots| et| ri|põh|ed |töö|si |ad |i k| tä|ata| ab| su|eli| sa|s o|s j|sil|nni|ari|asu|nna| al|nud|uma|sik|hvu|onn|eab|emi|rid|ara|set|e m| ke|a e|täi|d k|s p|i e|imi|eis|e r|na | ül|a ü|koh|a o|aks|s e|e n| so|õik|saa|and|isi|nde|tum|hel|lii|kin|äär|sea|isk|een|ead|dum| kä|rii|rat|lem|umi|kor|sa |idu|mus|rit|har| si|vad|ita|ale|kai|teo| mõ|ade|üks|mas|lse|als|iaa|sia|sot|jal|iig|ite',snk:'an | a | na|na |a n|ga | ga|en | su|re |a k| ka|su |a a|a s| ta|un | se|ta |ma | i |ama|do |e s|ere|ser|aan| do|nan|nta| ra|n s| ma| ki| ja|jam| da|taq|ne |a g|a d| ya|n d|ni | ku|ren|ri | si|ana|u k|n ŋ|ŋa | nt|e k|maa| ŋa|ndi|wa |aqu|ane| ba|ra |a r| sa|oro|n t|raa|tan| ke|oxo| xa|i s|di |a f|and|ti |a b| be|i k|gan|aax|aaw| go|iri|kit|awa|axu|sir|a i| du|a t|me |ara|ya |ini|xo |tta|i a|oll|ran|on |gol|e d|n g|a j|nde|aar|e m|be |a m|ari|u n|lli|ron| fa|qu | ti|n n|aad|axa| ña|o a| so|ke |nu | ko|din|lle|dan|a y|man|i g|sor|u r|i t| no|are|xar|kuu| wa|enm|ada|baa|de |qun|o k|yi |xun|i n|i x| an| ha|kan|fo |att|ang|n k|o s|dam|haa|da |n y|kat|e t|li | fo|i d| mo|nme|u b|i m|aba| fe|len| re|pa |ant|ayi|yan|e n|a x|e y|n b| di|ppa|app|kap|xa |u t|o g|mox|ure| xo|ond|i i|a ñ|n x|taa|du |ell| me|iti|xu |u d|udo|ind|uud|anu|nga|o b|nun|nox|n f|ku |aga|anŋ|dun|itt|eye|ye | bo|ore|ite|u a|oor| yi| ro|sar|saa|ill|e b| wu|le |riy|nma|ro |ken|edd|fed|bur| mu|mun|o n|iin|tey|sel| tu|u m|lla|la |ono|ñaa|den|faa|a w|te |inm|ka |aay| te|ina|xoo|o d|ira|u s|o t|nmu|nen|ban|ene| ni|ña |o i|uur|una|o m|xon|n w|kaf|gu |e g|a h|kil|yu |und|aqi|een| bi|bag|i j|n ñ|laa|i r|no |sig|igi|kor| o |i b|bat',cjk:' ku|a k|yi |nyi| ny|la | mu|wa | ci|a c|a n| ha|we |a m|nga|ga |i k|kul|uli|sa |esw|ana|ela|a h|ung|ha |tel|swe|ze |ya |a u| ka| wa|uci| ya|ate|ci |mwe|kwa|ma |mbu|ji |kut|han|u m| ul|ang| mw|nat|ca | ca|e m|mu |uth|ali|i n|mut|thu|i m|e k|lit|hu |ina|ka |kup|na | ma|asa|aku|e n|a i|pwa|nji|wes|li | mb|e a|ifu|fuc|kan|bun|ize|ing|a y|anj|mba|uta|ita|i u| kw|muk|ite|kus|amb|lin|awa|imb|cip|lim|ong|esa|i c|nge| ak|ngu| ce| an|ili|ulu| na|naw|kuh|ama|upw|emu|lem|ila| un|a a|ula|ukw|aka|cif|ule|wo |has|kun|kha| xi|o n|tam| es|usa|ala|te |u c| ng|iku|cik|lya|wil|e c|ta |xim|wik| li|muc| ly|ikh|no |o m| in|i a|utu|e w|akw|mo |imo|mil| mi|i y|ba |ko |ngi|ufu|ku |lij|uka|iji|a w|umi|o w|tan|o y|e y|imw|ulw|uha|nal|so |o k| ye|i l|e u|umw|bu |aci|lwi|aha|ciz|mwi|kat|lon|u k|yes|ipw|ulo|aze|uni|wak|lo |ema|o c|aco| iz|kum|ika|e i|cim|isa|eny|umu|pem|yum|kwo| ik|kwe|e h|ngw|wam|cin|i h|a e|wan|ge |a x|was|le |kuk|uze|lik|gul|nin|pwe|o u|mah|ata|uma| up|sak|zan| uf|fun|go |wen|mbi|uso|ges|co |ngo|iki|hal|gik|ile|nda|kol|kal|kuz|ne | ja|oze|yoz|ikw|ipe|ces|swa|cis|man|i i|iso|ele|aso|waz|mi |upu| if|ise|umb|uvu|kil| it|i w|sok|o l|oko|nyo|una|bi |tum|iko|ene|hak|sem|a l|da |vul|nyu| ut| uk|eka',ada:'mi |nɛ | nɔ| nɛ| e | he|he |nɔ | a |ɔ n|kɛ | kɛ|i k| ng|a n|i n|aa |e n|blɔ| bl|ɛ n|ɛ e|gɛ |ngɛ|e b|lɔ | ma| mi|ɛ h| ts| ko|hi |ɛ a| ɔ |ko |e h|ɛɛ |tsu| ni|ɔ k|a m|a k|i h|ma | ny|emi|a h|ami| be|be |i a|ya | si|e m|e j| ka|si |ɛ m|ɔ f| kp|nya| je|ni |oo |loo|o n| hi| fɛ|fɛɛ|a t|laa|a b|je |e k| pe|pee| ye|mɛ |umi|ɔ m| ha|a a|ɔmi|omi|kpa| wo|ɔ e|i t|ɛ ɔ|e s|i b|ɔ h| lo|ɛ k|ke |ha |bɔ |maa|mla|i m|ɔ t|ɔ́ |e p|kaa|ahi| sa|lɔh|ɔhi|sum|ɔ a|nɔ́|o e| na| gb|ee |e ɔ| ji|e a|i s| ml|ɛ s|sa | hɛ|ɔɔ |yem|u n|alo| jɔ| ku| lɛ| bɔ| to|a s|ɛ b|i l|lɛ |sua|o k|uaa|a j| su|ɛmi| ad|ɛ y|imi|ade| fa| al|jɔm|des|esa|eɔ |ihi|ji |ne |ɛ t|a e|ɛ j|ake|e e|kak|ngɔ|o a|eem|i j|e y|wo | bu|him|e w|́ k|ɔ y|tom|suɔ|ia |ane|mah| ya|o b| ke|e g|wom|gba|ue |ba | bi| gu|uo |e t|san|uu |pa |hia| tu| hu|suo| we|tsɔ|ɔ s|e f|kuu|gɔ |o m|a p| ja|ɛ p|fa |ɔ b|ɛ g|hɛɛ| ab|a l|hu |ye |na |tue|i ɔ|isi| sɔ|sɔs|jam|gu |ti |ɛ w|sis|o h|uɔ |li |a w| ba|sɔɔ|abɔ| ju| hl|ɔsɔ|hla|ɔ l|a y|sɛ | ɔm|ɔmɛ|i w|ɛti|pɛt|kpɛ|to | yi|asa| kɔ|nyu|akp|pak|kpe|sɔɛ|ɔɛ |u ɔ|yɛm|o s|uɛ | nu|pe |se | sɛ|o j|a g|ɔ w| wa|sem| pu|su |e l| mɛ|u k|hɛ |nih|kas| fɔ|kon|onɛ|bim|lam|imɛ|nyɛ| fi|hiɔ|usu|i p|bi | ní|yo |eeɔ|uam|bum|níh|íhi|o l|ula|kul|guɛ|naa',bin:'e o|ne | ne|be |an |en |vbe| o |wan|mwa|n n|e e|emw|evb|mwe|in |na |e n| na| em|omw|e a|n e|e i| vb|re | ke|gha|gbe|wen| gh|ie |wee| om|e u| kh|bo |hia| ir|ha |o k|nmw|tin|n o|vbo|he |eti|ia |kev| ev| we| et|win|ke |ee |o n| hi|a n|a r|o r|gie|ran| ya|ira|mwi|a m| mw|a g|ghe|ogh| a | re| uh|eke| og|n k| no|ro |ye |khe| ye|hek|rri|nog|een|unm|a k|ogi|egb|ya |ere|wun|hun|mwu| mi|mie|de | rr|a e| ar|a o|n y|e v|o g|un |ra | ot| gb|uhu| ok|n i|ien|a v|rhi|e k|n a|i n|a y| ru|khi|n m|hie| eg|oto|arr|ba |ovb|u a|e y|ru |ian|hi |kpa| ra|o m|nde|yan|e w|and|to |o e|o h| ni| rh|e r|n g| er|n h|ugb|we |hae|on | iy|dom|rue|u e| or| ik|ren|a i|aro|iko|o y|n w|ben|ene|rio|se |i k|uem|ehe| ov|otu|okp|kug|oba|iob| uw|aen| do|iru|ae |tu |ue | iw| ma|wu |rro|o o|rie|n v| ug|a u|nna| al|ugh|agb|pa | ay|o w|ze |uwu|ma | eb|iye|aya|ugi|inn|gho|rre|nii|aku|gba|khu| se|yi |onm|ho |a w|ii |iwi| uy|uyi|e d| i |hin|obo|u o| ak|beh|ebe|uhi|bie|ai |da |i r|gbo|o v|won|mwo|umw| ag|ode| ek| la| um|aan| eh|egh|yin|anm|mo | kp| bi|kom|irr|i e|a a|kha|oda|bon|a d| ow|owa|ghi|n u|o a|yen|eem|ieg| az|aze|hoe| yi|oe |e g|ele|le |lug| ka|aa | as|yaa|gue|a h|mu |nre| od|n r|ero|ese| ku|enr|lel|vbi|wa |u i|a b|oro|bi ',gaa:'mɔ | ni|ni |kɛ |ɛ a| ak|lɛ |i a| he|ɛ m|akɛ| lɛ| ko|gbɛ|ɔ n|ɛɛ | mɔ| kɛ|yɛ |li |ɛ e|ko |ɔ k|i e|aa | yɛ|bɛ | ml|shi|ɛ h|egb| gb|ɔɔ |mli| fɛ|fɛɛ|heg|nɔ |a a|i n|aŋ |oo | nɔ|i k|he |ɛ n| es| am|ɛ k|ɔ y| sh| ma|esa|loo|ji |maŋ|amɛ|emɔ|ɔ f|fee| ek| al|ɛi |ii |ɔ m|ɔ a|bɔ |e n|ɔ l|amɔ| eh|alo|hi |naa|ee |ɔmɔ|oni| en|o n|kon|aji|i y|i m|sa |o a|eli|umɔ| bɔ| hu|yel|hu |eem|nɛɛ|tsu| ah| nɛ|sum|tsɔ| an|nii|o e|baa| as|mɛi|yɔɔ|gbɔ|aaa|na |i h|eye|ɛ g|eɔ |ɛji| at|ana|eko|ena|o h|ŋ n|kom| ts|ɔ e|maj|i s|i l|efe|ome| kp|a l|kwɛ|ku |ehe|toi|a n|saa|bɔm|ha |a m|kɛj|kpa|hew| ku| sa| na|hiɛ| hi|ane|gba|e e|i f| mɛ|ɛ t|bɛi|ash|ŋ k|e k| ej|hey|aka|ats|ne |its|e a|san| ay|ye | je| kr| ey|mla|eŋm|nit|a h|ɔ b|ɛ s|anɔ|ŋmɔ|a e|ɛ b|jeŋ|ɛ y|aan|kro| ab| af|any|iaŋ|ɔ g|a k| yɔ|uɔ |shw|ets|ekɛ|usu|ŋŋ |ŋma|esh|u l| ba| et|iɔ |i j|o k|suɔ|oko| yi|e s| ag|afe|agb|oi |ŋ a|rok|o s| aw|ai | ji|ɛ j|aye|ŋ h|ish|nyɛ|la | ad|o m| ef|tsɛ|sɛ |wɔ |ewɔ|mɔɔ|ehi|aŋm|hwe| bɛ| to|ɔ h|jɛ |aha| ja|paŋ|alɛ|awo|sɔ |ŋts|ɛŋt|iɛŋ|bii|diɛ| di|mɛb|eni|his| ny|e b|hik|u k|ate|i b|ŋmɛ|akw|o y|eŋ |ahe| lo|me |ade|ɔ j|kɛn|teŋ|yeɔ|ɔ s|des| su|wal|nyɔ| eb| eg|ŋ m|mef|saŋ|ɛ l|o l|u n|asa|sem|jia|wɛ | em|o b|gbe|hil|ihi|hih|ɔŋ |nak|e h|sus|e g',kng:' ya|na |ya |a k| na|a y|a m| ku|a n|a b| ba|u y|and|ka | mu|yin|wan|tu | lu|aka| mp|ve | yi|la |ntu| ki|mpe|pe |nda|a l|si |yan|ana|so | ke|e n|ons|nso|di |da |ndi|i y|u n|lu |mun|alu|unt|ina|e y|nza|luv|ala|uve| ma|u m|ke |za |ayi|sal|o m|ban|ndu|ta |isa|kan|ulu|i m|amb|ma |kim|u k|fwa| ny|nyo|yon|ama|ti |ang|anz|du |kus|o y| me|i n|to |ins|nsi|wa |usa| mo|kon|uta|end|i k|uka| bi|a d| ko|mbu|mos|sa | ve|ika|mu |osi|e k|uti|kuz|imp|a v|e m|und|ind| fw|ila| to|pwa|mpw|ngu|bal|adi|ba | sa|len|sam|sik|mab|tin|vwa|mba|kuk| di|yay|a t|yi | le|ant| ka|ata|isi|olo|kis|mut|ula|lo |bu |su | bu| at|amu|o n|dya|kut|dil| nz|ngi|abu|usu|but| nt|ni |bak|kul|e b|nga|e l|inz|imv|gu |wu | dy|lus|awu| ti|lak|bay|bun|kat|ngo|tal|i b|utu|kak|o k|bim|uzi|uza|mvu| ng|nak|iku|baw|esa|kin|ken|yak|mpa|luz|umu|nu |nta|dis|dik|vuk|u f|tan|sad|ati|nka|ank|luk|mak|ong| mb|ani|i l|lwa|aba|luy|uya|yal|ing|zwa|kuv|idi|ku |ga |zit|bis|uvw|uzw| ni|swa| nk|iti|mef|fun|ibu|nsa|aku|ufu|kub|lam|met|i a|mus|eta|a a|u t|twa|atu|tuk|fum|uko|iki|don|kol|kun|bam|eng|uku|ndo| ns|a s|ela|usi|pam|mvw|u b|i t|zo |anu|tis|uke|sul|te |gid|dib|yam|ilw| mf|ola|umb|uso|kam|gi |mbi|oko|nzi|i s| nd|mfu|luf|dus|bum|lut|mam|ded|wil|tad',ndo:'na |oku|wa | na|a o|a n|ka |ntu| uu|tu |uth| om|e o|mba|ong|omu|ba | ok|uut| ne|he |the|ang|hem|emb|unt|o o|a u| wo|nge| iy|ehe|kal| no|a w|o n|no |nga|e n|ko |mun|oka|lo |o i|lon|we |ulu|a m|ala| ke|la |a k|u n|han|ku |gwa|osh|shi|ana|ngu|ilo|ano|ngo|keh| mo|ga |nen|man|ho |luk|tha|ge |gul|u k|eng|ha |a y|elo|uko|a e|ye |hil|uka|li |go |wan|ath|wo |thi|dhi|uun| pa|kwa| ta|a p|ya | sh| ko|nka|lwa| os|mwe|oma|ta |ema|sho| ka|e m| yo|sha|wok|ika|po |o w|onk|e p|pan|ith|a i|opa|gel|hik|iya|hi |aan|una|o g|kuk|alo|o e|nok|ndj|le |a a|men|yom|a s|i n| li|and| po|pam|lat|kan|ash|waa|aka|ame|gam|umb|a t|ond|yuu|o k|olo|ane|ing|igw|aa |ele|kul|mon| gw|ilw|gan|o y|iil|iyo| el|kut|nin|oko|ike|o m| ku|adh| ye|amw|ome|yeh|aye| ga| on| yi|a g|lyo|ne | ng|mbo|opo|kug|eko|yok|wom| oy|non|iye| go|ulo|e e| we| e |ina|ant|omo|ene| a |i k|mok|him| dh|und|ndu| me|eho|wen|nek| op|alu|e g|ima|kat|ota|oye|ila|ngw|yop|wat|ela|o u|a l| ii| ay| nd| th|o l|yon|ili|oon|okw|yaa|taa|lwe|omb| ni|aku|i m|mo |ula|ekw|enw|iyu|pok|epa|uki|ke | wu| mb|meh|e t|uni|nom|dho|pau|eta|yi | ly|o a|ono|lun|lak|ola|yo |lol|ank|bo |i o|awa|nwa|a h|naw|hok|nem|kom|ndo|o s|u t|vet|mbu|ani|uga|ndi|ukw|udh|lok|e k|alw|kwe|kun| ya',quy:'chi|nch|hik|una| ka|anc|kun|man|ana|aq |cha|aku|pas|as |sqa|paq|nan|qa |apa|kan|ikp|ik |ech|spa| de|pa |cho|ere|der|rec|am | ru|an | ma| ch|kpa|asq|ta |na |nam|nak|taq|a k|qan|ina|run|lli|ach|nap|pi |mi | ll|yoq|asp|ima|hay|hin|aqa|nku|ant|ayn|oyo| hi| im|hoy|cio|nta|nas|q k|api|iw |wan|kuy|kay|liw|aci|ion|ipa|lla|oq |npa|ay |kas|a m|nac| na|inc|all|ama|ari|anp| ya|chu| hu|nin|pip|i k|qmi|hon|w r|ata|awa|a c|ota|in |yku|yna| wa|a h|has|a d|iku|a l| li|pan|ich|may| pi| ha|onc|a r|onk| ot|ku | qa|ank|aqm|mun|anm|hu |a p|nma| mu|qta|n h|pap|isq|yni|ikm|ma |wsa|aws|kaw|ibr|bre|lib|ayk|usp|nqa|e k| al|lin|n k|re |ara|nat|yac|kma|war|huk|uwa|yta|hwa|chw| sa|was|kus|yan|m d|kpi|q m|a i|q l|kin|tap|a a|kta|ikt|i c|a s|uy | ca|qaw|uku| tu| re|aqt|ask|qsi|sak|uch|q h|cas|tin|pak|ris|ski|sic|q d|nmi|s l|naq|tuk|mpa|a y|k c|uma|ien|ypi| am|qaq|qap|eqs|ayp|req|qpa|aqp|law|ayt|q c|pun| ni|a q|ruw|i h|haw|n c| pa|amp|par|k h| le|yma|ñun|ern|huñ|nni|n r|anq|map|aya|tar|s m|uñu|ten|val|ura|ita|arm|isu|s c|onn|igu| ri|qku|naw|k l|u l|his|ley|say|s y|rim|aru|rma|sun|ier|s o|qar|n p|a f|a t|esq|n a|oqm|s i|awk| va|w n|hap|lap|kup|i r|kam|uyk|sap| qe|ual|m p|ran|nya|gua| pe| go|gob|maq|sum|ast| su| ig',rmn:'aj |en | te|te | sa| le|aka|pen| si| e |el |ipe|si |kaj|sar| th|and| o |sav|qe |les| ma|es | ha|j t|hak|ja |ar |ave| an|a s|ta |i l|ia |nas| aj|ne | so|imn|mna|sqe|esq|nd |tha|haj|e s|e t|e a|enq|asq|man| ja|kan|e m| i | ta|the|mes|cia|bar|as |isa|utn|qo |hem|o s|s s| me|vel|ark|i t| na|kas|est| ba|s h|avo| di|ard| bi| pe|rka|lo | ak|ika|e r|a a| pr|e k|qi |mat|ima|e p|a t| av|e d|r s|n s|anu|nuś|o t|avi|orr|o a| ka| re|n a|re |aja|e o|sqo|sti| ov|õl |l p|nqe|ere|d o|vor|so |no |dik|rel|ove|n t|ve |e b|res|tim|ren| de|àci|o m|i a|but|len|ali|ari|rre|de | pa|ver| va|sqi|ara|ana|vip|rak|ang|vi | ra|or |ker|i s|eme|e z|ata|e l|a e|rip|rim|akh|la |o p|kar|e h|a p|na |ane|rin|ste|j b|er |ind|ni |tne| ph|nip|r t| ke|ti |are|ndo| je|l a|uśi|e n|khi| bu|kon|lim|al |tar|ekh|jek|àlo|o k| ko|rde|rab|aba| zi|ri |aća|ćar|śik|dõl|dor|on |ano|ven| ni|śaj| śa|khe|ća |ast|j s|uti|uni|tni|naś|i d|mut| po|i p|a m| pu|a l|l s|som|n n|ikh|nik|del|ala|ris|pes|pe |j m|enć|e e|nća|ndi|rdõ|kri|erd|śka|emu|men|alo|nis|aśt|śti|amu|kh |tis|uj |j p|do |ani|ate|nda|o b|nge|o z|soc|a d|muj|o j|da |pri|rdo| as|cie|l t|ro |i r|kla|ing|a j| ze|zen|j e|ziv|hin|aśk| st|maś|ran|pal|khl|mam|i b|oci|rea|l o|nqo| vi|n e',nym:'a k|na | ku| na|ya |a n|la |hu |a b| ba|a m| ya|ila|aki| ha|nhu|wa |hak|ki |le |a h|ga |nga| mu|ban| wi|ja | kw| ki|i n|ang|a w|i y|ele| bu|we |han|aga|unh| ly|kil|lya| wa|mun|ali|ili|a i|u n| ma| ng|kwe|ina|anh|kwi|si |u b|nsi|win|u w|mu | ns|e b|e k|kul|ula|gan|ala|e n|and|ulu| bi|no |iya|ba |ini|lo |yag|gal|yo |se |kub|lu |alu|ha |ose|lul|a l|ule|mo |ani|wiy|e l|lil|gel|ing|li |uli|iha|lwa|akw|ile|ka |ngu|ige|i k|ku |bi |shi|ngi|i j|lag| lu|a y|u k|bal|aya| ja|o n| nu|o y|u a|cha|gi |aba| al| ig|ana|uno| bo|kuj|gun|ubi|wan|lin|ilo|ika|o l|lim|iku|i b|iwa|nil|jo |ng’|aha|zil|nul|wel|kwa|bos|o a|e i|g’w| ga| li|ziw|uma|nzi|ndi|ung|lel|bo |imo|mah|kus|wen|bil|yak|kuk|o g|gil|usa|a u|iwe| we|kup|ilw|abo| il|e w| hu| sh|ma |bul|elo|dik|o k|o b|uba|lek|gwa|sab|kut|nda|da |nha|aka|u m|mba| zi|eng|kuz|gul|lab|agu|anz| nz|nik|ujo|tum|man|kin| yi|umo|e m|iga|a s|ano|hay|ayo|mil|ish|utu|o u|mal| ul|i w|lis| um|o m|iki|agw|ne |uga| ch|lug|i l|nza| ib|bun|agi|ni |ngo|ye |uko|oba|bya|ndy|ene|asa|bas| ik|zi |o h|azi|mas|ko |biy|uja|uku|i m|imu|som|e h|elw|iyo|iso|za |i i|yi |yin|u l|ngw|uhu|lwe|bak|iba|pan|upa|sha|nel|ash|ima|atu|bad|yal| i |sho| mi|ho |fay|afa|maf|o w|kal|kim|w’i|wib|go |’ik',sus:'xa |axa|ma |a a| ma| xa|ama| na|an | a |ra |un | sa|ada|xan|a x|ya |nun|a n|xi |ui |a m| nu| ax|iri|di |dam| ad|i n| ra|fe | bi|de |yi |in |lan|bir|rin|bɛ |a b|a s| bɛ|nyi|nax|n a| fe| mu|ari|na |i b|a f|mu |ara|kui| ku| ɲa|man|nde|dax|sar|a k| wa| la|ɛe |nɛ |xun|ɛtɛ| ba|i a|ndi|n m|iyɛ|ayi|aya|fer|ali|era|a y|n n|riy|n b|aba|ɛ a|adi| xu|mad| fa|i s|any|amu|ɲam|n f|una|iya|e m|ana|li |ɛ n|i m|ɛ s|ala|e n|e x|e b|ɔtɔ|sab|n x| nd|bar| yi|wal|ati|sɔt| e |i k|en |afe|i x|nam| da|ixi| sɔ|nxi|kan| ya|bun|a l|tɛ |nad|ima| ki|axi|ti | su|ie |yib| yɛ|e s|mas|inɛ|e r| fi|yɛt|ira|ibi|anɛ|ɛ m|mal|and|yɛe| bɔ| mi|may|a ɲ| nɔ|ras|den|biy|way| gb|tɔ |aga|nma|asa|ase|sen|ɛra|a d|gi |ɛ k|a w|ind|ere|yir| di|i d| ko|ibu| ib|ank|mak|ɔxi|fan|ɔma|i r|e f|yɛ |i f|abu|kim|nɔm|tin|e y|n s|on |xin|bat| ke|e k|bɔx|gan|uga|sug|alu|sa |aka|n y|ant|xaf|fin|awa| al|ta |eya| de|ban|anx|tɛr|und|i y|mix|ɛrɛ|yo |n l| ta|ren|ide|e a|mui|nba|ker|a t|rɛ |lon|olo|kol|u n|ga |ri |bɛt| fu| an|ee |nka|nan| si|rat|afa|u a| am| yo|mɛ | so|yam|o m|mun|o n|gbɛ|mul|a r|lui|ni | ti|xɛ |ɛ b|end|axe|ɲɛ |e t|ral|n k|e l|n d|xam|far|ba |ɲax|rab|n ɲ|ɛ d|i g|ɛ f|iny|lu |inx|ndɛ| xi|a e|tey|tan|i t|nni| fo|ɛ r|ndo|iɲɛ| i |raf|i ɲ|a i',ven:'na | na| vh|a m| mu|ha | u |wa |tsh|a n|a u|we |hu | ts|vha|nga| ya|ya |a v|lo |vhu|ṅwe| dz|thu|ane|ho |ana|o y| kh|shi|a t|ga | pf|e n| zw|elo|uṅw|sha|muṅ|nel|a p|ne |fan| ng|pfa|uth|a k|edz|kha|u n|dza|ele| a |mut|aho|zwa|a h| ha| ka|kan|o n|a z| hu| mb|dzi|la |vho|wo |za |zwi|ang|i n|fho|han|hum|u v|lwa|ela|a d|e u|u m|o d|u t|mul|olo|aka|ḓo | wa|o v|hol|e a|ofh|u s|no |si |gan|mbo|hi |ano|he |zo |shu|o k|ula|hak|low|zi |ka |led|lel| ḓo| ma| sh|bof| i |o m|hat|e k|dzw|yo |o t|o h|ngo|owo|elw|tsi|rel|ath|o i|a s|hon|its|sa |dzo| te|awe| mi| nd|go |a i|mba|avh|umb|isa|wi |hil|iṅw|ing|nah|unz|ni |and|i h|ine|a l|mis|e v| lu|i k|e m|swa|ṱhe| ḽa|li |mbu|i t|a y|vel|a ḓ|one|dzh| ḓi|ush|evh| fh|lan|hut|uts|alo| si|oṱh|het| an|amb| it|sir|ire|vhe|u k|nḓa|ea |mo |eth|tea|ḓa |u a|wan| bv|o a|ila|nda|ri | sa|o ḽ|i m|hus|zan|ndu|fha|uri|ou |ḽa |ivh|umi|ulo|adz|a a| ur|wah|fun|khe|a ṱ|isw|le |i v|ayo|she|e y|kon|hen|hul|o u|o w|ule|zit|anḓ|thi| ny|hun|hel|ung|i ḓ|uvh|a f|u d|bve|kat|hal|hav|ura|u w|nyi|pfu|lay| ho|iwa|tel|u h| ṱh|oni| o | ko|mbe|mus|hin|alu| th|san|u ḓ|zwo|huk| fa|u i| ṱa|zhi|du |o z|hit|udz| yo|usi|a w| ḽi|pha|lev|mir|eli|i i|u ṱ| iṅ|hoṱ|win|hed|so |ira|hir|ṱho|mur|ala| li',srr:'na | a |aa | o | mb| wa|ke | na| ke|war| ka|mba|a w|a a|a n|and| no| re|no |ref|baa|ax |at |aat|en |fna|e n|in |a j|waa|a f| te|kaa|jeg|een|a o|uu |am |aax| fa|um |nd | je|efn| ne| sa|ara|o k|a t|el |u r|too|aag|iin|oor| um|a k| fo|mbo| ta|saa|ne |a m|le | ni| le|te |e m|ni |or |e w| an| ox|oxu|ta |xuu|kam|o ñ|ng | nd|oo |fa |a d|rna| de| ng|ra |a p|ee |gna|ñoo|e a|eg |tee|o n|n n|oow| ño|aan|g o| ye| ca| ma|a c|ang|maa| to|una|oox|nda| ki|t o|it |oon|kii|ga |eng|nee| nj|den| ña|n a|ato|kat|m a|m n|len|t n|yee|op |dna| fi|raa|boo| bo|gee|o l|o a|oka|a s| la|arn|ow |r n| da|o m|naa| ja|o j|a b|fi |nga|gaa|egn|ef |a y|uun|aga|eer|a l|fop|bug| ya|bok|an | we|o t| al|eeg|a r| mu|are| jo|e f|ox |bod|aak|t k|ir |ñaa|i m|a ñ|x l|m o|o x|ndi|we |n o| fe|bar|ala|t a|l n|e t|laa|ena|ak | pi| i |gen|ay | xa|m m|n f|adn|pi |gni|ake| ak|f a|nan|ale|g w|eet|ona|nit|d n|d o|i k|jof|o y|e x|du |koo|fog| aa|iid|ern|il |u n| yi|yii|r k|iif|taa| ad|ag |a x|nde|aru|lay|i a|et | xo|xoo|e y|kee|p m|x a|noo| nu|paa| pa|aam|g n|og |ate| ge|can|if |fee|nge|wii|yaa| bu|ugn|e k|dax|re |o s|daa|ene|a ɓ|jal|ap |doo| do| xe|ina|n k| mo|nuu|xe |aar|ako|luw|uwa|u t|ɓis|aay|d u|all|as |moƴ| ga|e o|x o|l k|p a|odu',kha:' ka|ka |a k| ba| ki|ing| ji|ki |jin|ng |ei | ïa|an |ong|ad |a j|ba |ïa |ban|bad|i k|ha | la|wei| ha| py|ne |ok |pyn| sh|hok| ho|ang|ah |don|sha|lon|a b|a l| do|g k|on |la |a h|n k|i b|ew | pa|iew|i d|d k|rie| ne|i p|iñ |a s|am |da |oh |kaw|awe|k b| lo|ait| kh|i h|ar |uwe| uw|e k|aiñ|kan|id |lan| ma| ri| jo|jon|ai |lui|lai|d b| ky|na |uid|ri |ngï|itl|tlu|a ï|pa |h ï|n ï|kum|ynt|m k| sa|bri|ngl|m b|h k|hah|no | da| ku|ngs|at |eh |uh |kam|gïa|n p|kyn|o k| ai|dei|ynr|ano|or |h b|ngp|a r|i l|em |i n|a d| de|i j|kha|ngb|n l|ngk|yns|man|ïoh| by|aba|a m|r b|a p|byn| na|kab|um |kat|shi|t k|g b|d j|sah|pyr|ïad|i s|mar|m d|ym |hla|gpy| ïo|leh|rai|g s|it |ada|syn|ane|a n|r k|yng| hi|gla|ta |om |non|ngt|m j|im |h p|ynb|w b| sy|sho|k k| ym|har|n b| im|i r|n s|hei|mla|a i|a t|hon|ahl|yll|nsh|iml| u |nra|nge|khl|anb|gka|ap |ynj|g h|n j|ryn|e b|h h|lem|bar|the|t h|a a|uk |nia|d h|t b|iba| no|kib|nta| ni|aid|en | be|eng|tre|m ï|glo|nbr|aw |gbr|ot |hi |alo|rei|i u|be |hap|ti | le|ngn|d p|ra |un |bah|ynï| tr|w m|e a|khe| bu|ngi|thu|lah|ïar|bor| ja|huh|n u|nri|him|ngm| br|ian| se|nth|yrs|pat|tyn|bna|nbn|kyr|dan|lad| ty| ta| pu|gsh|rsh|g j|e j|rim|h s|bha|m s|ngd|ñ k|yrd|k l|w k|hle|h n|g u|roh|aro|bym',hea:'it |ix |ib |aix|ang|ong|aib|if | la|id |lai| li| do|ot |ef |f l| no|ait|non| ye| ba| da|ol |t d|of | di|aif|t y|dol|et |uai|nx |ngb|gb |lit| qu|mai| ma|ax | ja| go|gf |ngf|enx|b d|qua|hai|ngd|gd |il |f j|ail| ai| ha| hu|t n|x d|dai|t h|ban| se| na| zi| ax|nen|ab | ne| de|d n| gh|t l|x l|nai|ul |nt |t g|x q| xi|nf |ngt|gt | ni|x m|yef|dio|l n|gof|eet|zit|b z|ian|x b| ji| za|gid|ent|t z| gi|f d|ut |yen| id|b g|ns |eef|ngx| xe|gx |hul|nia|ens|d d| je|jab|iee|is |f g|ox | fa|x n|nb |b n|s d|l d|enb|t j| ho|gha|d g|dei|dot|aot|b h|ud | ze|xid|gl |ngl|t a|af |b j|f h|x s|uit| vu|zen| pi|el |eix|f b|f z|x j|t x|uf |t b|eis|x g|as |d h|bao|b l|os |iot| ju|l h| xa| si|xen|aox|d a|f n| ga|t s|f s| mo|s h|f x|inf|l g|ob |ios|l x|enf|gon|xan| zo|x h|x z|x x|gs |ngs|mon|ux |faf|gai| yi|jao|die|ad |hof| bi|d l|ghe|b b|b f|x a|l a|at |zas| du|xit|b s|see| hv|l j| be|t f|hui|d m|f y| fu|b x| ya|zai|t v|l z|sei|iao|jib| sa|x y|zon|sen|lif|s n|b a|sai|iel|eb |aob|aid|x p|set|jee|xee| lo|nd |jan|f q|jef|ub | gu|s g|hot|cai| ca|pin|s l|ben| zu|f a|end|den|ex |hei| wi|jif| hf|fut|lie|yit|lol| ve|d b|dad|us |jus|t i|x f|f m| ib| su| ge|l q|jub|es |b y|sit|lix|x i|s a|yan|f t|vut| ti|t c|fud|jit| hx|t m',gkp:'aa | ma|a k|maa| a | nu| ə | kɛ|i h| di|kɛ | hu|la |a n|le |ei |ala| hw|li | lɔ|di |ɔi | ka|ɛli|i k|an |ɔn | yi|ele| da|kaa|da |hu |ɛi |ɓa |aal| mɛ|ɛni|mɛn|pɛl|laa|i l| la|ni |ə k|kel| kp| yɛ|nuk|i ə|a h|a p| ye|ɔɔ |a l|ə m| pɛ|lɔi|lə |nɛ |ti |ii |ɓo |i a|i y|a m|yii|ai |ələ|a y|hwə|nu |yei|ɔlɔ| ŋɔ|a d|gbɔ|aan|i d|kpɔ|ma |ɛnɛ|i m|pəl| ɲe|u m|n n|hwa|wə |ɛ a|e y| ga|lɛ |a t| ti| pə| ɲɛ|ili| gɛ| ɓa|n m|gaa|i g|yɛ |ɛ ə|uke|ɲɛi| ke|olo|ɲei|ulo|ɓə |a ɲ|u y| tɔ|ŋɔɔ|bɔɔ| ɓə|i n|lon|aak|yi |yɛn|ɛ l|wa |a ə|ɔpe| lɛ|ɔ l|uka|i ɲ|lo |anɛ|a ɓ|ŋaa|lɔp|kan|naa|u d|u k| ɲa|i t|ee | lo|kol|əlɛ|ɔɓo|n d|ɔ k|ə g|ju | gb|ə p| kɔ| əl| ni| dɔ|iə |nua|ə l| ko|kpɛ|a a|lɔɓ|nii|ɛ y|ɔɔi|ui |na |ɔɓa| ŋa| ta|woo|n g|lɔ |ɛn |i ŋ|ɛgb|iiɓ|ə h|i ɓ|ɛ m|tɔɔ| ju|mak|ɔɔɓ|a ŋ|iɓa|ɔma|kul|ɛlɛ|un | nɔ|ɛ k|ɛ d|pɔn|n ɲ| ya|mɛi|kɛn|wai|ɔŋɔ|a g|ŋɔ |ta |wɛl| ɓo|nui|akɛ| ki|gɛ |ɲaa|nna|wɔ |nɔi| gu|oo |ɔwɔ|ɛ n| na|lɛg|lan| li|wal|kɛi|nut| ku| jɔ|yil|tɔn|e d|lu |ɔnɔ|pe |onn|akw|ə n|əla|a w|e h|kɛm| hɔ|əle|n ŋ|owa|ɛ g| mə|pee|aam|ila|uan| nɛ|ə d|pɔ |o m|mu | tɛ|pɔm|kil|oi | ge|akp| he|uta|tɔ |ɛna|ɛti|ɔ t|n y| ho|diə|ɔ g|awo|əli|mun|u h|ɛyi|kɔŋ|ɔ m|low|e l|dɔn|kəl| kə|liɲ|iɲa|ɲah|ə t|nɔn|ilə|ulu|ahi|hɔl|ama|on |lɔn|a j|e ɓ|lok| ŋu',hni:'aq |ol |iq |il |ei |eil|nei| e |aol|al |oq |uq |sol|vq |aoq|l l| ss| ma|q m| la|mei|yuq|liq| li|l m| me|hha|maq| aq|eiq|sso|q s|q b|col|lne| co|l e|q l|q a|pyu| ne| qi| hh| bi| yo|q h|bi |oln| mi| ha|yoq|haq|q e|iei|lei|av |q y|aqs| le|qso|ovq|qiq|goq| ng|nga|hal| za|uv | xi|miq|l n|oqj|laq|qhh|ivq|saq|ul |l h|q q| mo|ha |yul| go|oqh|q n| ao|xil|l a|olp|avq|lpy|gao|lal| al| da|lao| ya|jal| hu| ta|qja|i h|ssa|nie|zao|aqn|hao|mee|l q|mov| bo|q x| ba| ei|duv|bo |doq|ma |zaq|l y|eeq|v l|e c|eiv|q c|a l|ild|yao|q d| na|aln|qni|i z|jol| ka|l d|duq|zei|l z|dei| lo|iqn|a b|ev | de| sa|hho|uvq|l s|q k|q z|v n|if |gee|kao|ldu|a m|so |lav|e n|i n|i y| ce|i s|qla|i m|qiv|taq| py|ga |eq | zo|zol| du|huv|l b|i l|qa |i c|iv | ni|hyu|aql|qli|el |l k| ga|o m|mia|oqp|lme|qo |qpy|q p|v m|oqg| qa| si|ldo|e m|nyu|lha| ze|qle|q t|ya |a g|cei|q g| qo|faq|i a|mil|dal|jav|eel|ov |vql|l t|i d|qnu| ko|nu | pa|aqh|qdu|hov|l c|nee|o q|lo |olq|hoq|qho| so|loq|o l| jo|siq| do|iao|a s|zyu|alm| ja|lee|bal|oql|yu |old| fa|a n|hu |i g|e g|olk|dav|hav|qha|dao|aqy|iqz|gal|kov|nao|l p|nia|iqh|qji|hol|yo |yil|soq|e s|lja|eev|lka|lla|l x|v s|tao|v d|ilm|aqm|e d|e z|nge|lss|u n|ao |dyu|e q|i q|mol|ilh|mav| gu|l g|qgo|q j',yua:' u |al |aʼa|l u|ʼal| tu|áak|il |oʼo|u k|ak |el | ka| ye|yet|ete|tel|an |ik |máa|tiʼ|l m|ʼob| ku| be|k u|l t|ob | má|aj |láa|kaa|naj|u t|tal| ti|u n|kal|aka|eʼ |n u|eʼe| kʼ|l y| wa| na|wa |tul|u b|ulá| le|baʼ|l w|iʼ |aan| je|maʼ|aaj|jal|l k|jeʼ|le |ajm|ala|jma|nal|ʼ u| si| ma|en |kʼa| dz| ba|tik|maj|jil|bee|ali|taʼ|aja|ʼan|kaʼ| ch|u y|uch|ijn|tu |loʼ|kux|lil|aji|jna| ya|sij|xta|uxt|ʼa |u c|een|aʼ |laʼ|ku |ume|tum|mee|ʼ t|k y|saʼ|ʼaa|ʼe |tʼa|eet|bey|ini|u m|wíi|nik|l b|íin|uʼu| wí| mi|bes|iʼa|sik|ʼaʼ|u d|mal|kbe|j t|dzo|nil|alo|ich| tʼ| ja|táa| tá|leʼ|chi|ʼab|mix|oʼ |ant|eti|ax |chʼ|zoʼ|bal|b t|una|hil|ol |k t|alm|x k|eya|j u|iʼi|áan|ʼok|koʼ|ach|ili|boʼ|l l|x u|u p|yóo| yó|ʼol|n t|lma|u j|e b| me|yaj|esa| un|ʼ m|xan|ani|et |mat|olt|l j|noʼ|uun|k k|nta|e n|tma|atm|ʼ k|a u|mey|yaa|ey |ajt|kul|tzi|áax|okb| no|lti| xa|lal| nu|u l| ju|cha|ʼat|lak| ic|lta|aba|iku|tuʼ|áat|ch |xak|okʼ|zil|kʼo|kil|akʼ|ʼux| aʼ|teʼ|k s|óok|áaj|chí|híi|n k|b y|íim|e m|ʼax|uku|a m|l s| uc|jta|t u|naʼ|beʼ|páa|ʼáa|joʼ|iko| pá|hak|kuu|imp|ʼ b|mpo|pol|úuc|abe|eyt|ul |kub|uba|óol|kʼá|a t|ana|y j|n j|ex |ixm|ix |xmá|ʼac|tan| pa|ajo| bo|jaʼ|uns|akp|kpa|paj|bet|l x|ata|a j|kʼi|ux |ʼ l|aab|chk|pʼé|ʼée|éel| ke|ʼ y|ʼex|ab ',fij:'na |aka|a n| na|ni | va| ni|vak|ata| me|a v| ke|me |a k|i n|ua |ena|a e| e | ta|ra | en|mat| do|onu|ka |nu |don|ala|ta |odo|dod|a m|i v|e v|ai |ei |ina| se| ga|u n| no|ama|ki |la |kei|se |aki|ga |tak|a s|vei|ale|i t|a d|a t| ve| ca|e d|tam| vu|anu|a l|tik|i m|ce |e m|kec|ece| ma| le|ara|iko|cak|i k| ki|dua|van|tu |i e|le |nua|wa |a g| qa|awa|e n|lew|kin|ona|non|a i|tau| sa|qai| du|e k|dra|era| ya|tal|uta|e t|e s|ita|nod|ko |kat|ani| it|iva|i d|odr|itu|u m|ura|lal|nak|aca|gal|aut|ula|bul|law|kai|uva|au |e g| ra|vin|a q| ku|kad|ewe|kac| la|o e|mer|avu|va |u k| vi|oqo|ava|kua|tan|uku|vur|kav|li | ti|e e|adu|aga|i s|vat|e l| ka|qo |ma |ito|a y|oka| oq|nit|oma|iti|a o|uli|e c|avi|aba|ewa|ega|dui|asa|a r|seg|a c|vuk|vul|oti|rav|ken|vu |sau|u e|kot|ya |cal|vi |i c|auv|e b|kas|i b|utu|oya|i l|rar|eni|sa |eit|kam|ke |ait| bu|u v| tu|kab|dok|rau|val|o n|o k|tab|ku |taq|qom|ri |we | so|ila|ima|aqo|i i|igi|dig|tov|lai|ti |evu|lev|o v|ovo|wen|niv| ko|yal|eiv|abu|lat|e r|uri| er|abo|bos|ado|vo |cav|tuk|ose|u s|una|mak|kar|koy|mur|ira| be|uit|ci |rai|ba | lo|tav|sag|ali|vuv|gi |oli|yad|ola|rab|lit|idu|uke|wat| di|kil|gau|aun|iki|aqa|ia |uid|eim| vo|yag|e i|kaw|mai|iya|num|oto|oni|nan|lot|otu|idi',fur:' di| de| e |di | in|al |ion| la| ch|rit|eri|e d|zio|is |che|tât| a |la |de |der|ât |on |t d|ts |ndi|ne | al|gni| co| pa|ind|te |i i|ui |azi|he |ogn|ni | li|it |ssi|i a|e p|âl |si | un|i d|e i| da|in |ivi|e c| og| cu|nt |e l| à |div|à d|s d|par|idu|vid|dui|e s|i p| si|s e|i c| pr|un |t c|e e|a l|l à|ce | i |une| o | so|lib|ess|ent|ns |ar |i s|e a|tri|con|int|a s|itâ|ai |naz|ibe|n c|nce|n d| je|il |ber|pro|its|l d|t a| il|ste|rtâ|ris| st|dal|ons|ign|ert|dis| na|es | du|s l|ût | no| ri|com|ri |ant| sô|son|ers|ont|enc|res| ma|est|hes|sô |e o|ie | pe|per|soc|s n|men| po|i g|cj | an|s a|nis|e n|dai|i v|cla|sun|âts|uni|je |iss|s o|e t|an |ins|ich| ta|oci|anc|s c| ti|no |ssu| fa|n p|ate| ni|t e|l o|tig|i l|jes|nâl|re |duc|e j|fat|e u|a a|sti| vi|ame|ter|n e| gj|des|ch’|s p|uzi|din|sis|l s|tis|me |ond|str|iet|n a|ôr |tra|rso|idi|gje| se|ntr|ran|sie|ucj|art|nst|ara| re|nit|uin|a c|lis|ei |n o|nte|n s|l e|ntâ| om|i f|o s| te|vit|onâ|e m|ltr|n i|alt|a i|a d|h’a|pò |ade| pò|ist|imp|l p|man| ju|ome|e r| pu|gjo| cj|ari|tru| me|i o|ric|se |oss|ite|i r|dec|raz|lit|ass|s t|nde|t p| ce|sta|r d| fo|om |cul|ali|cen|vôr|l c|t o|stâ|bar|one|fon|nda|tan|tal|ruz|cja|fin|e f|ciâ|ern|t l|e b| le|iâl|i n|etâ',tet:'tu | ho| ha|ia |ha | ih|iha|a h|ma |an |nia| ni| di|ema| em|eit|itu|ho |un |ire|dir|a d|rei| ba|ida| at|ba |otu|hot|ade|a n|aun|atu|dad|u h|de |sau|asa| li| ka|u i| la|ka |la |hal| ne|a i|alu|tan|han|a s| mo|lu |al | se|ir |ne |os |esa| tu|san|e e|n h|da |tui| id|ane|u a|uir|a l|e h| ra|ai | sa|us | te|u b|n i|a t|rai|i h| e |e n|nes|in | ta|ak |lib|nas|ten|a e|ibe|ber|rda|erd|a k|nal|u n| no|sia| na|ki |mos|s h|ens|aso| hu| pr|ara|ras|ebe|bel|be | de|n n| si|a r|u t|ele|enk|nki|n t|tus|u s|nte|n e|le |a f|nid|asi|o l|o m|neb|ona| ma|no |ori| in|sos|ran|uk |ter|ent|ra |hat| be|ei |u e|a b|sa |du | re|a m|usi|as |uni|ira|ali|lei| so|osi|hus| es|abe|n b|sio|a a| fo|luk|men|mor|ion|ata|res|des|s l|at |nsi|rbi|is |iu |e a|lia|es |ate|has|ik | ko|u k|mak|ru |eta|a o|te |s n| he|lar|int|ama|ari| le|ala|sor|si |n l|ris|lab|n s|iku|i n|su |o h|hah|e b|k h|u r|oin|r l|re |soe| me|oen|ser|a p|ns |pro|rim|i s|erb|ili|liu|sal|man|ese|isu| fa|ial|ura|n a| fi|oru|ina|e i|cas|i e|bis|het|n k|u m| lo| ed| to|e t|lid|edu|duc|uca|elu|e k|imi|sir| un|tam|e d|sie|ano|har|en |ku |s b|s e|aha|mun|esp|est|rik|r h|are|era|ral|o d|pri|hir|ime|n d|u p| bu|uma|ern|iar|ar |a u|fo |mu |se |imu|ati|rel|sim|kri',wln:' l |ès | dè| qu|t d|èt | d | di|ou |eût| po| èt|s d| a |on |es |reû|dè |qu |nt |ût |e d| dr|dre| to|me |ns |di |t l|min|po |tot| on| s |te | ès|lès|s l|dès|er | lè|ot |s è|sse|ins|ion| co|qui|se | ou|int| ch|i s| mi| i |ui |ts |n a|cha|e è|a l|cio|ont|l d| pr|de |ome|u q|té |i l|s p|nde|ne |le |è l|u i|çou| ço|s c|èss|e p|vin|e q|in |ske|keu|re | in|ce |l m|s q| lî|ye |has|ask|nme|un |eun|inm|e o| li|ant| so|s o| si|st |i p| ma|e l| no|s s| sè|èst| n |s n| pa| av|e s|ond|n d|åci| èn|ind|out| vi|ut |e m|ûts|li |is | mè|ons|com| mo|eûr|t a|és |t s|mèt|lîb|us |u d|div|con|e c|e t|rin| om| ni| de|pou|t c|pay|ôte|sès| r |é d|îre|i d|l a|s m|t p|vou|ayi|yis|e a| ri|deû|leû|i t| ne|ole| vo| ôt|ine|fé |pro| fé|d i|èye|man|u è|dje| ra|n è|mon|bin|n p|rté|s a|ûr | le|tch|r d|ènn|tes|ète|si | bi|ité|je |ivi| bo|è p|s t|l o|nte|tés|nce|l p| il|nîr|dis|s r|îbe|d è|bon|lu |os |n l|sin|djî|u l| fo|anî|rès|u b| rè|nn |wè | dj|il |ote|o l|t f|nin|n c|l s|pôr|and|ber|r l|e r|t è| ci|t t|sco| è |ale|k n|u o|t m|jî |pri|tos|ni |î d|les|èdj|ert|vol|o ç|r p|eû | pô|n n|n m|rt |r è|ice|mes|nol|t n|i v|wèr|è t| tc|t q|noh|t o|tin| pu|i n|ous|avo|d l| å | nå|a d|son|i r|d v|n s| se|n o|l c|o d|s i|êye|cis',eus:'ko |eta|en |ta | et|eko|ide|a e|an |bid| es|o e|esk|sku|iza|n e| ba|ubi| be|kub|tze|ea |era|ber|na |dea| du|rri|art| ez|asu|ak |sun|ren|tas| er|tek|ako|zek|arr|ald|ntz|ik | iz|a b|ere|atu|n a|tza|ate| da|ez |k e|a a|giz| gi|ask|rte| or|ra |abe|are|a i|ert|n b|ria|oro|de | he| as|du |e e|te | ed|edo|a d|nor|a o|za |re |k d|egi|koa|err|rre|zat| de|zar|oa |o b|ean|ri |o d|kat|una|ona|go |rts|ek |do | pe|zko|o a|rok|tso|rra|ari|ezk| di|rik| au|a g| eg|kon|son|tu |u e|lde|per|zan|est|orr|her|atz| al| ja|bes|n d| na| ga|ska|ngo| ar|n h|ten|z e|ok |ita|bat|ata| ha| no| la| in| bi|itz|dut|lan|ezi|aur|int|ien|uzt|ia |da |a h|rak|azi|ont|la |unt|a n|tat| ho|io |ino|k g|tan|ste|bai|ute|rta|har|e h|n i|tik|tea|tua|eri|ite|une|ela|itu|a p|tak|a l|rat|nar|iar|gin| ko|gab|kun|ika|tzi|i e|in |zio|den|izk| gu|rtz|raz|un |hor|ema|eza|k b| za| em|ait|ori|ina|pen|urr|e b|a j|rbe|zti|guz|zin|uan|naz|ago|dez|ker|zen|nah|nta|be |leg|ter|iak|rit|ial|kar|ahi|ara|nik|ang|ioa|zai|ena| le|dar|dee|ege|ira|git|aku|ket|iko|aio|din|dir|lda|dag|ati|nak|kor|rka|nez|orb|uen|del|u b|n o|adi|ske|lak|o l|ani|zia|hau|uru|a z|tar|or |urk|aki|die|ene|aso|oin|bak| oi|i d|ndu|e g|ing|ear|o g|beh|agu|a k|z g|ana|tuz|ort|iz ',nbl:' lo|lo |nge|oku|mun|elo|o l|ung|nye|lok|ye |lel|ntu|tu |la |lun|e l|gel| ku|we |e u|akh|nga| le|aba|ule|khe|ban|unt|uny|wa | um|omu| la|he |a l|yo |ama| ng| uk|uku|uth|ele|ni |le |elw|zwe|a u|lwa|ath|umu|pha| ul|a k|elu|wen|eni|i l|kut|ezi|e a|kum|hi |kho|ela|ho |ba |ulu|ume|mel|na |ke | ab|onk| ba|nke|thi|lul|tsh|lom|eng|eyo|e i|ana|the|enz|a n|o e|o k|eth|zi |any|ala|a a|kwa|lob|a i| am|iph|e n|ant|a e| kw|izw|ane|e k|o a|ndl|het|eli|kul|mal|ang| om|ukh|lwe|alu|tha|hul|o o|kel|ha |kub|uhl|kwe|aka|o u|isa|hat| nj|len|ise|kuz|tho|kuh|thu|ben|wan|hla|alo| ez|and| yi|hwe|liz|i k|man|i a| wo|lek|oba|u u|khu|kun|won|lab|lan|i u|sa |be |hol|uba|li |izi|hlo| ak|nku| in| im|ko |und|thw|lak|ze |isi|ebe|bo |shw|sek|eke|ngo| em|mth|ayo|seb|so |ahl|hlu|fun|gan|mbe|ndo|do |vum|aph|ase|phi| ub|ley|oni|esi|mba|lem|yan|a y|nzi|azi|e e|cal|nja|kuk|o y| ka|nza|iso|ots|lon|eko|ngi|za |aku|enk|kus|kat|ga | ya|azw|zim|i y|ubu|umb|wak|hwa|e b|u o|ing|uma|jal|abe|e o|dle|yak|akw|lin| ol|o z| iz|nda|ney|gen|uli|ind|ham|u b| ye|ale|lez|u l|ziz|uph|luk|nje|ali| yo|uze|ano| ok|hon|no |zak|hen|han|wab| en|les|ili| is|okw|kup|ekh|yis|fan|maz|bal|nya|hel|nel|e w|bak|abo|e y|eze|hak|gab|dla|o b|hle|ilo|end| ph',cym:' i | a | y |ol |yn |dd |au |an |ydd| ha| ga|gan|awl|haw| yn|th |eth|aet| cy|eu |edd| gy|ddi|rhy|ith| rh| un|l a| ma|y m|l i|mae|ad |wl |wb |awb|ae | ba|n b|nol| ne|e g|iau|baw|iad| dd|hyd|ddy|wn |eit|n a|d y| eu|lia| r |yw | gw|id |od | ac|d a|n y|u h|ac |oed|edi|n g|l y|u a|neu|wyd| ym| o |b h|nrh|rwy|tha|ddo|nia|ll |dyl|wli|i d| dy| na|hyw|iae|yd |red| sy|a r|ymd|unr|cyf|r h|i a| ch|ni |fre|fyn|u c|d g|dei| ar|edl|gyf| me|ned|ewn|ch |eb |nt |d h|add|a c|has|lad|ynn|u d| am| ll|idd|mde| hy|on |dau| he| di|rai|as |i g|wla|fod|u g|mew|ir |di |ait|hau|ysg|dda|h y| u |rha| ni|dol|n f|d c|d n| da|ani|gae|yli|chy|rei|wy |l n|dyn|yr |did|ai |ys |b y|hol| ad|n d|d d|hyn|el | ce|ffy|fyd|thr|yfr|lae|loe|cen|all| fe|i r|wed| bo|adw|lid|h g|yng| an|sg |i w|mdd|y g| dr| we|wei|fra|ed |io |cym|dra| fo|rdd|int|c i|sol|rio|ryd|tia| yr|amd|a u|dia|ael|g y|al | ge| te|n e| po|yno|s a|neb|odd|na |bod|ail|gwl|awn|hed|ddf|gen|ill|hre|u s|ref|dir|lli|d i|ig | go|dig|nti|yni|ein|dfr|ene|n o|ann|do |d r|dif|dat| pa|wch|dys| wa|ar |nhe|efy|lai|syl|oli| pe|lla| hw|wys|gyn| â |hwn|gyd|y n|n i|n u|h a|pob|yff|gu |eid|dlo|oda|rad|l g|n r|ant|u r|w g|nig|iol|aen|yla|r r| er|ian|in | de|dwy|ria|han|ddu|dio|rth',pov:' di|di | ku|ku |du | ka| na|tu |i k|itu| te|i d|adu|u d|adi|na |dir|son|i p|rit|iri|a k|on | pa|dad|ten| si|kad|a p| i |n d|u k|si |i t|al |ta |us |pa |nti|en |i n|ti | pe| pu|a d|is |s k|u p|udu| o |ra |aso|tud|i s| pr| tu|eka|pek|ent|ka | ko|da |u n|a s|dur|ur |ida| ta|u t| li|ma |in |u s|bi |int|n k|sa |a t| ki|asi|kon|pro|dis|s d|tus| un|nas|ki | ri|a n|pud|sin|i i|ber|udi|ion|lib|men|era|iku|ru | fa|r t|ia |uma|i o|ons|isi|u i| so|ibe|ter|un |nin|rda|idu| se| ji|erd|ada| ni|i r|tru| su|jin|u j|ont|u l|nal|as |sta|u o| st|tra|kum|l k|nta|ris|n s|ona|ns |ntu|kas|utr|ras|ndi|ibi|tam|kal|er |sia|osi| le|sos|ne | ut|mbi|tad|ntr|ene|amb| e |a i|i a| ju|ame|asa|alk|igu|i l|for|i u|a o|gua|s p| al|lei|e d|und|edu|su |nsi|ker|sio|lke| me|ual|ora|mi | ig|l d|a u|gin| ma|i f|i m|a m|tis|u m|a r| at|ili|a e|ial|a l|nid|imi|fas| in|a f|eso| no|nu |rot| de|nte|ote|aju|ind|pri|sie|sum|nsa|ali|dib|u a|s i|orm|ri |ant|kla| or|art|ens|dik|el |uni|ing|rti|n o|bri|rim|min|sid|ati|n p| mu|ei |e t|es |tes|s n|emb|i e|i b| to| mi|vid|ura|ini|lid|s t|iso|sis|mit| vi|se |eda|ied|kri|lda|unt|l i|ans|r s|ral|e k|ime|tal|lik|rsi|ju |uda|opi|dia|ota|a j|not| pi| vo|ita|sib| ra|jun|rat|tik|ika|ran|n i|lvi',lus:' a |na |an | ch|ng | th| le|eh |leh|ang| mi|a n| ni|te |in | tu|ah |ni |am |a t|awh|nga|chu|cha| an|hna|han|haw| hi|hua|a l|awn|h a|a h|chh|anv| za|nvo| ka| in|ih | te|a c|h t|tur|wh |n t|vo | ta|wng|eih|n a|paw| di|hi |uan| hr|i t|hu |a a|hei|i a|mi | lo|the|al |thi|nna| da|van|aw |maw|ak |ur |hun|hia|tha|ung|g t|hhu| ra| pa|kan|ga |n h|o a|kna| hm|h c|int|dan|ram|ei |ian|dik|i m|hra|nei| sa|ava|ikn|ran|n n| ne|n c|ema| av|hri| em|e h|thl|uah|h l|h h|pui|mna|thu|ihn|sak|nih|hma| ti|kaw|a m| hn|hin|h m|l t|ing|r a|tin| ng| nu|tak|tan|a i|un |rin|mah|awi|awm|kha| la|l a|lan|nun|ui |hil|g l|iam|k t|a k| kh|hla|zal|i l|k a| hu|zaw|alê| pu|n l|n m|lên|nte|iti|ngt|nch|mal|ima|lam|m t|upa|lo | ve|daw| re|man|mit| he|mih|n r|ata|ihr|u a|a p|h d| na|awl|rem|a r|el |n d|a d| at| ma|mim|gah|il |tla| hl|e c|ka |h z|h s|ek |gte| va|g h|m h|i h| tl|h k|ha |ia |eng|ana|en |g a| si|tih|h p|âng|i z|ênn|h n| zi|tup|tlâ|wm |din|n k|m c|aih|g d|nan|wk |awk|ntl|pua|g z|una|gai|e t|i r|ual|whi|aka|hum|hle|him|lov|len|uma|n p| du|he |zir|vek|tum|a s|ann|ahn|t t|sia|loh|at |m a|rna|i k|k l|lh |zah|lna|duh|nam| ph|taw|m l|va |uh | aw|sua|wn |awt| ba|iat|saw| ro|lân|iah|ama|emn|l d|baw|i c|phu|a z|ant|zâw',dag:'ni | ni|li | ka| di|ka | o | za|ali|i n| so|i k|di |i d| la|din|am | sh|shɛ|i b|a n|an |kam|i s| be| n |zal| yi| ti|im | ma| bɛ|i o|gu |in |a d|i y| bi|igu|uɣu|bɛ | kp|ɣu |la |aŋ |i t|a s|i z|ɛli|a b| ny|ŋa |zuɣ|oli| da|ee |a z|hi |aa |a k|ya |al |oka|be | zu|ma | su|ani|n n|sok|gba|lan|ili|lig|u n|hɛl|o d|ir |sol| ŋa|uni|maa|n b|yɛl|a ŋ| li|l s|bu |iri|iŋg| yɛ|ɛŋa|hɛŋ|mal|ri | ta|tiŋ|ti |i l| tu| sa|ŋɔ |ŋan|nyɛ|i ŋ|taa|bee| ba|ɔŋ | gb|nim|ari| ŋɔ|uun| na|ŋ n|so |a t| pa|ini|u b|n k|bi |si |zaa|m n| ch|ŋsi|ŋgb| yu|mi |aɣi|uhi|ita| wu|i p|ama|o s|o y|lit|aaf|ɔ n|aŋs|ban|ko |i m|m m|fi |afi|tum|o n|zaŋ|yik|suh|kpa|iko|m s|nya|a y|e l|iŋ |mdi|aan|na |o k|iya|uhu|dam|kpe|u k| bɔ|o t|wuh|ia |e n|bil|paŋ|nir|ɛhi|yɛ |yaa|a o|yi |m k|u s|a l|u l| do|uli|daa|ahi| mi|nzu|n w|aal| pu|haŋ|m z|lim|sim|rig|e s|inz|too| to|ooi|oi |ala|u d|i g|m b|o m|o b|niŋ|kan|maŋ|yub|ubu|ɛ n|chi|m t|abi|lli|m l|ba |cha|bɔŋ|aai|n y|n z|ima|n c|igi|n m| ku|baa|puu|ins|r o|e k|n t|ŋ o|ɣsi|ihi| du|ɛ s|e o|ana|ɛm |gbɔ| kɔ|ɣi |aha|eni| ga|hig|laɣ|ŋ z|aad|ibu| ya| bu|bɛh|n s|yu |u t|u m|nka|un |baŋ|i a|da |aas|sɔŋ| sɔ| mu|paɣ|sir|ɣiŋ|aaŋ|ŋgu|u z|hu |kar| ve|iin|ɛll|ɔli|ndi|pe |oma|min| wa| ŋu|n d|rim|ŋun|ŋ k| al|ash',dga:'ng |aa | a | ka| o | na|ang|ka |a n|eng|a t|ba |ne | ba| ne|nan|zaa|a b|a s| ta| so|a o| la|la | te|a k|ri | be|taa|na |a a| za|ten| po|nga|neɛ|lɛ |ga |poɔ|e k|oɔ |ong|a z|e n|ee |e a|ɛlɛ|a l| yɛ|ori|a y|men|g n|sor| to|yɛl|g b|bee|ane| me| ye|e o|o n|o t|yel|yɛ | an|ɛza|ma |eɛz| ky| no| bo|a p|e b|ie |ɛrɛ|rɛ | ny|eɛ |be |oba|i k|ngɛ|aal|ɔ a|nob|g k|re |a d|bo |ɛɛ |ɛ n|li | se|a m|kyɛ|ɛ a|nen|eli|ɛ b|nne|sen|saa|ɛ l|iri|nyɛ|o a|o y|o k|i a|o s|g t| wa|eɛr| ma|oma| ga|g a|rɔ |soo| dɔ|oɔr|erɛ|fer|ge |zie|obo|oob|ɛ k|i n|waa|ɔ n| fe|rɛɛ|o p|a f|o b| ng| lɛ|e z|ala| bi|ron| zi|sob|tom|a e|ebe|ton|gɛ |a g|ta |o m|a w|ro |lan|ɔrɔ|obi| e |ann| kp|ɔ̃ |ɔge|boɔ|ɔ b|oɔ̃|ɛ s|gsa|ɔ k|ngs|daa|nda|dɔg|ban|ɔɔ |nɔ |end| zu|kan|e t|ɛso|g l| sa| da|uor|bie|zu | ko|ɛ z|e p|e y| k | di|bon|peɛ|o l|sãã|aar|one|uur|ngn|le |puo| pu|alo|ru | de|g s|ana| sɛ|da |ama|ɛ p|sɛr|gan|maa|son|kpe|mo |nno|beb|gaa| sã|enn|san|mmo|ɔgr|g y|man|gne|o o|toɔ|ben|g d|pɔg|teɛ| pɔ|so |u k|bin|ing|aba|aab|e l| am|ãã |g p| tɔ| tu|yɛr|ɛ t|te | ir|min|ɛ d|ine|i m|g o|aan|uo |k a|ɔ o|oru|lon|ɛ e| yi|i o|g m|gro|eɛl|ara|ra |de |gɛɛ|nee|ene|o z|i b| en| yo|bal|no |lɛs|ɛng|ɛ o|uro|ale|lo |kye|yeb|di |zan|iir|ɔre|bib|gɛs|g w|nsa|oo ',bre:'en |et | ha| de|ar |où |zh |ezh| di| da| ar|añ | pe|n d|da | gw|an |wir| an|ha |gwi| e |enn| en| ga|el |c’h| ma|den|ir |nt | a |ant|us |ioù|a g|ez |n e|eus|ep |r d|ll |vez|t e|ur |ag |t d|hag|deu|n h|a d|eze|pe | be|gan| d’| ve|gez|t a|lez|rez|pep| ke|oll|a v| re|net|eza|e v|s g|nn |r g|ut |ade|out|oad|zañ|eo |roa| ho|iri|rio| eo|ell|dig|hol|hel| fr|h a|del| ne|ran|ere|red| vo|g a|’he|fra| c’|e a|ank|nki|kiz|aou|dur|re | o |ù h|adu|eve|h e|uzh|evr|t g|ouz| he|doù|vo | ge|bet|er | le|edi|gao|ele|o d|are|dio|iz |t h|ige|z e| al|ne |nne|vro|hin|’h |d’a|e d| ev|ni |ber|ado| em|ini|n a| hi|zio|p d|ù a|all|war|vre|r s|a z|ege| br|ed |l a|l d|mañ| pa|h d|p h| la| ur|l h| st|l l|ñ d| vr|iñ |h h|oue|bro|h p|r b|vit|nno|skl|r m|dis| zo|z d|r f|eme|l p|bou|z a|al |ven|evi| se|l e|e e|ñ a|isk|ab | dr| wa|ñ e|r e|ure|e b|obe|r a|vel| ou|it |mab|r p| zi|i e|lle|n o|aze|our|zen|dez|ñ m|nna| un|a s|izi|zet|o b|ebe|t p|at |rc’|n p|rel|r r|nan|’ar|zel|rzh|r v| do|die|zha| eb|dre|ann|ù d|ù p|tañ|ane|iou|ù m|g e|abo|lab|ad |o e|hañ|êri|ask| sk| ob|izh|eiz|o a|o g|ma’|a’z|ent|’z |klê|lêr|sev|b d|noù|ren|esk|gwa|bez|gel|eli|ave|iez| na|gev|ud |n u|zeg| ko|erz|ver|una|ñ h|ken|kad|ria|dia|fe |sta|t n|zo ',kek:' li|li | ch|aq |chi| na|il |al |ru |nam|jun|b a|l l|ch |i x| a | sa|ila|naq|sa | ut|k a| te|am |ab |ut | ta|kil|an |nki|ana|i p|poy| ru|oya| il|yan| po|lal| an|nil|ten|aan|hij|i t|uni|iju| ma|ami|ank|ena|aru|wi | re|mit|ak |wan| al|laq|nar| k | aa|hi |b i|eb |re |nq |maa|q r|ala|it | ju| wi| wa|h o|q t|l c|q a|cha|u l| ra| in|hir|q c| xk|a l|ik |a a|a r|iru|aak| ri| ti| us|u t|a x|l x|i k|xb | xw|xwa|oq |xk |och| xb|l r| xt|anq|i r|l u|i c|e x|tix| xy|xch|te |q x|ib |in | xc|ink|loq| jo|aal|k i|mal|jo | ka|lb |b e|kol|n l|l n|la | aj|m n|om |u n|nk |hic|uch|xlo|ob |t l|haq|ruc|ich| ee|q l|q e|e n|xte| b | ko|jel|h u| aq|taq|l t|a n|aj |b l|rab|q s|anu| oc|aab|i j| xj|el |t t|waa|aqa| ar|a u|anj| xl|ajw|rib|sil|hom|a t|i l|nje|a i|k c|een|k u|olo|ta |eet|l a|yaa|olb|nta|uq |raj|uuq|usi|ruu|jwi|q w|kan|unt|e r|us |ok |xya|leb|t s|ani|enq|awa|nak|o k|ni |iq |i n|l w|sik|q k|uta| tz|unk|iiq|b s|ix |una|n s|tz |i u|ar | ej|xma|k e| q |b c|na |z a|a c|xju|xye|man|hil|i i|nax|taa|h i|tar|n n|ol | ol|xaq|l m|ul |rix|m l|u x| xm|esi| xn|u c| le|b u| e |paa|ama|n a| uu|tik|ent|t x|wak|i m|n c| am|b x|nto|q i|et |tee|ub |akl|q u|lob| ro|toj|s t|e c|k s|tam|e q|to |i w| xp|n t|aje|xko|a j|ara',pcd:'ès | d | l | qu| dè|nt |es |èt |s d|t d| èt| di| s | lè|eût|on |lès|e d| a |qu |t l|er |s l|reû| to| po| co| on|di |int|ou |ût | dr|ion|min|dre|ns |me |cio|i s|tot| pr|te |ts | lî|s c|ant|té |e a|ont|le |dès|s è| ès|ins|sse|con|ne |ome|ot |se |nde|åci| so|lîb|ye |ons|dè |s p| in|leû|t a|po |i l|de |re |e l|s m|e s|st |s q| li|ond|t p| si| pa| ch|s o|t s| mo|li | ou|e è|èye|és | i | ma|cha|èl |ûts|s s|l d|eûr|si |pou|i d|in |u i|qui| no| le|èss|out|ce |eun|ut |èst|ui |l m|a s| sè|ske|t è|s n| vi|n d|n a| al|ûre|has|dèl|un |e p|ité| om|e c|keu|t q|ask| rè|al |vin|i p|r d|tes|l s| de| è |ole|ter|tés|rès|ind|com|e t|deû| mi|e o|eû |d l| se|mon|e q|e°t|rin|nte|l a|d v| dj| mè|îbe|n è|mèt|l o|ass|ôte|s a|seû|rté|il |k n| il| ni|cla|r l|dje|n p|inm| av| st|n s|be |ète|é d|ine|u o|wèr|o l|so | ôt|nce|os |sès|ni | n |djî|çou|ran| ço|r c|man|tos|e m|yes|l è|s r|èrt|bèr|îbè|ûr |par| as|nme|a l|s f|t t|emi|vou|u l|î d|is | èl|d c|u d| sa|nsi|pay|r è|l p|pré|wè | ne|bin| bi| ri| na|d a|e i|ote|one|fé | fé|je |ûye|eûy| nå| fe|a t|t i|lwè| lw|ssi|re°|îs |t c|è m|u a|è s|u è|s t|u q|èdj| èn|nts|îre|tan|prô|adj|fåt|inc| å |n n|spè|èsp|dèy| et| få|n o|us |nål|dis|que| r |sin|van|nou|pro|avo|eûs|èri',roh:' da|da |a l|la |iun| la|ha | in|as |cha|ziu|un |a p| e |ts |ret| dr| il|na |dre|s d|per| pe|a d|ain|azi|er |ls |et |a i|il | pr|in | cu|una|sch|s e| ch|l d|ing|ers| ha| li|inc|an | a |tà |za |min| l |ir |üna| mi|man|nch|a c|pro|a e|a s|las|sun|lib|mai| qu|ns |nza|ta |e d|ter| ün|int|t d|ibe|ber|ala|era|is |al | o | ed|s p|ia |ar | co|uma|s l|res| um|als|ent|rsu|a t|nta|ama|s m| re|ed |ran|n s|uns|ess|tra|naz|ets|ats|ün |ant|s i|gni|nal| gn|ert|ad |chi|cun| sa|n c|hi |sta|ur |nt |anz|ist|uot|s c|ng | na|s s| d |ità|ra |nte|cum| me| po| de|con|a m|el |tuo|a h|uis|ras|qui| se|nir|czi| di|nu | su|t a|r i|ual| tu|d a| nu| sc| pa| ma| fa|d e|dal| ad|ss |n d|a a|l e|ica| el|n i|a r|r l|rs |d ü|ngü|s n|gua|a f|a q|a v|ote|han| es| si|gün|à d|r a|lit|ari|and|d i|r p|u p|aja|rta|a g|ons|ali|r s|lla|n e|dis|sia|e l|tta|que|s a| pu|a u|nda|tan|tat| tr|sa | ar|eis|sei|n n|nd |s o|egu|a o|tsc|a n|und|ver|r d|der|ils|uni|l i|ump|cia|o g|ca |r e|n l|gna| as|es |rtà| ot|bli|nts|lic|che| te| ac|lur|lia|ern|ais|unt| st|soc|oci|ial| fu|air|l s|l u|ami|giu|ot |po |men|ch |e c|art|s u|pri|n p|rar|ara|ide|els|ita|paj|rot| eg|vit|dad|t i|n a| un|ria|das|pre|par|l a|enz|ati| vi|rat|n m|r ü|tal| lu|n h|isc',bfa:' ko| na|ko |na |i k| ka| i |et | ŋu|ŋut| ti|a k|ti |gwo| to|en |on |si |esi|won| kö| gw|are|it |yö |dyö| lo|utu|tu |de |köd|ödy|o k|t k|ode|kod|i t|e k|t n| ki| ‘b|n k|ya |o t|ki |kar|any|to |n n|uto| a | ďe|n ŋ|jur|ren| ju|lo |ďek|ele|liŋ|iri|nye|ta |eke|di |bul|ndy|u k|adi|ri | sa| ad| bu| ku|ja |kin|lö |ulö|kan| kw|sar|kwe|yen|kes|i n|kon|a n|in |‘ba|ita|dya|t l|i ŋ|ö t|ak |a a|ret|yit|ur |ö k|iŋ |nyi| le|kit|a t| li|nag|o l|iŋi|o a|se |ŋit|i l|an |ogw|ne |agw|iki| an|e t|u l|a i|bak|ö g|öki| ga|ene|ojo|e ŋ|le |n a|n t| ye|a ď|o ŋ|tol|lel|kaď|log|we |gay|ŋet|t i|a m|ine|o n|ye |ŋ k|ŋo | ďu|oli|i i|toď|wej|i g|eja|a ŋ| mo|ien|nes|aďe|kat|den|aki| lu|lie|ase|i b|gi |o s|oro| la|i j| jo|yet|a g|ind| ny|ön |ubu|bub|‘bu|gwe|jo |n l|ili|ju |urö|laŋ| te|i p|ruk|kul|ari|e g|res| ag|agi|ata|rön|a l|oďi|eŋ |aka|rik|tod|o g|kas|yes|mor|joj|i ď|o j|ďir|ďur|wil|tor|omo|a j| mi|odi|gel| pi|ony|gwi|din|kak|aŋe| ri|e i|a y|eye|tet|orj|i m|aya|ďe |ona|a ‘|k k|eka|pet|mir|i s|rit| tö|tök|ni |n i|r k| yu|uka|ond|ö n|ulu|jö | mu|oko| ke|o ‘|e ď|nyu| de|leŋ|urj| ge|du |net|un |o i|aye|yey|ani|rjö|e l| di|diŋ|tok|uru|luŋ|kor|ron|e a|mom|pir| se|nen|e n| ne|kun|u n|aŋo|bur|rja|mug| ŋo|kaŋ|ugu|ore|ute',kri:'ɛn | fɔ|di |fɔ |in | di| ɛn| dɛ| we|dɛn|ɛt |gɛt| gɛ|we | in| nɔ|ayt|n d|ɔdi| i |an |bɔd|ray| na|na | ra|yt |t f|ri | kɔ|i w|n w|ɔn |t d|n f|i f|nɔ | de|de |i g| se|ɛni|ibɔ| ɔ |n ɛ|ul |ɔ g|n i| go|a d|da |ɔ d|go |tin|tri| ɛv| pi| pa|n k|man|wan|e d| wa|i n|vri|ntr|shɔ|ek |ɛvr|ay |ɔ f|rib|kɔn|ɔnt|e i|n g|nt |n n|mek| me| fr|am |t ɛ|ɛf |say| am| bi|hɔn|ɔ m|is |at | da|se | ɔl| du|du |ɔl |l d|n r| pɔ| ti|on |sin|n y|t r|i s| wi|i d|ɔda|sɛf| ma|yon| yo|ant|t i|a p| ɔd|ɔbɔ|n s|esh|ɔsi|i k|n p| wo|wok|it |ɔm |wet|fri|ɛnt|pɔs|nɔb|ɔt |i p|eti|ɔ s|ɔ t|mɛn|t n|n ɔ|pul|ipu|pip|e f|bul|ok |ni |dis| yu|liv|i ɛ|ɛkt|iv |rɛs| bɔ| fi|n b| wɔ|iŋ |kt | pr|sem|ap |bi |ns |tiŋ| lɛ|pan|ɔ b|spɛ|as | eb| ko|em |kin|a i|t ɔ|al |if |so |ebu|il | if|fil|ba |i l|wit|dat|i ɔ| rɛ|wɔl|tap| gr|k d|e g| jɔ| tr|kɔm|rid|t p|ins| sɛ|ili|nes|pɛk| ne|s ɛ|ɛd | li|yun|ɔ p|lɛk|ɛm |i m|ɔ i|s d| so| lɔ|t w| ka| tɛ|i i|ti |en |s i|n m| dɔ|l i| la|l f|ɛsp|e w|yn |n a|p d|bɔt|nay|pik|tɛd|nsɛ|jɔy|k w|mar|ati| gɔ|pat|i r|o d|e ɔ|ɛp |ytɛ| sh|idɔ|k s|dɔm|m ɛ|ɛk | ch|a w|e n|dɔn|mɔt|gen| ba|una|d n|iki|ɔ a|uma|frɔ|m w|rɔm| sa|i y|aw |a ɔ|lma| as|ɔmɔ|ayn|t a|are| si|ta |red|k ɛ| to|tmɛ|etm|ste| st|lat|ɔ l|ola|kol|m n|ot | ta|nta|pas',cnh:'ak |nak|kha|hna|ah | a |mi | kh|ng |in |an | th| le|le | si| mi|haw|awh|ih |whn| ni|ai | ca|h a| ng|i t|gei| hn| te|nge| ti|thi|am |ang|at |ha |tei|a s|ein|hat| na|na |ei |ung|nih|nga|k a|ing| cu|ram|si | ah| za|k n|a h|k l| an|cu | in| lo|seh|tha|ong| pa|tua|eh |awl| ra|g t|eih|i l|sis| ch|lai|ise|mna|hun|wl |n n|naw|uah| ka|nna|caa|n a| hm|h m|i k| di|i a|te | tu|lo |a t| la|zal|lon|k t|alo|akh|h s|pak|n t|hil| um|ial|chu|uan|a c|hma|k k| ai|i m|hmi|h k|k c|kip|ip |din| ru|lte|a k|man|alt|a n| ki|n k| i |via|i c|tin|gah| up|un |upa|aah| vi|kan|rua|k h|awn|h c| da|tik|l a|ilt| ma|mah|lti|dan|i v|tla|i h|i r|e h|vo |h r|h t|ter|ian|nvo|i z| bi|m k|ihm|k i| hr|n s|o t|a u|i n|lei|han|ria|hmu| pe|e a|ngt| ci|g a|h u|anh|inv|ant|ikh|nh |bia|phu|h n|ann| ri|hia|pi |wh |hle|iah|io |e p|the| he|cio|um |p n|hra|rna|kna| zo|uh |nun| zu|awm|hng| nu|iak|h l|hei|chi|caw| tl|i d|ahn|n m|ntu|umn|h h|e z|nin|awk|him|h p|hte|amn|aih|pad|e t|lna|duh|m l|adi|mhn|i p|n c|di | ph| du|l k|ihn|tia|thl|h d| aw|h z|ern|muh|a a| ba|tel|ti |aln|iam|pat|e n|n h| su|a z|o l|k r|hua|u m|n l| un|aza|dih|he |ngk|wk |a r|eid|wng|k z|t l|wmh|nch|er |u a|n u|ina|eht|iht|a l|aan|ga |zei|pia|api|min|zon|sua|el |m a',lob:' dɩ| a | wʋ|wʋ | ha| th|kɛ |nɩ |na |dɩ | sɩ|han| kɛ|sɩ | ti|bil|aʔ |tib|ibi|aa |ana|a n| na| rà| hʋ|nan|rà |il |ʋɔ |ɔɔ |thɩ|a d|ɩ d| n |a t|ha |kha|a h|ra |anɩ|yaa|hʋɔ|ar |ɩ t| ná|dɩɩ|aan|ɩɩ | do| ra|ni | nà|nɛ |ɛ h|nà |ná |ɩ a| gb|do | cʋ|cʋʋ|anɛ|oo |ɩ w|ɩ s|ɛʋ |ɔ k| ya| fɛ|l w|fɛʋ| ɔɔ| tɩ| kp|o t|a f|a w| wo|nɔ |a k|ɩn | wa|ʋʋ | pu|r r|hɩɛ|rɩ |ɛ d|ɩ n|ʋnɔ|uur|ɛɛ |la | ɩn|ʋ n|an |ɛɛn|nn | tɛ|ɩr |ɛ w|ɛn |tɩb|tɛɛ|ɩɛn|ɛna| le|ʋ t|woo|ɛr |aar|ɩbɩ|ɔ a| sʋ|ɛ a|mɔ | mɔ|n k|sʋn|pun| fɩ|bɩl|a m|unu| yɛ|ɩla| ʔl|ʋ k|par|ɩ r|ɩɩr|ur |oni| nɩ|ɛ t| jɔ|fɩr|ɔ d| da|ɔ t| jɩ|ɛ n|ɔ n|nak|ʔ t|jɔf|a s|hii|n n| ʔy|r w|a c| bɔ|le |gbɛ|n d|ɩ k| ca| kh|a g|a a|hɩn| tu|rɛ |haa|l h|ɩɛr|ɛ r|hɔm|thɔ|ɔma|ʔ d|r s| so|ii |a b|wa |the|ɔr |ʋʋr|n t|akɛ| cɛ|uni|ɩkh| bɩ|er |a j|pɩɛ|hʋ |uu |ɩnt|ʋ h|r n| ɛ |ɩ h|duu|bul|ɩrɔ| ka|rnɩ|kpa|ʋnɩ|ɔ s|bɛʋ|bɔɔ|nɩr|a ʔ| wɔ|waa|al |nu |ɔ w|her|i t|pa |fɩ |aal|a y|iin|wɔr| dʋ|ɩnɩ|i n| ɛɛ|don|caa|ma |ʋ ʔ|rpa|ʋaʔ|ɛ k|à n|inn| ma| de|ado|gbe|rɔr|dee|yɛ |à t|too|a p|ɔaʔ| pɛ|dɩk|n g|kpɩ|n p|ʔ y|ɩrɩ|ʋʋn|ɩ l|r a|ʋ p|ʔya| ba|eed|ɔfɩ|da |ʋ d|a ɩ|thɛ|ʔli|jɩ |li |ɛ s|á f| to|ntɛ|tee|tɛ |nun|i d|à ɛ|wʋa|à d|n h|l n|guu|n a|akh|o d|arɔ| bu|puu|fa |n c|ʋ c|len|naa|mak| kɔ| te|ɩ g|à h|ɛ y|cɛɛ|ɩ c',arn:'ñi | ce|pu |ka |ew |ce |el | ta| me|mew| ñi|vle|me | ka| ki|ey | pu| mv| fe| ko|ael|ci |i k|mvl| kv|añi|tañ|kom|om |e m|kiñ|en |gea| ru|ume|rum|eae|u c|ay |ley|m p|am |gu |vn |gvn| zu|ele|e k|le |tvf| tv|ugu|zug|n k| wi|elu|pi |lu |cem|fey|e c| pe|vme|kvm|em |nie|u k|aci|y ñ|ke |a k|fel| xo|vfa|xok|oki|gen|gel|oge|iñe|len|ñe | we|l k|kim|gka| mo| ma|ta |u m| pi|mog|igk|apu|map|fac|fij|ñma| ci|age|ijk|w k|epi|pep|a w|i p| eg|iñ |mag|nor| no|m k|wig|lel|isu|lea|kis|a m|y t|e r|vza|i z|i n|e f|ntu|ege| fi|kvl|i m|lay|zaw|ela|l t|kvz|fem|wen|i t|w m|ñ c|eam|eay|m c|aya|n m|ij |e e|or |y k|tun|mue|a c| fv|jka|e p|u x| cu|cij|mge|e t|epu| ep|y c|eci|egv|a f|u f|a p| ge|iel|yam|vne| ya| xv| ni|uam|xvr| ku|ole|y r|nay|un |emu|eno|w r|a t|i w|e ñ|u t|kon|eke|y m|zua|wvn| ke|cum|mu |i f|eju| nv|uec|kej|ayg|n t|afi|vfe|mvn|vr |fvx|vxa|nol|i g|m x|w f|new|uni|u ñ|aw | ra|i r|i x|eyc|r f| in|yci| az|tua|xa |ygv|w t|uae|iea|u w|ent|az |fie|mel|ule|ake|yay|j m|tuk|n n|uñm|u p| gv|wez|eza|way|nvw|ona|su |eye|ine|may|a n|ida|u r|wae| zo|ime|z m|mni|e n|uku| lo|log|ogk|umu|sug| wv|e z|iri|wir|gko|l c|la |ewe|wkv|nmu|ayt|wel|ugv|m m|ney| na|nac|mek|cio|iñk|ion|vla|kam|vna| re| xa|e w|amv|uji|awv|ñke',bba:' ka|ka | ba|bu |u k|ru |a k|ia | tɔ|ba | n | sa|a t| ko| mɔ| wi| kp|ari|a m|nu | bu| u |aa |a n|a s| te|tɔn|sar|re |a y| sɔ|a b|ɔnu| mɛ|ii |u s|mɔ |ria|ere| ù |un |ra |in |a w|u b| ti|oo |na |em | ku| wa|baa| yi|win|tem|ɔɔ |ko |u t|waa|aru|koo| ga|n k|sɔɔ|wa |kpa|i m|mɛ | ye|u w|n b|nɛ | ya|o k|ma |ǹ |tii| ma| ǹ|n t|aaw|ɔ b| be|u m| ta|ɔmb|i t|wer|awe|am |ina| nɔ|i b|si |i k|n w|mbu|asa|ɛ b|a d|era|n s|kpu|mi |u g|ya | mi|asi|ri |pur|ro | yè| da|i s|pa |u n|sia| bi|kun|a g|u d|uro|en | as|aar|e k|ana| go|goo|yè |sɔm|wi | bw|saa|wii| ke| tu|tɔm| di|e m|u y|i n| sw|e u|wee| se| si|n m|iru|ser|ɔ k|nde|de |ki |e y|ua |te |n n| do| wu|an | de|nɔɔ|ɔsi|ni | nd| we|a ù|nun| mu| ki|een|be |ɔ n|n a|yer|o t| su|mɛ̀|ɔ ù|ɛ̀ |m t|ibu|e s|ee |n y|su |enɛ|isi|o b|o n|yen|m m|uru|bur| du|m k|yin|ɛ t|da |gbɛ|igb| gi|yig|sin|aan|maa|ta | nɛ|e t|e b|n g|ye |ɔ t|eru|ù w|n d|swa|i d|ɔra|i y|ɛru|iri| na|dok|ɔm |gir| ge|abu|ras|rɔ |urɔ|oke| to|eu |keu|ɛ u|̀ g|ɔɔs|gia|i w|a u|m g|bun|naa|tir|ɔru|ora|aka|ima|ù g|dee|̀ k| yɛ|aas|san|tor|gar|mɔ̀|yii|ɔ̀ |̀ b|una|aye|nam|mɔr|kpi|ku |ara|ber|ɔ s|di |nɔ |anu|i ù|à n|rim|ɔn |wun|wes|sa |ira|ker|ke |bwe|o m|nan| so|ugi|bi |i u|m b|gaa|tur|kua|ɛ s|pi |awa|rɛ |ese',kea:'di | di|do |to |em | na|on | e |o d| qu|çon| po| co|na | te|tem|udo|tud| tu|er |i t|qui|êto|ent|ui | pa|dad| dr|rêt|drê|al |i d|m d|aço| se|el | ca|ta |i s|adi|a t| ta|i p| li|o p|a s|o e|men|i n| sê|ser|pod|i c|pa |que|o n|con|i e| ô |e d|dê |a d|ês |um |ti |ida|por|nti| be|a c|a p| el|odê| si|ado|sso|nto|co |bem|ra | in|lib|si |a e|sê | nu|ion|ido|o t|ndi|n d|ame|und|ça |s d| de|ber|l d|uel| ê |nu | cu|sa | es| re| fa|ê s|ibe| ni|nal|erd|m p| mu| um|e e|ia |rda|omi|ess|pâ | ês|êm |a q|uêm|guê|de | pr|oa |nac|nin|o s|dis|soa|io |m t| pâ|ca |éss|i ê|o m|tra| pé|pés|com|nça| ho|igu|a b|i b|i f|ê p| tr|oci|ôto|soc| so|hom|or |raç|naç| ma|mi |e n|i q| sa|tâ |a n|ona|ngu|res|nte|cia|i m|uer|m s|râ |ter|i l|o q|aci| ar|i r|man|ing| un|nid|rab|lqu|o c|pri|alq|ual|l e|cal|faz|usa|gua|azê|no |cio|m c|ort|art|ont|par|sês| me| ig|bê |nda|l p| ôt|ara|mud|nta|int|ons|â d|ntr|zê |djo| fu|rio|ssi|lic|e p|cas|cus|l t|l q|lei| st|cla|ial|u t|da |so |ade|ê d|s t|sem|r p| fi|ind|â n|ê n|n p|ura|o ô|rte|aba| sc|fun|uni|sta|uma|udj|dje|jer|ê c|dam|ê t|ime|i ô|son|rgu|arg|â s|o a|bad|a f|jo |i a|imi|sti|n e| ri|igi|ô d|iço|l s|l c|r e|i h|lid|adj|câ |ma |stâ|orc|gue|lar|ran|n ô|o g|fic|tad|â c|ali|era',smo:' ta|ata| o |ga |aga| le| ma| fa|le |faa|a t|ma |na | e |ia | i |ai | ai|tau|a a|a o|a e|gat|a f|e t|au |a m|ta |i l|tag|o l|a l| tu|tat|a i|se |e f|e a|ona|aia|si |iga|ua |uma| se|o t|o o|oga| la|i a|asi|a s|alo| um|ula|tas|oto| so|ina|a u|tul|atu| on|ea |i o|lag|ala|o a|tai|fai|u o|ana|ait|mal| at|aig| sa|i t|toa|aat|lo |e i|e m|e l|e s|ama|olo|o s| lo|i m|i s|ito|aua|i u|oat|lot| au| ua|ava|sao|i i|tog|aap|no |o m|aol|fua|po | po|laf|nuu| ia|u i|ino|ei |uu |aal|lea|u m|aam|pea|tu | ao|ato|ape|mai| a |tin|lon|lan|uai|ele|oif|soi|ifu|oa |ain| to|unu|aut|ono| mo|pui|alu| ga|tal|fon|afo|tus|o i|a p|i f|usa|afa|u e|so |ese|usi| pu|i e|tun|isi|maf|va |ali|sa |ati|tut|utu|ega|ton|onu|u p|gai| ag|aas|la | al|loa|asa|ave|anu|e o|nu |ufa|man|fia|aus|gal| av|ale|aai|mo |u t|lia|tot|o f| pe|oli|aog|nog|oai|u a|pul|uga|mau|ola|ou |tou|len|lat|ofi|noa|ae |aav|nei|lei|aa |eag|aoa|lau|lue|ene|uti|i p|fea|o e|itu|sia|e p|ita|lel|lal|auf|pe |a n|lav|ni |uia|tap|apu|uip|tia|ipo|aun|tel|oao|eai|lol| ni|vae|ipu|sol|uin|uag|uig|ao |ueg|tua| va|gi |vea|u f| it|aof|log| no|to |iti| na|vaa|ofo|ule|ili|pot|sag|ilo|tuu| si|afe|ual|i n|ees| fe|nof|iai| is|opo| te|gav|fo | fi|ute|tam|pua| es|lig| fo|poi| ae',koo:'eri| er|a e|ya | om|a o|ho |obu|mo | ob|ith|omo|olh| ne|e e|o e|wa |ndu|and|e o|re |hol|bya|a n| ek|tho|du |we |o k|o b|the|iri|ira|ere|ner|lha|uth|ndi|ath| ki|nga|lho|ind|iwe|kan|ban|di |lhu|but|ulh| bu|osi|han|ugh|ang|si |aba|uts|eki|ebi| eb|uli|ra |li |eky| mu|ha |ko |bul|aka|he |kya| ku|ole|yo |und|ihu|kut|ire|se |rir|omu|tse| ey|ngi|i e|mun|ali|a a|ika|buh|uho|ler|ana|gho|nda|o n|iha|rib|hok|ery|rya|no |e k|ene|hug|i o|bwa|ne |e n|a i|ing|ki |oki|wit|ani| bw|ma |nge| ka|aby|yan|i n|gir|ga |o o|thu|gha|kol|mul|awi| in|anz|i k|ngo|alh|imu|bih|tha| ba| ok|ima|i a|kih|ama|rik|a b|kit|kir|na |ako|a k|nya|i m| aw|rit|oko|awa|ung|iby|ilh| ng|ibw|o m| ky| no|abu| ni|iki| si| ab|wiw|hun|ber|rih|wab|i b|mbi|da |its|ran|yab|bi |amu|iba|yim|tsu|bo |thi|nia|umb|nde|iry|hal|obw|kyo|hir|hwa|ia |agh|wos|hab|e b| na|iyi|bwi|lhw| by|rim|bir|eng|iso|amo|eke|ril|ibe|igh|hek|mib|riy|e a|abo|sib|bal|era|eyo| ol| en|mub| wo|ano| ha|hin|ris|isa|kiw|eby|nza|u b|hu |o a|aha| ak|kul|za |yam|yos|uyi|kin|go |eka|lya|usi|ihi|emb|ka |bwe|u w|emi| at|kat|wan|lin|kwa|sum|ham|iko|ubi|be |sya|ahi| ih|aya|ri |nab|end|ubu|eny|uka|wam|esy|hen|muk|ayi|nob|yak| em|bw |nzi|hul|dek|wak|e s|muy|kis| am|ong|rer|iku|zir',nzi:'la |lɛ |le |nle| ne| mɔ|enl|ɛ n|ne |kɛ | bɛ| an|maa|nwo|e a|ɔɔ |mɔɔ|e m| bi| kɛ|ala|a n|a b|ye |ade| ad|den|ial|bia|anl| ma|wɔ | ye|a a|ɛ a|ee |wo | la|nee|e n|nu |yia|nla|a m|ie |aa | nw|a ɔ|ɛ m|aan|e k|nyi|onl|anz|ɔ m|e b|li |ɛɛ |son|nzɛ|zɛɛ| so|ɛ b|nli|ia | wɔ| me|ɛ ɔ| ɔn|ian|anw| nu|alɛ|a l|ɔ n|yɛ |ɛlɛ|len|o n|men|yɛl| gy|nlɛ|ɔ ɔ|ane|ɔlɛ|a s| ɔ | ny|bɛ |o a|mɔ |a y|ile|ɔ k| ɔk| na|eny|e ɔ|ɛla| lɛ|na |ɔwɔ| ɔw|gyi|ɔ b|eɛ |ilɛ|wol|ma |ua | aw|a ɛ|e l|e y|lil|olɛ|ɛ k|bie| ng|ɛ ɛ|awi|wie|elɛ| a |di |e ɛ|ɔ a|mɛl| mɛ|ɔnl|ko |tia|zo |anu|i n|ima|e s| no|yim|i a|o b|a k| kp| ko| ek|za |any| ba|unl| ɔd|ɛkɛ|ekɛ|bɔ |mek| sa|ɛ w| ez| di|o ɔ|ɛle|saa|nyɛ| at|ɛhy|ulo|ati| ɛh|ɛma|ra |i m| ɔl|oa |ɛne|deɛ|u a|e d|a e|oli|pal|hye|kul|bɛk|ɛyɛ| am|kpa|ɛnl|die|u n|oma|ɛ g| ɛn|o l|eza| de|inl|ti |gya|ɛ l|ɔ s| fa|bɔl|u l|wom| yɛ|ban|uko| ti| al|yɛn|eku| zo|koa|nde|dwe|ɔ y|ɛ e|ole|oko|ɛ s|i ɔ|wen|fa |a w|mra|mgb|e g|nok|ama| mr|bɛb| ag|abe|bel|bɛn|ɔ w|pɛ |aam| bɔ|ola|azo|ka | ɔf| az|ale|ɛ y|lab|agy|u ɔ|lo | ɛm|ɔny| bo| nd|deb|u m|ɛ d|ebi|u b|yel|olo|e e| su|bɛl|ɔkɛ| kɔ| ɛl|oal|yin|ɔdi|nol|ɛpɛ|ngi|bo |enu|nyu|yea|adw|bɛt|ba |ku |kɔ |nya|ɔyɛ| ɔy|nga|kye|nye|bɛm|zon|ɔma| pɛ|pɛp|bɛa| o | ɔt|ɔti| ɔm|u k|nrɛ',maz:'u̸ |ra | ra|ji |yo | nu| u̸|k u| o |a n| yo|o n| k | kj|nu |o o| te|a m|i n| so|e̱ |kja| nr|nrr|tex| ma|̸ji|u̸j|na | ng|ja |a j|mu̸|dya|a k|o r| dy|̸ r|ma |o k|a r|̸ n|exe|oo | b |soo|zo |jo | ne|imi|b e| na|xe | xi|mi |nge| ez|e n|o s|ru̸| in|ezo|ang| pj|ya |xo |ixo| a |rix|e b|rri| mb| jñ|ts |su̸|ye |te̱|i k|in | e̱|̱ e|osu|a x|je |a t|jan|ñi |jua|a p|ngo| jo|eje|kjo|oji| ye| ja|ri |̸ y|nte| ts|i y|ta | ri|iñi|ñiñ| ga| nt|jñi|ga |e y|mbo|xim|amu| xo|nes|est|sta|mam| ch|go |o y|ua |̸ k|i t| mi|i r| ua|tr |pjo| e |o t|a d|a s|o j|ngu|ana| ñe|a y|ama|gek|mim|ek |s a|uyo|nuy|ñej|omu|jom|uam|rra|bos| pa|iji|aji|o d|chj|nee|jos|u x|nu̸|u r| ju| nz|s i|o p|i m|eji|sku| an|kju|pji|chi|kua|anr|so |i j|o m|xis|umu|e k|isk|e t|rjo|jña|ee |trj|pje|a a|pan|epj|xoñ|nru|o i|uan|gum|a̸ |joj|hje|i p|oñi|oru| pe|hi |gez|a g|ara|u n|eze|to |r u|etr|xto|ext|̸ t|gej|n j|ze |e j|i x|i i|̸ a|anu|o g|a c|e e|nza|̱ n|ña |e r|i ñ|aba|akj|i s|ba |jek| i |̸ m|man|jab|ekj|mbe|̸ d|ra̸| zo|r a|i d| jm|u m|jmu| d |se |o b|pep|u j| jy|ont|xor|io |n n|aja|u i|te |i o|esi|jet|ntr|ñij|ijo|zak|zho|si |ich|goj|hij|d a|̸ x|i a| tr|yaj|its|roj|uaj|ne |gon|ajn|jnu|uar|̸ o|mba|a e|a i|a o|pu̸|u k|k i|inc|a z|xes|ju̸|ya̸',pis:'ta | ol|eta|ket|lke|olk| en|em |en |lo | fo|fo |an |im |wan| lo| sa| he| wa|are| ga|gar|hem| ev|rem| bl|blo| ka|mi |evr|vri| ra|eni|emi|o o|ait|rai| we|ing|ea | ma|tin|ol |ni |m o|wea|ng |m e| no|iwa| di| me| na|a e|n f|s f|man|o e| ba|i w| or|riw| fr|it |or |n o|no |ae |re |m r|a g| pi|bae|tre|ri |avv|ve |vve|ntr|sav|os | st|is | i |o g|o l|dis|rii|fri|pos|ara| gu|tim|sap|ant|la |ala|a o|kan| lu|apo|fal|pol|a p|n s|n e|luk|sem|a s| pr|gud|ud |i s|mas|t f| fa|a h|ipo|pip|a d|a b|uk |as |ts |iti|o d|k s|its|kem|a m|oa |i g|o s|wak|a l|sam|om | da|amt|m f|ek |aen|at |ed |sta|a i|o m|a f|mek|n n|o h|eke|nit|i k|s e|aka|mti|e h|m s|i f|ra |kae|iid|ido|dom|nar| se|ti | ta|a n|ka |m w|n b|i b|i e|m d|s w|ya |hel|o b|ati|a w|dat|s o|ini|o k|pro|ao |loa|elp|i m|n l|uni|i l|n i|pim| te|o t|uma|n h| ha|m t|on |n w| ya|n m| in| la|ase| un|ei |gti|ngt| ti|a r| go|dim|go |a k|i o|lem|nao|am |e l|ele|uim|sen|nem|tek|nom|m u|ane|tae|ap |o w| du|tap| de|n p| si|rit|m k|ion|ii |ote|m n| tr|up |sim|n r|aed|dui|sae|tio|res|ba |aso|m p|lae|n g|p f|tti|l s|ons|i i|emb|d n|o n| wi|uil| up|ren|fre|son| tu|n k|aem|s b|ins|t l|aot|kas|ns |ami|itt|e s|wei|l e|g o| sk|d f|e o|aek|si |t e|vim|ten|mpo|imp| im',ctd:'na |ng |in | in| th| le|leh|eh |ang|ah | ki| a | ah|ing| hi|thu|hi |ak |h a|din| mi| kh|hei|the|eih|a t|ei |hna| ta|am |te |n a|nei|a l|awh|ung|at |ihn|h k|gam|a a|kim|wh |tak|kha| na|im |ahi| di| ga|g i|h t|kna| su|taw|an | ci|adi|sak|m i|ih |i h|hun|ama|uh |hih|lo |cia|h l|iki|a n|akn|i m|mik|euh|peu| ne|han|g h| ak|g a|h n| la| ha|ban| sa|n k|awl|hat|ong|nga|ian|sua|i a| am|aki|iat|mah|n h| ba|n l|tna|khe|a k|i t| pi|ite|une|uak| za| pa|lna|nad|ngt| tu|zon|n m| ma|tun|itu| hu|pi |pia|hua|a h|tan|n t|nna|en | om| pe|h s|uah|g t|a p|kip|gah|ai |ia |maw|hu |tua|dan|inn|n s|eit|uam|mna|kit|eil|sun|e a|awn| ng|un | nu|i k|ngi|k l|lei| lu|paw|a m|i i|ate|m t|uan|a g| up|g k|ua |h i|sin| va|ngk|bul|pil|k i|a s|ihi|atn|nat|iam|izo|ipa|a i|hta|a b|kua|hem|kik|emp|gin|h b| lo|k t|aht|h m|wln|awm| te| si|hin|m k|mih|mpe|i l|sia|sep|lun|ida|gte|akt|h d|ilo| zo|oh |kta|khi|ila|pna|e t|kil|ina|om |zaw|m a|upa|h z|el |awk|n n|ita|tee|h p|kin|dei|ann| se|tat|loh|g l|iak|hia|khu|kis|hiz|pan|hma|ile|isa|ma |i p|au |a d|ek |di |n i|t t|ngs|unt|pit|hup|ipi|upi|pad|ihk|g g|a o|lam|i s|i n|mi |ikh|i c|ta |hen|n p|san|n z|g n| uh| ii|ii |ep |zia|asa|hke|aih|nta|kei|hut|ihm|nun|ulp|lsi|tha| uk|o i|vai',cos:' di|di |ni |li |tu | à |ti | è |i d| i | pa|ell| ch|i p| a |par|itt|rit|i s|oni| in| si|tà |iri|na |dir|tti|’el|ali|ion|i c|si |i i|a s|u d|ttu|nu | un| l’| cu|zio|a d| u |à d|h’e|ch’| li|la |azi|i è| so|una|u s|ia | pr|du |a p|a c|i l|ri |so |u à|ità| o |gni|i a|lu | ri|lla|in |ess|lib|ars|i u|i m|ru |sa |ghj|ogn|da |u p|u i|ssa|hà | hà| na|à a|icu|ta |nal| og|ona|son|rso|iss|naz|lli|à i|a a|chì|a l|u c|à u| ni|hì | da|ari|cun| tu|pri|int|tut|ndu|u o|ssi|i n| hè|tat|hè | mo|llu|u è|l’a|gli|cu |pru|un |za |a h|ent|anu|utt| pu|i f|ind|è i|sia|mu |u u| st|n l|atu|i o|mod| ma|u l|à c|a à|ert|rtà|nta|imu|a i| ca|ibe|ber|lit|ar | d’|odu|a v|inu|cia|aru|end|su | el|sta| es|are|i à|iu |sci|nza| cù|cù |bar|ett|u n|ili|enz|hju|con|ami|iun|ara|ra |pà |à s| su|ùn | ùn| sc|suc|cum|ati|nit|qua|i t|pò |nsi|u t|ci | ci|man| gh|ren|a u|rim|ial|l’o| pò|è d|ich|dic|uci|dar|tar|ca |ziu|n c|iba| de|ris|’om|i h|tic|è c| tr|rà |ini|ign|ric|ntu|à p| pi| qu| co|nda|ntr| fà|tru|ii |uni|igl|nis|lia|hja|a o|fà |ust|sce|ssu|tri|ida|men|ura|chi|evi|ndi|uli|min|è à|ici|sti|ont| la|iti|ist|ria|nti|esi|ita|unu|u a|u h|a è|o d| sp|i r|dev|und|sic|i v|alt|o i| an|ica| fa|ivi| is|uri|bli| vo|ran|vit|o p| va|rut|nni',ltz:'en |er |ech|n d|cht| de| an|sch|n a|an | d |ch | re|rec|un | vu|ll |t a|et |ht |ng | al|der|t d|all|che| ge| a | en|ere|eng| më|oun|nsc|ir |nge| op|ëns|tio|mën|éi |op |ter|fir|de |vun|r a| hu|ati|hte| fi|dde|uer| dé|ent|em |iou|déi|in |r d|d r| fr|t o| sé| ze|hue|ver|ren| se|frä|ner|uet|ze |räi|e g|e s|éng|ong|eet|lec|at |sén|ier|n o|éie| ve|e v|l m|nne|ten|men|gem|dee|nat|ger|esc|due| du| ma|r s|den|t f| si|lle|n e| be|odd|h h|hee|téi|vu |nen|t g| od|ges|h d|ers| hi|len|her|une|nt |een|gen|hen|n z|ale|e m|rt |ert|ell|gin| na| gi| gr|e r|n n|ich|äih|n h|ët | as|sel|ënn|ihe|it |le |aus|as | au|mat| da|äi |int|ele|éit| am|cha|p d|dat|sse|and|kee|hir|éin|nte|sec|idd|am |t s|i a|t v|ss |ion|r g|ité|e f|rch|rf |erf|res|g v| un| dë|tt |dës|ona|te | st|d g|m g|pro|nal|ken|u s|oll|elw|tle|l d|ree|i d|ann|lwe|um |a f|re | pr|eme| ke|a s|he |tz |kla|erc|est|s a|ese|wer|aft| në|ond|al |n u|och|t e|p e|ft |ire|ee |arb|nd |s d|e w|sou|géi|eg |wec| ko|sin|se |wel|het|mme| we|éch|d f|lt | sc|eem|ete|e k| e | gé|ou |ran|r f|oss|sen|g a|vol| zo|méi|enz|d e|nët|éck|bes|säi|str| pe|d m|haf|g d|r p|per|ge |r z|nze|etz| wa|ara|uss|ber|réc| gl|elt|ene|ane|akt|jid| ji|eso| et| wi|vum| sä|l a|sta|aar| fa',lia:' ba|ba | ka|ka |iŋ |a k| ma| wɔ| th|a b|ma |yo |a t|o w| wu|iya|ɔ k| iŋ|ŋ b|o k|niy|ya |o b| ni|aŋ |ho |ɔɔ | ki|a m|a w|a n|ŋ k|na |ndɛ|dɛ |nam|thi| ku|ama|wɔɔ| yo|wɔ |ŋ m|ɔ y|wun|de |und|and| ko|nde|thɔ| mɛ| bi|oho|ko | na| hu|kiŋ|ɛ b|mal|tha|mɛn|loh|ɛŋ |ana|kan|iyɔ|e k| kɛ|iyo|ali|alo|ɛn |ɔkɔ|a d| wo|ŋ i|a h|kɔ | kɔ|kɛn|nɛ |ina| be|ŋ t|ɛnɛ|maŋ|yɔ |nka|wo |li |be |biy|ɔŋ | wa|yan|ɛkɛ|a f|ɛti| e |i b|kɛk|mɛt|the|ɛ k|ki |mo |ɔ b|e w|oma|ɛ w|ti |ank|nth|he | si|uŋ |o m|unk|ta |e b|amɛ|wal|a p|ŋ w|thu|ɔ m|ath|oom| ɔ |ant|i k|baŋ| fo|a s| pa|ɔ w|hii|a y|aka|foo| fa|in | ho|han|i w|kaŋ|mas|nku|ha | bɛ| yi|kam|kut|asi|kul|him|do |bɛŋ|hɔŋ| bo|iki|man|bɛ |imo|no |kun|iiy|kiy|fɛɛ|hu |ayd| dɔ|ydo|aa |n k|fay|uth|i m|ɛ i|ani|ɛ n|mak|ɛnk|kuy|ŋ h|uya|kin|e m|n n|e t|hit|si |niŋ|pam| sɛ|ɔy | fɛ|boh| fu|ɔma|hiy|huŋ|ɛna|lan|o f|o n|una|o t|hun| yɛ|wuŋ|nki|o i|kaa|eŋ |gbɔ|yɛ |sis| kp|mat|yik|uta|tet|oŋ |nkɛ|alɔ|lɔk|kɔy|oo | te|e n|kas|ban|ra |uno|hut|sɛm|ute|ɛmb| du|u k|hɔn|te |ulo|ŋan|kɔs|ni |amo|ɛnt|eth|thɛ| de|o d|y k|to | in|n b|mɔk|bal|ŋ s|dɔŋ| ne|kɔm|iyɛ|oŋk| nk|nan| dɛ|siŋ|ind|min|ɔ i|deŋ|ɔmɛ|dɔm| bɔ|ohi|ɛth| gb|wɔm|nt |ku |ɔmi|tan|isa|ɔn |ɛra|ɛɛr|ŋin|n m|mɛŋ|ɔsi|e i|ŋ n|mbɛ|huk|i n|hɔ |haŋ',mlt:'għa| għ|li | li| ta| l | je| u |il |al |dd |ħan|and|u l|ħal|jon|l j|edd|jed|ll | ji|tal|ali| ku|du |et |jie|iet| mi|zjo| il|i j|kul|ħad|zzj|ndu|add|d g|i t|ni |oni|ja |tà |iji| fi| bi|l i|l l|a’ |ew | ko|a t|azz|l p| ti|lħa|ulħ|ha |ddi|ħu |jew|i l|hom|għu|om |agħ|ta’|ist|ieg|n i|egħ|tie|oll|kun|ra | ma| pr|mil|a l|all|u j|kol|min|l g|i u|a k|ent| in|ill|t t|ber|pro|la | jk|ma |un |em |ibe|ert| ħa|in |lib|nal|a j|a g|kon|dij|l ħ|l b|l f|l k|ija|ndh|da |ien|en |a u|m i| da|jn |u g| is|fil|ona|jis|bil|sta| me|din|a m|liġ|ità|i m|t u|ett|i k|u m|ull|r r|ir |ezz| m’|jku|a b|el |u f|ied|nda|men|l ġ|ont|ejn|jal|u t|t i|naz|n l|per|i g|jit|ajj|ta |d l| di|ħaj|ers|ura|ti |as |int|tag|l m|iġi|’għ|s s|mm |u k|an |i f|m’g|rtà| pe|dem| bn|jiż|l e|ri |lli| f’| so|soċ|qud|nt | hu|uni|sie|lha|oċj|taj|at |ieħ| ir|d m|nij| im|bni|nie|ede|nti|u u|à t|emm|inj|ġi |rta|ar |l o|ħar|ame|w i|a f|rij|wie|iel|ess|aji|arr| fo| na|u s|d d|llh|xej|id |għh|lu |inn|ntr|tra|dha|ħti| bħ|bħa|iss|ter|na |ħra|i s|ċja|ex |ote|tez|edu|bie|i p|za |oħr|gur| b’| ke| fa|nta|dho|ż ż|ħaż|ss |ind|n m|kem|kaz|ond|tij|rri|xi | ħi|u i|uma| ki|rot|ssi|jin| ri| ik|tat| iż|aqs|una|l u|ata|dan|ngħ|ing|uka|duk|n t|ral|x j|ħho|iex|nn ',hna:'be |mɛ |wo |amɛ| am| le|le | ɖo| be|la | la| ke|gbe|e a| nɛ|ɖo |kpe|e n|nɛ |e l|ekp|nyi|yi | al|ke | ny| wo| a | ɖe| ku|o a|ɛ a| ye|ewo| mɛ|o l|a n|ɖe |ɛ ɖ|ku |lo | e |o k|pe |alo|ye |ɖek|e j| sɔ| gb|na | ji|a k|ji |a l|e m| do|ogb|e e|pek|e w|o n| wɔ|i a|e k|e b|ɖog| kp|a a|nɔ |eŋu|kpa| du|i b| ag|e g|e ɖ|kpɔ|a w|b a|a ɖ|e d|agb|ea |sɔ | ŋt|o m|oɖo| o | na|a b|an |yeb|eye|ŋti|ba | ey|ti |awo|ɔ a|kew|a d| nu|ɛ l|oe |e s|ɛ e|u ɖ| je|sew|i k|uwo|woa|o b|a s|ebe| vo|oa | mu|eɖe|do |mu |tɔ | b |gba|ɛn |a y|ɔnɔ|ŋu |osi|n a| ma|nɔn|ɛa |mɛɖ|si |e v|ɛ b| nɔ|ɛɖe|nya|o s|ia |vos|wɔ |se |o ɖ|ɔ k|a g|ɛ n|nmɛ|ɔn |acɛ|e ŋ| bl|uku|ɔ̀ |nu |woe|use|omɛ|sin| ka| ac|o e|e h|a m|umɛ|ɛnɛ|u k|e y|ɖoɖ|nɛn|bus|mɛa|pɔ |ta |ma |ɛbu| go|n b|ɔnm| ha|nɖe| ŋk| te|ɛ k|mɛb|ɔna|i n|ɔ b|o g|gɔn|sia|teŋ|etɔ|ŋuk|a t|n k| dɔ|fyɔ|wɔn|ɔkp|du |gbɔ|e t|mɛs|ɖeɖ|enu|u a|ɔ́ |kan|ɔ n|o ŋ|je |zin| ba|a e| ak|iny|ŋut|sɛn|goɖ|inɔ|i l|tɔ̀|mɛh|ɛha| si|bet| so| se|iji|ɛ ŋ|mɛt|akp|o v|bɔ |ɔ w|ɔwo|bli|lib|a ŋ|kea|mɛj|ibo|o w|ɛsi|nú | tɔ|a z|ɛ w|kuɖ|esi|ata|pat|ɔ l|kum|ese|eka|yɔ |ɛ̀n|jis|ise|sɛ̀|nsɛ| gɔ|uɖo|ɔɛ |u s|o y|ɔ ɖ|so |a j|in |ŋkɔ|ɔnu|emɛ|anɖ|u n|ka |cɛ |igb|yin|vi |a v|ɔa |aŋu|kɔn|srɔ|ɛkp| ga|u v|o j|ale|ha |jij|jea| va|va ',guc:'in | sü| na|ana|a s|üin|a n|a i| wa|na |ua |aa |aka|üla|pül|a a|ain|yuu|süp| tü|tüü|la |shi|üü |ka |inj|ayu|üpü|nja|a w|ma | in|atü|naa|way|kan|hi |pa |ipa|u u| ip|uka|jat|kua| ka|nai|lu |uuk|n n|n s|a t|tüi|kat| ak|wan|a e|ata|nak| an|awa|i s|nüi|sül|at | u |sa |üna|apü|chi| su|ia |aku|jan|o u| ee|aja|n a|ülu|a m|nap|ira| mü|asa| a | sa|ane|ala|ya |ü a|taa|hik|esh|ees|ajü|üsü|ojo|uu |kas|mma|noj|rua|ach|tü |ünü|aya|a k|wat| sh|üsh|sün|nno|a u|ü n|iki|uma|ne |sü |püs|hua|shu|müi|uwa|waa| nn|jün| mm| uw|üya|lia|laj|naw|müs|a j|n w|u s|ü s|jut|iru|ash|ta |süy|eer|nam|nay| ma|atu|lee|ott|ü k|e n|inm|lüi|n t|i n|u w|aap|alu|eka| at| ac|che|t a| no|maj|ush|aji|jüi|üma|una|sük|no | uj|jot|sal|tum|üch| je|nma| ek|amü|tta|ee |iir|apu| al|je |e m|ü m|u n|wa |apa|aju|ki |raa|jir| aa|ule|ula|yat|suk| un|pus|hia|süm| pü|eru|le |jol|tch| ot|olü|mak|u t|üku|ita|aas|uje|üle|ika|jee|ama|uli|püt|süc|eki|kii|anü|raj|tai|aaj|n k|ütc|kaj| ko|süs|jaa| ne|ü p|lo |lau|a o|aak|e i|aul|i a|jül| ut|era|ülü|nas|n e|pün|jaw|nee|üjü|uni|ion|e a|hii|sio|tsü| e |jun| um|uku|uja| ta|re |saa| jü|nat|tak|sum|kot|ral|as |lüj|u a|e w|uta|e s|asi|tir|ale|kir|ñaj|pia|üli|üpu|tka|epi|mün|tu |lay|aan|üsa| nü|utu|t t|ots',quc:'ri | ri|ik | ch| ta| ka|al |b a|aq |ch |aj |ach|ina|ya |a t|pa | al| pa|che|ech| wi|tal| we|we | ku| ya| ut|jel|i u|ab |el |oje|noj|ono|naq|ta |jun| ju|a r|chi|q a| ma| an|k a|win|an |l c| k |xik|nik| ro|mal|i k| xu|ron|xuq|nam|k u|hec|uq |e k|wac|laj|uk |k k|ani|ij |taq|l r|kak| ja|aji|man|am |are|ala| ar|uch|cho|l w|re |ib | ru|e r|hi | uw|h k|e u|cha|il |axi| uc|tzi|a j| at|uwa|uma|utz|un |una|j k|i r| ki|tin|he | e |a k|l u|k x| q |k r|taj|q y|ami|wa |chk| xa|ak |zij|ub |wi |it |mit|k o|maj| ke|l k|b e|j r|ke |kab|q k|ob |e t|ne |q r| ni|qe |a w|aki|i q|jac|uqe|ata| wa|hke|h r|tb | ne| je|raj|j c|awa|e n| o |nim| u |a n|ltz|alt| uk|b i|hom|i w|a m|ali|l t|rum|je |lik|chu|xa |ama|oma|atb|isa|kay|j j|i j| na|sax| ra|lew|ule| ti|ima|sle|asl| as|kar|ax |ruk|jaw|lem|ema|aja|jis|uti|n k|na |tz |e c|a c|l p|ew |k p|kat|j t|wax|eta|aya| il|kaj|n w| tz|hul|n r|i n|awi|q t|kub|j w|aqa|chw|apa|riq|n c| ub|hik|a u|m r|uj |le |eri|hak|e j|i e|kac|oq |j u| am| qa|a i| aj| ik|hwa|kec| a |q j|e m|ich|e a|tob|m k|ela|ari| ko| uq|jas|uto|kib| re|saj|m u|e w|k j|q w|b r|n t|tzu|kon|a a|o j|jer|ma |k c|kic|kuk|i y|j x| ap|i m|ita|ano| ib|kaq|e p|ato| b |uku|kum| ol| oj|om |sam|ha |toj| ab|paw|uya',qwh:'una|man|an |kun| ka|apa|ana| nu|nun|na |aku|nma|pis|is |anm|paq| ma|aq |nap|ow |nan|ta |qan|kan|anp|cho|how|npa|n n|qa |nak|yan|nqa|nin|a k|mi |nku|lla| de|der|am |now|ant|erë|chu|yon|ëch|rëc|a m|pan| na| ll|ata|syo|lap|pa | i |ey |asy| ts|hun|key|nam|ach|nas|api| ke|tsu|nch| ni|mey|n k|eyn|i k|nts|anq|all|aya|su |shq|tse|hqa|a n|sey| me| ju|ura|nat| ru|ash| pi|rur|tsa|nmi|yno| al| ya|n m|tsi|in |ima| im| mu|eyk|ats|w k|eyq|nta|yqa|kur|mun|a p|rni|awa|onk|kay| wa|kuy|q n|inm|iku|lli|npi|nac|ni |äna|cha|a r|ush|sik|kaw|juk|ran|ark|i m|a a|iya|wan|i n|anc|unk|a d|aqp|qpi|apt|li |mar|ina|ama|n i|a t| o |kaq|owp|arn|wak|ley|yän|kap|q i|owm|a j|wmi|s m|yar|a i|uya|aqa|yku| le|ida|ayi|yta|rka|ink|inp|yoq|kin|oq |i t|yac|ipi|war|tin|ur |rqa|ish|yin|aki|pip|a w| wi|kiy| pa|n l|unm|arq|uk |may|uku|ita|sya|s i|ayä|s d|m k| pu|iki|q m|llq|enq|ury| ur|q l|a y|kar|pti|u k|kas|qmi|ann|nno|y n| sh|shu|n p|kik|k n|wpi|y d|onc|q k|pap|s k|uri|pit|pte|ten|w n|inq|eyt| ja|a l|onn|nni|aqm|uts|a o|i p|ras|koq|pur|hak|i l|tap|mat|u n|ari|way|un |huk|i a|uma|hpa|shp| ki|s l|yni|yka|m j|sti|apä|es |i i|pi |rwa| aw|jut|awt|wto|äya|int|tor|ori|rid|hum|aka| qo|ray|kus|s u|yak|ano|ma |rik| qe|shk|lqo|qot|ya ',isl:'um |og | og| að|ver|að |ann|er | sk|ar |étt|rét| ma|ur | þe|til|ða |ir | ti|ing|nn |il | í | er| ve|ra | vi| hv|ta | me|r s| fr|inn|man|enn|na | ré|ska|hve|eða| ha| ei| eð|r m|tti|nda| se|nna|a s|sem|ið |em |sin| á |ein|ind|þjó|al |men|tin|jóð|kal|num|jál|ndi|a o| þj|leg| he|i s|di |ngu|lag|ga |nar|eim|gu |is |sam|an |þei|ður|ess|þes|a e|a a|ði |a h| sa|nga|gi |tt |við|da |and|a v|ð e|m o|eig|rjá|éla|frj|ags|nnu| be|lu | al|fél|n s|ber|áls|ns |gum| ge|rir| st|nni|ern|l þ| en|með|han|r e|aðu|lan|ni |nin| þa|era|fyr|afn| um|u þ|rík|all|ski|und|i m| fy|yri|m s|a m|rði|i h| má|ka |ss |tta|r þ| tr|m h|tak| la|r a|r h|erj|ins|im |a í|m e|lli|s a|tur|st |sku|haf|i e|sta|rju|lög|i v|kul|u f| rí|mað| ef|s o|má | gr|t a|vir|m m|jum|rra|ri |nré|óða|ð s|æði|i þ|a t|jaf|rnd|gar| lö| ja|r o|rið|átt|l h|ulu|r t|s e|inu|n e|rt | at|yfi|fir|íki|rum|ki |m a|hei|li |g f|rin|la |erð| va|eð |n m|a þ|ð l| si|egn|n h| mi|arr| yf|a r|irð|dar|óta|jót| þá| sé|iga|r b|vin|m v|ti | fé|nnr|nu |fa | ta|dum|ndu|ögu|els|lsi|i o|því|eng|lýs|kil|ví |ðan|afa|in |ð a|njó|ldu|ð þ|trú|val|eru|ru |g s|a f|mil| af| þv| sí|fre|un |g r|ðum|gan|ð f|t s|var| ko|fni|ja |efn|g h|eir|irr|ér |sín|ygg|ryg| nj|eg |bor|sky|óðf|fna',kqn:'a k|wa |la |a m| ku|a b| mu| na|na | ba|ji |a n|lo |ne |amb|ila|nse|se |tu |kya| kw| by|kal| ky|ntu|o k|ya | wa|fwa| ye|wai|ika|ala| ka|ang|afw|bo |kwi| ne| ya|lwa|kwa|e k|ens|nan|yen|e b|bya|i n|alo|ain|nwa|inw|iji|ba |wik|aka| pa| ki|o b|wak|ula|ulu|o m|ngw|nji|ka |uka|ons|gwa|mbu|ha |mun|ana|ban|o n|a l|yal|sha|ako| ns|bak| mi|abo|mba|o y|nsa|unt|ilo|sam|bu |anj|muk|u y|hi |chi|bul|mo |yan|i b| lw|mbi| bu|izh| lu|aku| bw|a y|u b|kub|ko |u k|bil|i k|ngi|abi|ing|no |waf| mb|bij|uji| ma|ish|win|luk|e m|ma |a p|ho | bi|mu |kul|e w| uj|kab|ant| mw|e n|u m|wab|akw|ye |amo|ata|kam|nde|e u|usa|ama|mwa|wan|zha|kaf|ngo|pam|eka|kij|byo|kas|a u|any|o l|zhi|ubu|bwa|bwi|uko| ke|hil|kan|ta |nem|zho|ong|ilw|biz|lum|kuk| in| bo|sem|ine|mbo|sak|kus|sa |e y|imb|a w|end|kum|shi|nsh|kec|a a|ech|vim|mam|gil|i w|o a|lan|ail|ela|pak|ane|kut|kil|uba|jis|yak|tam|ale|ikw|le |bon|asa|i m|o p|eke|abu|wam|nda| un|da |je |ije|lon|mi |kis|ano|ise|nyi|aji|uki|uno|sul|ngu|gul|let|umu|eta|fun|ufu|und|ino|asu|wil|nga|ulo|esh|mvw|lam|uzh|miz|tan|u n|kup|kik|gol|lak|olo|kok|avi|umv|ena|vwa|e p|mwi|kon| nt|uky|ule|yo |mut|emi|sho|me |ite|bun|jil|mik|de | a |ume|esa|aki|aye|pil|ful|yaf|kek| po|uta|umo|gij|ubi|yik|kak',dyo:'an |di | di| an|ool|ati|ti | ka| ma|baj|en |uwa| ku|noo|ak |aba|ana|waa|san|mi |aj |ano|i k|kaa|man|oos| si|ay |osa|aay|uka|aan|ruw| na| ba|dru|i m|i a|ole|n a|ŋoo| bu|as | wa|la |ut |af |n m|i s|kan|mba|aas| mo|ola|aju|k k|ba |am | mb|len|n n|umi|oor|bab|aaf| mu|aka|aam|ol |s s|nen|uum| sa|poo| bú|mat|n k|i d|nak|ni |oo |juu|om |aat| fa|m m|awa|buk| dr| fu|moo|wa |war|eba|um |n u|nab|rom|uba|ne | ya|y y| eb|koo|yoo|sid|úro|idr|búr|i b|j d|ar | nu|ban|aja|lak|nau|kay|au | ká|e e|ara|kat|jaa|sen| ja|uŋo|luw|mof|eni|a e|jut|naa| yo|ank|ila|ene|j k|i f|raa|uma|i e|waw|aŋa|re |ani|k b|o k|sat|f f|n s|ooy|a k|rok|n b|at |or |uju|je |n d|een|ey |kar|a m|soo|ab |suk| ko|ko |num|t a| ak|aak|ama| so|fat|e a|muk| sí|ako|laa|r k|n l| le|uro|o d|e d|ken|yat| lu|foo|iya|jak|aw |l m|m b|f m|of |o b|ula|a n|bur|iiy|ere|ya |nia|o a|eno|let|nan|anu|i w|oop|kur|leŋ|imi|era|i j|iil| be|eŋo|aje|to |e b| yí|kak|m d|k a|yab|kul|ake|dún|íne|ane|afa|kuw|yín| dú|omi| ta|maj| fo|ok |raŋ|aŋ | ek|kin|u d|aal|yii|ul |jaw|bee|y e| po|nku|faŋ|amp|ŋar|ŋaa|iaa|aŋo|úni|op |m k|uto|caa|a a|mii|a d|sof|t m|amb| ne| kú|baa|aki|o m|uja|mak|ise|nub|ulo|e k|amm|kas|kaj|aañ|sil|tak|ñii|mmi|úum|ee |súu|y m| sú|boo|ísu|sís',gle:'ach| ag| ch|an | a | an|agu|us |gus|ar |ch |ear|na |le |ne |ine|art|n a|ta |chu|e a|ile|cht|hun|uin|n c|a a|rt |ith|dh |un | dh| ga|in |h a|cea|e d| le|is |aoi|r a|as |aon|uil|a c| bh|omh|air| ce|on | na|nta| ar|s a| ui|ir |hai| do| sa|tá |a n|hui|gac| go|eac|go | i |ag | ná|hea|sao|dhu|t a|á a|h u|cha|il | ao|n d|tha|hta| tá|n t|cho|oir| de|isi|the|g g|t c|adh|och|ann|a b|do |ion|ha |mha|dea|irs|tea|ht |amh| in|a t|a d| gc| is|th |idh|siú|s c| ai|nái| nó| co|nó |ean|nn |áis|s d|mh | du|íoc|s i| th|s g| ní|se |oin|eid|n s|iún|rta|ní |h n| sh|a s|he | ma|nna|e c|ain|tac|lac|dui|hao|far|h d|nea|che|rth|i g|r d| dl|únt|rse|dlí|í d|inn|ais|l a|ná |ide|hái|lea|int|irt|éan| ph| d |iri|ana|hoi|bha|hom|com|sa |ona|aid|áir|rea|h g|eam|s n|n n|hio|h c|idi|lí |n i|abh|eag|eal|hla|eit|áil|e n|sin|a i|í a|ait|lei|ant|de | bi|rí | si| gh|héa|r c|onn|eas|ead|aig| io|e t|coi|dir| at|s s| ea|d a|im |aío|a l| ré|nt | oi|hei|río|h i| te| mh|sí |r b|ire|n p|ora|h t|ina|a g|eil|e g|gco|nac|t d| da|lta|h s|ath|óir|ge |ige|ont|gan|gha|arb| se|mar|seo| ei| bu|bit| ne| fé|hch|bai|o s| fa|nío|nfa| fh|ó a| tr|r l|mai|la |ada|réi| ac|e s|e b|al |eo |nas|iú |n g|thi|o c|nai|uai|nan|hin|r n|ite|pho|igh|agh|aí ',gjn:'nɛ | nɛ|be | be| ka|e k| ku|so | ke|eŋ |o n|a k| so|ash|a n|shi| mo| ek|ɛ k|to |ɛ e| e | to|aŋ |kas|ŋ n|teŋ|ɔ k|ko |hin|obe|mob|ama|ga |nte|int|a b|na |kam|ma | kɔ|ɛ b|mo | na|li |kpa|eka| bu|kum| ba|e e|a s|sa | nk|o b| a | da|kɔ |mu |pa |dag|ful| ma|o e|uli|aga|efu|ra | ef| wɔ|aa |o k|la |a e|uŋ |she| ki|e n|nko|heŋ|i k| n |umu| as|keb|baa|a m|e b|i n|bu |nya| la|a a|ɛ m|maŋ|e a|kɛ |ikɛ|kik|hi |ɛ n|shu|u s|i b|ana|ekp|tɔ | ji|re |ŋ t|o m|wɔ |e m|ya |ku |a d|ken| sa|ɛ a| fo|umo|wɔt|eba|le |ŋ e|ŋ k|kus|asa|huŋ|ere|n n| ko|ɔtɔ|fo |e t| an| sh| er|esh|naŋ|a w|ŋ d|ŋ b| mb|ŋɛ |bee|o a|ŋ m|ɔ e|i s|ili|ush|yil|aŋɛ|bra|ni |anɛ|bar|a l|a t|yaŋ|edi|med|ii |ime|aas|mbr|ule|kuŋ|di |wul| di|dim| fa| nn|nna| ny|i a| eb| ti|u b|o s|i m|maa|ŋ w|ɛ s|ta |eŋi|ka |ŋi |eni|oŋw|koŋ|kan|ɔ n| ey|ebɔ|kɔn|u k|kek|ŋwu|kes| gb|eny|ɔ m|ɛ f|eko|ar |eeŋ| kp|o t|eyi|ji |i e|kak|iga|awu|jig|ala|baw| am|e s| yi|ebi|gbe| du|mal|awɔ|naa|nkp|po |o d|fan|rɔ |bɔr|ee |yɛl|kur| yɛ|ba |ge |ɔrɛ|saŋ| es|al |bal|wɔr|uso|aba|in |ɛ d|nan|ɔ b|yɛ |ɛla|ri |ɔrɔ|chɛ|a y| ta|bum| ns|shɛ|any|rɛ |bii|we |dur|ars|kil|il |hɛr|u j|ark|o j|ena|par|kap|kpr|laŋ| nt|u m|pra|lga|alg|u d| tu|ini|lik|ikp|e w|iŋ |tiŋ|u t| ab|nɔ |ura|a f|oŋ |esa',njo:'tsü|ng |tem|ung| te|sü |ang|a a|ba |shi| me|er |ten|en | ka| as| ma|nun|ase|a t|ser|ete| aj|met|a m|aja|eme|ma | nu|ka |ji |ate|iba| ta|a k|ak |ali| pe|ong|nga|tet| sh|g a|jak|ema|üng|its| al|la | ni|sun|nis|isu|ei |pei|ia |i a|ü a|zük|ok |i t|kts|em | ki| li|sa | an|sür| at|chi|üts|hia|ite|ir |a n|ra |dak|dan|küm|lok|r t|a s|mes|n k|okt|hi | kü| nü|r a|asa|süt|üra|akt| ib|ga |zün|lit|esü|ech|uts|ar |n a| in|kar|a i|ngd|ako|kok| sa|kec|üka| ke| ak|apa|jan|a l|lem|map|g s|i m|ti | lo|kti|i l|ü m|aka|lir|kas|ash|ala|üla|ama|a p|sül|i n|r k|yak|iny|pa |nya|ayu|ing|sen|g n| ag|g m|man|mak|g k| it|r n|hir| ya|g t| th|ü t|aji|m a| ti|tas|gi |ngt|rte|the|ent|r i|azü|ozü|don|ngb|in |i k|kda|üji|yut|mzü|mei|lim|yim|ati| oz| am|ai |m t| na|ü n|a y|ens|ed |ja |ted|ren|baj|nit|nüj|k a| ay|ima|k n|uni|ta |hin|ion|k k|tio|eim|nem|et | un|süb|üba|im |i s|ngi|nda|ele|kin|mch|imc|san|ons|sün|mte|ngs|gda|d n|ümz|tep|nat|ns |ane|a o|k t| se|gba|ats|ben|he |lib|bon|etb|agi|tba|nok|gdo|ur |kib|ibo|i i|mer|g l|end|sat|agü|tel|bur|emt| da|nd | be|emb|den|ias|uba|akü|tim| ts| ri|tan|bal|cha|ter|ere|r p|or |mal|ngj| yi| to|mas|kba| je|mel|eta|ür |hit|jun|okd|emj|nte|and|ets|ha |teb|ket|ulu|lun|mji|len|ein',ote:'nu | nu|da | da|ni |a n|ro |i n| ro| i |ti |u r| ku|tho|ja |ho | ni|kja|i d|o n|i k|oth| kj|cht|a k|uch|kuc|hti|u k| ka|ka | go|got| ra|i i|yu |o k| yu|te |ra |i g| ji|a m| zo| mu|e n|oo |zoo|di |ini|o d|a z|o m|tsi|a r|̱i | a |a d| ko| ma|a j| pa|si |pa |i r|ñin| yo| te|jin|a g|mu̱| xi|i j|yo | xo|e d|a t|u a| jñ|ne |u y|i p| ne|jñi| fö|ki |xo |i y|u̱i|o y|u n| ju|jte|maa|aa |nda|i t|gi |ing|fi |kua|i a|ua |o j|nth|o t|a x|u j| bi|de |a b|ju |a i|jmo| de|moj|ojo|u x| nd| tz|i x|ijm|i b|xij|o̱i| ge|a y|jo̱|i m| bu|a f|kot|ko | o | nz|ödi|a p| mi|bi | aj|u i|ajt| me|ngu|ngi|a ñ|na |o r|iki|ent|ind|nts|ati|ui |mi |u t|e i|o i|xik|ya |ma |e j| tu|o b|nde| nt|e̱ |te̱|ji |bu | na|u m|o p|e̱f| ñi|tu | ts|e k|u d| nk| an|bin|̱fi|gen|jie|ujt|ri |ña |jti|nkj| ga|nzo| uj|de̱|o g|öts|föt|o u|hat|e̱j|̱jt|zoy|oya|tha|tzu|föd|pi | ja|mu |ank| ng|o f|min|nka|i o|ege| be| pe| kñ|kñi| to|ngú|geg|u̱ |gú | ri|ge |e g|ädi|hte|u b|tze|ee |e m|ku |ete|föc|u g|zu̱| je|öch|ze | pä|päd|gu |o a|be̱|ifi| bä|u̱n|̱nt|iet| fi| ña|me |̱ n|a a|to |api|áki|uti|gua|ñi |e p|mui|tee|oni|a o|udi| nf|̱ku|u̱k|nan|ana|tzo|zo | gi|o ñ|se |nzá|e̱t|e f|jua|fin|me̱|äts|bät|i f| ño|uni|ga |e r|ina|je |zák|e y| ki|ke |nja|ño ',qxn:'una| ka|an |kun|man|ana| ru|is |apa|run|pis| ma|aku|paq|na |nan|npa|kan|nma|aq |ta |aw |qan|anp|nin|yan|cha|nap|anm| y |nqa| di|a k|yun|nak|haw|mi |kay|syu|qa |aya|n r|api|dir|pa |ant|ich|asy|nku|naw|n k|iri|ric|chu|lla| na|tsa|ima|nas|may|a m|rni|anq|hun|pan|ay |ata|in | im| ts|say| hu|yqa|ayq| ll|nts|nch|lap|tin|huk| ni|nmi|a r|pti|nat|tsu|unk| pa|ura|nta|apt|i k|npi|am |w k|rur|inq|un |su |nam|ach| wa|pap|q y|kuy|n y|arn|kap|a p|inp|n m|ayn|ita|unm|ni | mu|inm|yna| ya|a i| li|ran|a d|pit|y t|a n|ayk|s d|irn|tsi|iku|u k|all|sik|unc|liy|uku| ku|uk |uri|awp|kas|uya|ada|uq |ras|sya|a a|a y|qpi|ink|da |q r|i p|awa| ri|wan|q k| pi|s m|aqp| u | al|uni|yku|yka|hqa|asa|y m|ida|kaq|yuq|shq|ash|wpi|y d|s u|qmi|aqa|a l|s i|s k|as |a h|kar|unp|kad|aqm| ar|mun|s y|aru|ara|iya|kla|tap| iw|urn|iyi|wal|y r|kin|iwa|a u| si|yta|n n|kur|u m|sak|lli|riy|dik|ika|yar|yap|rnu|yir|unt|iki|tan|n i|m k|nni|yin|war|unn|ma |i r|ris|n a|shu|kri|ats| kr|nac|yac|byi|uby|gub| gu|kaw| is| pu|nna|ann|nis|ish|usy|pip| ra|pay|ank|sti|iyk|k r|rmi| ul|siy|kik|ipi|ama|ili| sh|igu|uta|isp|s r|q m|i l|mus|ray|int|ahi|ikl|a t|lar|stu|w n|w r|naq|y i|arm|lig|dan| ch|s l|awm|adu|ruy|y k|ayt|way|rik| ki|ist|asu|pas|hin|spi',xsm:' o | ba| na|na |ne |ba |e o| de| se|aa | wo|a n| ma|se |ge |a w|de |ŋa |e n|ma | ye| ko|e b|ɔɔn|o n|aam|maa| nɔ|ama|a t| wa|nɔɔ|no |o m| to|ane| te| ta|o t| ch|e t|ɔno|a k|ko |to |o b|e k|ye |ra |oŋa|a b|o d|a s|e w|lo | je|o w|taa|aan|e s|ege|a l|a y| ne|a j|a d|o k|woŋ|e d| ŋw| la|naa|jeg|wol|em |eo |o y|ae |i o|we |ri |ni | ke|wo | ka|aŋa|iin|o s|won| mo|mo |ei |olo|wad|re |a m| da|dɛ | we|ɔge|tei| pa|daa|wae|ora|a c|a o|chw|ga |i t|hwo|log| lo|li |te | ti|teo|ina|o o|im |age|nab|ke |oŋ |o j|ŋwe|eir|adɛ|bii|abi|am |toŋ|i n|go |ogo| ni| fe|oli|baa|waa|iri| tɔ| bo|aar|baŋ|e y|wor|ta |oto|tot|boŋ| ya|onn|e c|ŋwa|are|ee | ja|pa |lag|i d|ɛ s|o c|uri|ein|maŋ| dw|che|fee| ku|ura|wan| si|o p|wea|m d|ea |era|a ŋ|obo|wi |hɔg|pwo|dwo|chɔ|kur| sɛ|bob|e m|tɔg|o ŋ|sem|ini|yer|iku|ia |zur|e l|ezu|yez|m t| be| vo|ran|dem|a p|m n|wop| zo|dwi|opw|one|om |sik|kuu|heg|ega|uul|tig|elo|sɛ |o v|ene|m w|ja |i s| di|ŋe |yaa|ka |o z|ɛ w|sei|ete|tet|igi|kol|a z|i w|een|e p|aŋe|oo | ze|e f|lan| sa|oor| kɔ|la |kei|uli|ent|gis|isi|sim| kw|nto|ywo|nno|aŋ | po|tii|ded|ore|del|m ŋ|nna|vo |o l|a f|ada| yw| wɛ|edw|ŋ o|i b|bia|i l|i m|nte|men|ɔme|gɔm| gɔ|ɔna|jei|ere|tɔn|tee|i k|di | ve| jw|jwo|ana|ŋ d|lim|zoo|kom',gag:' he|hem|em |lar|bir|an | ha|ın |arı|erb|hak|akı| ya|n h|in | in|ar |ir |san|kla|nsa|da |ins|sın|ası|rın| ka| bi|ara|na |aa | ol|ım | va|lan|her|maa|anı|eri|nın|kı |akl| se|var|un |rbi|lma|ler|nna|a h|r i|r h|est|bes|ser|rbe|lik|nda| ba|n k|ala|stl|tli|n v|ına|ada|n b|ak |let|nä |rin|nan| de|ını|zım| bu|mas|alı|inä|nma| sa| lä|a b| on| an|ama|al |oru|lää|ääz|ı h|äzı| ku|ä h|lä |sin|nar|ard|nı |än |ınd|etl|m h| ko|är |lär|esi| di| ay|olm|n y|sı |a a|bu | ki|irl|evl| al|lı |rı |ka |ndi|ya |yar|kım|ayı|yad|end|ulu|m o|a g|kor|kle|kar|içi|si |vle| iç|ää | ke|ken|n s|rle|ekl|ni |ı o|ıla|rak|çin| cü|r s|di |irt|rla|rdı| da|aba|ann|baş|r k|ık |ik |ana|ırı|ı k|iş |rta|n o|onu|i i|uru|aya|m k|m d| ta|mää|ili|er |dım|a o|ola|ini|a y|tin|kab|a s|nun|ona| do|a d| sı|tak|kan|bil|mal|ä k| na|eti|k h| gi|m a|baa|a k|anm|ısı|eme|m s|lık|ikl|lun|rıl|and|r a|dev|leş|ä b| üü|ölä| yo|ver|kur|rul|sun|run|mäk|cüm| ge|li |ril|üml|ı i|ile|n t|dek|mak|ınn|yır|nmä|aat| mi|i b|m e|ı b|tlä|aal|alk|rma|äk |n e|dan|enm|ntı|iya|ren|lii|m b|mes|yap|i h|a i|r b|aţi|aşa|yaş|dä |nin|ano|ä d|üre|üür|k a|ek |lıı|hal|n a|lsı|aşk|şka|rli|tan| te|işi|lem|ani|sıl| so|ıl |non|n i| gö|say|ıı |ndä|ind| es|u h|ı d|aşl|din|miş',shk:' ki|ki | bë|hø | a |i k| ge|ø k|en | dh|dha|nhø|han|anh|i b| yi|bën|yi |i g| me|ng |bëë|gen|ëëd| mø|ri |ni |e k|mi |i d|ne |i p|ø b|øg |e d|ø m|gø |ge |ëne| wa|ödh|a d| pö|pöd|ny |la |ala|wal| ny| yï|i j| ke|møg|dyë|ji |dø | dy|n k|g a| kö|me |yër|i y|gi |e b|di |dhø| bo| ko|bon| dw|rø |ong|ipe|kip| ji| e |nyi|hi |da |köm|dwa| da| gï|a k|n a| o |i m|pe |ömi|bur| bu|men|nni| gw|inn|kin|dhi| ka|gg |i c|g k|yïe|ër |ïe |i w|e y|a n|kor|ii |ani| ci|y k|ënn|ëdø|ø d|i t| kì|nyw|a m|nn |ka | bä|wad|iny|g g|kì |ërø|eny|a b|pin|i r|ø y|ään|ëd |add| pi|yij|äng|e g|uri|igg|r k|gïn|cig|a c|öög|n d| mï|i n|ïn |rum|mø | á |cïb| ce|ïb |dhh|ij |g d|a g|kel| kw|li |yïë|e o| ng|per|gan| te|wøb|ïdh|cug|eki|gek|gwø|ko | en|ngi| gö|o g|e p|mïd|n g|g m|th | kí|wøg|kí | cu|ø w|ggi| ba|a á|kwø|øgø|y a|de | ja|ddi|ugg|ywø|göö|ang|g b|elø| ru| ty| gø| di|e m|løg|ì k|a a|e w|ø g|kye|lø |ø e| kø|bi |i l|ngø|re |bø |ga | kä| ác|e c|ácï|l k|ögg|yø |le |ken|h k|eth|ggø|cet|r m| mi|yii| wø|är |ïëy|wat|ori|b k|i e| ri|egø|bän|än |kà |øøg| kà|n c|bää|wør|eg |tyë| mä| pä|yën|ëde|gwe|an |gïg|øbb|bbi|g n|a y|tee|ing| ga|wed| cï|hhi| wä|ëny|e r|ëng|er |iri|kir|h a|dïd| dï|jam|ëdi|lli|wøl|yï | më|ban|ed |m y|ëy |d a|wöm',nba:' ku|a k|a v|na | vu| na|wa | mu|a m| vw|vwa|mu |u v|nga|ku |ya | ka|ka |la |ga |oxe|e v|o v|xe |co |kul|a c|a n|ang|vul| co|o n|ndi|uli| va| li|ti | vi| vy|di | ci|sa |ung|emu| ca|kwa|mo |lem|ing|nu |pan|ule|ca |and|mbu|lin|u m|i k|e k|umo|o c| kw|i n|a l|vya| ya|end|i v|lo |nde|o k| wa|uti|li |mun|fut|uka|aka|esa|unu|vuk|ali|ko |ngi|je |u k|wox|muk|u c|we |van|ma | ma|kut|nda|e c|ane|ind|ngo|kum|kus|ika|lik|kat|nge|kal|ula|ela|amb|de | ly|man|ong|uje|vun|le |zan|ama|anu|ngu|lya|apa|i c| wo| in|go | al|pwa|aku| mb| vo|lif|ipa|gul|ala|u w|u l|lim|vox| ng|ulu|ati|wan|ifu|o m|so |nen|umu|vo |ita|ulo|kam|i a|utw|imb|iko|bun|ana|o w|ngw|upw|ilo|isa|bu |ima|kuk|ene|kup|wen| mw|eso|eka|nap|gi |ili|e a|apw|yen|vip|e m|u n|yox|ukw|a i|gwe|gan|kuv|ond|a y|sin|vak|und|vyo|uku|sim| ak|maf|wam|vum|afu|ayi|e n|avo|any|lon|yi |kan|mes|ena|ame|o l|a w|asi|imo|uxo|nyo|ele|ne |twa|si |nek|ges|elo|mwa|kun|eke|uta|ton|tan|use|lul|uki|amo|wak|da |una| um|yak|wal|wav|yo |ale|lil|sem|mum|wet|iza|ike|key|vuv|a u|vus|vux|i m|wis|bul|tu |i l|vwo|wo |o y|i i|tav|vwe|o a|pwi|utu|was|wat|ina|asa|ije|pwe|uvw|a a|ato|usi|kil|eye|dam|i y|mol|oli|kay|vut|ciz|ye |awa|ola|eng|va |vuj|mwo|ivu|upa|xok|oko|uvi|lye|uma',miq:' ba|ia |ka |a b|ra | ka|aia|kai|ani|a k|ara|ni |la |a a|ba |a s| na| ai|kan|sa |aka|nan|a n| si|an |in | ku|ika| up|upl| la|pla|i b|n k|sin|a l|a u| ta|tka|bri|ira| br|nka|a p|ait| wa|bak|lak|aik|bar|isa|ban|rai| ma|ank|aku|ku | sa|itk|kul|a d|ulk|lka|a w|a t|ris|air| pa|a m|kab|ki |kum|aba|uki| ap|bia| su| di|wal|sut|na |kar|abi|dia|api|ri |pia|ala|i s|uka|ut | pr|tak|ias|bai|ain| ra|asa|mai|ais|rik|duk|kak| lu|i k|i a|aha|pri|as |ya |luk|ha |asb|kra|sba|n s|tas| bu|kia|wai|iba| du|sip|apa|n a|ras| iw|bui|wan|ui |at |ska|um |i l|n b|ila|t b|iku|aya|lkr|kat|i n|aur|bam|nah| ya|ant|ntr|ip | da|i t|u s|i p| ga|awa|a y|ink| an|umi|u m|sau|mun|atk|lik|pan|a r|a i| mu|nir|alk|ana| as|asl|iar|tri|i m|sla|auk|yar|nat|lar|ai |ak | bi| wi|war|dau|iwa|bil|nib|isk|ark|rin|mi |ura|kuk|n u|ari|rka|ta |una|k k|i r|pli| ti|ata|ame| py|men|man|nt |pai|isi|pa |n n|lah|kir|m b|ent|sap|p k|t k| mi|iwi|ma | ri|hma|ahm|gab| al|pyu|pya|ilk|t l|nra|til|iki|u k|tab|aki| ki|bah|amn|mar|li |ita|n p|yua|utb|tba|mik|iti|san|a g|pas|yab|bay|urk| pl|al |paw|u a|nsa|ans|sik|bap|i w|anr|ik |is |mna|maw|yak|lba|apu|lki|rk |ina| sm|sma|mal|tai|pra|aib|upy|tan|ima|kni|n l|aid|may|n w|uya|n t|t t| ni|s k|ria|tik|tar',mam:' tu| ky|b i|il |n t| n |al |l t|u n| il|tu |aal| b |tuj|uj |jaa|ti |iil| ti|xja| xj|j t|an | ix|kya| j |i j|ix | ju|qii|yaq|x t|aqi|een|l k|b a|en |j k|aj |tza|un |lee| mi|n k| tz|tz |ib |jun|nam|l x|a t|am |ok |tna| te| aj|l b|aq |at |okl|qa |kle|ax |eet| tn|l a|n x|tee|a n| to| at|t t|uun| ma|kyo|aan| tw|q i|qe | ta| an|ool|twi| ii|yok|zan|juu| tk| qa|x k| aa|chi|ma |laa|kyx|ol | ch|ab |anq| ya|tii|nq |itz|tok| tx|taa| ee|kye|et |q t|iin|naq|mit|iti|n b|k t|e x| ja|ana|wit| ib|j j|tb |ala|ob | tb|l j|nx |kyt|noq| no|m t|wi |kub|ook|oq |l q| ni|ub |kyi|t k|yoo|q u|e t|j a|l m|x m|nb |mal| ko|i y|iky| ok|anm| q |i t|ik |k u|te |aay|yee|xii|j x|nma|u j|ila|o n|kyj| tj|txi| a |xi |iib|n a|tx | wi| xi|m k|ina|yax|ja |iya|tja|k b|aaw|lqe|n m|l n| oo|etz|jb |unx|yja|yii|za | xa|i x|tl |ntl| t |el | u |yxo|xoo|b e|imo|tku|mil|ixq|ee |him|t x|a b|too|tan|ilq|naa|unt|nan|lab|ky |u m| ik|pan|ipa|ama|n j|maa|z t|b t|a k|ex |sla|xqa|a j| qe|pib|e k|ay | al|yan|inb|una|z a|aax|nin| ka|aaj|ntz|xan|kop|opi|yal|yta|ant|tko|j m|y t| nt|int|ntn| un| nx|q a|xna|eex|n n|uma|miy|ya |ye | yo|mob| xn|z o|kyc|ych| xt|l i|a a|ajb|e w|win|i n|kyu|l o|x i|xax|oks|cha|hik|kol|tum|ksl|yaa|x a|aw |x o|yb |oon',hus:' an|al |an |in |tal|ab |laa| ch|l a|ka | ka|aab| in|ala|ani|ni |aba|at |bal|k a| ya| k |aja| ab|ik |tsi|chu| ki|sik| ej|xta|kin|ejt|ch |n k| xi| al|n t|l k|n i|jat| aj| ti|nik|hu |h k| ju|k i|ech| wa|jta|n c|ini|dh | bi|yaj|t k| kw|n b|its|ikt|w a|tso|i k|bit|t a|xi | t |ti |cha|b a|n e|kts|e e|yab|b x| ne| ta|a k|axt|sow| ja|n a| ts|kw |k n| ul|i a| ec| ij|a a|wa |a t|ne |n j|jun|ij |a c|tsu|sub|tin|bax|u c|unk|i t|uba|u u|nku|aal|wal|xin|ulu|udh|aa | ux| i |h a|un |m a| xa|uum|adh|ow |am |jto|l i|naa|ee |lud|a j|o k|to |o o| ko|uun| to|iil|jay|huu|lom|uxt|juu|j a| ba|ta |dha| ni|il |awa| na|ach|wts|ax |owt| ex|lwa| je|a i|i j|n u|l t|tam|idh|aaj|ban|aj |ilt|om |ixt|ak |kun| ma|l x| ol|jee|ol |t o|i c|alk|a y|tsa|max|i y|umt|kwe| oj|aam|l y| ak|ko |kul|b y|ek |alw|te |e a|chi|hal|nts|jal|nal|ita|exo|nti|tee|t t|xit| u |wet|ja |haa|hin|ant|nta| pi|alb|na |l w|waa|waw| be|bel| ku|lbi|u t|ay |ete|l j|mta|b k|k y|mte|jba|um |aac|unt|xob|eem|bla|ata|yee|ulo|wat|jaa|aye|obl|lmi|olm|ich|tol|chk|ojl|jla|hk |n w|ajb|l e| oo|a w|i u|lts|uw |ap | te|baa|aka|k u|em |nee|a e|eec|n y|alp|awi|che|yat|tom|hab| ee|hee|a p| pu|lpa|a n|uts|a u|omt|tec| la|ba |lka|i w|nin|b i|elo|xaw|iya|b u|taa|lk ',tah:'a a| te| a |te |ra | i |i t|e t|i a|a i|a t| e | at|ta |to | ma|ti |o t|au | ti|ara|fa | fa|a e| ta| am|e m|mau|na |ia |ata|ana|e h| o |e f|man|a o|ama| to|o a|re | na|i i|ira| ai|a n|nar|hia| ar|e i| ha| ra|u t|ai |ha |e a|ato| no|ore| ro|no | or| tu|a m|o i|atu| ē |ora|o n| hō|ō ē|hō |e r|tur| ao|oto| ia|ahi|apa|rot|e p|aor|u i|pa |amā|a r|ura| ap|tu |tei|i r|ma | pa|va |ro |par| va|mā |ito|ua |e o|ait|ie |eie|uru|o o|u f| ir|o e|u a|ohi|e e| ei| ih|oa | it|hi | hi| av|ri |ita|rur|aha|afa|fai|a h|u e| ah|aif|era|ifa|i e|a f|tah|āra| oh|iho| au|hip|ipa|rar|ā ā| fe|e n|fau|ei |tau|iti|ure| āt|ni |auf|ufa|utu| tā|mār|u m|hau|rir| pā|upu|iri|tir|ari|rav| af|pu |ave|vir|i m|āto|pū |are|uhi|roa|mai|ere| ni|ru |u o| an|pap|avi|aro|u v|api|tā |tup|nua|enu|a p|pi |ho |fen|ui |i f| mā|ā i|ehi|iah|eia|aho|mui|amu|e v|ae |rer|u h|ve |mu |o r|umu|tum|hin|ou |nah|oro|i o|reh|ava|tat|ihi|a u|ati|ū i|aut|rau|por|hor|ruh| hu|oia| oi|āpū|ate|pāp|ā o|aur|ter|aru|tua|e u| ut|hap|ipo|pe |rat|i n|u n|ina|una| me|u p|ē h|pār|āru|po |tam|pae|tor|tou|i p|far| po|oti|ā e|ē t|ē m|top| nu|ero|mer| er| ho|mua|opū| mu|tit|rah|noa|ota|imi|u r|hui|uir| im| rā|ino|ne |rit|rā |tae|uit|ea |mar|uri|ite|ē a|aup|uaf',nav:'doo|go |íí |ee | be|bee|tʼá| tʼ|ʼáá|ígí|gíí|óó | bi|dóó| do|oo |áá | ha|ah |e h|o b| dó|haz|í b|á a|í d| há|níg|łts|dah|tso|ii |ool|hgo|į́į|o d| éí|éí |nii|iʼ |tʼé|azʼ| da|aʼ | ah| ni| na|ood|ʼ a|hoo|́į́|oh |ʼą́|bin|ą́ą|da |soh|h d|h b|ʼé |áád|laʼ|aji|ani| áá|yah|o t|ádó|á h|íní|aa |eeł|din| aj| ał|naa|éya|kéy| ba|iin|dzi|ʼíg|ą́ |jił|yee| ye|į́ | di|ego|oot|o á| dí|á á|o h|iłt|í t| ho|ʼii|nah| ké|kʼe|há |é b|ina|zin|ini|otʼ|ʼ b|tʼi|díí|ʼį́|lį́|ó b|zʼą|ahó|ʼ d|ʼaa|éeg|iní|ʼiʼ|ʼeh|ahj| áł|ání|aah|iné|baa|aan|ado|i b|ido|ash|ʼée|ʼah|eeh| hó|e b|ʼáa|ó n|ʼ á|ish|híg|ótʼ| bá|aha|zhd|ees|jį́|nis| bí|hjį|átʼ| ad|h n|ehg|ó d|chʼ|ájí|aʼi|e a|dla|shd|hee|oda|ooʼ|ʼ h|haa|né |aho|́ʼ |iná|ole| as|ní |tah| áj|ahe|́ t|níí|hdo|įʼ |ó h|lee|į́g|áha|áán|łgo|o a|hdl|í y|tʼį|iiʼ|eʼé|́go|hwi|áad|bá |azą|į́ʼ|izh|hak|haʼ|́ą́|zą́|aʼa|ił |iid|ikʼ|azh|kee|ada|h t|hod|í h|bik|itʼ|bił|o n|íʼ |á b|chį|áan|sdz|wii| yá|odz|eł | át|ałt|ł d|háh|łtʼ|in |n d|ind|ing|́ d|tsí|aaʼ| ní|h a|sh |ʼoo|its|ngo|neʼ|nih|a d|íla| hw|ó t|eha|óch| az|hóc|ída|bíl| ts|áʼa|ítʼ|zín|zih|á n|e n|did|h h|jįʼ| ła|ełt|has|łaʼ|ooł| ná|łch| ii|a t|náá|nit|h é|naʼ|tʼa|oní|łda|oon|daʼ|tʼe|hóó|dai|í é|ʼdi|hįʼ|niʼ|kót|daa|had|áás|ida|óót|ʼ t|hin',lot:'o a| ik|iko|de |ng |hod|ode|ko |to | ho| to|i a|ang|ti |o e|ri |i i|o i|e h| on| ob|re |e i|nyi| ah|ati|aat|i o|ni |ana|aho|ani|yo |ere|ier|bo | hu|won|wo |any| ab|man|na | aa|dan| da|ya |owo|jyo|ngi|n o| el|yi | bw| an| ow|lo |bwo|ve | ve|isi|no | jy|eng|oni|ben|o o|hun|i d|yya| ne|obe|ari|o n|o v|i h|tul|ung|obo|ulu|nya| am|un |si |e a|han| ih|a a|nie|ono|ulo|g o|ita|lul|on |lun| it|awa|a i|mij|iji|ong|osi|ara|ony|ama|abo|an | ar|io | aw| at|a o|au |hos|hon|ji |aba|i t|hi |iti|ami|emi|ik |elu|g a|a b|e e| or| ad|atu|fau|ihi|gi |ori| et|iny|rri|ian|gan|e o| in|g i|iyy|kuy|mis|sih|nga| ku|elo|i e|wan|bab|ta |o t| is|adi|a e| mi|ra |ngo|uyy| wa|ma | em|waa|yit|di |uk |a t|iha|aha| fa|iam| ir|a h|yan|ida|k a|yyi|i b|ak |eti|uma|k h|k i|gia|it |oi |uni| ek|ner|ie |iho|iri|abi|rem|wah|ema|bia|ing|ore|ek |uto|igi|gid|eyy|hut|uno|rij|aga|i j|orr|o j|rum|mir| ha| im|tek|n a|kaf| al| ma|kia|iru|otu|o h|ahi|rre|n i|wa |egi|bis| na|jan|ija|da |e t|ia | om|olo|mik| eh|nit|imi|ihw|jor|umi|oji|koi| eg|oti|wat|err|tik|o f|i l| er| lo|ijo|uri|tan| iy|kum|ata|eki|gem|ruk|obi|aka|u d|yiy|lot|ria|eko|afi| ey|g m|a j| ok|dur|k t|jin|ai |um |nar|uba|nob|bwa|o b|sie|nun|anu|ban|bot|eru|eha|oro|ro |kik',cak:' ri|ri | ru| ch|a r| ju|jun| ta|chi| wi|i r|an |un |ch |chu|n r|win|el |l r|qa |ik |huq|b a| ni|hi |uqa| ki|k a|ruw|äq |näq| k |b ä|j r|en |inä|ta |tzi|ij |taq| xa|i k|n j|in |ach| pa| al| re|len| ma|aq |xa |pa |äl |man|q a|al |noj| xt|ib |i n| a |jel| äl|oje|uk |ïk | oj| ul|ono|ule|a c|uch|re |n w|i w|h u|aj |uwa| ro|a x| nu|ina|ew |a k|wac|lew|aji|wi |q r| at|ruk|äj |k r|aqi| as|uq | an|n k|ama|zij|naq|n c|oji|ich|xti|k o|l c| ko| ti|i t|sle|asl|ab |iki|ub |tz |äch|a t|sam|il |l t|qi |wäc|maj|ala|itz|i c|n t|ruc|tik|utz|ob | aj|nim|ima|i x|h o| tz|e r|nik|j c|läj|ron|k i|h r|kik|l w|rik|än |i m|k u| q |hin| in|rut|ütz| üt|ma |j t|uwä|laj|kon|l k|ya |l n|ruq|q i|nel| än|iq |una|jib|xik|j k| o |ïl | sa|nïk| ij|isa|kit|jin| b |zil|oj | ut| ra|ijo|qal|oma|ajo|cha|iri|l j|chï|hïk|ke |pan|n x|ejq|jqa|h a|ric|nan|ale|a j|raj|q c|uwi|q k| ka|i a|rej|ira|nir|uj |k c|rom|olo|ilä|i q|ine|ris|mal|o c|alä|haj|j p|b e| ja|xtu|onï| x |u x| u |to |nib|a o|n n|tb |aqa|hik|kir|ike|atb|ja |kic|z n|zin|atz|i j|tzo|tij|kan|lan| na|k w| wu|upa|w r|rub| ac|zob|ixi|hup|n p|jir|äx |k n|ki |q t|na |wuj|jle|tiq|ojl| ey|axi|nub|iya|jij|j j|jon|ota|ajï|a m|rij|cho|ani|uto|usa|ak |jo |on | et|e c|zel| wa|lot',lns:'dzə| dz| vi| ki| wù| a |zə̀| fó| e | gh|ùn |ìr |wùn|wìr|̀m |ay | wì|ə̀m| à |n à|gha| ké|kér|ér | ke|fó |hay|e k|r d| fo|o w|fo |ìn | ns| ve| á |n w|ə̀ |wun|m k|ə̀n|ví |réŋ|vit| ye| sh|r g|óo |un | kì|fóo| wu|òŋ |kin|ó a| mo|e w| wo|a d|n k|̀n |ke |zəə|a k|mo |ə́ |y f|wír| wí| kf|kfə|í v| ji|wù | rə|kìn|ji |ve | é |éŋ |ír |ŋ w|ita|itu|zə |ee |kit|in |eé |y w| wò|wòŋ|ín |iny|o k|nsə|əə̀|ne |r f|nsa|sər|í w|à v| se|m w|tì |ər |er |n s|taá|aáv|áví|r w| wi| ny| wá|se | ré| yi|tat|n f|a’ |i w|r v|n a|e v|yò’|áa |e n|wáa| là|ŋré|éŋr|tu |ì k|èn |é w|ker| yò| ví|m v|ò’ | li|là |é k|sí |an |’ k|nta|r k|e d|iì |wo |vin|á w|tí |u k|i k| sí|ye | kí|nyo| kù|int|sa’|yo |n v|yiì|o s|ií |r m|atì| ta|say|e s|o’ |ŋ f|mé |e m|a y|itú|yee|ùm |sòŋ|və́|shi| sá|m y|íy | və|éy |n é|r y|m s|n e|íri|ri | lì|iy | bó|rə́|fə̀| ms|à k|msò|sá’| bi|èr |han|im |iíy|kí | sa|ŋ k|sho|vi |oo | si|á’ |ù k|à f|əə |n n|rə̀|en |à n|túm|úm | ko|’ a|’ə̀| ŋg|veé|e g|y k|nya|bó |y e|y a|e l| fè|hií|fə́|o y|o d|kùm|n á|í f| mv|ŋ v|lim|a l|lìm|juŋ|ə̀’|uŋ | yì|e y|si |m r|mó’| vé|e f|èm |’éy|r s|ìm |e á|vij|é v|a s|wiy| wà|ə e| sé|’ w|n d|á k|y s|’ f|o n|um |yin|kiŋ|’ y|kil|yeé|ó w|̀ á|áŋ |́ə |ə́ə|í k|yí |ghv| yé|o v|ki |ŋgè| tà',ton:'nga| e |aka| fa| ‘a|fak| ‘o|a ‘|‘a |i ‘|e t| pe|ha |a e| to|i h|e n|oto| ta| ‘i|o e|ata| ng|ai | ke|ga |u ‘| ko|ke | mo|a k|e f|ang|onu|hi |‘ok|ku |‘i |oku|e k|aha|pe |mo |kot|ki |ahi| ha|e ‘|a p|he |gaa|ton|tot|‘o |ne |nu |au |a f| he|aah|’i | ma| ‘e|ko |tah|i k|tau|a m| ai|ea |oa |pea|oko|i f|ung|e m|ua |tok|o ‘|e’a|toa|i t|u k|a t|a’a|no |ama|i a|i p|ia | ka|u’a|a n| ki|na |mal| fo|aki|kai|o f|ina|i m| ne| ho|au’|pul|u t|kal|tai|’an|ota|’at|ni |e p|ain|ule|ono| tu|gat|hon|kau|‘e |aue|gau|a’e|e l|le’|o h|ika|a’u|u m| pu|ala|ili| me|’a |ta’|kat|‘en|u f|tan|a’i|ei |o t|fon|tu’|kak| la|u’u|’u |‘ik|ako|nau|ue | fe|nua|ui |li |ene|ta |atu|ka’|kam|ali| na|alu|ao |o k|ing| ku|ehe|u’i|e h|’un|ma’|le |tui|tat| ia|kaf| ni|ana|hin|kah|man|uhi| fi|ngo|fil|sia|ong|fua|efi|ale|lao|apa|fai|vah|u p|na’|kuo|fou|ha’|olo|oun|fa’|oni|’ap|ulu|ofu|’ak|ele|uo |a h|e a|uku|alo|mei|mam|ino|lot|keh|o m|e’u|mo’|o’i|tu |’uh| ak|sos|si | ‘u|lu’|ohi|‘ul|gof|lun|la |aan|a a|ani|otu| te|ie |aut|u n|i’i|e’i|kas|afa|ava|lak|ka |tam|mai|u a|kan|o’u|lau|lie|lel|o n|kon|vei|aum|me’|o p| va|tak|itu|nge|ofo| le|nis|koe|oe’|‘ak|’ui|han|to |aau|osi|’e |kap|lo |lei|loa|mak|ito|ngi| hi|afo|eni|tuk|fan|ena|upu|ti |kin|ue’',lad:' de|de |os | la|ion|sio| i |on |la |asi|el |es |en | ko|der|ere|ent|ien|o d|ech| el|as |cho|rec|ra |e l| en|a l| a |a p|kon|s d| ka|al |na |ona|do |ene| es|ad |e d|da |ho |to |tie|ers|per| su|s i|los|e e| pe| ti|nte| un|n d| lo|ada| pr| se|o a|ida|est| li|tad|rso|era| re|son| pa|a d|ke |e s|dad| ke|sia|ado|a t|a k|kad|ar |n k|a e|nsi|te |par| po|ara|nas|s k|no |men|ne |sta|n e|pro| o |a s|lib|o e| di|res|nto|les|dos|rta|s p|su | in| to|s e|l d|mie|kom|ens|ser|ual|er | so|o k|nal|nes|ale|por|ber|a a|ibe|las| na|ert|o i|hos|n l|ras|or |osi|ia |imi|un |ran|i l|ter|l k|man|ami|tod|n p|tra|sen|gun|e a|a u|del|e k|a i|one|sos|din|ika|s n|isi|una|ons|i d|kla|o p|o s|des|kas|igu| ku|uni|d d|s l|uno|ngu|ing|ido|nos|ta |ame|ali|bre|gua| no|re |ial| ak|das|io | as|sid|n i|an |art|se |ade|l i|s o|e r| ig|ndo|ura| ma|i a| dj|and|nta|ntr|ksi|uma|dju|ide|s u| fa| le|odo|avo|a o|e p|ome|dra|tos|i e|vor|s f|lid|tar|mbr|nid|ant| si|s t|ten|ndi| me|zar|esp|kua| um|pre|lav|rot|us |ote|eks|l e|sus|kav|kto|r e|s s|i k|e i|int|end|s a| ot|dis|ono|n o|lar|mo |akt|ria|ont| fu|avz|o l|o t|rse|ars|tan| al|ver|ekt|u p|ka | ni|ori|iza|n s|mas|mun|ste|tis|pod|r l|odr|esi|ias|ey | mo|nda|r a|aza|rar|dek|d i|vid',tbz:'kɛ | kɛ|ti |ɛ ɖ|ɛ k|nkɛ|aa | a |mɛ |o n|ɖo | ɖi| ti|i ɖ|iti| ɖo| nk|i k|nɛ |ɛ n|ɛ t|yi |tɛ |nit| ba|ɛ b| yi| mɛ| bo|oni|ri |mu |i b| on|ba |bo |a k|bɛ |u k|ɛ m| we| ɖɛ| nɖ|ku |o k| bɛ| na|ɛɛ |ɛ y|ɔũ |ɛ o|mɔũ|a ɖ|yɛɛ|i t|i m|a w|we |nnɛ| ku|ɔu |a b|a n| ka|ɛ a|oo | mu|ni | o |yɛ̃| ɖa| yɛ|nni|kaa|omɔ| ny|ɖɛ |ɛ̃ |mmɛ|u o| nɛ|i o|tú | ɖɔ| om|ii |i n| tú|mmu|nku|kó |nti|naa|ɔkɛ|oti|a y|kɛn| kp| ko|na |ɛi |ɔbɛ|tin|ɛ̃n|u n| kó|o ɖ|i y|u y|tɔu|ɖaa|imɔ|nyɛ|rɛ |ɖi | ŋa|e a| kɔ|wɛ̃|i a| yo|otɔ|ari|ati|nyi| ot| mb|e k|ũ y|bot|ɖɛɛ|ɛkɛ|ɛɛ̃|enk|ntɛ|ten|ɛ i|ee |ɔ̃ |a m|u m|kɔɔ| ma|hɛi|kɛy|yoo|ɖɔ |myɛ|maa|ɔ k|kpe| mɔ|ɛ ŋ| nt|kɛp|ɔ̃m| cɛ|tri| ya| nn|aat|ko | tɛ|amu|enn|ɛyɛ|ute|a t|omm|ɛny|kut|itɛ|ɖii|ɛmm|ɖa |ent|tɔb|yɛm|o m|baa|tɔ̃|kpɛ|ɛ c|ŋa |eti|ɔri| sɔ|pat|wee|ɛɛk|koo| ŋo|a o|wuɔ| my|ɖit|o b|rim|̃mm|nɖa|cɛ̃|o o|ant|uɔ |mɔu|ɖak|ɖik|mut|utɔ|a a| ŋm|ú o|̃nt|e n|tim| it|̃ k|ĩnk|nɖɔ|ɛ̃t|̃kɛ|ɔɔr|ɛ̃k|tib|u ɖ|bɛɛ|kɛt|̃nk|yĩn|oku|inn|ɔ n|ɔ̃n|mbɛ| yĩ|kɛk|aan|̃tɛ|i c|uu |ua |o y|kɛw|kot|ɛ f|kpa|ó ɖ|iit|pĩ |byɛ|atr|uku|ihɛ|cyɛ|nɖɛ|ipa|a c|pɛi|ɖip|ɔnn| tu|yie|ɛ w|ou |etɛ| by|u b|o t|a ŋ|imɛ|kɛm|ó m| tɔ|tik|kɛb| ni|nte|ann|pok|anɖ| nf|ɛpa|tip|aku|nɖo|yan|yet|u t|mɔk| mm|kɔb|bɔk|tye|ye |bi |e o|o a|pɛt|ɛtɛ|mɛs',ast:' de|es |os |de | y |la | la| a |e l|rec|ien|ech|ent|en |na |a l|dre| dr| so|ón |n d|les| co|a p|aci| pe|al |los| qu|ona|que|ión|s d| ll| es| to|hu |chu|u a|per|a d|nte|el |ue |ció| na| lo|se |ers|tie| d |u d| en|ion| se|con| ti| pr|cio|a s|rso|res|son|er |s y|cia|a t|tu |nes|lli|te |men|ar | o |lib|pro| in| re|oa |dá |toa|nci| un|ale|so |ia |nac|un |est|e y|one|ici|s n|tra|ra |ber|mie| el|enc|ual|del|a e|s a|y a| ne|s p|ert|ibe|nal|a a|e s| po|hos|e c|a c|cho|man|com| pa|iu |ase|ami|s e|s t|á d| le|idá|una|rá |e n| di| nu|ome|ter|a y|e p| xu|esc|nun| ca|end|ame|ntr|ere| al|dic|ese| vi| fa|aes|tá |y d|n c|ica|l d|da |ndi|col|r d|ntu|n e|e d|y l|ial|cie|era|soc|n s|oci|u y|des|nta|s s|a n|esp| me| cu|y e|l y|sco|tiv| ac|u n|nde|cla|ene|n p|ali|ide|a q|a u|y p| as| ma|hum|uma|ist|d a|n t|ier|a m|s c|ont|vid|ten|qui|s o|sta|tos|ens|ies|s l|rtá|nos| hu|s q|in |ser|e t|gua|bre| l |r e|rta|n l|su |ond|sto| ig|ta |eme|tol|igu|sos|pre|esq|olo|ant|sen|mes|nda|squ|omu|rac|u t|l e| ye|s i|nen|e a|u e|n a|tae|efe|nel|ive|ca |or |ver|s f|ibr|int|tor|eli|áu |imi|rem|xun|tar|re |ind|egu|s m|o q|drá| fu|lle|ndo|ru |und|tal|r l|l p|dis|pen|u o|bli|rot|lid|r a|ote|a v|uie|tic| am|tam|o r|ada|l s|cua',tsz:'kua|ni |ka |ua |arh|rhi| ja|a j|ani|uar|eku| ka| ju|aku|ech|cha|a k|aka|i j|urh|imb|mbe|a i|iku|jur|i k| k |ri |eri|ti |sï |k u| ui| ia|era|iri|him|ats|iam|ini|i i| ma|uir|i e|rip|uec|u j|ngu|ipu|tsi| ji| ua| es|jat|sti|esk|rhe|bek|amb|kue| am|u k|nga|men|eng|end| ir|ndu|ang|che|ksï|rhu| ku|ha |ame| en|ire|du |gua|and|aak|ki |ati|rak|per|ma |uan| im|aŋa|ist|mbo|a u|a e|amu|no |i m|pue|ku |ata|jim|ga | no|par|be |han|uak|jku|i u|hik|her|i n|esi|hu |ski|kun| is|ses|eni| se|jpe|a n|nda|sis|ajk|sku|i a|pu |a m|ajp| o | an|jan|hek|ari|uku|u i|si |nch|iti|uni|rin|jas|uer| er|ura| na|man|aua|a t|iks|sik|ima| ue|uaj|ime|ŋan|ŋaa|aks|ret|hak|ndi|tu |o i|a a|isï|bo |kak|uat|rha|nts|asï|tak|a s|ta | ts|mer|i o|eka|kur| mi| ni|ant|ter|tik|hin|ana|tan|ru |eta|ran| in|mbi|maj|mu |ama|apu|so |kat|tsk|iŋa|ska|ing|jup|nta|rat|aec|upi|ete|anc|ast|mit|ram|u e|eŋa|tin|o n|muk|u a|eru|bik|uae|jin|nap|tse|ï j|ung|hit|ind|ate|apa|tar|na |mar| pa|aat|nia|o j|ara|jtu|taa|oni|nde|jau|sïn|pek|est|int|a o|ŋas| te|uek|iat|gon|pen|o a|i t|ngo|tsï|oka|ipa| ne|rek|ï u|sta|i p|e j| ar|sek|eia|pik|uch|emb|gak| i |oŋa|u u|i s| ch|ngi|ï i|iak|jaŋ|ajt|ŋaŋ|hes|nem|ema|ŋar|kso|raa|tec|hen|ets|kpe| un|dan|jar|isk|meŋ|eua',swb:'na | ya|wa |a m| ha| wa|a u| na|ya | mu|a h|ha |ana|shi|ki | zi|hak|i y|a y|a z|la |aki|a w|si |a n|i m|a s| ma| sh|utr|mwa| mw|tru|har|ula|mut| za|hi |u a|wan|ari|ri |ru |a i|ao |ama|io |a k|tso|ndr|za |au |ma |he | ku|mu |ni | au|tsi|afa|i n|i z|ahe|ili|kul|iha|asi|i u|o w|nu |azi|ada| un|end|awa|i w|ish| ka|i a|ngi|naf|its| am|li |zi |fas|kao|eng|e n|aka|sha|ika|ina| an|ka |iki|o y|amu| ud|u h| ut|ra |lio|aha|dam|ia |ba |mba|ren|zin|usi| ul|mus|amb|ats| uk|a t|dzi|yah|o a|ali| it|nad|a a|ani|udj|imu|dja|uka|ara|o n|dre|ele|zih|eo | ts|una|i i|kin|ing|hus|sa |jam|ots|iwa|i h|ila|u w|ala|u n|vhu| at|o u|o h|e m| ɓi|ang|re |inu|fik|usu|ngu|ndz|ifa| uw|we |wo |ɓil|zit|saw|nga|sok|e h|wi |ini|wah|zim| uv|u u|any|muh|oka|eli|a d|aru|par|mat|ɗe |e w|adh|e u|me |u i|dji|uɓa|rum|dza|u m|o m|fan|dhw|tre|kan|ata| pi|uts|ahi|iya| in|yo |ume|mbe|di |laz|omo| nd|ung| us| ɗe|awo|som|uwa|piy|kaɓ|sin|uku| ur|itr|avh| yo|him|muk|uru|o k|yot|ita|uma| sa|eke|ɓal|u y| ki|upa|ria|udi| mb|uvh|i k|iri|mo |tsa|yum|gi |kav|nyu|tri|no |leo|ja |ian|apa|ash|hik|lwa|men|afi|law|ahu| uɓ|iny|and|are|o z|u z|tse|e a|bel|hwi| tr|mah|ira|ti |wat|lez|ush| mi|nya|waw|uhi|han|sen|rel|ua |hih|aɓa| vh|kir|zia|way|mas',cab:'un | lu|n l|an |i l| la|ai |ti | ha|ia |gia|igi|lun|a l| li|dan|agu|üri|ni | le|gür|bai|rig|u l|uti|uba| gü| yu|aun|lan|le |ida| su|gua|gu |n g|ara|ri | ka|yut|hau| fu|sun|e l|aba|n a|lua|ien|n s|uru|i h|ügü|han|ati| me|n h|fur|gun|run|ra |a g| gi|i g|lid|ari|en |iñe|ani|ada|uag|lig|ira| lú|in |ei |air|du |uri| da|gie| ub|n f|ban|bau|hab|uni|au |me |egu|lub|rüg|aga|ñe | ti| ga|igu|lag|iña|arü|aü |uar|uma|ka |a y|udu|úru| ab|a m|siñ|rag| an|aha|rud|abu|hin|gar|i a|bu |umi|gai|tu |mie|ún |iha| si|gü |kai|lúr|iru|las|ua |awa|rum|i s|i t|n m|nda|n k|amu|n u| tu|tid|ñei|giñ| ta|uai|agü|da |adá|ha | ñe| ma|ieg|a t|ága| ad|u t|ibi|bih|i y|nig|lib|ubá|u s|bús|dun|n t|und|uwa|üni|e a|lab|ü l|u h|ihi|ma |u u|mur|nba|sub|güd|ña |a a|di |a h|adü|lum|cha|yub| úa|ain|sie|ewa|rún| lá| lí|ful|lau|u a|rad|dei|asu|ina|i m|ham|hig|su |ugi|dag|bá |bág|to | to|atu|iwa|düg|and|nha|lad|e y|chi|u g| au|e t|n i|min|nde|dau|ugu|had|u i|ini|rid|wa |mai|ama|agi|á g|wat|gum| ar|ran| sa| am|gir|riñ|n d|gim|ru | ba|ámu|úse| gu|eha|adi|wan|mu |úar|irú|dar|gün|dám|ngu|ní |anh| id|ima|mut| ua|n ú| gá|hag|man|anu|wad|iba|i f| bu|i b|a k|ung|lar|i d|eri|ngi|ang|ibá|ami|gaw|wai|abú|i u|aru|a s|u y|has|idu|ích|ára|end',krl:'en |da | da|ize|ien|ist|evu|oig|kan|gev|ige| oi|anz|on | ku|sti|n o| ri|an |gah| ka|el |eh |nza|lli|ris|liz|ika|tik|väl|uks| vä|us |al |hiz|ua |ttu| on|zal| jo|sie|vus|ahi|zel|oga|l o|n p|ksi|stu|itt|all|jog|n k|tsi|n d| ol|lla|zen|in | va|l r|kse|ah |vuk|per|miz|äll|izi|zie| pe| li|tu |oin|es | yh|n v|a k|loi|yht| pi| ta|oll|tta|val| su|ii |ami|lib|zeh|bo |teh|ih |idä|ibo|n t|as |lly|hte|kud| hä|pid| tä|h k| om|äne|a v|oli| mu| mi|ine|kun| to|uad|s o|dua|nen|ust| ni|unn|h d|ivo| si|hän|ehe|ne |h o|oi |tua|ott|voi|rua|uol|ett|tun|udu|ei |kon|i s|olo|sua|oiz|il |ai |tah|arv|ell|und|toi|ehi|aht|et | ei|ats|a o| ra|is |ald|ytt|äy |tti|iel|a h|n m|eru|sta|tam|ti |se |nda|tet|omi|nan|utt|mat|däy|la |sen|n s|i k|rus|vel|oma|ast|ttä|zes|le | ki|s d|kai|oh |ku |i t|avo|yzi| hu|huo| tu|hto|lis|a a|mie|iä |n l|puo| ru|täm| lu| al| ju|to |aze|äh | us|aik|end|ty | ot| se| pa|a p|est| pu|rvo|s j|du |i o|nna|a t|dä | ar|usk|mis|aha|os |nzu|ta |uo |taj| so|nnu|ual|oit|äyt|aut|s s|hel|hva|i v|oih|n a|ste|pas|izu|s t|ali|lal|h s|sii|opa|uga|mug|zoi|nzo|tty|n r|aza|uat| el|rah|att|ahv|joi|mua|ulo|l k|u k|tul|uma|irj|ala|n y|lin| mo|zet|eks| op|kir|s k|ako|y o|s r| sa|n e| ko|nik|die|ara|moi|man|isk',top:'an |lak|akg|ata|ama|aka| na|ala|kan| ka| ix|ini| la|a t|ni | ta|mak|tam|n n|kat|ch |tla|chu|in | ch|la |kga|ta |lan|lat| ak|h i|ixk| ni| tl|kam|a n|nin|tal|xla|ma |xku|wak|ka | xl|win| wa|awa|uwi|ak |kg |hu |kuw|akc|kch|min|alh|nak|ika|ach|na |n t|tum|ami|wan|tu | tu|n k|ani|nac|ali|nit|pul|man|nka|ask|nat|n l| li| ma|pal|it |i k|ank|una|k i|k a|hun| pu| pa|n c|i n| at|ema|ula|tak| ne|nem|um |ilh|ti |kak|a a|nan|akx|i t|ila|i l|lh |a l|a k|g l|kal|h a|kgs|n x|u n|apa|sin| ti|u k|ana|tat|tap|p a|ap | am|nal|atu|gsi|xta|nil|atl|tun|ina|u t|ats|aya|mat|a p|nik|gal|ku |tsi|uwa|n w|a w|lht|ima| xa|a c|ixt|wa | al|kgt|map| in|hta|at |apu|lim|u l|tay|xtu|law|a m|a x|kas|lit|okg|nu |lhk|hka|taw| an|utu|sk |ixl|lhi|gta| un| k |aku|wal|hi |kil|puw|kgc|lik|xni|unu|p u|gch|n a|i i|t a|chi|uni|kxn|kxt|un |kuj|sku|t n|umi|kgl|glh|si |akl|g a|iti|lip|mal|akn|n i|kgo|sta|kla|ga |axt|pas|ixp| ut|i p|n p|u x|ast|xli|nam|kgk|i a|itu|u p|kap|paw|mas|xpu|gap|aks|gan|tas|i x|t t|put|tan|li |liw|t x|aki|uka|i c|k p|ekg|a i|ita|lha|tka|cha|yak|n m|tik|kni|tac|iwa|lin|gxt|kgx|lam|atk|wek|yaw|lal|iku|u c|gax|xal|gat|ati|k k|ipa|ion|one|nes|es |nid|ida| je|ha |t w|das|cio|huw|lhu|aci|u a|ink|tok|max| ap|s u',zam:'uan| ku|kua|an |n n| xa|xa |en | nd|ndo|ob | na|dob|ti |a n| ye|ak | mb| ch|las| pa|as | di|ar |par|men| me|cho|iti|ts |dit|ho |nla| nl|es |ien|gak|mie|na |ets|yet|mbe|b k|kie| mi| gu|i m| nt| ga|ie |bes|n g|nak|s x|n k|lu |o k| nk|iet| o |a m| ri|rie|ab |gui|n m|nki|ta |s n| lu|dib|o c|n l|nta|n x|ba |et | ti|ol |a k| ng|yen|ui |s k|in |i n|a y|ent| ki|xga|b y| xg| ka|s p|r n|gab|ib |a g|idi|i k|t m|tid| ta|rti|s y| yu|k x|ort|xen|bxe| bx| or|k k|che|mbo| li|b x|ndi|kap|ap | ba|a d|yes|bol|its|jui|kin|u n| ju| la|a x|uin|is |e k|s o|k p|s c| ro|e x|b m|i x|ed |nti|iba|r d|nar|nt |tsi|o n|b n|uit|i y|lis|n y|a j|dix| nx|ino|no |xi |ixi|r k|s t|mbi|nga|o m|i c|eti|a p|uy |yuy|k d|t k|enl|s m|nto|s r|hen|ngu|ted|n o|b p|nte| ts|k n|nda|ró |a b|iki|bik|aró|a l|n b|n t|u x|l k|la |a o|e n|nlu|ana|r m|tim|b d|n d|e t|gua|ad |b c|a r|s b|i t|l x|yuʼ|uʼ |e y|y c|ngo|rue|ue |gol|b t|u g|gux|kab|lin|s g|op |k c|e m|k m|lad|ó k|sin|ey |d n|cru|da |s l|aʼ |i o|he |imi|s d|taʼ|cua| cu|ual| cr|b l|nxa|xab|i r|i b|ux |o r|d x|nag|k t|r x|uʼn|nó |inó|k y|tl |utl|xut| xu|t x|ai |b o| ñu|u r|l y|b g|n r|k r|rop|rol|ek |y p|yi |us |d k|x k|mby|tab|o g|mí |r g|ala|p k|o y|pa |ied|mi |iit|die|bki|mbk',cha:'na |an | i | na| ma| ya|yan| pa|on | de|ion|ha | si|sio|ra |iha|ina|par|o n|cho|man|ho |ara|n i| gi|asi|rec|a i|ere|der|sih|ech|gi |do |i d|ai |a u|al |ao |o p|ent|odo|ad | ni| to|tao|tod| ta|gai|n g| li| in| co|a n|ona|o m|i p|nas|men|a p|a y|a m| ga|a t|i m|nal|ibe|dad|a g|o s|i t|rta|ni | es|lib|at |ert|est|ber|pat|o y|a s|o i|uma|ana|nte| un|te |ida| gu|tad|n p|com|a d| ka|i c|o g|sin|ame|nta| um|n n|n s|as |l n| re| nu|ui |ot |cia|ine| po| pr|tan|mas|a a|i l|omo|ia |to |o t|en |e n|pro|sta|mo |ya | as|n m| ti|i u|ano|i i|ota|nen|pot|no |nui| so|be |lo |so |res|a e|sa | ha|oci|ase|un |are|ebe|soc|i f|aot|deb|ala|ter|ant|i k|per|gin|ta |gui|go | fa|tra|i s|ade|con|ang|de | di|io |et |nih|ksi|asa|ers|nto|tin|afa|nda|min|n e|i a|rio|n c| pe|ste|ras|n t|gua|a l|ini|e y|isa|ten|ntr| la|nid|ari|a k|sti|ro |n l|i e|nan|e u|ma |ti |ale|e g|tal|s n|n y|n d|e d|fan|a h|gur|nga|ali|aya|tay|i h|agu|ena|reh|nam| se| uf|i g|eho|nsi|son|uet|uni|co |ont|ati|lai|bli|era|aba|bal| fu|n k|d y|ela|lan|rso|ico|ago|usa|duc|alo| ch|emp|nat|nci|nde|ura|ufa|maa|ial|int|t i|tek| ku|ote|uat|rot|tro|tku|cla|kue|ral|kas|uca|cas|fa |lin|da |hon|d s|a r|otr|t p|fam|l y| ot|haf|esp|und|eks|fun|ge |ado|del|es ',crs:'an |ann|on |ou |en |yon|syo|nn | la| an|te |n d|n l|wa | ko|n p| po|asy|rwa| ba| dr|drw| ga| en|gan|kon|ban|pou|nny|son| di|ny | so|n k| ki|tou| to|n a|man|nna|dan| le| e |n s| sa| de|yen|er | da|ki | ek|ek |un |nan|oun|dim|mou|imo|ot |bye|n e|al | pe| ob| pa|et | li|oby|ite|u d| pr|ans| re|onn|zot| lo|lib|dev| zo|ali|n o|anm|si |nas| i |e d|pa |enn|i p|san|men|rte|e l| ma|n b|sa |ns | na|per|e e|lit|e p|ert|ret|ras|osi|n g|a d|e k|pro|ant| os|ter|ibe|ber|lal|a e|re |e s| no|fan|ik |nou|az | ok|ksy|i a|ler|ken|nm |vre|nte|ime|k l| ka|el | in|i e|par|n n|ave|n t|nal|evr|oke|ni |tra|ar | tr|rav|e a|ers|kas|ran|ons|onm| im|osy|sos|ote|e o|ika|n z|sya|ir |nma|in |ava|ona|era|ont|res| me| fa|edi|dik|lar|t l|ei |ab |r l|pei|nda|i k| se|ver|fer|n i|y p|n f| ne|lav|ond| fo|y a|lwa|ara|ezo|met|li |rso|rit|n m|l e|ete|eks|kot|u b|pre|led|ent|t g|lan|nne|i d|alw|i g|kla|ese|ide|nt |ini|nsi| av|der|a s|a i|ak |i l|ti |i t|n r|is |apa|i s|las|are|l k|a p|ern|ay |u t|vay|a k|s e|se | fe|sak|rot|rel|bli|a g|pli|nes|r k|azi|ser|ib |lop|yal|van|mar|avi|ort|r e|gal|a t|vek|ega|asi|tan|lik|sid|t d|sye|zir|imi|i b|k b|zon|k p|k s|de |lap|nmi| si|u a|a l|sir|ze |r d|ín |iín|eko|esa|r i|aso|y e|zan|esp',ddn:'na |ma |nna| ka| a |a n|ka |a b| nn|ama| ba|a k|om |ni |a a|yom| ma| bɔ| n | da|a d|i k| ku|daa|aam| go|nɛ |a m|iya|a s|rɔ |ɔrɔ|i n|gon|ya | hi|bɔr| ga|ani| za|iyo|a g|ri |aa |a h|inɛ|ɛi | sa|mɛi|fɔ |ara|kul|yo |ayo|ini| si|ra | bi|ari|ɔŋɔ|lu |bɔŋ|ulu|onn|una|ga |ei |niy| di| ci| fɔ|hin|kun|nɔ | du| kw|a z|ŋɔ |a t|waa|bam| na| nɔ|ii |wei|i g|a c|amɛ|bin|i b|ɔ n|ba |riy|sɛ |si |ɛ b|aar| sɛ|ɛ a|iri| ta|maa|ɛrɛ|uri|kwa|ɔ k|zam|ima|m d|tɛ | mɛ| ya|i s|n m|uur|a f|ɔ b|sar|ɔu | ŋw|u k|rɛ |ono|gwe| de|u n|man|i d| be|duu|u g|sii| gw|u b|ɛ n|i t| tɛ|gan|asi| su|m n|bar| ãd|ɔ f|ɔ s| cɛ|di |ci | hɛ|su |ŋa |i h|ali|no |uni|dun|bu |uyo|ko | ti|eiy|ɛnɛ|ɔ g| ko|ann| mɔ|n b|li |him|ãdu|n s|o b|ɔ m|baa|taa|hɛi|cin|ɛiy|eer|wɛn|ila|til|ɛ d|aan|ɔ d|abu|aal|bei|eri|ŋwɛ|nni|o z|cɛr|las|am |ɛ g|yan|mma| ji|aab|i a|cou| co|o k|oo |o d| wɔ|wɔ | fi|aŋa|isɔ|fis|sɔu|a y| la|i c|a ŋ|ɛɛ |u a|m k|zaa|imm|ɛ k| ɔu|sim| ha|imi|mi |dam|ɛtɛ|o g|m b|i m|tɛr|ŋu |laa|aka|saa|dee|ee |asa| se|zaŋ|yaa|a w|i f|ɛ h|mar|n g|dei|e b|ŋwa|nan|a j|ɛru|mɛɛ|rum|u s|u h|ana|dim| bɛ|uma|wa |sen|enn|jir|je |du |ala|ɔɔr|mɔɔ|u c| ce|i y|kar|rig|la |itɛ|a l|ɛ f|gu |yay| gu| al|u m|cee|eej| an|eji|ɔɔ |inn|nay|aas|ici|ric|i z|aay|bɛr|ɛ y',loz:'a k| ku|ku |na |wa | ka|a m|ni | ba| ni|a n|ya | mu| ya|lo |la |o y|swa|ba |i k|a b|li |wan|elo| li|tu | na|ane| ha|u k|a l|nel|ka |ela| sw|utu|ona|mut|i s|u n| si|ha |i m|a s|za | ko|aha|a y|mwa| mw| tu|ana| ye| i |ng |nah| u | ma| mi|a h|pa |kul|lel|ele|apa|fel|ili|kwa|kon|kap|u b|kau|auf|sa |ufe|a t|ye |pil|a u|mi |ula|ta |isw| za|i b|o k|e k|mul|mel|ang|man| bu|u s|o z|ina|to |a z| kw|ze |lis|uli|ala| a |ae | ze|ume|atu|hae|zo | sa|o m| wa|eza|g i|lik|i n|lat|ata|u f|ali|sin|e m|i y|ki |i l|ila|ile|wi |a f|bal|sil| yo|uto|eng| ki|ulu|bat| fa|lez|ban|tum|o n|nya|una| zw|i i| il|o w|fa |le |uta|iwa|lao|ao |lwa|si |ezo|lin| la|i t|kun|a p|a i|kut|no |uku|i h| pi|but|aba|ebe| fi|u m|wal|ate|e i|u l|seb| wi|u z|u y|ise|ket|u i|mus|ho | wo|e l|g w|zi | lu|ale|ika|bez|isa| ke|tok| bo|ani|alo|kat| ta|zwi|fum|ike|ano|i u|iba|ezi|o b|u p|api|ngo|luh|zwa| it|bon|e s|tut|a a|yon|han|wo |ten|ape|wis|cwa|lan|bo |yal|aza| ny|okw|osi|hal|eli|e n| cw|iny|uma|ena|go |e b|ko |e h|muh|fiw|tal| ez|zwe|uba|bas|kan|mun|tuk|o i|uho|usa| fu|u t|yen|itu|yan|o h|hap|sez|hai|sal| pa|tis|and|ezw|pe |emb|tus|yo |ati|ken|zap|isi|asi| in|lib|nis|u w|e t|u e|asa| ng|uha|bwa|nga| bw|mai|so |u a|siz|ham|ga |ako',hsb:'je |nje| a |pra| sw|raw| pr| wo|swo| na| pł|wo |jen| za|wob|a s| po|a p|awo| je|na | ma|ch |ne | so|owa|anj|wje|ja |enj|e p|o n|ow |a w|dy |kóž|óžd| nj| kó| wu|obo|sta|so |bod|płi|e w|ju |abo|płe| w |ždy|ma |e a| ab|bo |osć|stw|e s|woj| do|nja|y m|ich|ym | st|dźe|će |ić |nym|o s|o w|dźě|ać |nos|ost|a z|jed|jes|eho|ć k|wan|odn|ho |ny |ej | dź|mi |jez|aro|o z|owj|dow|edn|e z|eje|zak| ko|ych|rod|nyc|wać|nju|a a|zje|wa |nar|am |otr|e d|kot|ske|u w|o p|łow|mje|jew|a n|awa| tu|u a| zj|two|ć a|sće|čło|a d|wot|dny|awn|tut|aja| čł|za |oje|smě|u s| wš|dno|ez |adn|ist|ež |kow|u p|a k|raj|eny|a j|pow|o j|jeh|h p|žiw|ako|isk|łis|i s|o d| by|esm|y p|wow|odo|m a|wos|m w| sp|měr|ena|tat| to|man| su|kej|twa| mě|tre|łeć|ćen| dr|ke |źěł|taj|i w|adź|rje|su |mu |a m| šk|ski|mě |ě s|dne|ki |e č|li |dru|emu|o t|i p|a t|iwa|kit|du |dźi|hro|jej|wši|šit|swó|łez|kra| zh|wój|wěd|tow|i a|wól|wšě|ći |sći|sto|słu|bje|zhr|by |els|jic|odu|ran|rom| re|jem|u z|sob|wne|own|and| te|atn|ład|kła|oma|m p|rež|akł|im |run|opr|wop|ški|źe |mad|cho| mj|stu|low|nic|tej|ach|pod|nan|w a|ž j|aln|zna| z |e m|nak|om |imi|aće|soc|la |oci|cia|ial|ko | ja| ta|eć |ori|i z|dok|ce |oke|źěl|kel|tup|jo |elž|ž s|ojo|měn|lž |oda|ami|woz|ozj',mri:'nga| te|ga |te |i t| i | wh|ang|na |a k| ki|ia |wha|ki |a t|hi |ahi|tan|e t|a i| ta| ng|ata|ana|o t|aka|ei |hak|a m|a a| e | me| o | ma|a w|e w| ti|nei| ka|tah|ai |gat|ta |a e|i n|e m|i i|i a| ra|me |eta|ika|tik| an|ran| ko|kia|o i|ua |ka |a r|i k| a |a h| ia|e a|ko |e k|a o|i r|tet| tu|re |rit|ea | mo|no |ite|ona| wa|oa |e n|o n|ra |ane|tu |i o|atu|whi| at|i m| ho|kau|i w|a n| ro|oki|ara|aro| no|ten| he|kat|hok|wi |iwi| iw|tia| to|man|ato|hai|ung|i e|u k|tur|ro |ing|kah|e i|e h|ke |mo |mah|ora| ah|to |i h|eng|hua|aki|oto| ri|aha|ene| ai| ha|kap|toa|tau|rot|ina|han|apa|ati|hei|o k|e o| ru|run|aua|e r|ui |he |au |mea|utu|wa | ne|ere|nui|uru|ake|ton|uri|o r|pu |whe|ru | hu|u a|tut| ak|kan|ein|mei| on|ira| or|a p| na|e p|ao | ao|kar|iwh| ke|hiw|ure|ari|hae|tea|kaa|ako|ore|ahu|awa|anu|aur|hin|ono|pa |aer|pon|hen|ita|nua|kaw|oho|wat|enu|apu|ri |kor|har|o m|rat|o a|iti| pu|ho |noh|pap|opu|wah| pa|tin|rar|mat|aar|upu|ine|ate|aup|upa|u m|noa|mai|pai|tir|ota|oti|tak|kin|kua| ku|kot|ne |rah|uar|kit| po|uta|aho|u i|mar|hia|e e|uat| ar|kei|awh|ano|rop|ter|ino|mau|u o| et|ti |u t|tuk|u w|o o|ahe| pe|o h|nat|apo|hap| en|hor|ae |pua|uak|ong|pur|gar|iak|ma |mon|nau| hi|ura| in|ain|hit|pup|nan|oat',pbb:'a k|we |pa | na|sa | s |na |a n| i |n i| we|te | hi| a |i p|a h|hi |asa|wa |yuu|nas|a w|c a| yu| ma|ya |e s| ki|ma |a s| k |a m| ha|aa | ya| pa| wa|kwe|apa|a e|a y|e w|uu |maa|ec |c h| te|ena| ka| sa|a t|k a| c |kyu|ala|wal|ha | ky|iwe|kiw|la |u h|f i| ne| hu|a p|ewe|yuh|e h|ete| f |sap|en |yu |hab|e n| it|me |wen| üs| ew|una|ewa| u | pt|ab |hu |b w|wet| ze|i z|a ü|uwe| ee|een|s y|nwe| pe|wew|u n|akh|u k| t |i s| pu| ik|a d|k t|ewu| n |naa| ku|isa| üu|a i|uwa|hpa|t h| nw|üus| hw|ta |kah|a c|s k| kw|iya|e p|un |uhp| ip|v i|ite|ime|khe|s p|uun| wë|tey|e k| v |hwe|ekw|ka |yuw|i n|ika| is|pee|e u|wek|uc |nap|ama|t i|weh|ki |hak|e y|kha|hsa| th|tew| pk|kim|d i| h |epa|pta|wes|men|i k| ec| pi|u p|pkh|u y|s a| p |new|sam|wey| im|imy|esa|myu|akw|ate|ac |wec|piy| d |ume| iy|tep|ayu|eec|eh | mh|mhi|ek |thë|a f|e m|yc |uuw| uk|uka|tee|e i|huw|yte|ey |uuc|s h|h u|eyu|su |hn |hk |i y| me|e f|wun| da| ay|eya|c n|e ü|ema|s t|it |a u|eek|ana|huu|k k|wët|iyu|cte|an |ëc |wëc|wep|ehu|swa|uk |u s|pwe|hë |uya|ne |uht|ahn|yaa|a v|kay|awe|san|the|wum|ste|üst|zew|he |i h|hna|k w|s i|e e|yak|hit|uuy|hwa|kuh|aak|ehk|eyc|s m| kh|kac|a a| äh|nee|ase|se |ze | ah|ees|tte|ipa|ame|met|i w|k n|at |hme|hte|ew | hï',mxv:' ku|a a| ña| a | i |ka |ja |a k|nu | ja|ayi| tn|ñay|na |yi |a t|u k|tu |a ñ|ku |ni |ma | ka|ñu | ma|u u|i i|a i|chi|tna|va |aka|i k|a n| u | nu|sa |nde|i t|te | ta|tak|i ñ| te| ñu| na| nd|i n| su| sa|iyo|yo |hi |u n|u i| iy| ch|i j|u j|ini|tnu| ji|ín |iñu| ií|kui| tu|uni|iín|kuk| í |atu|sun|niñ|u t|i s|ñat|e s|a m|utu|o j|eva|ind|dev|u ñ| in|ña |tni|a s|u m|í t| an|atn|e k| va|e e|kue|nda|kun|ech|i m|hin|u s|und|nga|kus|a v|kua|a j| ve|uin| o |uec|ve |n ñ|vi |tut| ni|ya |jin| e |ji |usa|o t|in | ng|uka| ya|a c|uku|xi |u í|ú k|a í|í n|aku|sik|kak|ua |o i|e t|kaj| ñú|de |aí |aji|ava|yiv|iku|and|aja| si| xi|i í|ú t|ani|uch|ñú |ndu|kan|u̱ |ivi| at|a o|e n|uko|n t|í ñ|e i|n i|u c|̱ k|nav|nú |ika|e ñ|an |kot|si |ko |anu|ui |í j| ko|jik|té |kaa| ín|inu| aí| té| kú| ñá|kas|kut|dut| ki|to |oto|o v|ga |mi |i y| nú|ní |kú |da |o o|ndi|u y|nu̱|asi|i c|det|ínu|tat|kuc|saj|nun|tú |tút|aa̱|útu|ai |ndo|a x|do |i x|a̱ |n k|o n|jiy|eña|i v|axi|atú|uí |ú n|iya|sum|dak|deñ|í i|̱ t|n j|su |nan|uat|asa|o k|gan|o̱ |uxi| vi|o ñ|̱ n|uiy|áji|ata|nin|ñát|ang|átu|n n| tú|aa |suc|eí |ama| yu| ká|yu |nka|dat|kat|uva| un| uv|umi| ii|ví |iaj|dia|sam|iñi|una|isa|xis|iví|ate|oo |koo|n v|n s|ñi |ú i|aña|iin|nui|káj',qva:'una|man| ka|ana|an | ma| ru|nan|ta |na |aq |kun|nqa|anp|ach|ch |npa|kan|paq|cha|run|apa|a k| ch|qa |aku|hay|pis|qan|ima|is |anq|a r|ura|pan| im|rur|lap| la|si |a m|ita|h u|nuy|am |sha|n r|uy | u | ya|kay|pit|nch|in |chu|ayn| ju|ash|nam|nta|ha | al|nak|nas| na|hu |chi|ay |syu| ni|asi|ali|yun| pi|nma|asy|npi|mi |nin| wa|i k|ant| mu|ayk|ata|a j|ynu|anc|ama|tin|rak|nap|a a|juk|ur |anm| ja|res| re|api|kin|esp|n m|kur|spe|aru|pet|yta|pti|apä|wan|mun|awa|iku|yar| y |uk |hik|q k|i r|onq|kaq|ipi|kuy|li |pa |eta|pip|y m|arp|yku|a l|päk|nku|h a|mas|n y|u k|n k|apt|ni |a p|kas|may|q r|enq|ran|i m|un |ych|ina|tas|y r|yan|a i| ri|äku| ar|a y|kon|a c|inp|äna|jar|rup| ki|n c|nat|kar|q m|ayt|aqa|aki|ika|wak|anu|yni|a n|ras|tac|kaw|ayc|m p|yac|uch|i i|yka|s a|aka|rik|pas|wal| li|rqa| o |ar |h ü|i y|unp|ako| ak|kik|arq|ank|tuk|raq|tap|kap|and|inc|pän|iki|mat|n n|akä|mac|ark|iwa|kac|mar| qo|naq|ayp|ma | ra|al |upä|n l|ish|a q|kär|rap|q c|ush|uka|qot| ay|otu|ndu|hka|y l|ka |han|äch| ku|rin|uku|q a|ibr|rpa|nsi|lib|hun|a w|unk|n j|bri|nni|maq|aro|n i|u m| am|int|ten|unn|rka|nir|u c|y k|ypa|äri| iw|upt| üs|üsi|i a|ri |pte|rmi| pa|lla|ill| yä|u n|rpi|shu|aqp|ast|q l|ära|yär|kus| ac|sun|asu|tan|m k|q y|qta',gla:'ach|an | a |h a|ch | ai|ir |air|dh | an|n a|eac|tha|hea| th| ch|ean|r a| bh|adh|a c|ha |cha| ag|ann|gus| ne|us |idh|agu|ith|th |hai|a a|òir|nn | na|a b| dh| ga|nea| sa|il |s a|chd|ich| cò|na |a t|aig|gac|h n|eo |bhi|còi|am |aid|che|had| gu|sea|n d|ail|hit|h s|n c|hd |han|ar | fh|ead|on |gha|in | bi|agh|aor|a d|as |m b|ta |is |sao|nan|ig |rsa|nta|h c|iri|le |neo|eil|ise|nna|lea|ile|e a| co| se|ant|hao|n s|bit|a s| ri|n t| do|aic|bha|cho|inn|hla|a g|hei|gu |dhe|ors|gh |ùth|dar|do |rea|dha|uil|eal| le|d a|ric|h t|n n|tea|hoi|te | fo|onn|s s|h g|eas|g g|ana|ear|l a|sa |ain| tr|hòi|nai|mh | dù|rac|aon|nns| e |ire|bhe|chu|ill|h d|ghl|h f|e c|ad |igh|ne | am| ma|rra|dùt| de|sai|o a|lta|n f|ion|dea|ri |mai|arr| ao|alt| dì|eag|h b|ll |r n|s n|omh|rso| nà|nac|rai|chò|amh|fha|hch|thc|son|irs| ea|seo|gai|rt |hda|ona|ogh|sam|aod|r d| is|hui| s | ui|lac|irt| la|n l|nam|dìo| gh| si|co |s c|sin| st|ns | ph|r s|àis|nài|mha| sh|oil|mar|irm|oir|o c|bh |s g| cu|fhe|ho |s t|ìon|all| ei|tro|ara|lai|hte|hac|ada|bhr|nne|san|h e|e d|èan| io|hid|oda|r t|ro |the|rm |cea|ine|ur |uma|m s|hal|asa|uin| bu|obh|ath| mh|oit|a f|itc|har|art| sl|thi|ein|tch|n g|hèa| te|tac|ghe|n b|un |dhè|rid|t s|cht|rìg|o t|ìgh|r b',qvm:'una|kun|nts|tsi| ka|ant|pis|is |an |man|apa|paq|aq |ana|kan|shq|hqa|nap|na |nan| ma|iku|a k|sik|ash|ta |qa |tsa|mi | de|noq|chu|api|lap|sip|der|hun|erë|aku|ëch|rëc|qan|say|ipa| ru|pan| ts| la|anp|si |i k|pa |nku|int|ami|ima|nma|unt|nas|ita|ayn|npa|run|wan|ata|anm|qpi| na|a m| ju|pit| im|ish|nin|yno|oq |nak|asy|kay|yun|kas| y |ay | ni|oqp|awa| ya|ho |cho|a r|nat|syu|n k|q k|ach|ayk|ala|pti|apt|pam|tin|nam|un |n n| al| mu|tsu|i d|juk|ipi|su |may|ank|a a|npi|unk|ali| wa|s m|aqp|mun|ura|in |tap|qku| pi|kin|rur|äku|kap|kaq|a y|s k|hwa|shw|a d|n r|ush|li |ama|naw|q y|a t|nis|yan|ats|n i| ku|apä|päk| re|a i|cha|a p|aqa|q t|aka|a n|kaw|kuy|kik|q l|pip|nta|aqk|iki|uri|ma |res|kri| ki|ano|a l|kus|q m|ink|i p|la |wal|yni| iw|äna|yku|qpa|nmi|ark|unn|yka|ran| ar|n m|mas|iwa|ras|i r| es|esk| aw|a j|yin|rka|mar|lla|chö|nqa|q i|uk |n a|n j|nni|esp|s l|asa|ypa|aru|lay|ayi|n l|n y|pap|y d| pa|mal|ten|ina|ara|s t|unm|nch|all|kar|idä|yar|s a|y k|rid|awt|s d|wtu|tur|tan|yla|aki|wak|ann|rak|skr|yac|rib|ibi|lak|arp| sh|das|höp|shi|öpi|san|o k|sar|inm|s r|q a|spi|ayp|s n|sya|as |n t|y t|nno|ika|rin|ayl|shp|ych|nac|y m|yta|hpa| ta|q n| o | qa|inp|päs|i a|ila|q r|s y|kur|i n|lat|tak|i y|pas|s i|ast|s u| un',fao:'um | og|og |ætt|ræt| at|at |ur |til| ræ| ha| ti|ver| fr| ve| í |il |tt |ing| vi| sk|ri |ndi|erð|ið | ei|nna|ska|ann|va |ar |t t|sam|hav|ava|lig|ein|sum| sa|a s|in |øll|ll |yri|fyr| he| fy| øl|lla|ind|ng |an |di |ða |við|rða|la | su|lag|and|l h| el|si |ra |a r|ell|num| er| al|ræl|tti| av|al |iga|nar|men|av |a f|kal|tin|r s|ir |i s|g h|æls|fræ|na | tr|i o|enn|að | um|tta|m o|g f|g a| va|t v|sin|ga |ela|fel|und| te|m s|t a|lsi|vør|hvø| mi|lan| st|m e|a v|vir|ja |tan|r f|ndu|man|ru |lum| hv|er |l v|a t|a a|var|i h|tar|gin|i a|ni |ðin|ngi|ag |ður|nn | me| ta|eru|rði|ski| ma|alm|g t|r t|ari|g s|dur|i e|fra|l s|rli|i v|ram| la|inn|tjæ| tj|arl|igu|r a|l a|vís|gum|a o|nda|r o|era|ger|ta |nd |n o|m h|n h|hes|i t|lme|a h|ði |ins|t e|g v|stø|ti |eið|mál|m v|n t|vur|mun|t f|dir|ki |gar|nnu| sí|bei|í h|r h|kan|vin|rð |evu|hev|r e|n s|jæð|mfe|amf|sta|ka |nað|t s|nni| un|try|arð|aræ|ags|aka|tøð|u t|trú|læg|ns |har|ðir| ið|esi|r r|llu|ini|han|iði|tur|dum|rt | se|sku|sín|eig|ald|ara|ð s|m a|frí|ryg|øðu| á |ð e|ama|da | so|í f|i ø|ill|ð f|ldu| li|mil|irð|mei|ggj|l f|u o|t í|mis|ast|isk|i r|a m|m f|nan|rin|a e|g e|utt|g u| fe| út|kap|n m| ut|eim|tei|rum|ð t|ðan|ldi|m í| ar|arb|vil| pe|per| an|ers|gd ',kal:'ut |inn|ssa|naa|it |iss|eqa|unn|taa|ati|nni|qar|ik |alu|sin|nna| pi|iit|aat|nng|arn|ner|neq|igi|aan|lu |llu|uun|tit| na|ann|ita|tig|ass|nii|luu|ill| in|t a|mik|nis|umi|rsi|t p|t i|isi|aas|ers|pis|ngi|sum|rni|amm|saa|art| ki|ani|nut|ffi| aa|ssu|rne|inu|ni |its|gii|sam|nal|nik|sut|ine|git|mal|aqa|rtu|mut|aff|aam|mma|ars| il|aaf|gaa|aal|tsi|ler|isa|uti|ina|qat| ta|all|amu|t n|mmi|asu|ima|tut|t t|mi | at|kku|atu|nga|tun|ssi|uss|ama|nne|erm|ala|tsu|uni|rmi|at |rsu| su|aar|ini|ikk|t k|iin|ull|sus|kin|min|tam|isu|ata|oq |ile|sim|sis|t s|k a|nnu|ili|lli|igu|ane| tu|lug|uga|mat|gut|aq |gin|u i|uar|mas|ila|sit|una|san|orn|kut|nia|lla|lun|iaq|gis|aav|sor|imm|tum|rti|eri|sar|aga|ior|saq|eq |iar|kil|nui|mil|k i|ami|u a|uma|voq| im|avo|aap|i a|uus|man|lil|ttu|akk|ris|rlu|utt|ort|k p|rta|i i|nar|app|ari|per|fii|ern|ors|aqq|sug|nun|eqq|lag|seq|sul|use|ert|aru|ugi|sun|qan|uia|ats| pe|q a|uli|nam|iff|ang|tta|teq|qqi|u n|suu| an| al|liu|asi| ak|iis|q i|laq|fig|tar|qas|peq|qqa|gal|u p|laa|oqa|erl|rsa|sig|k n|ali|sia|k t|avi|taq|pin|lua|sat|uts|fin|qut|iga|arl|put|pil|i t| is| nu|rso|ute|aaq|une|ilu|lio|eru|rut|gav|qaa|nil|uin|ppa|q p|i k| ma|anu|tin|gil|gas|ngu|ker| up|qin|ppe|q k|itt|upp|nan|uut|ria',chk:'an | an|on |n a|we |n e| me|pwe|en |epw|un |mon| ar|emo| em| ep|in |n m| wo|or |eni|wor|ni |me | no|nge|non|gen|sin|ei | ra|mei|it |ait| fo|ini|rai|e e|kun|ama| pu| pw|ch |pun| re|ang|n n|r a|n r|och|are|n f|ara| es|ram|as | fa|mas|re |e p| mi|nam|fan|nis|uku|e n|e f|e a|i w|sen|isi| po|ap |wan| ch|t a|fon|n t|n p|onu| to| na|mi |kku|ein|ng |pwa|unu|i p|ese|i a| tu|nap|esa|kin|ung|ren|cho|ten|sap|i e|nu | ng|ich| ne|ar |ana|oun|ong|is |for|ite|fin|ewe|nga|e w|ri | fi|fen| o |n s|nin|gan|pus|rep|nen|r e|i m| ek|ans|ori|n i|e m|sou|che|i n|ina|s m|usi| mu|ton|nso|okk|n u|mu | so|sok|ine| ki|umu|eu | un| a |n c| su|u m|eng|eki|man|ata|n k|p w| ew|mwe| eu|efi|akk|e t|hok|fic|mun|ufi| se|tuf|amw|ngu|ok |ta |iti|er | oc| ni|e s|n o| ka|wes|gun|u n|tum|nuk|tip|suk|se |apa|ifi|o e|pen|r r|ffo|pis|u a|pop|opu|ann|n w| ti|kit|amo| ma|ora|nat|i f|e u|e k|a e|nno|nif|hen|ekk| fe|ti |hch|s r|ape|s e|chc| we|oki|kuk|r m| ei|t m|ka |ika| ik|onn|no |uni|ani|use|chi|pok|wen| mw|u f|fis|ir |nnu|nom|won|a a|r t|ion|e r|i r|win|a f|hon| sa|ien|uk | mo|men|e c|pan|h n| as|nei|a m|sun|mwa| au|k n|iwi|s p|ufe|koc|kap|ati|off|fof|s a|tor|nus|o m|ofe|min|r n|s n| at|aw | pi|ipi| us|nuf|ett|am |mot|usu|uan',cni:'ri |tsa|sat|eet|ame|cam|nca|mee|ets|eit|i a|i i|jei|ati|ite|iri|ti |ari|ant|que|ee |eri|te |tsi|aje| te|ca |oca|e o|onc|ate|shi| ir|pee| on| oc|ro |ita|ter|tee|aro|inc|ica|a a|ats|isa|e a|tej| in|ash|aqu|i t|nta|i o| an|ric|tir|aca| ai|ji |eji|san|aar|ais|nte|iro|nqu|ape|int|ori|ni |ron|ero|qui|tea|its|tim|nti|aco| ma|ata|can|si |oni|maa|ipa|tac|rio| ca|hin|aye|nts|pin|ava| av|e i|taq|avi|caa|eer|coa|ane|e t|ear|ete| at| as| it|car|uer|o a| ac|eta|cat|ior|mpa|anc|sip|ine|ue |ira|pap|a i|aaj| am|ani|emp|nea|vin| ar|ime|tar|anq|ima| ei| pi|ipe|yet|oaj|iti|i c|imp|sar|rit|eje|a o|ina| pa| im|ish|ama|asa|oje|ej |ini|uen|ta |ent|ena|tan|hit|eir|ui | qu|j i|mpi|i m|nin|pat|ror|sha|ara|han|ra |nco| i |tat|a t|ea |inq|iqu| yo|e p|tav|ana|taj|nat|api|uem|mat|cap|i p|equ|era| ti| co|vac|me |i y|roa|ote|uea|yor|yee|ora|ran|tas|naj|ner|ota|pa |ait|man|pai|oaq|par|sir|amp|i e|tem|osh|mpe|uis|eti|mej|ene|rir|ino|e c|maj|ne |a p|tap| ts|non|sam|ris|hir|epe|o c|tay|i q|ije|net|cav|pit| ja|rip|sin|sa |uee|eac|coj|cha|ean|a m|saa|aoc|o i|imo|ano|vam|o t|eim|ato|een|coi|a c| os|nej|oit|tei|raa|saj|ont|esh|oye|aac|oas|roi|pas|ven|cov|o o|one|var|emi|mis|i s|jao| is|imi|aj |aji|j e|coy|rat|cot|nan|oti',mah:'en |in |on |an | im|n k|im | ko| an|ok | eo|o a|n i|ko |n e|lok|eo |ij | ka| je|ej | ma| in|aro|ilo| il| ej|lo |n a|mij|n m| ki| en|ron|arm| ar|rmi|n j|k i|mar|non|e e|ak |o e|ot | no|or |ir |bwe| bw|we |kaj| lo|n b|j e|kin|mon| re|ien|r i|ke | ak|m b|lol| ju|o i|k k|jen|ol |wot|ar |jo |elo|jel| wa|o j|r a|n l|ojo|joj|eor|bar|ajo|j i| ai|ane|e i| be|win|jer|air|j k|eje|men|bal| ke| na|awi|waw|kwo| me| wo|ake|nan|nem|al | em|l k|erb|kot| le|uon|ein|mak|ne |juk|ber|juo|er |o r|emk|rba|jej|e k| bo|woj| ba|alo|m k|ro |kie|m e|oj |mkw|ele| dr| jo|r e| mo|n w|k j|mje|l e|lem| ro|ur |k e| ek|bok|ona|rej|ela| ot|kom| e |ote|mou|wij|nok|our|jab|o k|e j|mwi| ji|man|tem| kw|emj|r k| ja|kar|rok|et | to| bu|omo|n n|jok| ie|le |kij|jet|j b|kok|uk |emw|n r|emn|tok|mno|j a|abr|ijo|m a|n d|nlo|dro|k a|l i|ewo|j m|wal|t j|na |e m|ren|rew|bre|ukj|aki|kju|inw|nwo|r b|k n| ik|kwa|t i|ta |oba|a i|ata|kak|iki|o l|ki |bel|kej|kab|j j|lal| el| ib|ae |uko|r j|oki|oma|ibe|kei|jba|kka|ekk|buk|ejb|emo|ije|ri |wor|lap|lel|jon|won|r n|re |ben|ali|r w|o m|j r|okl|kal|oko|kje|okj| ij|j o|iko|eir|aje|tat|k m| ir|eka|un |i i|m j|iji|t k|onl|jeb|k l|ena|t e|k w|ana|uti|o n|iej|t w|one| un|ul |tie|e r|jei|e n|klo|j l',rar:' te|nga|ang|te |ga |a t|i t|ia |e t| ta| i | e |aka| ki|a a| ak|ata|ai |e a|a k|o t|aan|tai|au |ta |a i|e k|re |a e|tu |tet|eta|ki | ia|atu| au|gat| tu|tan| ra|kia| an|u t|tei| ti| ko|kor|ika|kaa|to |e i|ato|ore|tik|ana|na |i a|ama| to| me| ua|kat|a m|uat|man|eia|toa|ite|aki| ma|i r|ian|i u|ra |no | ka|ei |o i| o |oto|u i|u a| no|a o| ro|a n|a r|rot|tau|e r|ua |rav|ka |tur|ora|e m|ile|sil|asi|bas| ba|lei|oa |eit| or|ona|ava| pa|kak|i i|me |tam|ton|ura|e o|pu |a p|tak|e e|kit|api|ako|i e|tua|ma |raa|oat|o a|ira|ti |u k|apa|ke |ure|ou |iri|u e|rat|ati|nat|gaa|e p|iki|uru|ran|nam|ita|aru|i k|ko |aia|par|iti| at|aat|kam|ake|tup|nak|ave|e n|ing|rur|u b|ri |upu|aur| na| pu|pap|ano|va |kot|ari|ate| ai|ara|ro |tir|oan|ean| ng|mei|ait|oko|ru |utu|i m|uan|ere| ap|rak|tao|tou| a |u o|ea |rik|pin|pir|auk|aro| it| pi|ota|oki|mea|u m|kan|pua|rai|kai|noo|u p|noa|aok|ipo|ve |kin|kav|kap|umu|mar|oro|amo| ar|u r|ino|pii|tea| ok|mat|rua|iia|oo | va|uap|eng| pe| re|o r|rei|u n|e u|mu |eir| mu|kim|imi|ria|pak|tat|aor|i p| aa|i o|maa|i n|ne |o k|ina| ik|rea|opu|kua|ao |kar|a u|a b|pa |rin|apu|taa| ei| ir|uao|paa|kau| ri|ter|uko| ku|uka|roa|tum|rau|eu |top|aer|e b|poi|mi |ane|ram|aua|aap|tia|mua|o e|a’a',qvn:'man|una|kun|an |aku| ma| ka|si |ana|apa|nma| ru|ta |ata|nan|na |ach|chr|sha|as |aak|run|ima|paa| na|cha|anm|am |tan|paq|nas| ch|aq |anp| pi|may|tas|nak|ash|mi |npa|hru|a k|ay | im|nch|ant| wa|pan|qa |i m|unm|chu|ama|a r|ita|hay|kan|nta|ipa| ri|nsi|yun|nqa| ju|pit|nam|chi| ya|nat|a m|wan|kap|nuy| la|pa |lap| al|kur|ura|syu|ali|n r|asy|nin|n m| u |hu |ha |awa|ru | mu|ans|rur|naa|juk|qan|anc|i k|ina|mun|nap|aat|isk|nmi|rka|irb|rbi|nku|tin|ish|hra| is|i u|ski|kay|qsi|urk|anq|pti|a p|kas|a a|a i|rim|pis|n a|qku|a n| ni|yac|aqk|i r|daq|a w|pi |ika|yaq|kir|yan|ayn|yta|aya|ruu|n n|nda|asi|in |ran|rik|and|aqs|a j|uy |npi|uch|rqa|uta|un |ayq|hak|qta|lip|kaa|anu|was|kar|a q|u m|y r|iya|a c| ji|kaw|i a|ych|ara|yqa|yla|jin|a l|isi|iku|uyl|uus|usi| am|kin|uku| ta|q n|tuk|naq|inm|kaq|lut| lu|n c|kuy|n j|uk |ayc|qni|i i|tam|u k|aan|qmi|aka|rak|pac|uka|ayp|u i|ray|a y|li |m p|mam|rap| ay|ayt|ari| qu|ala|ank|nti|inq|unc|apt|qut|utu|kac|arq| ur|ink|s k|hin|ynu|ins|aqt|n i|aqm|rsi|aqn|aqa|ypa|hik|ysi|upa|map|bis|maq|ham| pa|i y|hun|ush|has|way|ury|u n|kuq|rac|naw|aki|aa |n l|mas|s a|ays|asa|ma |pas|s m|y k|n y|api|rya|u j|ras|adu|nir|wak|m k|ukl|yar|kla|y i|nni|unn|han|n k|raq|ich| ra|juc|i c|q l|n w',wwa:' o | da| yi|da |ma |iri|ri |a y|yir|na |a o|ba | ta|i d|ro | ǹ|ki |ǹ | i |ta | ya|a d|i o| ma| ba|sar|a t|o n|a n|aro| na|i y| ka|ris|a s|o t|isa|bà | bà|ka |di |a m| ti| sa| di|aa | bo|a b|o b| nɛ|an |maa|a i|i t|ti |ook| fɔ|ari|sa | tɔ|ku |ii |nɛk|a k|oki|i b|de | so|soo|mii| wa|ɛki|re |wan|i k| mi|o w|ya | de| yo|ori|o d|i s|ima|̀ y|o y|aar|daa| to|mma|yaa| ye|fɔɔ|tin|tor|i n|i m|rim|ɔɔk|yon|ɔku|aam|n o|ama|si |ɔɔt|e d|tɔɔ|imm|yi |nde|kpa|o i|paa|iro|ink|bo |ɔɔb|oma|nkp|o k|a p| cɔ| te|oti|a c|tir|on |uri|o f|ɔba|o o|aba|n d|u n|à t|den| mɛ|e n| nɔ|u d|tɛ |ɔtɛ|fɔ |ɔɔr|cɔɔ|u y|ɛɛn|aan|isi|yer|e y|u t| ku|oot|ɛ o|boo|te |eet|eri|i f|aŋi|ɛɛ |ɔ d|e t|n n|ɛ m|aat|ire|sim|yee|pɛɛ|rik| se|nɔɔ|su |mɛɛ|tan|̀ b|ɔri| kp|asi|nda|eti|bom|à d|iba|ina| co|e m|ŋis|yaŋ|sir|a w|yin| pɛ|sab|bar|o p|are|ɛ y|en |ra |n t|kaa|tu |ɛnd|onn|n b|rib| si|ɛmb|e o| su|i c| pe|tet|kpɛ|een|nne|ena|nsi|riy|iya|ond|o s| sɔ|ne |wo |ɛ b|nni|ni |ann| wɛ|wɛ̃|ɛ̃ɛ|and|yoŋ| do|ɔre|ika|tɔ | kɔ|ŋa |kɔɔ| wo|ato|too|ara|dur| yì|yì |bot| pa| yɛ|e s|ɛɛm|à y|ɛ d| tu|dan| mu|kpi|u s|see| nu|nɛ |a f|ãdu|à m|̀ t|i p|kar| pu|puk|uki|kir|yɛɛ| ãd|do |tak|un |run|yau|dɛɛ|n y|coo|oon|nna|sɔɔ|à k|ɔti|to |tim|uti|in |ŋo |oŋo|kut|bu ',qvh:'una|kun|an | ka|nan|pis|is |aku|ana| ru|aq |na |man| ma|ash|anp|shq|äna|mi |apa|ta |npa|hqa|qa |paq|api|run|cha|nak|yän|pan|kuy|lap| la|qan|naw|ita| y |nap|ima|pit|ata|kay| im|aw |ami|a k|n r|kaq|kan|ali| al| ya|a m|nku|kas| sa|say|nat|haw|a r|ura|pa |ayn|npi|i k|ayk|ach|tap|rur|nin| ju|nqa|nta|a y| ri|uyä|ayä|yna|q k| sh|may|shu|qku|nas|nam|awp|yan|ris| na|li |yas|juk|anq|spi|tas|aqk| wa|aru|a l|isp|ans|ink|ant|kin|syu|asy|a a|s m|yun|sh |a s|ypa|ank|su |ray|yni|uku|a i| pi|aqa|a j|awa|uya|s y|wan| o |tin|ayp|nsu|s r|yku| ni|uma|pti|ush|ish|n y|ark|inp|arp|wpa|yka|wak|yar|aki| ch|anm|h k|qpi|n k|i m|maq|ipi|hum|aqp|s a|yac| wi|pip|s s|ay |s k| ja|asi|aya|mar|apt|rka| mu|ila|kur|in |kus|ina|äku|i y|ran|uyn|kak| ar|ni |pak|pay|lak|ur |ibr| pa|iku|nka|has|bri|nch|pän|n m|ruk|q r|q a|wil|ras|nmi|uk |ask| li|hak|lib|apä|rak|ar |a w|n a|jar|pam|n s|i i| aw|rpa|asu|ara|kaw|n l|way|a p|i r|iya|kap|y r|q y| as|tuk|wpi|unp|mat|ruy|yqa|w k|ayq|iki|par|awm|y l| ra|taq|nac|mun|ika|rim|kar|imi|ma | qe| tu|ich|kik|nna| mi|wmi|aka|ann|unk|a n|i p|sar| ki|sun|and|yta|q s|yap|nda|nni|s l|nma|n n|sin|n j|san|w r|i a|s i|y a|usa|arq| ku|n i|rpi|ast|n w|y m|yay|naq|ala|ukn|wtu|tur|a o|urd|iwa|rdä|y i',toj:' ja|ja |b’a| b’| oj|a j|ni |oj |’a |l j|i j|a s|k j|uk |b’ |li | ch|nal|al | wa|kil|il |jas|ax | k’|wax| ma|a l|i s|b’o|’ob|ob’| ju|i o|sok| so|u’u|ok | ya|an |as |ali|tik| sk|ja’|a b|a o|ma |a t|a m|ana|cho| mi|tuk|k’u|sk’|cha|’um|sb’|’in|k’i| lu|um |ha |lan|jni|jel|lu’| le|m k|ina|ani|ab’|tsa| ni|win|ila|uki|i m| sw| i |i b|swi|nki|’an|ki |ink|jun|’ s| sp|hon|iwa|lek|un |el |niw|sta|ik |ona|ula|ojn|’il| ta|nab|’ch|s w|yal|spe|k’a|ta |j b| tu|a y|san| a |a’c|xuk|ini|’aj|pet|j j|i c|ets|e j|yuj| t’|’b’|a a|tal|chn|hni| ay| yi|aje|ala| yu|luk|j s|’un|a n|a’ |ukt|t’i| st|juk|kol|uj | a’|la |ju’| ts|k c|x s|min|b’i|ktu|anu|yi |lal|ay |a k|ma’|iki|mas|i y|e i|j y|k s|lta|wan|’ul|lti|olt|wak|ast|xta|uma|ek |’ni|k a|eli|’ j|’al| sb|ak |x y|ti |a i|a’n|ke | ko|yuk|sa |je |i w|tso| sc|ub’|som|i t|j a| aj|ajy|jyu|sch| sl| ku|iti|le |xi | na| ti|axu|a’t|j k|eki|sle|pan|l s|k’e|a’y|ch |nuk|k y|kul|’ k|aj |ji |jum|asa|tan|i i| it|a’m|ane|n t|une|’ma|omj|l b|mje|mi |n j|n c| sn|a w|l o|n i|y s|nub|aju|jpa| la|i’b|’ b|asb|a c|ijp|hol|sij|k m|lax|k o|na’|l n|n o|l t|n s|ol |’i |tel|x k|i a|ne’| si|e’b|ya’| sj|na | ix|naj| je|och|ley|yi’|uke|laj|yaj|ka |man|ne |ens|pen| oc|’uj|nil|j o|alu| sm|sko',lue:'chi| ku|a k| ch| na|na |aku| mu|la |sa |a n|a m|ana| ka|wa |a c|tu |nga|cha|utu|a l|esa|mut|pwa| lw|lwa|uli|lus|ga |ka |uch|kul|ila|wak|hi |ang|nyi|alu|ses|use|we |kup|lo |ose|kan|sen|ena|uka| va|nak|nal|ach|upw|muk|shi|kut|kwe|i k|a v|ing|ma |e m|a a|e k|pwe|hak|o c|amu|ipw|aha|o k|kuh|yi | an|hip|yoy|kum|eka|eny|han| kw|imb| ja|mo |ko |ava|a j|u w|uta|wos| wo|a w|hiy|fuc|sek|aka|umu|o m|ese|yel|any| ha|ha |akw|kuk|oye|ama|lim|van|mul|ze |ham|iyo|asa|has|ela|aji|ala|apw|wes|isa|vo |wan|elo| ji|him|ngo|kal|kah|mwa|avi|eke|naw| ya|vat|ech|uku|nav| wa|wam|ali|and|ung|lif|avo|u k|che|ish| wu|uma|kes|muc|ifu|mbi|ona|utw|nac|jis|zan| ma| vy|jil|bi |tam|uha|nam| lu|hav|mba| mw|ili|hin|hik|amw|twa|ulu|amo|ush|hen|iha|uze|awa|olo|tan|vak|mwe|kun|a h|mu |ina|kuz|hon|uza|ula|i c|uho|yak|kak|wec|e n|jin|ngi|uwa|u v|tel|iji|i l|ulo|ita|gol|a y|yin|ata|atu|ta |uki|afu|ate|nge|kuv|ge |gan|ise|ako|awu|ivw|kuy|i n| ly|mbu|hil|una|o n|vwa|man|u a|ash|sem|was|kin|nji|kuw|jak|kwa|ne |yen| li|kav|imo|o v|ngu|wah|jij| ng|mil|o j|nda|amb|ya |kwi|iza|lil|sha|tav|iko|wuz|kay|gul|kus|lon|u n|ong|his|iki|wav|vya|no |wal|za |aza|i j|i m|vis|e c|o y| mi|ola|hal|ika|ye |naj|kuc|ndu|wuk|iku|lik|anj|dun|wom|yis',jiv:'nia|ent|ini| ae|nts|aen|ar | tu|a a|tin|ai |iti|i a|chi|ait|ts |ti | nu|kia|iai|in |ia |ich|sar| ch|awa|am |wai|sh |tur|cha| ni|n a|nka|ain|i t| pu|ura|iki|ra |puj|ara|ma |tsu|iar|ash|mas|amu|ish|iaw|nun|tai|unk|an |íni| aí|ana| ta| wa|aín|ha |ker|usa|nke|tak|asa| ya|kar|hic|sha|ham| pa|ach|ink|u a|ch |h a|ni |nki| ma|uju|aku|kan|tsa|a n|kam|kic|r a| as|ati|ram|at |jus|man|kui|ank|ama|er |unt| un|rin|suk|nam|s n|kma| ai|kák|énk| an|i n|ntr|rti|pén|ka |a t| pé|hik|art|uk |r p|uat|min|ajá|nai|ak |tus| ek|una|nui|a u|uit|aja|war|amt|uma|mu |m p|sam| na|aka|rat|yaj|mta|áka|imi| ak|jai|rma|rar| at|kua|mia|ri |ke |tuk|r n| am|mik|nta|m a|tia| aá|atu| en|eku| ju|uin| ká|n n|na |ush| aj|iru| ir|pap|kti|aik|atn|its|s a|a p|tri|t t|k a|nma|h n|arm| au| ay|as |aki|mak|uke|eka|nek|api|umi|tek|nua|run|ats|mat| ar|kak| we|san|t a|rka| ne|yam|aár|aya|n p|pac|uja| jú|ais|ani|ami|iat|tra|hit|k n|já |á n|s t|tki|aru| aú| um|i u|jú |tka|n t|aká| su|i k|uch|um |uri|wak|ari|tum|hat|i c|unu|aim|ets|nan| et| sh|amr|chm|atk|tnu|yai|chí|nen|ene|k p|hík|íki|niu|uis|r e|ust|uim|ame|sti|iam|i w|a w|shi|mét|i p|án |ant|kus|tsé| mé|akm|i m|iak|nt |ji |num|ian|r t|ki | ka|sér|uar|ake|itk|hi |érk|a e|ata|rak| ts',qvc:'una|kun|ta |ana| ka|mba|na |lla|ay |apa|pa |chu| ma|nam|ash|man| ru|chi|ach|a a|cha|aq |nch| yu|amb|a m|lap|qa |umb|uq |ata| ch|all|pis|nda|run|yum|baq|bay|is |yuq|a k|shp|hpa|ich|aku|hay|hiq|a y|nap|nqa|hu |ina|nas|yta|tin|anc|an | di|api|aqa|ama|nan|and|am |paq|nat|dir|mi |gun|qta|iri|ric|ngu|in |kan|aqt|da | at|uyu|ayt| su| wa|shq|kas|nak|suq|hqa|ima|qku|huy| ya|ch |shu|ati|anq|syu|asy|a s|y r|h a|qan|hin|nin| pa|yun|iku| mu|a r| al|q k|lli|ura| na|ma | ni|a p| am|yan|a c|mun|iq |rur|shi|maq|mas|sin|uku|a d|pi | ak|laq|kay|yku| sh|qll|ing|uqk|wan|a t|hum|uma|a i|asi|ran|inc| im|pti|yac|a w|qal| ll|ita|u k|rmi|may|qpi| an|ush|naq|mbi|q a|war|i k|yas|iya|nll|arm|a n|apt| pi|ish|q r|ung|aql|kap|lit|adu| ti|kam|ays|tiy|ayu|y n|ayk|ysh|pac|tan|un |pay|nni|tra|q m|kin|ind|ley|ras|ayp| le|ray|la |unn|a l|ism|i y|n m|uya| ta|smi|hik|qac| pu|q c|qam|pip|q y|iqp|ipi|qpa|iqk|ara|awa|nma|nis|n k|mac|tap| ay|pan|akr|inl|qmi|kra|yis|m a|unq|yuy|mik| as|ila|rin| tr|y l|kuy|a u|baj| qe|tuk|yll|ayl|s y|aka|bis|isk|aba|du |rab|q s|uqm|hun|naw|a q|lin|ida| ku|i a|aqp|apu|aya|n c|n s|ami| tu|n l|q i|tim|kus|pap|ha |kuq|imb|y t|n a|m p| ba|ika|ask|ast|ull|iyt|y m|ypa| ju|kaw|und|lay|pul|dar|aws|s a',hlt:'ng |na |ah | th|ang| na|ai | kh|ham|eh |la | ha| ah| la|tha|lan|hla|eng|oei|ih |thl| ka|om |am |hai|i a| ma|kha|boe| ne| a |a t|el |h t|kah|a h| bo|ing| pa|oel|neh|moe|eih| ti|a n| ca|mai|i n|h k|hmo|ngt|amh|a k|ong|mhm| te|te |h a|oe |a a| ra|ung|h l|haw|hui|ek |aw |g t|loe|ram| lo| om|h n| sa|g k|en |m b|g a|uen|ina|ui |oen|ain| at|awn|i t|nga|h h|mah|tom|kho|oh |m t|khu|h p|ka |loh|a l| ni|at |h m| do|tun|amt|g n|aih|hin|h b| va|h r|ak |gto|hoe|aen|e a|don|paw|oek| tu| ng|a o|hat|l a| ta|gai|wn |k t|taw|aek|aeh|mue|a r| bi|ei |sae|sak|ueh|g h|pae|a c|e t|m m|he |ngh| ba|mtu|ni |olh|thu| ro|coe|ghi|g m|lam|kna|can| he|ata|i h|tih|n t|tlo|awt|ala|m k|w t| bu| hn|k n|a b| u |bi |ban|hno|ngp|a s|tho|un |tue|vae|hlo|osa|i k| co|lai|cal|e k|adi| da|ihl| up|i l|a d|roe| mu|g l|wh |awh|e n|hos| ol|m o|pad|i p|di |ca |ae |hue|a p| ya|gna|ngn|l n|no |dan|upa|ith| po|tae|a u| ko|ama|phu|m n|l t|n m| am|tan| ph|a m|ti |sai|wt |h y|o n|bue|tis|nda| me|hol|van|pa | ak|pin|t n|lh |isa|um |nen|lpo|gta|dah|wnd|nin|daw|ait|h u|han| hm|alp|yal|g p| im|g b|uek|h d|an |pui|g c|ol |poe|h c|ngl|baw|it |kun|e l| ku|anp|o a| un|h s|pit|ben| be|n n|npi|hae| tl|pon|ona| hi| as|tik|nah|eba|nya|roi|e b|the',qud:'una|cun|na |lla|nga| ca|acu|cha|ta |man|a c|qui| ma| ch|ac |ucu|ga |chu|pi |pac|ari|um |ach|mi |nac|a m|cuy|ana| ru|tuc| qu|ata|shp|all| tu|hum|cta|tac| ll|ish|nam|ash|ami|a p|run|ang| pa|pa |ing| sh|uy |hay|i c|shu|lac|án |hpa|hca|shc|ama|api|ca |uán|huá|act|nap|ric|a s| cu|a t|icu|y r|pay|ich|hua| hu|ahu|hin|shi|c c| al|apa|ay |pes|ayc|es |yta|huc|ina|cac| ta|cay|ayt|a a|ycu|a r|la |an |har|ayp|usa|uya|chi| ri|ima|nat|can|aus|mas|cau| pi| mi|i t|a q| ni|lli|aca|rin| ya|n c|ita|uin|yac|nta|ura|a h|ant|and|tan|ipa|li |llu|uis|yuy| yu|nal|may|a l|ung|ape|nda|ypa|in |nis|hpi|iqu|dar|lat|yll|m t|ill|atu|hat| ha|ayl|cpi|uiq|say|i h|uc |tum|aya|uct|i m|uic|nah|uma|tar|ush| pu|a u|mac|aqu|a n|n t|hu | ay|sna|cam|rip| ti|m c|yas|tap|rim|asn|c m|nch|c a|yan|a y| su|i p|i s|c q|yay|rur|hic|ris|ipe|i a|has|ypi|ma |pur| im|acp|ri |luc|gac|ipi|gap|pit|i y|iña|ays|hac|n p|a i|pip|i l|cll|n a|n l|ysh|mil|aym|yma|tam| ja|ngu|ran|n r|cat|cuc|sum|hur|uas|lam|car|uip|uar|hui|rmi|pin|tin|mit|pic|ull|uri|cus|arm|lay|m y|ayu|yhu|uch|s c|s m|i n|jap|ic |anc|uiñ|ala|sac|tic|ra |n m|asi|llp|acl|y l|lpa| ap|u c|n q|ha |gal|c y|hus|yuc|mun|uah|arc|m m|y h|lan|tah|rca|yla|c l|y p|ihu|nin|i q|san|uac|min|a j',pon:'en | ka|hn |an |ahn| de|ki | me|de | oh| pa|ama|oh |ara|ng | pw| ar| en|il |me |n e|e p|kan| sa|n k|son|iki|man|n a|pah|as |rai|n p|ros|mas| so|kar|aro|ram|os |pwu| ko|da |pwe|pil|weh| ah|ail| we|ang| eh|n s| ma| pi|ale|e k|n d|ede|hu |n w|nik|n m|hni|nam|i d|sal|ek |s a|ong|i m|ana|in |h p|oso|s k|ung|e m|wun| mw|pai|soh| pe|ohn|kos| na|hda|nge|men|on |aik|doa|ada|led|aka|eme|ehn|ehu|sou|gen|hte|te |pen|ehd|pwi|eh |dek|ahk|san| ke|kak|i p|e s|wah|nan|asa|hng| to| wi|dah| li|ene|we |wei|wet|l p|et |ehk| se| ni|oht|was|e d|ira|ed |ou |mwa|hki|neh| po|l k| ir|ian|h k|ans|wih|oah|ahr|a k|aso|epw|poa|wel| uh| em|ei |ahu|hk | ia|pwa|l s|toh| re|ak |a m|wia|n o|lip|ein|ie |e a|h s|h m|la |mwe|e e|ehi|g k|el |i k| an|wuk|pa | ak|ur |mpa|amp|sam|ipi|n i| di|ehl|hla|mwo|our|mou| mo|oas| wa|u m|apw|l m|ele|g p|l a|i a|hr |g o|ih |ni | du|a d|nso|ihn|di |one|k p|uka|hre| mi|hi |n t| da| ep|wal|k k|epe|kei| ki|pwo|al | do|e i|ese|kat| in|nei|oad|i n|n u|awa|reh|ipw| la|uwe|lel|at |meh|air|s m|i e|ned|nne|onn|ine|med|hl |ion|a p|leh|sem|id |ala|wen|re |dip|hdi|ado|i s|iso|sa |deh| su|h d|uhd|ia |ida|eng|nin|ndi|k e|le |mpw|emp|ud |eu |r e|oan|e t|lok|pw |ili|seu|a a|ir | te|ond|eki|ewe|e n| al',agr:'ain|ina|mai|ai |ent|ich|ash|sh |i a|nts| ai| ae|aen| nu|aka|tik|chi|wai|au |ida|dau|ts | as|gka|n a|ama|cha|aid|shi| wa|in | ta|tak|u a|tsu|nai| ti|ait|uja|amu|am |a a|kan|kam| pu|i t| tu|kic|ak |puj|hi |num|sa |k a|an |nun|uju|aja|tai|ui | an|iki|nma|ham|h a|unu|agk|ima| ch|kas|s a|hic|kat| ag|m a|ch |uk |ag |ush|ish|um |aya|ane| ni|uma|asa|ata|ja |as |aku|awa|i n| ju|nen|nii| ya|usa|mak|its|ugk|aju|nak|tus|nug|mun|ka |aki|shk|un |sui| aj|a n|jam|uni|mas| at|tin|jai|na |uti|jum|jui|aun|tuj|tka|ig |ii |ita|nja|ika|tsa|anm|h n| ap|sag|yam| pa|bau|ake| du|nia|ats|una|hka|itk|h t|kus|dut| um|umi|jas|eka|jun|amj|wak|ik |suk|g a|jut|ek | de|mta|a t|ta |dek|ti | ma|kes|nta|apu| di|ais|esh|aim|a j|ach|nka| sh| am|at |auj|mam|enj|ete|amt|tan|may|k t|jin|chu|uwa|iig|a d|jus|unm|n t|hii|ink|apa|ji |sam| au|a p|ya |kag|agt| em|nu |mka|n p|gke| ay|mju|ku |u n|kma|pu |u t|gta|nag|tek|hu | ak|tia|eja|ntu|tam| ji|tnu|atn| na|api|tas|i w|nuw| be|bet|m p|ati|dit|mu |hik|min|ant|nui|uwe|inu|kak|aga|h w|s p| et|aig| im|iaj|ju |aik|naw| yu|us |egk|gma|ets|kej|uim|juk|i u|kui|pap|juj|u d|a w|g t|hat|ikt|nam|i i|emt|anu|gba|i j|iju| ku|ma |n n|i y|aji|ikm|me |pic|paj|s n|yak|kin|wa |kti|man| iw| da|yup',qxa:'lla|aj | ka|ta |man|una|nta|sqa|cha|na |ant|an |pis|ana|nan| ma|is |ach|paj|qa |asq|api|qan|ank|kun|anp|a m| ch|ata|nku|kuy|chu|ati| ll|nin|yni|yoj|ay |taj| at|hay|npa|ina|a k|ama|in |jta|ima| ru|lap|uku|spa|ajt|iyo|j k| tu|tuk|wan|aku|tiy|chi|a p|awa|ill|niy| wa|laj|yta|ari|kan| ji| pi|all|iyn|oj |jin|pi |hus|kay|run|iku|uy | im| uj|asp|lan|pa |a r|ku |mun|a a| qh|ayk| mu|mas|nma|isq|jll|sni|yku|n k| ti|tia|may|asi|tap|a c|nqa|ipi|a t| ya|us |apa|a l|a u|a j|kas| ri|ma |j m|nch|apu|pip|ayq|s k|s a|hu |kaw| pa|aws|anm|wsa|pil|ian|pun|k a|npi|ray|upa|uch|j l|kup|n t|qha|anq|tan|khu|ri |kac|uni|nas|ion|a q|j j|par|uma|hik|pay|aqa|ayn| as|i k|ara|tin|rim|int| ni|pat| ki|kus|ayt|ayr|ni |j p|ris|kik|uri|yll|iki|kam|qen|n j|hak|yri|nra|yqe|uj |n y|nap|was|rua|yac|rik|j c|taw|a w| de|n m|aci|tat|has| ju| pu|ita|anr|nk |j r| sa| su|y r|en |pur|yan|sta| yu|hun|kin|j t| ja|anc|jku|u k|uyt|kaj|sis|a y|qac|han|nay|un |mac|nwa|aya|u t|cio|ska|ka |y k|pac|s m|sak|ich|ayl|cia|ayo|tac|war|uya| qo| ta|n l| re|usk|n r| kh|qhe|jch| un|asn|waj| le|iyt|n p|rin|one|j q|yqa|say|lig|jni|isp|upi|jpi| ay|yka|nam|pal|nej|y a|nit|n c|ink|uyn|n a|isn|yma|lam|j w|his|hij|hap|nes|ojp| aj|s c|lat| al|a s|mar|lli',tca:' na|xü̃|rü | rü|ü̃ |ü n| i |ma |a n|na | ng| ĩ |ngẽ|ü̃x| ta|̃xü|nam|uü̃|gü | du|duü|nax|üxü|̃ r|gu |a t|ĩ n|acü|̃ ĩ|wüx|üxi| nü|ü̃g|xgu|ame|a̱x|i n|me |chi|uxü| wü|nüx|ẽma|gẽm|ü t|e n|wa |ü r|ixĩ|cü |̃gü|axü|ana|tax|̱xg|ama|u i|xi |i d|axu|gẽx|nac|gux|uma|i i|̃ n| ni|xna|ach|nix|̱x |xĩ |gum|exü| gu|e̱x|nan|a r|ca̱|tan|ẽxg|ürü|ü i| ya|ãẽ̱|gac|xga| ãẽ|ẽ̱x|u r|ã n|üwa|cür|aã |xuc|üma|ucü|rüw| me|max|ü e|̃ma|a ĩ|ĩ d| e̱| no|̱xn|tex|tam|̱xe|maã|ü̃c|ü̃m| to|ü̃ã|̃ca|xé |orü|nor| te|exé| ch|u n|arü|ata|güx|ügü|a w|ẽxü|meã|ãne|nap|axã|eã |hix|i w|u̱x|nat|yax|ang|ãxü|chu|xu |pur|rac|ura|̱xu|cha|xex|hu̱|a ã|iü̃|hiü|hig|i t|mar|ga |x r|ü m|ta |aü̃|haü|üxn| ma|xwa|x i|nag|̱ac|ṯa|̃ãn| ṯ|xẽẽ|a m|nge|ixe|a y|ü̃́|̃́ |ewa|atü|igü|ĩ g|wa̱|ãcü|gü̃|xĩx|̃gu|ich| yi|ü g|xma|xic|a i|ĩnü|agu|xux|xĩn|axw|yix|anü|xch|cüm|axĩ|é t|tog|ogü|̃ y|to |ra | pu|era|naw|xig|ü ĩ|ngü| po|ü c|o i|ngu|ẽẽx|ope|x n|igu|a c|ü w|́ n| eg|new|a e|gex|nüẽ|i ã|̃xẽ|nüg|ẽxm|apu|pan|upa|xgü| ña|ega|mex|axc| bu|ri | ix|awü| er|per|erü| ñu|é n|nay|bux|ñaã|ü d|e i|pop|ĩxg|a d|uxg|apo|pox|xri|cua|e r|acu|ü̃͟|ya |ĩ w|ua̱|rüü|ü p|nü |aya|ãma| tu|tup|mac|̃͟ã|ĩ ñ|ixu|cüg|ne |axũ|oxc|xcu|xũx|axõ|̃ i|xãc|ixr|ñux|xãx|aux|awa|cüx|tü |cu |xe ',chj:' ds|sa |dsa| e |a j| ju|ía |a e|la |u d| la| jm|uu |a d|i d| sí|e j|a l|a s|ua | ki|a t| na|mo |ki |a k| a |ma |jmo|li | li|sía|jua|jä | jä|nía|na |o d|a n|ju |i j| i | ní|ä d| gu| ñi|ñi | o | de|e l|rec| ma|der|ere| jn|ho |ech|cho|ia | kö|íä |jï | jï|kö |o e|su | ku|o k|e s| tu|tu |a a|e d|dsu|i t| su|i l|ja |a m| tä|a i|a o|tä |jma|u j|nia| ru| lu| h | ja|kuu|ï d| sa|ä e|a h|i k|ä k| fu|u n| ni|iä |ta |tá |u g| ti|lu |síä| tá|fuu|sá |dso| ta|u t|nac|suu|ka | ka|juu|a r| ï | tï|tï |a ñ|o j|e n|i n|ä l|i e|e a|ti |ne | si| tí|dsá|mu |ue |ï j|ru |e t|jne|jni|ö ñ|ä j|jmu|u s|uú | ji|á e|a g|u l|gua|u e| kä|kä |o m|á j|aci|ö j|siä| sï|ni |ací|ä n|u k|á l|o g|ba |dsi| é |e k|á d| ba|iö |o t| as|eé |u a|i g|si |i m|juú|h i| un|ie | mo| hu|así|tíä|no |tö |ä a|ö n|guu|rue|a ï|oo |so | kï|kï |o s|íá |huu| tö|ji |oó | vo|i s|mi |ö l|jní|ciö|ö s|á k|ui |ï t|gui| jú| ie|síá|ï k|d h|u ñ|e i| d |íö | le| ej| uu|uá |ï e|uí |guí|ö k| kí|eli|o n|ï l|í d|tía| re|á n|uo |a u| í |i o| ro|sia| lí|co | go| ge|uï |a f|guï|o ñ|é f|vo | no| je|o l|u o|cío|o i|ï n|one|má |nes|es |s u|uni|i i|nid|i ñ| es|soó|cíö| jí|juá| ó |ó d| j |ecl| já|já |un |jue|ida| má|jí |á o|lá |í l|e m| lá|úu |ïa | u |das|u u|as ',kwi:'az |kaz|an | ka| wa|tpa|pa | m |nit| ni|ai |kas|wan|ama|nka|aka|awa|kit| an| ma|ne |it |ara|m j| su|itp| ku|mak|a a|cha|chi|as |ant|na |ntu|asa|maz|aru|tus|n k|paz|atp|sun|ura|aki|z k|a k|nta|mai|a m| pa| ch|rus|akp|a w|in |kpa| ja|kar|z a|pai|a p|uka|aza|sa |alk|ain|za |ra |ska|wat|pam|n n|kal|z m|war|wai|z p| p |t t|unk|lka| aw|ion|rak|tak|t n| pu| nk| sa|us |t m|a s|int|kam|mam|m n|usp|ran|n p|n m|cio|ach|spa|at |taw| t | pi|a n|z s|ika|usk|kun|ash|ane|z w|ruz|aci|tuz|un |pur|tar|jat|ish|iwa|uz | na|min| te|hiw|ana|jan|ta |kai|ent| tu|per|jma|a t|alt|kua|unt|i a|hat| n | jm| au|ltu|n a|tch|pak|al |hi |han|kui|era|sha|iun|sar|zna|s w|s k|onk| tp|uma|nte| mi|nti| re|wua|z u|par|tm |p n|ita|uzp|zpa|z n|i k|zka|miz|i w|n s| pr|uin|atm|ais|uru|ter|amp| in|ien|am |usa|man|izn|wa |kaw|e s|itm|tur|anm|mas|ar |r t|ual|ipe|nma|npa|s a|s m|m l|kan|amt| ki|ina|cia|pas|ici|tik|ial|ha |e m|pru|tuk| nt|au |i m|t p|sai|n w|itu|z i|siu| am|itc|nak|pit|hum|ist| hu|lta|ait|e a|nna|ram|amm|p p|hin|i n|aiz|iak| li|tpu|t k| as|was|sam|nac|kta|ank|ami|a i|cka|il |nci|apt|mpa|nk |ann|rai|raw|tra|z t|rta|akt|ciu|nal|a c| up|lki|n t|uzk|i p| un|h k|uil|i s|eka|ima|men|shi|hik|lne|sht|ian|pia|mtu|tui|asi',rgn:'la |oun| e | la|un | di|iou|a l|na |da |zio|una| pr|a p|rét|ét |dir| da|iré|tà |a d|azi|a s| in|à d| ad|per| dl|ers| pe|ad |ta | à |sa |ni |i p| un|nt |sou|rso| i | cu|gni| su|a c|ènt|ia |mèn|ogn| og| co|a à| m | st| ma|a a|li |èsa|za |i d|a e|dla| li|di |t d|pro|su | l | ch| ri|a t| o |umè|t m|e d|nza|a u|ma |i s|t e|stè|in | ès|ibe|ità|ra | u |lib|ber| al|ert|naz|i e|e l|rtà|e m|amè|cun|int|n c|u s| to|ii |d c| qu|ich|m l|rì |e i| pu| at|con|ent|a i|prì|e a|sia|ter|n s|uni|cum|che|tot|our|èd |ita| ni|ri | si|he |al | re|si | el|tra|èl |el |ist| d |pre|unt|rop|à e|n a|a n|ti |ot |n d|a o|raz|e p|sun|nd |l i|sci|a m| na| tl|at |nda|nta|èla|qua| de|n e|t i|n p| pa| te| è |a è|ara|nit|ché|i a|nis|ndi|t a|l d|izi|sta|nte|tèd|èri|ali|dli|i o|dis| um| se|isu|ric|i n| fo|i l|rà |ual| po| gi|sèn|ost|i c|ois|èda|opi|t t|i à|men|nèl|ch |ur |a g|a r|ran|a f|tè |erè|ènz|vit|ris|és |i i|uzi| c |gio|is |and|res|pri| sc| s |tri|d r|t s|chi|cié|str|rim|sti| du|t u| so|eri|u r|m u|n u|ide|put|l o|idi|dic|nsi|bli|und|l e|op |èn |unè|n l|ind|ntr|hia| ar|n o|rel|isp|esi|ici|eli|iar|iun|sid|iél|lit|dam|d l|soc|foi|nti|tla|i m|utr|trà|cou|à è|urè|zi |imi| j |ilt|dl |imè|lig|ntè|ond| ci|età|der|tic|par',tob:'da | da|axa| qa|ata| na| ca|taq|aq |ca |ac |shi| hu|na |a a|o o|a l|aua|chi|a q| ot|ta |uo |ayi|a n|huo|pi |tax|xac| en|qat|ec | ma|t d|yi |may|c n|ena|gue|qai| la|ota|aỹa|a h|it |hit|igu|ish|a i|gui| a |hig|nau| ỹa|q d|ana|ỹax|a s| is|am |aqt|i o|cam|iỹa|ama|nat|a ỹ|i q|at |hiỹ|xau|uac|a d| sh|i n| sa|qta| al|lec| o |aic|c d|hi |lat|a m|o c|eta|e e|ala|i i|a c|en |ua |ach|hua|agu|c c|i d|qan|xan| i |ui |ot |ai |eet| t |xat|hue|a t|uen|t c|c q|ale|api|qaỹ| ch|a e|ỹat|nax|uap|uet|ỹa |tac| l |egu|i m| ne|tta|sat|ii |lhu|n d|t n|uii|ape| ll|ue |nac|ipi|asa|ic | ee|ane|ica|lli|i c|lỹa|i e|qoỹ|ich|i h|cha|ues|oỹi|q e| lỹ|sa |iue|c h|och|lla|to |cpi| iu|ne |ona|ỹaỹ| on|uax| ỹo|ash|ott|alh|q n|pax|nam|i l|l a|max|qch|lic|t q|i s|ỹin| de| nt|lal|yip|peg|mai|nta|acp|ete| ya|ita|eda|qal|ỹam|lap|in |yaq|laq|de |qto|ỹot|anq|nqo|uas|uec|m l|aqa|tec| aq|ais|q q|nap|et | am|u a|alo|apa|q c|sai|ate|o n| ed|n a|ole|tag|oua|ilo|ga |em |esa|sou|c m|a y|oxo|q i|lax|tal|tee|xa |ỹal|xag|m d|te |ha |ail|lpi|tau|l o|aqc|que|lo |soc| ay|eso|le | nq|uem|igo|laỹ|aan| n | no|nqa|iit|n n|xai|alp|lam|q ỹ|ote|maq|eu |q s|c e|tap|tai|nan|cho|nec|i ỹ|hii|lot|ono|oon|t i| oo|ele|saq|nal| so|co |ỹaa|ỹoq|ỹau| iv|ivi',guu:' th|thë|hë |ë p| pë|pë |i t|wë |ë t|ham|oti|a t|mi |ma |amo|hit| rë|ë k|awë|ihi|tha|ai | ku| ha|ima|ou |rë | to|tim|hi |pra|mot|ë r|ami| no|iti|ë h|i h|tot|ni |tih|kãi|ha | kã|taw|ãi | ã |ama|ita| hi|he | ri|iã |riã| wã| ta|i k|ë ã|omi|i p|i r| sh|mai|ë n|ei |no |ã r|ohi|tit|iwë|ëni|ehe|raw|mou|iha| ma|u t|tiw|ëri|rih|o t|noh|ë w| ih|ë i| pu| he|upr|puh| ai| ka|uhi|kup| pa|tao|peh|kam|për|kui|ë s|ui |pi |ã t|hã |aom| pe|i a|opë|uri|ã h|ao |hap| ur|ãhã|pën|pou|apo|wei|o k|opr| hu|ayo|ĩhĩ|aih|e t|yëk|hip| ko|top|ri |wãr|piy|iyë|eri|wãh| pi|ë m| ĩh|sho| wa|ã n|oho|you|kua|hei|ëhë|a p|hën|ith|ĩ t|hir|ata|uwë| ya|rio|ëam|u p|aha|her|pat|ëma| të|ipi|rao|kom|het|eti|rai|ipr|ari| rẽ|mop|tëh|nah|rẽ |par|ẽĩ |ho |shi|tam|ono|ram|ã k|hĩ |ëko|rëa|hot|iwe|the|rou|ota|rip|uwe|kuo|i y|aai| oh|i w|io |ira|apr|ena|uku|ki |aiw|usu|pop|aro|nos|ouw|i s|hai|kou|a h| ay|sha|tae|uaa|a k| en|ãrĩ|i n|e k|suk| kõ|u h|ii |opo|e h|imo|pro|ë u|ëyë|ë a|ope|o w|ihã|ti |aya|i m|ewë|wã |u k|ihe| us|mak| mi|him|kuw|wẽĩ| wë|wëy|o p|weh|osi|oni|owẽ|now| a |ëi |ãno|a a| e |yai|hãn|o r|ã w|i ĩ| su|eo |aeo|mih|pon|a u|ano|i e|o m|pëm|rew|uo |aki|har|ë o|ẽ t|e u|o ã|rii|uam|mam|owë|rea|ro |hĩr|suw|ta |opi|way|iap|ore|i u',qxu:'nch|chi|his| ka|anc|spa|pas|aq |as |una|ana|apa|man|lla|paq|is |nan|cha|kun|kan|na |a k|isp|ta | ma|ech|an | de|aku|ere|rec|cho|der| ll|ina|hon|pa |onc|sqa|wan|hin|mi |qa |nap|ach| ch|asp|ay |taq|chu|aqt|hay| ru|ipa| hi|inc|hu |pan|awa|nak|tin|asq|i d|qta|kaq|all|was|s k|pip|ata| ya|qan|lap|in |anm|kus|s m|ima|ama|anp|nta|q k| ni| pi|npa|a r|run|a m|nas|a a|pi |nmi|tap|k a|sta|lan|sku|isk|yta|ant|yan|n k| qa| hu|ayt|ari|yoq|may| wa|n h|aqm|uwa|ank|qti|q m|a l|sma|ism|laq| ha| im|qmi|nin|un |swa|sun|ma |nat|ita|ruw|q h|kay|ist|a c|s l|lli|nit|ati|ara|lin|la |ayn|kas|ion| al| sa|aci| es|asw|cio|mun|a h|s h|nk |a y|s q|oq |s a|usp| at|a q| mu| qe|est|isq|uya|y d|nku|i k|y l|aqa|has| ay|s y|a p|kuy|q a|sar|ku | pa|yac|api|ypi|yni|n l|nac| am|qpa|ayp| le|nma|a s|n p|qsi|ley|nis|u n|nqa| na|huk|qni|kaw|s w|usu|haw|iku|ayq|n r|naq|s i|kam| ta|asu|uch|iwa|aws|ich| re|asi|wsa|anq|a n|say|ayk|pal|unc|q d|s p|n m|tiy|ien|hat|q p|pak|n c| tu|s r|sin|yku|ayo|qaw|s n|dio|a d|npi|qll|aqp|uni| ku|ey |nay|iya|n d|tan| ju| ca|hap|ios|a i|yay|mar|rim|par|eqs|han|q l| as| yu|y h|asa|u c|yqe|ado|mac|per|qen| ri|qar|req|q c|awk|s e|u l|amp|war|s c|tad|arm|sis|n y|rmi|q w|uez| ap|jue|ñun|uñu|huñ|qec|udi',pau:' a |el | ra|ra | ch|ngi| ng| el| ma|cha|l m| l |l a|had|ad |ech|eng| me|ma |ii |gii|ir |lem| be|i a|kl |lle|che|ar | ll|nga|mel|mo |a l|l e|a b|eme|tir| kl|a n|a k|gar|l l| di|l r|a u|ul |rng|okl|a c|mal|d a|ng |ek |hel|l c|arn| mo|er | er|il |bel|mok|k l| ar|elt|men|al |nge|elu|lel|lti|bek|ele|mek|ak |lec|ch |eke|ome|chu|kle|k a|lt | om|ema| ti|dia|iak|r b|bec|r a|edm|ung|uch|d e|r r|o m|rre|uul|ale|l n|ebe|mer|i m|a i|alt|a m|l k|r e|lmo|r n|a o|a r| te|l d| en|dmo| se|i e|cho|a d|tel|ilm|ai | il|b e| lo| e |rek|ker|ang|ub | ul|k e| uc|hub|l t|r c|ruu|aik|eru|l o|ll |luu|r t| un|isi|uu |ngm|a t|ekl|ach|u a|len|osi|it |ei |del|hul|gil|r m|a s|l b|t e|irr| al|kel|h r|seb| am| ro|kng|era|ked|lac|lse| le|ged|sis|rar|dir| de|i r|d m| bu|dec|lou|gmo|ika|git|rir|ull|amo|u m|rel|kla|uld|d l|ode|r l|l u|tia|sel|ngu|t r|gul| bl|ou | re|e d| ur|dil|iil|ise|kir|d r|lek|chi|t m|iu |g m|muk|ube|uai|klo|oi |kli|ed | ea|lte|eli|ren|ike|gal|ngd|gdi|rog|ogu|gui|ui |t l|bua|siu|o s|els|i l|ire|reo|alk|lk |lul|leb|eri|hos|or |edu|dim|kal|mor|akl|u e|ais| ai|e m|urr|ol |ude| ki|l s|id |als|ell|ios|dio|o c|bai|lir|h e|sec|ole| ke|dme|olt|den| kn|bed|eor|ial|goi|lal|ego|u l| lu|ukl|lun|ekn|lde|ble|lew',shp:' ja|qui|i j|hue|on |ui |iqu| iq|bi |ahu|que|jah|a j|n j|ra |i i|ti |hon|sho|ash|jat|ain|ues| hu|ati|ama|sca|an | jo|uet|nan|oni|esc|ato|in |bo |a i|nbi|jon|aqu|ino|uin|tsa|jai|ets|shi|sh |con|ja |ma |ana|bir| qu|ira|abi|ina|tia|equ|ian|noa|ima| sh|est|can|ueq|res|hin|onb| yo| ic|to |ora|ibi|sti|mab|nsh|iti|oas|ibo|aca|a a|jac|tim|aco|nti|n a|cam|n i|non|équ|hué|uéq|ai |uen|na |abo|aon|en | ac| ma|ish|bao|asc|rib|atí|ton|i h|jas|o j|eti|h j|i a|n s| be|ant|sa |yoi|mai|ona|nin|nma|sab|nib| co|osh|mat| at|ica|ni | es|ene| on|ara| is|apo|tíb|caa|es |ins| ap|o a|tio|a h|onm| in|nra|ior|ire|iri|íbi|iai|rab| te|s h|o i| aq|car|cá |are|cat|n y|pon|anc|i c|oia|mas|tir|icá|i s| ts|i q|yam|iba| it|ico|n h|ari|oa |nha|sen|era| se|sha|anr|man|ena|een|nen|aba|nca|tan|nqu| na|uee| no|maa|i n|ran|ca |n q|cos|n b|bor|cas|nco|a m|esé|tso|jan|onr|aya|tí |i y|ata|eta|ait|bia|aas|enb|anb| ra|o b| ca|ben|ich|a s|h h| ar|n m|inc| me|cai|ano|a q| ba|tee|i t|cop|as |í j|mea|joi|ans|inb|hib|acá|ebo|nai| as|bet|iam|int|aat|n e|nat|scá| bi|nbo|baq|n c|son|hui|anq|uir|a b|sé |oma|í i|enh|tas|a n|nri|n r|ya |oi | ia| am|uer|ema|i m|she|a t|ric| h |oqu|maq|ia |uis|opí| ho|nya|par|nos|bí |ea |ten|rat|uib|inm|ue ',gug:'ha | ha|ere|a o|pe |vo |ich|ko |va |ra |rek|cha|râ | de|ech|eko|cho|der|ogu|rec|gua|ho | og|gue| ma|uer|e h|agu|a h|may|e o|o d|ete|aym| he| pe| te| oi|te |o h|o o|yma| oj| oñ|ma |hag|uér|e m|erâ|éra|a´e|mba|ua |oje|oñe| re|ve |i o|kué|a e| yv|etâ|a i|upe|a y| av| va|óra|oik| ku|por|gui|pet|re |a t|ión|pór|ave|nte|ypó|yvy| nd|a m|ñem|e i|kat|iko|vyp| om|hup| je|a r|vei|ad |emb|jep|ekó|ava|ika| mb|upi|apo| ic|ui |mbi|a a|´er|óvo|va´|épe|chu|o p|ehe|end|kóv| té|tér|érâ|ipo|áic|omb|tet|ei |o i|a k|nda| ko|ñan|ta |ter|ón |ávo|e p|aci|ció|are|ba´|â o|egu| op|mbo| up|rup|ive|het|ora|dad|a j|e a|vav|po |gar|pa |hes|áva|teî|emo|bia|yre|nde|ara|tâ |amb|jeh|ese|se |a l|api|ang|aik|ngu|nga|atú|tel|apy|kua|pic|and|hái|e t|e n|ba |iap|pyr|ite|â h|opy| ñe|avo|de |orâ| ta|rav|atu|ndo|oci|cie|soc|ert|éi |apó| so|ond|ait|ndi|tap|´e |epo| ru| oh|tem| ik|pi |o a|i h|i t|epe|eve|avé|ied|eda|a p| há|eic|dai|epy|gué|pyt|óva|ida| ja|ue |ape|o k|a n|e v| er| lé| iñ| um|umi|mi | li|lib|o t|ibe|ber|div|rta|tad|men| ip|o v|léi|uaa|guá|o m|nid|´yr|eña|ñeñ|eli|al |e k|kov|da |â t|a u|éva|ime|ant|u h|îch|cla|túi|imb|úi | im| oî|ha´|tu |e j| na|me |évo|opa|vai|py |ide| id|ers|lig|âi |a c|kot|ote|tev|per|póv|vag',mzi:' ng|nga|a n|tse|jin|ga |a k| ts|ngo|se | ko|xi |n n| ku|kui|in | xi|en |ndi| xu|e n|tji|jo |jua|o n|uta|kju|xut|a t|nda| kj|ta |i n| ta|ind|ojo| tj|a x| nd|i k|n k|ots|ie |e x|ko |e k|i t|goj|n t|ama|n x|’a |on |i x|ua |sie|ui |ni |o t|jen| ka|e t| na|ee |kji|ma |tsi|yij|kot|ije| xk|chj|een|sen|je |ats|die|ya |xki|and|ngi|da |ini|a s|ixi|nkj|iee|ink|ian|ang|iya|din|o x|go | ni|kam|ani|see|uin|nix|gan|an |xko| ch|axk|gay|t’a|aji| ma|ayi|jot|kiy|o k|kon|ia |eng|gat|eje|tsa|na |iko|y’a| se|nia|nan|kue|sia| sk|jmi|nax|ndo| ki|dse|min|ay’| yi|nds|tax|cha|un | si|do |xin|itj|axi|jni|koj|atj|ien| ba| jm|tan|ii | en|hje|xti|tay| ti|a c|ach|aki|jun|aa |gi |gon|kja| mi|maj|end|i m|ki |ti |mat|ikj|kat|a m|jii|its|jon|ond|xuj|sko|akj|osi|kos|ich|a j|ijo|o j|ánd|ima|nt’|kit| nt|uju|áa |iná|tik|son|daj|e s|kok|i s|ijn|nán|uak|jit|iti|xch|enx|iji|jia|sku|hji|taj|han|i e|dik|sob|kie|bat|ona| xt|tin|tja|sej|nri|ue |it’|iá |jan| ji|oji|be |oko|ri |okj|int|sik|xo |tas|nji|anj|xit|mac|tjo|nxi|eji|niá|mej|ata|eni|n j|jee|inr|isi|ajo|xim|chi| ja|nch|ín |tok|n s|jam|ask|i b|ati|njo| je|año|ton|dak|ena|gin|uee|n y|á k|mi |inx|oni|obá|a’a|jaa| xc|i i| ij|báa|e m|cho|i j|a b|hjí|óo |abe|tso|gas| me|sex|inc',mic:'ta’| we| ta|a’n|it |’n | ki| te|kis|n t|aqq|qq | aq|tel|aqa|en |sit|’ta|qan|taq|wen|koq|o’t|n w|na |ik |msi| ko|asi|mit|waj|oqw|t w|qwa|isn| ms|sna|jo’|ajo|te’| ma|isi|an |wej|n k|sik|eli|eke|ejk|jku|ij |in |k k|a’t| ke|li |si |jit|t k|’aq|n a|sut|q t|sin|tij|tas|aqm|lsu|e’w|n m|ite|tek|’k |qmi| wj|wji|k m| al|ksi| mi|ke’|e’t|a k| el|i a|k t|luk|k w|nik|maw|als|k a|ew |la’|ele|new|maj|q w|wa’|iji|ika|nn |ey |uks|ult|lam| ne|’ti|inu|’wa| na|oqo|uk |kul|’l |t t|ann|lek| wi|ita|kl |mim|ima|wla| tl|aju|ukw|na’|tuk|j k|lti|u’k|uti|’te|uta|asu|a’k|muk|e’k|nu’|j a|ul’|t m|tl |i’l|j t|tla|la |a’s|sij|ikt|’ki|kwa|l’a|tet|ku’|o’m|ami|l w|tmu|tew|i k|n p|ela|q k|kwe|jik|aq |’mi|kin|q a|qam|mk |ki’|ket|ett|ewt|ank|wik|awi|amu|i’k|l m| ap|mi |tli|ama|ewe|min|l k|ek |’tm|’si|k n| wl|i’t|a m|qoe|ala|ktu|mu |a t|i t|jiw|’tu|e’l|ikn|kas|tt |q m|uku|u’a|n n|uj |i e|etl|wte|’ka| pa|pas|iw |ej |ti’|ma’|mi’|usu|ina| mu|lo’|l a|a w|nuk|sum|man|kew|a’m| ik|j m|wij|imk|puk|tik|lnu|kat|oey|wes|utm|sul|kej|u k|t e|e’s|pla|j w|io’|ati|lte|sus|l t|ani|ikl| kw|mas|nut|ui’|wio|kut|a’ | wu|esk| et|a’l|muj|w t|a n|lit|uaq|we’|tma|q n|tu’|kwi|nmu| sa|etu|i m|kun|lap|itk|aj |a’q|t a|poq|’lm|las|ula|mut|mal| nu|apo',haw:'ka | ka|na | i |e k|ana|ke |a i|a m|i k|a h|o k|nā | ho| nā| ke| a |ho’|a a| ‘a| ma| o |ia |a k|a ‘| me|o’o|a n|aka| ‘i|le | no|nak|me |no |ua | e |au | kā|‘an|a o|‘ia|kān| ‘o|ai |ma |i n|e ‘|ono|apa|oa |āna| po|ā k|ole| ua|a p|pau|pon|e a| ap|i ‘|’i |aup|ona|la |ike|uni|e n|ni |noa|han| au|upu|pun| kū|kan|u k|a l|o ‘|’ok| ko|ale| pa|i h|‘ol| ha|’a |oho|a’a|o’i|noh|o n|o a|a u|i a|a e|e h|wai|ho |ā p|a w|ui |ila| ku|kau| wa| he| kī|kīv|a’o|ahi|e m|aha|vil|īvi|pal|lik|ā a|i m|kah| lo|’ol|kon|lu |na’|hi |lo |oko|ha | ai| kē| hō|hō’|oha|mal|ina|ao |i i|ala|a’e|hui|i e|u ‘|’e |u l| lā|umu|ano|man|pa’|’ik|ō’i|ea |‘a’|ko’|i o| lu|’o |e i|u a|ēia| li|mea|kēi|o’a|eka|e e|una|i u|i p|āwa|oka| hu|he |loa|’om|kum|a’i|kū’|e p|’on|mu |leh|ehu|’op|lā |nāw|ānā| la|’au|oma|kūl|ku |lel|ule|mak|alu|ae |aku|lun|ā m|ena|ulu|aua|opo|āin| a’|ili|li |o m| mā|kua|o i|ū’o|ele|olo|lek|i’i|ā l| le|‘o |oia|uhi|wal|ola|hon|lan| ‘ē|‘ē |wā |law| wā|uao|kai|wa |o l|ē a|ne |iki|kul|ika|u o|u i| ak| pi|alo|mai|ā h|’oh|o o|āko|ino|iāu|opa|kō |hol|ōle| an|elo|ewa|awe|u m| ‘ō|ūla|aiā|āul|ka’| al|kal|ki |ū ‘|e u| ‘ā|hik|iai|pū |nui|‘oh|ama| pū| ne|‘oi|ela|ahu|wah|pil|i l|mau| mu|‘ōl|e o|mua|hu |kae|luh|hal|lai|ā i|ko ',yap:' ng| ni| ma|ni |nge|n n|ge |en | e |ne |nga|ii |e g| fa| ko|idi|gid| gi|dii|ko |bin|in |ay |att|ttʼ|mat| ro| ba|tʼa|ʼaw|och|an |awe|wen|gub| na|ubi|e m|ara| gu|am |i n|ra |ine|i m|n e|cha|y m|g n|el |bay|aa | ta|ng |kʼ |aba|mab|boc|ngi|on |okʼ|rok| ar|e n| mo|ang|e t|chi| ga|nam| u |eg |ogo|ane|y n|i g|i b| ya|uf |rog| da|e p|iye|l n|gin|fan|iy |lan|gon|ag |a n|n b|d n|puf|re |reb|mot|oto|e b|n k| pi|e k| be|bee|w n|aw | ch|toc|han| la|are| bo|ga |ee |nib|uw |l k|o n|ach|che|m n|yan|il | bi|ab |n m|ey |ch |ʼ n|apa| pu|hiy|mar|ad | re|e a| ti| ka|gak|yel|gaa|i k|tin|len|ban|baa|dab|wel|ba | i |obo|un | ku|lob|rwe|ayu| zi|haa|arw|kan|ina|age|riy|mak|ed |olo|far|i y|gar|n g|b n|zil|owa|akʼ|tay| ol|o f|f r|yal|yuw|liy| ay|iti|lʼ |ing| mi|ma |aku|ney| ne|m r|ali|a m|now|u l|a b|ung|ig |paa|aen|a f|nag|fac| ke|ada|kub|ita| ri|e r| pa|ar |a i|gan|gen|e f|ano|man| me|ir |ebo|bo |ani|ʼe |e c|aar|pin|i d|a g|a p| yo|ite|fel|nit|ow | ra|e y|tir|ʼ g|l m|anʼ|y e|fa |abi|iya|kʼe|i o|g m|ere|r n| un|taa|ama|eng|aga|ile| fi|naw|ail|fai|a t|wae|tal|ted|eb |ili|lun|ram|mad|taf| ge|mod| yu|ul |gi |bap|nin|gay|ulu|hig|elʼ|ati|iba| am|n f|g f|kul|a e| er|nʼe|o g|uni|i t|mit|al |w m|heg|ke |g k|a r|ene',ame:' ñe|et |ene|a a|ñeñ|eñt|ch |net|all|en | ye| am|uen|t ̃|ech| po|hue|pa |ama| at|ohu| al|err|a t|e ñ|che|ha |ma |ñt | ña|̃a |ach|yen|am̃|ra |rra|ñam| ch| ̃ |po |a y|ena| pa|m̃a|llo| e |a ñ| co|a e|t ñ|ere|ñe |esh|att|tt̃| de|na |rec|t a|cho|heñ|der|ret|n a|eñe| t |ñt̃|t̃e|sha|cha|c̈h|arr| o |loh| ac|tet|are|ate|ñer|o c|nes|och|ets|a m|̃ a|coh|et̃|t̃o|t e|ten| añ|ats|o a|tse|añ |o ñ|ñet|o p|a p| m |tar| ts| er|ro |pat| ec| es|hen|ane|mue|rr |h e|oct|eñ |sa |t p|ho |h a|os |̃oc|t̃ |ñen|poc|s ñ|ent|a c| ar|e a| ta|epa|e p|mac|hos|r p|ese|apa|ata|s a|ota|tsr|sro|sen|tat| eñ|rro|lle|tye|̃ch|te |pue|tsa|o o|ey |nen|tan|cte|t̃a|cma|h c|e c|eño| na|̃pa|yes|ñec|eña| yo|o t|o m|ñ ñ|es |er |ot̃|t̃p| or|a n|to |orr|e t|n y|hye|chy|yec|pon|set|no |t d|ame|ñot|h y|lpo|mpo|oc̈|eto| an|she|ye |ts |t̃c|nac|teñ|t̃t|ña |llp|ñal|par| mu|̈ha|ete|ote|ana| ma|cop|ñ a|ahu| en|uel|op |̃ec|ell|y a|nta|ora|añe|̃te|mar|ñ d|hua|aru|rua|on |uas|as |n ñ|uer|ne | pe|tañ|rrt|tso|e o| ya|nte|ecm|n p|ec̈|emp|̃e |̃ar|pot|uet|m e|ant| pu|rta|nan|̃ p| ño|ñ p|rre|ar |yeñ|que|ann|tpa|̃ey|ta |n d|asa| t̃| te|pen|n e|eno|p̃a|het|yey|an |r e|cot|ida|le | ne|o e|ñap|loc|ñoc|ney|r ñ|̃o |ay |one|a o|ses|̃ c|aye| ̃a|ll |yep|tep',cbt:'ya |huë|hua|a n| hu| ya|a h|ina|na |so | ni|chi|uër| no|hin|pi |uë | co|aso|quë|rin| na|a i|aca|ëri|ach|api|ua |o y| in|in |cas|poa| sa|ahu|opi|ohu|co |npo|noy|oya|ëhu|a c|ipi|a y|an | pi|nan|a a|inp| ma| pa|sha|ta | a |ana|nap|ha |no | ip|a p|uac| an|nhu|arë|nin|inh|o n| qu|oa |mar|iya|yap|pin|ë n|tër|ëra|piy|uën|n n| të|pir|i p|iso|nto|o m|n a|nta|cat|toh|ant|sa |o s|nis|ran|tac|ata|ita|ish|rë |ma |ërë|ais|i n|ë c|pit|top|aqu|a s|ton|cai|rno|irn|o t|yon|cop|tëh|oro|ito|atë|ën |rëh|nën|ë a|uan|ont| to|sac|hui| ca|nac|a t|ani|nit|ro |ins|n q|i s|nqu|ato|apo|pac|on |ni | sh|ino|pah|i c|int|oas|iri|qui|n c|tah|ini|par|n i|ica|nch|ona|ihu|ënt|ëqu|noh|a q|n p|coi|nip| ch|ëca|anë|ënp|ënë|o p|ri |ama|tëq| am|inc|ari|i t|itë|a m|naq|ë p|oso|oin|shi|i y|ian|ë y|hi |uat|iyo|san|ra |soh|niy|n y|uir|onq|npa|pia|ntë|onp|cha| ta|nor|tin|o a|ain|nso|uëc| yo|nat|npi|i a|sor|nos|i i|cac|hac|oca|o i|pa | ac|nëh|pat|nti| pë|ima|apa|non|tot|hit|map|o c|uëm|tën|ota|nsh|ëma|art|rëc|rti|ti |ano|son|och| po|ara|aco|n h|o h|pop|ash| es|esc|scu|uar|aro|cue|uel|iin|uët|anp|poc|uah|roc|ori|pih|ira|i h|pën|ela|uëa|iqu| im|ëa |a e|ëin|asa|ëtë|uëi|uai|uic|uas|rës|nah|ayo|n s|ca |uay|nas|ëch|ë t|nic|isë|ois|ipa',gyr:'ra |atu| av|kat|ko |eko|tu |rek|kwa|ava|ae |mbo|ei |se |va |a o| va| oi|ave| mb|ar |aka| op|e o| nd|opa|vei|pak|ira| ya|oik| gw|u a|a a|amb|pe |iya|ekw|ua |vae|gwa| re|wa |chi|emb|bae|bua|mba| am|vir|a p|mbu| vi|i o|ika| te|ire|ese| ko| se|yai| pi|e a|sa |ri |e i|e y|a v|nga|i a|ve |ta |nda|pri|yur|a i| oy|gar| yu|ure|aër|ëi |vaë|ung|tek|nun|ndi|ai |ëra|boe|a y|nde|i v|bor|ora|oya|ete|and|a m|o o|koi|ota|a t|ere|ipe|inu| in|yan|te |e m|e r| ye|imb|o y|yem|pip|oro|diy| ru|era|a n| ch|res|mbi|gwe|yav|end|ara| ñe|e n|a g|rer| iy|wai|oi |e v|epi|tei|pi | o |i i|i n|ipo|o v|ite|upi|i k|e s|oye|ich|pot|upe|avi|de |was|okw|asu|o i| po|hir|oñe|ke |ach|rup|oet| im|aik|ase|sek|i s|ndo|tup|upr|hia|ikw|i y|a r|isa|apo|oim|po |ise| su|chu|eir|tëi|ia |o a|a s| ei| ip|pia|hup|ime|ñep|eta|e k| om|su |eis|war|emo|sui|tas|aer| ik|a k|er |iko|ita| os|ait|u o|rok|asa|o m|i t| ae|ose|rai|r a|e t|ore|por|kor|u v|pis|yap|wac|iro|par|mo |pëi| ke|ui |kua|a ñ|ipi|moñ| të|bim| ño|r r|no |ño |iap|omb|aei| ve|pir|ndu|rav|i p|aya|mon|o r|isi|epë|tui|oip|o k|u p|ya |apr|igw| ra|dae|ñet|sar|pit|uve|bot|tar|rop|r o|omo|eku|iki|roy|ako| ak|rep|are|i r|oit| ai|esa|umo|ipa|rum|vik|iet|sir|osa| oñ|yep|sep|ike|epe|opi',vep:'en | i |den|iže|ehe| va|ikt|ide|oik|an |ktu| oi| me|el | om|nda|tuz|da |he |om |use| ka|hiž|meh|z’ |uz’|val|end|l o| ü|le |aha| jo|tus|es |ele|iži|žel| te|ald|dan|̈ht|üh|e m|ahi|ude|kai|id |und| ra|m o|ali|gah|oid|as |jog|oga|ahv|oma| ku| mu|n k| ta|hel|ha | mi|kun|l m|hva|rah|vai|uda|toi|ed |ndu|liž|ai |n t|ta |kon|lda|tud|tad| ko| ol|iče|itu|dus|ada|vah|äne|iš |hth|aik|ei |išt|d i|hän| hä|n a|nen|thi| ei|ud | ni|n p| sa|sta|il |teg|n v|ita|n i|ija|mug|n o|a m|i s|ad |e t|žid|sel|n m|miš|a i|iše|oiž| to|pid|i v|uzi|al |i k|d o|tar|oit|e o|e i|še |voi|i o| ma|i t|d k|dam|nd |e k|tte|čen|arv| ho|a k|kes|seh| ke| pi|ze | el|amb|rvo| ne|žeh|mel|hte|jan|rad|mat|nik|a t|sen|i p| ič|idä|oli|len|ona|esk|zid|kud|ego|čče|ust|i m|iž |päi|ičč|uga|žen| si|old|usi|ope|ba |gen|d m| tä|arb|tes|ma |nec|äi |pen| su|eze|s i|des|and|dah|n u|ehi| ar|ne | us|miž|čez|tom|ami|iki|tam|ond|jas|cij|doi|gaž|ažo|on |žo |in |sid|elo|ihe|sa |eht|ahu|mai|biž|ugo|rbi|ine|el’|das|ldk|uta|abu|iba| ab|a u|hud|teh|ado|nan|mba|sko|ike| po| so|dku|n s|lit|aič|aht|goi|kan|ait|dud|s h|ara|aci|zoi|s t| pa|a e|a v|ske|što|ial|man|i h|itt|n j|aiž|a s|tah|eda|ho |oho| pä|ast|ile|ut | vo|e h|usk|n r|jou|dal|hen|i u|mus| op',cpu:'ri |tzi|ant|iri|ari|aye|tsi|ica|nta| ir|i i|atz|tya|yet|ca |zir|i o|ni |i a|aar|iro|a i|aca|ro |yaa|shi|ita|ait|can|yee|eta|car|tha|eri|aro|ero|zi |ric|ter|ash|oca|tai|eni| at|que|ya |nca|een| oc|i t|ats|te |ine|pay|pit|qui|mpi|eet|ira| te| ee|e i| in|ipa|aan|tac|amp| on|ñaa|cov|caa|si |inc|a o|ava|ara|apa|aqu|zim|tay| ca|ota|sic|ima|ova|tar|hin| ts|ori|ror|i j|a a|nty|ame|ntz|rir|ity|nam|vai|ata|tat|onc|cam|ite| ar|ron|nqu|aty|o i|eth|ne |mee|ta |ran|etz|hat| pa|eer|iya|i c|eva| ic|oni|taq|rat|ete|cat|ina| na|o o| ap|aac|jev|i e|tan|e o|its|rip|a t|aiy|pai| o |i n|i p|eej|air| ja|tav| im|par|mat|per|jat|e a|pas|ent|anq|nco|nte| iñ|aay|int|san|omp|nts|iña|eja|oña|ove|api|sir|ana|uer|ont|aco|aap|vac| je|ue |ety|har|ui |raa| an| os|uem|ith| om|tye|ema|yot|ma |ra |pin|ath|o t|hir|rin|ate|taa|hit|eca|vat|imo|tec|mpa|net|iyo|cha|maa|iqu|tem|ape|itz|pat|uin|ye |rot|ven|riy|imp|opa|osa| ma|emi|aav| is|a j|mit|var|inq|roc|uit|mpe|nat|era|a p|jan| ip|vay|vas|sip|poñ|o a| tz|ai |a e|roo|aas|aat|oco|ire|oye| op|osh|sin|aña|rov|rom|iye|equ|ha |ach|cai|aga|ave|hay|ani|ico|e e|ije|imi|cot|iry|gai|ish|tas| pi|oqu|o j| jo|mon|otz|ner|j a|a c|man|i m|e t|roñ|ote| aa|ini|sit|ain|iva|ane|ve | ij|ren',acu:'ain| ai| tu|ai |ina|tai| nu|nui|i t|ngk|sar|uit|ita|int|ash|nau|tur|ha |ar |inu|ura|tin|chi|sha|art|nts|a n|rti| ni|i a|iki|usa|u a|rin|gka|tsu|ka |a a|ker|ich| ma|ts |cha|au | pu|puj|sh |nun|mas|ang| wa|uju|tus|ras|awa|kia|suk| ch|uk |ra |eng|gke| pa|asa|nin|kan|in |kic|ni |pen| pe|ach|nu |jus|amt|hik|aya|tnu|atn|a t|ia |ch |aka|n p|r n|u n|h n|i n|ung|er |aun|uka|ti |iar|un |wak|kar|mta|ake|ish|r p| as|an |pac|wai|ji |a p| an|nti|h a|una| na| ta|s a|ari|nch|uri|eka|its|ara|ri |rar|tim|ram|kam|uwa|kat| ap|nam|nak| ne|nuw|nma|apu|war|aki|nek|anm|ern| ak| aa|aar|ata|k a|ya |may| me|k p|n a| aw|tak|tra|met|ete|tek|a m|pu |a c|arm|aji|run|nan|am |bie|ier|iru|rno|uni| go|ing|gob|mia|obi|r a|ush|era|isa|ek |sri|unt|aus| ir|ng |as |jai|ntr|i m|hit|ana|hti| yu|tan|s m|aik|auk|ust|uin|iin|no |uch|ami|mau|rka|ak |u t|sht|uja|hic|ais|kas|ait|umi| um|k n|rma| ya|ink|ama|tas|nia| ti|hat|tu |r m|tun|inc|na |r t|jui| ju|nuk|naw|nka| uc|iis| in|maa|a s|yai|wat|a i|wa |ats|waj|a j|eri|imi|s w|aan|sta|mat|uma|aja| su|amu|i w|pas|itj|ati|gki|k t|sun|n n|iri|ase|tka|ini|nay|yat|ham|a w|ju |tji|his|mi |e a|sa |akk|h m|i y|unc|atk|ant|kka| ji|mir|tsa|atr|ani|r w|se |mts|kii|u w|msa|i j| ts|mik|yum|nur',not:'que| ca|ra |gue|ati|nga|ani|ti |a i|igu| ir|isa|nin|ue |ina|sat|can|uen|nta|ais|ro |eng|ant|ca |tsi|te |nat|ing|ira|aca|aqu|iro|aig|i i| in|ora|iri|ara|ats|aro| ai|ata|car| or| pi|int|uer|aga|ri |sig|e c|mat|ga |gai|a p|i o|gan|tag| ma|taq|gom|ite|gui|ngo|asi|ta | te|a c|ong|i c| on|e o|guë|agu|ero|e a|ngu|a o| an| pa|e i|mi |i a|i p|oma|tai|ini|tim|ita|ni | qu|uë |ome|iqu|ima|oca|iti|nqu|nti|ui |a a|nar|anq|i m|sin|ten|ari|ica|emi|rir|eit|omi|mei|san|a t|o a|pai|sit|mit|rac|air|oba|bir|pin|imi|iga|qui| om|nia|ang|ota|gac|gar|o i|nts|tir|tin|uem| ar|oti|mag|obi|eri|egu|quë|eni| ba| it|ito|bas|rin|ran|iat|ate|o o|man|ma |rog|i t|isi| ic|pij|tis|roc|e p|tar|oco|ena|iba|a q| po|iji|pag|toc|cot|tac|equ|asa|nas|si |uir| oc|gas|rot| ob|roo|iac|pit|a b|ipa|o m|ëma| ig|ntë| sa| aq|ori|oot|rob|ane|bin|uëm|rom|ëri|anë|uit|águ|ë a|pic|got|ogo|tan|mar|e q|o p|ico| je|jem|gob|bac|caa|ne |nib|re |mis|ain|rai|ëgo|cag| im|ábi|oro|a s|i j|uim|cat|a j|bat|ngá|com|uër|gáb|oqu|bai|jeg|në |ë c|tëg|ria|cha|ogó|ai |ë i| co|agá|oto|ibo|era|ha |bag|mai|ija|are| ij|jan|tas|ror|ino|mip|ont|rit|a m|aat|ëqu|uëq|ëmi|rag|ote|uib|o c|ë o|oje|roj|jit| pá|pág|sai|ach|tsa|oga|a n|opa|igo|eta|ato|uet|es | ib|ueb|ait',sme:'vuo|ja |uoh| da| ja|aš | vu|at | le|lea|id |laš|hta|uoi|oig|iga|tvu|ta |a v|gat|atv|oht|as |ala|aid|ii |ea | ju|uoð|vvo| dá|a d|uvv|in |dah|ohk|oða|idd|juo|lmm|ddj|usa|dja|a o|it |ga |ot | ol|sa |hke|je |hje|ahj|čča|rid| ov| ma|s l|te |ačč|okt|a s| oa|iid|ear|fri| ga|a b|ovd|us |aht|t d|nna|htt| fr|a j|vnn|hus|alg|ola|eat|i d|aga|gal|mmo| ná|ge |e g| al|an | bu|ðai|de |vtt| su|uvn|et |i j|avu|vot| go|eal|go |áht|tta|čas|dan|eha|keh|buo|ahu|on |olm|lbm|all| si| bo|gga|t s|t o|dag|s j|vdd|lgg|sii|lág|von|t v|hač|stá|is |juv|stu| mi|arr|svu| ea|n j|mii|saš|vál|jav|ášš|e o|moš|n d|šuv| vá|náš| do|dda| se|oju|e d|ttu|kte|ála|š d|t j| ve|tus|ahk|bmo|i o|štu|ost|a m|ssá|ast|mi |ažž|lla|ovt|ása|hte|ái |oah| gu| ri|ššu| ii|mea|ut |uođ|tag|bea|kta|alm|nal|tas|švu| du|š v|lgá|t g|t l|mmá|tá |án |osi|ide|ass| so|gas|tii|bok| be|gá |d j|arg| lá|ága|rii|iel|a f|skk|uid| rá| ba|eam|kká|vea|hka|ða |oda|eah|s d|das|lač|žžu|dat|sis| má|mat|ain|alu|uot|ođa|uos|t m|áld| ie|tuv|mie|tti|kko|ami| di|n v| st|žut|doa|rra|lli|oaž|ssi|uol|a g|tto|iin|áss|dás|olb|lus|age|lit|dit| ok|sea|ann|uht|duo|ikk|hkk|bar|dus|odj|uod|š o|suo|ddi|sás|a n|ahp|š s|dea|n l|agu|oll|ke |d b|hti|akk|i b|má |add|dán|rvo|á m|n o',yad:'iy |tya|rva|ada|irv| ra| ri|vay|ay |arv|ra |cha|da |a j| sa|ara|yan|ya |ich|y r| ji|rir|amu|vat|a r|rvi| va|ijy|rya| ni| da|va |ati|uty|nij|a n|ari| ti|iry|y j|yad|var|ava|u n|tiy|aty|nva|rar|anv|jya|ata|a t|vic| ja|sar|ye |tit|ach|dye|ity|asa|aju|idy|dar|ami|ju |ant|nty|yu |ta |y v|tid|ary|a s|yat|a v|sam| mu|mu | vi| ne|jir|chi|anu|chu|u r|siy| ta|mus|a m|ram|usi|taj|nut|adi|ita|dat|tyu|mir|ani|ne |van|riy|u v|imy|nu |iva|vij|y n|uy | nu|ryi|uch|cad|a d|au |y s|uca| vu|ech|mut|had|ivy|yar|muy|y t|jar|nti|jau|era|jaa|tar|u j|hip|jmu|uma|y d|ma |myu|miy|uva|ipi|piy|i r|rve|jyu|has|e j|iqu|dam|viv|que|yi |ha |aya|e t|ti |oda| jn|e v|tja|yam|muc| j |mur|ñum|tav|e r|vad| ca|u d|daj|u t|ivi|imu|yuc|i j|vac|hu |jnu|asi|cho|niq|j i|ate|ura|tye|yiv|tyi|yas|i t|niy|u s|riv|yja| ju|ric|ran|umi|vur|yic|umu|mya|adu|aad|dañ| nr|sat|unu|yav|ter|di |tad|ijm|jad| yi|urv| jm|vut|har|rim|vyi|rat|vja|mun|dod|iya|añu|uya|e s|iyj|vam|omu|ije|i n|jas|nrv|int|uti|jva|dim|uej|enu|che| tu|uri|eta|eja|hir|ija|cat|rvj|jec|sav|a y|isi|yuv|aja|jav|vya|itj|eva|vec|yom|jiv|tim|yum| jv|eda| de|num|ude|jac|amy|tan|jub|sac|jit|div|riñ|hav|jam|jan|rye|ado|uba|yij|ni |upa|ida|vi |ade|ho |der|hod| mi|yev|uta|iñu|hut',ura:'in |cha|ha |uru| ne|ne |ain| ca| ra|aur|a c|ru | co|ach|iha|n n|a n|aai|ana| ni|aau|cac|aca|e c|ein|uhi|n c|ai | ch|nih|ina|haa|naa|na |eei| na|ich|ruh|coa|ane|rai|ojo|uha|caa|rau|nac|auh|ere|u n|iji|aa |joa|han|chu|ine|oha|e n|iin|nee|a r|i n|u c|hi |i c|oai|aen|aoj|hin|u r|cur|oco|i r| it|coc|te |uri|cai|eur|eeu|hae|coi|n i|a j|ata|hur|en |nan|nii| ja|aih| qu| ac| sa|hu |e a|aan|ena|ita| je|e r| cu| ic|ela|jer|a a|raa|ue |que| ai|ree|re |oin|oaa|ii |e j|cuh|nai|ito|tii|toh|ihu|ta | te|jia|ati|nen|hac|ucu|aoh|ara|cao|aun|cor|rij|eje|eri|taa|acu|joe|lan|aao|ato|era|hat|ric|nao| le|ecu|nu |ei |eca|lau|tan|can|oat|ner|nej|ri | er|rih|sat|jan|ero| ba|jie|a s|n r| ri|oro| la|u a|toj|oar|ier|rer|jau|ait|e s|ene|oto|tol|a t|ole|ler| ji|iri|ihe| es|hei|jaa|aon|rao|ate| at|aja|oee|i i|ra |hau|la |ini|aot|tee|jij|iei|n j|roa|jee|oec| go|gob| jo|a i|obi|bie|ern|i j|mii|n a|ona|hao|jel|qui|iic|rno|n t| be|taj|an |oae|lee|enr|nre|ami| am|aal|cau|saa|e l|ban|e e| en|ton|n e|ca | nu|oau|un |ala| re|ruc|i a| ru|e i|no |nat|ore|ren|eta| to|n q|nec|au |e t|i q|mih|nri|net|uuj| in|i b|i e|eni|rii|jii|una|tuc|n l|hun|oac|uju|oit|nij|och|itu|ete|anu|onr|i t|o n|aba|roe|nab|iao|ure|aje|u j|u i| ta|a e',cbu:'chi|pa |ari|a t|ots| va|pot| tp|tpo|ach|ina| ta|ni |ats|tar|ama|iya|tsi|van|ani|ri |ts |ich|ha |spa|ia | at|ya |a a|am |ara|tam|tsa|sta|nts|tsp|int|apa|ash|ana| ma|ini|tin|ati|ro |shi|a m|nar|ta |i a|i t|a v|hpa|chp|sha|aro|tst|rin|ita|sia|oro|a k|mam|ron| ka|ata| go|aya| ki|a i|hin|asi|sa |ch |tac|sin| pa|agt|tap|ano|gob|gts|nas| an| ch| as|hig|on | to|ago|cha|ish| na|obi|bie| za|sir|lli|ko | ya|niy|noa|igo|ria|ier| ic|ota|hiy|npa|pi |gor|vat|oa | is|och|iri|ato|pay|ayo|sh |rit|kin|nat|hir|ero|a g|pat|pch|s t|mag| ko|hid|o v|may| it|iat|tak|sar|rag|a n|ova|in |zad|ist|api|xar| yo| ts|nag|hia|inp|hil|ava| mi|oni|o t|tat|a p|ros|osh|a y|ir |pan|kor|mac|o a|adk|to |i k|ona| sh|r t|ako|na |kiy|is | tá|sho| pc|sht|i v|yan|rak|i p|tox|oxa|kam|asa|osi|ill|yot|azi| iy|nia|ora|iar|idi|a c|lin|s v|din|m z|aha|tay|i i|yam|azt|siy|zta| ap|hta|¿ta|hic|vaz|o i|kis|ad |yas| ¿t|got|rav|s i|iro|a s|nap|aka|yog|psh|dko|yá |yat|ima|iyá|yac|vap|rar|hto|maz|zin| vi|os | ku|kuk|iyo|vas|mis|kan|og |yar|aki|agi|cht|nic|ap |ayr|kas| da|yri|h a|nad|s k|anp|á k|pag|amo|opi|hon|tpa|tov|nta|pac|sam|riy| ar|m v|cho|all|da |go |nak|mon|m t|h t|ias|az |nay|kiz|va |man|asp|yop|yoc|rap| ll|kar|m p|n i|si |tár| iz',huu:'na |ena| na| ra|a n|ie |com|ill|mɨe|ana|a b|ɨe |nai|mo |ñen| bu|a i| ie|mɨn|omɨ|ɨnɨ| co|iñe|lla|uiñ|aim|rai|ia |a j|e r|bie|fue|a r|e i|afu|raf|imɨ|rui|aca|nɨ |a c|aɨ |ga |air|iru| il| bi|no |lle|can| ja|ona|nia| ji|len|e n|nag|de |caɨ|aga| ll|llo|nan|ɨ n|naɨ| du|uen|acɨ| is|soi|una|jɨa|bun|iso|e c|ue |bu |ɨna|ide|o n|ien|emo|ita|aɨr|ɨen|ɨra|ɨno|raɨ|ua | ca|o i|ɨaɨ|ɨca|a u|ail|amo|aɨc|ani|tai|mac|laɨ|ɨco| jɨ|lan|ano|re |a d|se | dɨ|iac|aɨm|ier|ern|oid|jai|ɨmo|obi|gob|jit|cɨ |rno| go|mon|iño| da|a f|o b|ima| ma| se| nɨ|cai|e f|e j|aia|aɨe|nɨe|oll|nua|o j|omo| fe|dui|la |e s|aɨj| ur|edɨ|ɨmɨ|ɨjɨ|fɨn|ere|nɨn| fɨ|e d|o d|ome|ño |ama|ɨ c|ɨma|maɨ|fui|ra | ui| fa|i i|uer|due|dɨ |idɨ|a l|oia|jir|ira|dɨm|ɨ b|cɨn|ai |ɨ j|aiñ|eiñ|fac|gam|amɨ|dɨc|a g|aid|tɨc|iad|fei|nam|ain| ia|otɨ|nom|uid|ñed|añe|ina| ua| it|jac|log|daj|ise|ɨ d|uil|ri |lot|iñu|ñua|sef|efu|oñe|ais|oga|ɨem|a ɨ|anu|uri|oi |tañ|ese| rɨ|o l|non|itɨ|ɨ r| si|uai|ɨ u|ɨ i|eni|ino|aɨn|mai|ɨga|e a|ata| ju|ɨño|sia|aje|e b|ɨru|aie|ado|a s|u j| an|dɨg|rɨñ|a o|mui|ca |bue|a m|ecɨ| jo|jam|lam|e g|aja|uem|rue|je |dɨe|dan|do |ɨes|ui |ɨnu|nin|nɨr|e u|uia|aac|e ɨ| ɨb|ɨba|uan|ega|cue|mec|dol|dɨn|bum|ɨne|eda|nɨm|sed|umo|ban|uru|tɨm|oni|bai|i d|ɨa ',cof:'sa |chi|hi |la |man|i t|a t| ma| to|ant|an |ka |nan|nta| ch|ti |to |no | ts|tsa|shi|ila| i | pa|oe |a c|jun|ala| ju|e t|ta |nsh| in| ya| ti| jo| sa|a m|nka|joe|ano|a i| se|hil| ta|e i|a k|a s|a j|e j|ke |le | ke|yan|nun|ena|era|ra |ira|uns| ki|aka|ino|i j|i m|ri |pan|ten|o p|iya|n j|e p|ya |jer|in | je|unk|ken|i p| te|ana|min|san|ae | mi|ari|n m|ach| pi|i s|o m|un |ral|jon|e s|ona|kir|chu|ank|ara|ans|se | mo|ola|a p|o s|de | la|nla|ran|n t|iti|e k|lar|i n| ka|hun|ode|pod| po|anl|n i|ile|piy|nle|laj|tan| na|e m|o t|lak|toe|bi |ajo|ele|are|ayi|pay|nke|ojo|noj|o k|i k| ne|rat|tar|ina|n p|nti|onu|o j|nol|na | so|lac|i y|ela| tu|pe |i i|sel|lae|son|anu|lon|e y|kan|en |on |ton|n k|eti|n s| bo|tit|ika|olo|mi |yal|til|bol|ato|a y| ku|nen|inl|ono|be |ake|kar|lab|re |enk|nal|mir|hik|jo |ech| sh|o n|ati|tak|o i| ja|niy|ent| ni| pe|nch|pa |nue|ue |a l|nte|abe|una|yil|unt|ike|ami|let|mo |ibi|yak|te |umi|tal|obi|nec| we|n n|n y|aya| il|wen|eno|eya|pil|uwa|sen|nto|i e|ura|uni|yar|tob|shu|ape|yap|mok|tae|o y|nar|inu|i b|a n|oka|nbi|ere|huw|abi|mun| me|mer|e l|ama| am|lel|kuw|atu| ko| do|iri|mon|bin|e a|o w|jan| a |lay|i c|tin|kac|wa |ine|omi|jom|uwe| wa|onl|lo |nat| o |i a|esa|ko |u t| er|yib|enc',boa:' ts| me|ne |jcy|e m| mé|íjc|e t|tsá|é m|cyá|né |meí|tsa| mú|re | pá|íty|ke |óne|tsí|sá |jts| mu|á m|hdu|eke|cya|mún|eíj|áme|mek|yur|yón|tyu|é t|uró|hdú|vyé|rón|iyó|iyá|mee|a m|áné|aat|ity|llé|é i|ré |ááb|jɨ́| té|eer|ere|pám| pa| íj|éhd|újɨ|ñúj|saa|á t|yá |yét|iñú|mép| im|pii|e p|e i|té |ivy|ane|dú | né|iiv| te|été|wáá|imí|me |óné|ri | aa|u m|ats|ma |í m|hjɨ|mí |urá|e í| á | ɨ́|jca|ñe |ki |yé |uhd|ɨ́ |épi|muh|i m|rá |ɨ́ɨ|náa|tsó|dur|cat|́ɨ́|muu|áiy|úná|ye | tú|i t|ú m|één|ímí|ene|mɨ́|téh|á p|úha|múh|é p|yái|méé|úna|a t|te |jɨ |du |éjt|ame|aa |ñé |uur|naa|véj|evé|ure|tyú| di|tye|iiñ|túk|vú |até|íñe|éme|éne|énú|mé |ú t|pañ|aam|úne|méi|mem|tsú|myé|kev|úré|néh|ábó|éév| ím|vye|hi |wák|ahd|ijc|ha |yáh|ɨ́j|pɨ́|jác|aan|úke|tso|jch|e á|íñé|áne|sɨ́|een|yán|éké| mɨ|ɨ́a|tsɨ|u t|tyé|mep|úiy|amú|soj|ɨ́á|imy|úné|dit|́am| iñ|yu |áa |ca |évé|́áá|aki|yak|á á|e n|eri|ávy|éhj|júú|óme|áhi|ate|a i|néé|vu |ááv|ehd|éiy|óít|étú|kim|ójc|pán|áki|ten|yéi|tu |íiy|́jt| wá|ewá|mew|ájc|amé|jyu|áll|úme|e a| ii|yam|ké |óiy|meɨ|íll|ú p|jty|ími| án|ju |ááj|dúr|́ne|síñ|róm|áts|sah|píí|é w|úhb|éít|tú | ií|ɨ́n|ner|úún|ává|a í|úvú| pi|yan|ehj|ácú|áré|vén|ííñ| ij|emé|i á|éém| pí|yát|tyá|méw|chí| wa|unú|añe|á i|ájá|ték|éré',ztu:'ny |a a| a |u u| un| bu|bu |nny|unn|ra | ra| ch|e e|ih | e |a p| pa| na|hr |e c| de|ahr|pah|y r|a b|ee |na |y n|te | te| i |ta |a t| ga|e i|ere| ta|ree|der|ch | ni|i i| p |ga |h r|nn |r g|chi| x |rih|ty | gu|a c|nih|que|h c| ty| ih|i t|ei |aa |x t|y b|ni |hnn|by | qu|uny|p d|oon|yoo|ony|cëh|h n|i c| ny| cy|cy |uei|ëhn| cë|e r| c |h p|y c|guu|syo|uun|zi | la|ihb|hby| o | zi| re|ru |ye |ihz|i n|a r|y g|asy|hih|re |a n| pr|iru|zy |hir|e b|taa|e n|n n|zh |a l| li|xi | xi|a s|hzy|y z| ri|ah |y x|lah|hzh| n |y l|h g|le |nye|rta|ar |aar|n r|i d|y q|loh|eh |y t|ida|pro|er |ca |y p|r r|ann| co|a d|r c|ert|h b|hu |a x|ber|ibe|lib|cla|ahz| u |chu|h x|y d|uh | ca|eer| rn|r y|za |daa|nni| s |nah| gy| ll|oh | ru|rnn|a z|la |yee|be | bl|nna|u r| di|aht| eh|yuh|lyu|dec| wb|wby|gax|ecl|gah|lar|bye| lo| sa|hah|ara| ze|ze |c t|ras| in|iny|i l|p b|rca|di |maa|dig|co | rc|lle|jee|o c|blo|y o|h y|yih|ly |i r|ii |hii| mn|ll | rr|i u|hi | st|h q|eje|z b|tej| an|ote|nas|hny|y s|cas|deh|o o|pri|h t|rot|aha|u g|iga| nn|nid|sa | z |tih| yn|r l|ohi|ruh|uhn| le|a i|ng |u n|rel| yb|aly|uni|eli|n s|gui| cr|rre|el |wee|cwe|hty| sc|as |aan| aa|i e| za|ica|a m|gaa|can|r d|aal|n d|mnn|lly|nnr|cri|se | al|tee|yon|ona',cbr:' ca|icë|in | un| ic|uni|ën |qui|ca |cën|ma |a a|uin|ama|cë |bi |n a| ai|n c|nan|ti |cam|ain|i i|un |n u|ni |a u|i u|i c|tsi|a i|sin|an |nu |iti|ana|ñu |sa |a c|bët|ima| bë| ñu|tim|nun| it|abi|xun|tan|ëts| si|ina|anu|u i|nti| cu|ra |oqu|si |inu|isa|í i|i a|ë u| an|ica|car|ara|ati| at| qu|tí |ia |ban|ncë| ui|ant|ani|a t| ta|n b| ba|nin| oq|rib|n s|a b| a | us|nic|ais|ibi|man|acë|mab|usa|ësa|ern|rno|ier|nën| go|gob|obi|bie| ra|aqu|ëma|cës| më|nia|i b| up|ixu|ocë|anc|una|u c|nqu|u a|iri|cëm|mai|uix|anq| ac|cuë|ënë| në|upí|ëtë|nët|bë |ish|ití|n ñ|i o|nbi|pí |na |ë a| aq|i r| im|ë i|tën|non| ap|ari|apu|int|ai |uëë|ëën|ins|onë|ënu|ëni|cua|mën|air|u m|ibë|anm|sai|a o|ce |cëx|uis|i n|ë b|n i|bit|a ñ|max|sh |its|pit|nmi|ë q|rab|upi| is|x c| ax|ami|ian| me|imo|ax |axu| bu|n m| ti| ub|mi |në |nio| bi|unb|sab|a g| pa|n x| am|xan| xa|rai|n ë|buc|ëx |uan|pun|n n| in|ë c|aca|a m|í o|i m|a q|sar|hi |ënc|n p|ëta|sam|ucu|shi|can|nix|a s|uia| ma|nac|i ñ|mëë|uir|mit|nma| ën|ric| nu|ui |n g|ucë|ice|xa |i s|añu|cup| së|u ñ| añ|nib|unu|sën|oi |cun|ix | ia|n t|rin|tis|oca|nán|axa|a e|n r|ëcë|n q|ë t|saq|nri|uní|ntí|mar|chi|cue|ubí| xu|ioc| en|xbi|mic| ch|cac|uic|iqu|sib|noc| oi|íoc| as| di|dio|ios|imë|h c',mcf:'qui| ch|mbo|id | ic|sh |tsi|uid|ash|amb|bo |o i|ëda|que|aid|bëd|ac | bë|ias|dam|ict|sia|bi |cts| ca|in |n c|on |ho | qu|uin|chu|hui|ec |c b|cho| ni|ida|chi|iqu|cac|o c|uts|sho| ut|ido| da|i c|nid|esh|cqu| ta|dai|abi|nqu|equ|ics|ues| ma|ën |csa|ats|boe|tse|ted| ab|mbi|edi|ses|mat|n n|ueq|h c|bit|n m|en |sam|ton|das|ite|di |dën|ada| ad| na|c i|dnu| cu|idë|iac|a c|es |bad|d a|tab|aba|pan| ai|h n|d d|tia|uiq|shu| pa|oqu|pad|dqu|o a|n a|nëd|un |anë|don|d n|apa|imb| at|h q|da |uen|hoq| mi|ibi|nu |sib|ato|ino|noë|ta |uio|hia|oës|na |ësh|una|din|ipa|tan|sin| iq|ono|oec|emb|ibo| is|uip|adn| ua|adq|idi|i n|dad|cue|ai |nun|dap|ant|do |c t|ade| në|a u|bon|u q|hun|nac|nec|n t|iai|no |enq|abo|c c|anu|cai|nue|bid|i a|nti|ic |nia|uec|n p|h a|men|c a| be|ado|nen| co|i m|i b|con|d u|d c|tsë|cui|dac|n i|io | sh|d i|pab| ne|shë|nëi|ëid|hit|ito|oen|ebi|sun|h p|mib| pi|aqu|o b|iuc|sëc|ocq|ëqu|hie|ucq|ish|n b| am|ies|n u|uai| nu|uqu|piu|inq|i q|iec|nan|nuq|enu|bed|d m| me|api|pim|iap|ui |cuë|te |acn|c m|cbi|h u|uia|s u|hën|ëcq|nai|adt|o n|ueb|hon|dot|uie|den|csh|d b|hid|ene|idt|n d| em|ane|uet|s a|ioc|ets| më|dec|i u|noa|esu|o y|acb|dob|pen|i t|iad|an |ecq|uib|dan|anq|c q|ota|nda|hub|ubu|osh|pi |icq|ed ',bis:'ng |ong|lon|em |an |blo| bl| ol|man|mo | mo| i |ol | lo|wan| he|hem| we| ma|n i|et |aet|en | wo|rae| ra|we |at | ga|gat|o w|oma| o |wom|i g| wa|n o|sem| ka|t b| ev|vri|evr|n m| fr|emi|sen| no|li |t r|m o|ing|mi | se|ri |kem|eke|m s|oli|g h|mba|i m|tin|e i| me|om |n b|amb| sa|tem|g m|m w| st|g s|ae |eis| ba|mek|ise| fa|iwa|g w|ala|i n|ia |la |riw| pr|bam|fal|g o| na|in |ave|bae|sav|i b|ve |no |fri|lem|asi|se |sta|fas|m b|e h|ti |i s|o f|sin|pro|ap |dom|ido|rid| ia|ed |a m|m m| ta|e o|m e| fo| in|o b|t l| pi|tek|afa|ote|o s|g k|aem|rom|n l|ta | ti|ipo|l r|e m|sae|ens|iti|i k|pol|a b|n w|tae|ara|ole|nar|raf|t m|tri| so|im |nte|i w|g t|aon|res|lse|ols|eta|m h|fol|l b|ntr|ni |sos| tr|ok |kao|gti|ngt|g f|l m|tap|ase|is |ili|wok|ont|ot | re|m f|um |eni|son|aot|a l| en|aso|g l|ete|fro|oa | de|kas| di|i p|nas|usu|gen|ere| pa|spe|pip|get|aed| te|a w|es | lu|o t|m n| la|age|ini| tu|sum|g n| ag|nse|ret|n p|ek |a i|wet|eve|esp|lae|ama|l s|g p|gud|m p|t w|g d|m t|i l|g b|jen|rei|m l|loa|m r|sol|o o|luk|kte|men|ef |aen|aef|pek|m i|are|ekt|n f|i t|o m| ri|ema|nei|int|rot|os |kae|ea |o i|lev|lit|d b|ten|kse|it |sip|oso|s b|o l|rit|eri| ko|lge|ik |i o|as |olg|nom|wol|ren|vel|n t|n s|n r|d l|ono|nol',csa:' ts| le|†̎ |ia | ki|jmo|kio|lej| ne|os |ou |ne | li|ej†|sou|oo |tso|sia|tsa|j†̎|io | ju|e k| ta|̎ t|le |a l|uu | jm|sa |kö |ii |t†̎| kö| t†| ni|mos| ku|o t| mu|u t|joo|ojo| ma|moj|asi|†̍ | mo|o l|mo |tas|ni |a t| e |ijm| si|i j|aka|mak|ios|o̱ |e t|kal|s t|muk|uku|kuu|i k|a m|u l|a n|o j|a k|juu|xii|lij|e j| ka|o n| ti|a j|ta |u k|s l|i l|alo|ö m|ua |e l| mi|nia|s k|li |s n|loo|a s|e m| re|ixi|re |lii|o s| jn|mix|na | so|so̱|sam|u n|i t|i m|chi| ch|a̱ |s m|ö n|o k| sa|äs | s |̎ j|nio| ij|̎ l|kua| i |au |jni|u e|aa |ito| la| í | ja|hit|jus|jmä|soo|e e|gï |ama|s i|̍ t| na|too|e s|a r| rü|ti |̎ k|jua|̱ t|j†̍|e i|ní | ej|ejm|̎ i|o m|ija|s j|isi|jï |lis|jau|ö j|ï k|ï j|̱ n|gu†|u†̍|̱ k| gï| in| ji|̱ l|uso|kaj|oo̱|kur|u s|̎ n| nü|mug| il| is|jna|mä |u i|nü |ugu|í t|a i|a†̍|nei| jï|s í|ini|u m|jij|ue |i s|la†|kuo| xi|aäs|tin| s†|e n| ek|̱ j|u j|s e|i n|ös |ma |jaa|ale|iní|kue|kia|jup|upi|üs | ik|ajm|m†̎|ala|la |a e|lit|it†| ï |o e|as |s r|rü |̍ l|só |o r|ií |í n|o i|kï |eki|ü l|ila|es |pií|moo|uo |í l|uré|jue|iso|ka | kï|lak|ei |ü n|̍ s|s†̍|ió | jo|s†̎|o̱o|̱o |i g|io̱|̍ j|ée |rée| el|ika|a ñ| ñi|ima|ï t|aa̱|̎ e|maj|†̍s|̍s |meï|ï l|usó|am†|ä̱ |ñü |ta̱|ñaa|laj|kaä|ü e|oös|lig|aj†|ü s|̱ i|ts ',cic:'at |ann|aka| ka|nna|ya |kat| na|kma|kan|chi|tta|att|nan| ch|t i|tak|a n| ha|hat|o̱ |a̱ |ish| is|mak|hoo|ook|ha |i k|aho|hi |ani| ni|nak|a c|ka |mat|alh|itt|akm|a a|ni |sa |ban|nah|sha|a i|cha|oot|yya|̱ i|okm|iba|a k|i b| it|̱ma|na |t n| mó|ka̱|mó̱|ika|ó̱m| bí|íyy|bíy|yi |ot |ho̱|yyi|haa|ana|isa|ak | yo|hpi|a o| sh|i y|a s|ano|niy|ki |ach|lhp|áyy|tok|oka| ik|a h|t a|iya|aat| ya|kya|naa|tti| ki|pis| ba|iho|oky| áy|hmi| im|baa|t h|api|hib|ma̱|koo|shi|ta |aal|lla|yok|̱ a|ima|yo | aa|hok|i h| al|cho|ako| ay| o̱|a b|oli|aap|nih|t á| ho|hol|hak| hi|̱ k|nok|sht|̱ n|ill|ihm|nik| at|ahm|li |aya|i n|iha|oko|sso|̱ h|lli|la |tto|yah|aak|okh|kha|ikb|ila|aff|ffa|mal|too|mi |pi |iss| an|moh|lis|k m|hik|pa | sa|ala|i s|hto|imm|oho|a m|t y|i c|law|t m|hih|haf|tih|ali|fil|okf|kfi|aha|t k|iyy|o i|ich|ppa|ko̱|mmo|tib|aac|amm|ánt|i i|nta|lik|ikc|so |aww|wwi|och|kch|aaf|yaa|kni|nch|aa |all|nal|sal|ksa|oks|him|kbi|̱ y|ayo|o h|o n|akn|hiy|mma|k y|pii|ksh|iis|nom|lhi|omp|íll|tíl|ttí|ato|ma |pil| i̱|ayy|no |̱na|̱ c|ikm|opp|oba|hín|yam|lal|yop|o k| ib| oo|mmi|yyo|wi |mpa|fok|kmo|sho|fa |iks|lak|mik|kak|afo|mah|tim|hma|ota|hán|man| ma|pac| ih| a̱|ith|oto|lht|imi| ap|ohm| ta|hch|bit|i̱l|hip|há̱|t t|kay|han| os',mcd:'in |an |fin|tir|iro|nan|qui|n n| yo|n a|on |uin|hua|fo |ara| na|ifo|ahu|ofo|ifi|ati|non|n y|cai|sha| fu|har|ato|ant| no|ain|ran|oqu|ai |nti|sca|tsa| sh|aif|huu|fut|n i|oan|sho|uts|to |ash|can|rof|ora|oma| at| ma|ma |hon| cu|n c|oin|inf|shu|tif| ah| ra|nfi|n m|aca|pai| is| hu| ni|yor| ic|ra |ono|nfo|iai|foq|foa|un |rom|yoi| ca|ish|yon|fof|uat|cus|rat| as|nia| ts|mai|o n|asc|afi|nca|fai|n f|rif|ica|ton|ano|iti|onf|cas|ama|roq|noc|ush|coi|ana|uun|san|cha|man|hu |unu|o i|o a|cah|n s|oti|o y|afo|n t|iqu|a f|tso|ari|anc|oco|nhu|i a|ina|a n|tan|anh|nif|ori|soa|ri |ani|usc|isi|no |cun|anf|apa|aqu|mat|i i|ino|maf|ian|ima|n r|inr|nra|raf|fot|ico|i y|ro |i n| ta|ito|si |o f|cat|o c|uua|a c|anr|uar|hin|ait| fi|n h| an|nri| ch|ata|fia| in|ui |afa|nqu|shi|ich|nfa|ti |api|o r|inq|i f|hac|i c|co | oi|uu |a i|tap|ofu| mi|iya|a s|ipa|sa |oia|a h|fun|acu|pim|han|hum|raq|uta|ans|rin|uaf|uan| ar|ua |yam|rac|cof|nta|ca |oit|n o|for|i t|aic| ai|o m|ami|yaf|ras|iri|uap|u a|u s|uas|a r|mis|i s|umu|nus| ya|anu|o t|nsh|nma|noa|aiy|a y| pa|sma|aiq|ia |ann|nor|ura|asm|asi|its|mit|uma|uti|nno|isc|ufo|u f|chi|a a|o s|a t|o p| iq| it|uai|ofi|mur| mu|not|min|ram|npa|nuf|uca|fom|uhu|sin|sac| un|tor| ac|inc|nun|nu ',amc:' ja|qui|n j|mun|jat|in |ato|uin|hqu|imu|tim|ui |can|on |to |un |unh|ati|nan|aha|o j|i j| cu|ama|jau|an |hin| yo|nhq|aqu|a j|vo |au |yam|nqu|anq|cuz|ina|uza|ova| qu|xon| sh|jah| hi|ton|hca|u c| jo|hnu|uih|uca|ohi|oni|yoh|tza|anp| ha|utu|pu |n n|nuc|npu|anh|jon|ica|cun|ja |nut|n h| nu|ano|nhc|shi|mah|hax|hai|aya| na|utz|xan|ovi| vu|non| tz|ihq|ahi|n c|ivo|amu|ara|vi |mat|vin|har|ax |n y|iyo|tzo|ovo|nhn|iri|niv|nov|u j|zov|yoo|uiy|iqu|o h|uni|n v|hi |unu|azi|raz|ono|riv|ivi|hir|hon|ha |acu| ho|uir|ona|haq|cat|o c|axo|zan|ani|sha|nuu|vut|jam|i n| co|uun|ric|chi|raa|aun|n q|noo|yov|zi |ira|tun|hap|ti | ra|nti|oha|a h|apo|han|n t|i v|i y|ann|vau|yon|nha|nin|nxo|i q|tzi| va|ihn|iha|inh|nya|va |naa|oxa|ixo|ni |aay|vac| vi|oma|oon|ana|aat|n s|oo | ca|vaa|tut|ait| ch|iro|ito|i h|i c|ohq|hit| ni|zat|van|rom| no|ima|tan|mam|nah|nic|avi|man|maq|ya |zti|za |nna|cov|oov|n d|nix|zah|onv|jaq|i t|oya|hox|oco|apa|coo|izt|atz|zin|aho|ant|u h|o y|iti|ca |o s|ini|ra |vih|ino|nvo|a n|cav|ori|hiq|pan|a c|rah|ich|uma|iya|caa|aah|oca|nno|viz|nmu| ju| mu|voh|a v|o v|o n|onh|ava| de|ham|i s|cho|ech|hih|nma|x n|ora|uya|os |itu|uno|hic|zqu|hav|axa|zax|noh|tiv|nih|sht|ish|tir|rec|ere|der|nri| j |jaa|ahq|u n|una',amr:'hua|dik|ik | hu| o̱|o̱ |da | di|a d| ne| no|ka |k o|̱ n| ke|ne |ken|nog|e̱ | ka| da|po |hue| e̱|a t|ti | ti|oe̱|̱ e|pa |dak|npa|yo |ya |enp|e k|ue |taj|aj |ayo| on|e d|pi |a n|poe|ere|ada|o h|a h|a k|iri|uai|air| ay|pak|nop|aya|opo|uad| o |a o|ara|but|ahu| po|o̱n|atb|rat|tbu|nig| ar|gda|o k|ogd|ak |i k|ri |on | ek| pa|o n|̱ d|i o| ma|o o|khu|a a|ate|eka|gob|end|e n|obi|rno|ern|ier| go| e |bie|nda|no | ko|e a|kat|ko̱|̱ni|akh|bay|nay| ta| ba|ut |mad|k k|e o| i̱|kdi|a p|epi|toe|ker| i |tep|ro | ja|a e|re |i p|i̱ |i n|k e|i e|oro|o e| to|uab|e̱p|e̱y|ee̱|̱y |k i|en | na|e e|kno| ku|uap|na |ea |apo|abo|̱ne|̱ k|nen|man| or|bok|i h|rek|te |nma|oke|e h|ado|og |doy|gti|oya|uea|e p|anm|pee|okd|mey|̱po|a i| ok|ihu| be|si |ig |pok|ika|okn|ta |o t|tih|akd|uak|t k|ont|api|uas|gba|a b|akp|ogb|a̱ |ogo|ke |o m|adi|e̱n|igt|nta|kud|ana|kpo|to̱|g a|nok|asi| mo|epo|y k| ap|kan|kah|baa|k m|jah|aka|nep|ati|ok |ba |̱me|ua |o a|dar|aa |uat|ent|ari|o̱m|ia |oka|e b|go̱|jak|ria|ena|kup|̱ o|i t|̱ h|ey | er|n k|ek |mo |uah|me | pe|akn|pop|aba|a m|n t| ea|n b|utt|tto|uda|ota|kik|kna| ni|ett| et|be |ay |ike|ato|eno|o p|̱pa|i a| ya|e g|i g|da̱|nba|eta|apa|akk|j p| ed|n p|nhu|onh|j d|opa|j t|tta|ehu|o d|gka|upo|rit',cot:'que|aqu|tsa|aji|aca|ca |oca|tsi|nca|ame|ets|cam|eet|mee| ir|nta|ue |i i|gue|sat|jia|a a|uet|int|qui|ica|iro| an|i a|e a|mpa|nqu|ji |ant|caj|onc|ata|iaq|taq|j i|e o|ari|ats| in|uer|ate|ri | oc|ti |pae| ca| te| on|emp|eti|uem|tee|ae |shi|aj |a i|its|san|te |ee |agu|ro |eji|can|ani|taj|sa |e i| ma|tej|nts|tac|cat|eta|isa|anq|iri|ita|ati|ero|caa|iqu| ai| aa|sip|aas|iac|pa |eri|ipa|ais|apa|eca|nte|maj|hoo|caq|cho|ooc|inc|o a|anc|asa|no | it|igu|a o|ash|aat|ira|maa|ano|aco|ama|nin|par|aja|tan| ia|ato|uin|uea|i o|ui |gui|a c|i t|sic|equ| ar|ava|si |epa|jir|a t| qu|ogu|tim|ent|uej| am|pap|ron|ota|uec|cac|tat|nch|uit|ima|aro|avi|uen|ite|o c| ag|e t|e c|inq|ont|imp|jit|iji|opa|ine|i c|aaj|vac| i |saj|ane|ion|nti|a m|to |eje|iat|cag|roc|ric|tic|rog|tio| ac|hin|eat|cot|paj|ej |tep|ara|tas|gar|api|egu|jaj|jig|iga|ana|i m|jet|rig|ish|ram|ija|eja|jan|nij|ea |aac|hit| co|tar| ch|tap| at|niq|oqu|vin|aav|cav|ini|man|nea|siq|oro| ic|amp|tag|ove| ta|o i|mat|nor|gon|nej|ono|coj|jaq|men|o o|taa|rop|sim|rot|tav|oji|j a|ran|pat|coa|uep|enq|ueq|iti|oni| pi|ago|are|ria|ime|ote|ave|i q|saq|uis|nec|ueg|jai| as| ya|ten|pit|naj|pan|veg| sh|ra |o t|ij |nco|ega|rov|sam|car|rim|mpe| ti|ots|a q|hij| ot|nit|e m|tem',ajg:'wo | a |yi |o a|mɛ |gbe|amɛ| yi| wo|le | ɖo| le|ɖo | nɔ|nɔ |o e| ko| am|ɖe | ɖe|be | ci|ɔ a|e e| sɔ|ɔ e|do | gb|e a|ɖek|okp|wi |tɔ | en| ej|kpɔ|eju| eg|i a|ɛ a| kp|kpo| ny|egb|a n|ɔ w|eyi|o ɖ| ey|agb|sɔ |nyi|a s|pwi|ɔwo|kpw|e ɖ| al|enu| ɔ |pok|ekp|cɛ | ag|nu |etɔ|bet|ko |acɛ| ac|lo |an |o n|ci | vo|ɔ n|i ɖ|i y|nyɔ|u a|i w|odo| es| wa|ji |alo|i n|wa |pɔ |i e|kod|ɔn | do|ese|to |iwo|ɛɖe|mɛɖ|se |ciw|yɔ | mɛ|nya|ju |i l|ɛ k| ŋu|o k|a g|sɛn|e n|ŋu | lɔ| ji|awa|o y|e k|ɛ n|tɔw|lɔ | e |na |a k|umɛ|n a|vo |eŋu|a ɖ|de | de|kpl|ukɔ|ɔ c|ple|ovo|uwo|i d|vov|omɛ| ed|ɛ e|ɔ ɖ|edɔ| nɛ|eka|waw|nɛn|ɛnɛ|ɔ l|i k|ɔnɔ|nɔn|ɔkp|ɛ y|o v|kpa|ɛ l|a y|ya |n e|ɔ d|sɔs| ka|dɔn| nu|o l| sɛ| na|ɛn |ŋuk|shi|o w|gbɔ|ɔ g|o j|u l|a w|eny|eɖe|hwe|lan|i s|gan| to| be|ɔwa|wɛ |e s|ɔmɛ|wan|a v|a e|gbɛ| su|o g|e l|ɔnw| je|gba|o s|a l|ɔ k| dr|ni |kɔn|vi | ni| go|e w| hw|pɔk|a d|vok|ɛ c|nwo|alɔ|we |o d|u ɖ|a t|nsɛ|in |ɛwo|bu |i c| cɛ|uɖe|ɛ ɔ|iyi|iny|o p|ana|gom|bes|e h|swɛ|a a|yɔn|e g|jum|uku|u c|any|ka |ɖeɖ|u n|fan| ak|nuw|ɛbu|juk|a x| xo|pla|xwe|ɔɖe|kan|i j|e c|mɛb|hi |ɔnu|uny|e d|je |ubu|ɔbɔ|wen|bɔb|awo|o ɔ|mɛn|n c| xɔ|dɔw|i t|atɔ|e y| dɔ|n k|so |akp|esw|dɔ |leŋ| pl|yin|ega|usu|owo|ɔ y|lɔw|iɖe|bɔ | et|ann|só |nmɛ|ɔ t|ɔsó',arl:' na|a n|iya|ani|ini|a p|na |aja|pue|ia |a m|ra |ya | ma|naa| pu|qui|ish|aa | pa|ara|aar|cua|nu |uey|shi|eya|ari|a s| ta|a c|ano|nia|a t|a j| ji|no |yan|ana| qu|ja | ni|aca|ria|iis|jiy|nii|niu|aji| ca|sha|hiy| se|ta |ata| cu|ri |onu|iti|aaj|a q|maj|nin|u p|jaa|uet|san|pa |tam|iji|uaa| mi|jan|ni |hua|que|unu|mii|man|niy|pan|car|ua |jin|uaj|etu|tun|aat|i p|yaj|uhu|esa|ojo|iri|equ|tia|can|uin|ocu|seq|mon|amo|i n|saa|juh|tio|mar|asa|o n|nis| ja|iur|ioj|han|uri|osa|iqu|a r| sa|aqu|uan|hac|ura|jio|ian|jua|anu|te |yat|u n|nio|iu |uia|iaa|io |jia|ama|iit| so| po|oon|ios|taa|oju|nur|u j|riy|iij|ant|i m|ses|nte|ji |sa |enu|ucu|ca |iaj|soc|i c|o m|o p|noj|aju|uiy|jii|poo|iir| ju|niq|iar|oor|hit|ues|tas|nij|o j|uis|ori|ere|paa| to| no|uir|u t|art|acu|osh|tes|jon|nti|ati|yac|jos|ora|naj|ash|oji|mas|sac|maa|ami|tar|tij|ree|toj|cam|ate|uer| ru|apu|oni|yar|ota|rac|aan|jiu|yoc|i s|rio|jor|iin|ont|i t|tan|aj |o q|ias|are|uju|era|joo|rin|ase|u m|ohu|ejo|e n|uit|cas|uac|riq|too|e s|eyo|tap|eto|e t| sh|his|rer|iuj|cun|yaq|esh|yas|nuj| re|uji|rup| ti|rta|aso|nar|rej|uuc|u c|ete|uta|nuu|uen|rte|uar|ion|hin|coj|sen|paj| nu|o c|uii|tis|uqu|oot|mue|j i|ii |i j|asu|ioo|ee |caj|raj|aru|o s|sam|saq|rii|aje|haa',ppl:'an | ta|al | te|pal| gi|chi| ti|at | mu|it | ne|t t| pa| ga|tay|ay |eli|wel|ne |wan| wa|ga |e t|i t| we|et |hiw|a t|uch|tiw|li |muc|a g|hi |su |met|tik|ina|t g|iwa|n t|lit|gan|git|teh|eme|iat|hem|ehe|ipa| ya|ech| in|gic|ich|egi|ia |esu|tia|tec|tes|ati| ma| ip|wit|a m|wat|t w|i g|ha |l t|yah|l n| se|aga|aha| tu|uk |ti |neg|u t|iwi|gen|a w|cha|pia| ge|n g|nem|emi|k t|t m|na |han|aht|hti| ye|l m|nat| u |a n|xti|te |ine|n w|wa |se |y t|ek |tuk|yek|tah|iwe|en |gip|a i|ita|y g|i m|ixt|t p|upa|n m|mat|ama|ik |gi |ya |ma |tag|mun|t n|agi|ipi|tam|y y|a p|n p|mag|i n|gin|gix|uma|mi |tal| su|l g|e g|l w|hta|awi|tup|tim|n i|imu|une|k s|wia|ta |cht|u g|i w|ach|i i|iwt|n n|ka |ni |atk|ak |t i|mum|mac|tka|i p|t u|ikc|mui|htu|ikn|y i| ag|kch|tig|uli|eng|pat| uk|ima|gim|tat|mit|kti|age|teg|nga| qa|dat|puz| da|tan|kne|i y|eza|u y|a y|gez|uzu|u w|tin|aya|wtu|iga|qak|lwi|ilw|iht|y m|k n|gat|uin|za |tul|ikp|may|awa|uwa|e p|l i|n y|ini|iti|ewi|wi | ix|e a|ami|tit|ukt|n s| ch|mup|lew|taw|ah |ite|u p|kpi|a s|net|e s|ale|wag| nu|gah|iw |igi|ani|u a|e m|tu |k g|gam| na|una|gal|ikt|muw|yaw|zua|uat|a u|k m|e n|lia|use|wti|nan|ame|k p|u m|alm|pa |l y|nex|iaw|t s|k u|san|mut|lme|l p|mu |ezi|epa|me | pu|axt|yuk',mxi:' de|e l|es | la|e d|ne |ion|de |la |os |ent|to |tio|one|te | in|tat| pe|per|le | co|a p|a l|les|ale|ret|as | a |eto|ate|dre|ati|o a| dr|re | e |nti|tos|e e|na |ia |ta |ona|tia|el |s d| le|nte|ant|men|e a|in |ene|que|con| to|a s|tot|ien| pr|ers| et|et | ti| li|res|ita|s e|e p|rso| qu|tie| el|a t|son|ota| re|ber|ess|e c| au|er |e s| l’|sse|o d|pro|nat|a c| su|ue |ame|cti|s a|lib|se |a d|omm|nt |e i|ere|s s|sua|e t|ato|tra| se|nes|era|nal|bbe|a e|com|ual| ad|ua |ter|rta|sta|nen|ica|rà | al|s p|t a|del|ele|nta|ibb| un| d’|ert|ser|nto|ect|las| na|tes|a a|ond| pa|iss|ra |are| si|s i| so|so |o e|est| ne|erà|ad |ssa|io |una|o i|aqu|au | ci|ote|int|ass|s t|s n|sso| aq|ntr|pre| di|ssi|ias|man|aut|e q|mo |s l|ali|nos|ran|ial|rat|no |cun|gua|ont|n l|oci|mat| st| fo|tan|cia|o s|ons|ten|lit|ndi|vit|iti|soc|s c|ciu|den|sec|e n| ma|ria|oll|lle|uma|hum|cla|egu| es|t i|tiv|ata|oto|t d|o p| po|fon| mo|on |tas|ver|ind|cas| ac|a r|ndo|par|tal|o t|t e|ore|ura|ca |n c|nda|dic| tr| me|alt|a n| hu|a f|e r|rec|n e| as|ieu|sie|act|o l|uno|ori|mmo|ena|tor|sti|nsi|cto|ecu|iva|sce|unt|r l| ca|ide|tri|do |nio|lo | eg|eco|ime|l s|a i|ues|l’a|eta|rse|un |nit|nde|cat|s f|rot|ari|ist|qua|a v| fa|rar|als|sat|lse|val'},Cyrillic:{rus:' пр| и |рав|ств| на|пра|го |ени|ове|во | ка|ани|ть | в | по| об|ия |сво| св|лов|на | че|ело|о н| со|ост|чел|ие |ого|ет |ния|ест|аво|ый |ажд| им|ние|век| не|льн|ли |ова|име|ать|при|т п|и п|каж|или|обо| ра|ых |жды| до|дый|воб|ек |бод|ва |й ч|его|ся |и с|ии |аци|еет|но |мее|и и|лен|ой |тва|ных|то | ил|к и|енн| бы|ию | за|ми |тво|и н|о п|ван|о с|сто|аль| вс|ом |о в|ьно|их |ног|и в|нов|ако|про|ий |сти|и о|пол|олж|дол|ое |бра|я в| ос|ным|жен|раз|ти |нос|я и| во|тор|все| ег|ей |тел|не |и р|ред|ель|тве|оди| ко|общ|о и| де|има|а и|чес|ним|сно|как| ли|щес|вле|ься|нны|аст|тьс|нно|осу|е д| от|пре|шен|а с|бще|осн|одн|быт|сов|ыть|лжн|ран|нию|иче|ак |ым |ват|что|сту|чен|е в| ст|рес|оль| ни|ном|род|ля |нар|вен|ду |оже|ны |е и| то|вер|а о|зов|м и|нац|ден|рин|туп|ежд|стр| чт|я п|она|дос|х и|й и|тоя|есп|лич|бес|обр|ото|о б|ьны|ь в|нии|е м|ую | мо|ем | ме|аро| ре|ава|кот|ав | вы|ам |жно|ста|ая |под|и к|ное| к | та| го|гос|суд|еоб|я н|ен |и д|мож|еск|ели|авн|ве |ече|уще|печ|дно|о д|ход|ка | дл|для|ово|ате|льс|ю и|в к|нен|ции|ной|уда|вов| бе|оро|нст|ами|циа|кон|сем|е о|вно| эт|азо|х п|ни |жде|м п|ког|от |дст|вны|сть|ые |о о|пос|сре|тра|ейс|так|и б|дов|му |я к|нал|дру| др|кой|тер|ь п|арс|изн|соц|еди|олн',ukr:'на | пр| і |пра|рав| на|ня |ння| за|ого| по|ти |го |люд| лю|во | ко| ма|льн|юди|их |о н| не|аво|анн|дин| св|сво|ожн|кож|енн|пов|жна| до|ати|ина|ає |а л| бу|аці|не |ува|обо| ос| як|має| ви|них|аль|або|є п| та|ні |ть |ови|бо | ві| аб|ере|і п|а м|вин|без|при|іль|ног|о п|ми |та |ом |ою |бод|ста|воб| бе|до |ва |ті | об|о в|ост| в | що|ий |ся |і с| сп|инн|від|ств|и п|ван|нов|нан|кон| у |ват|она|ії |но |дно|ій |езп|пер| де|ути|ьно|ист|під|сті|бут| мо|и і|ідн|ако|нні|ід |тис|що |род|і в|а з|ава| пе|му |і н|а п|соб|ої |а в|спр|ів |ний|яко|ду |вно|і д|ну |аро|и с| ін|ля |рів|у в| рі|и д|нар|нен|ова|ому|лен|нац|ним|ися|чи |ав |і р|ном| ро|нос|ві |вни|овн| її|ові|мож|віл|у п| пі| су|її |одн| вс|ово|ють|іст|сть|і з| ст|буд| ра|чен|про|роз|івн|оду|а о|ьни|ни |о с|сно|зна|рац|им |о д|ими|я і|ції|х п|дер|чин| со|а с|ерж|и з|и в|е п|ди |заб|осо|у с|е б|сі |тер|ніх|я н|і б|кла|спі|в і| ні|о з|ржа|сту|їх |а н|нна|так|я п|зпе| од|абе|для|ту |і м|печ| дл|же |ки |віт|ніс|гал|ага|е м|ами|зах|рим|ї о|тан|ког|рес|удь| ре|то |ков|тор|ара|сві|тва|а б|оже|соц|оці|ціа|осн|роб|дь‐|ь‐я|‐як|і і|заг|ахи|хис|піл|цій|х в|лив|осв|іал|руч|ь п|інш|в я|ги |аги| ді|ком|ини|а і|оди|нал|тво|кої|всі|я в|ною|об |о у|о о|і о',bos:' пр| и |рав| на|пра|на |да |ма |има| св|а с|а п| да|а и| по|је |во |ко |ва | у |ако|но |о и|е с| за| им|аво|ти |ава|сва|и п|ли |о н|или|и с|их |вак| ко|ост|а у| сл|не |вањ| др|ње | не|кој|ња | би|ије|и д|им |ств|у с|јед|бод|сло|лоб|обо| ил|при| је|ање| ра|а д| об| су|е и|вје|се |ом |и и|сти| се|ју |дру|а б| ос|циј|вој|е п|а н|раз|су |у п|ања|о д|ује|а о|у и| од|и у|ло |ова|дје|жав|оје|а к|ни |ово|едн|ити|аци|у о|о п|нос|и о|бра| ка|шти|а ј|них|е о|пре|про|ржа| бу|буд|тре| тр|ог |држ|бит|е д|у з|ја |ста|авн|ија|е б|миј|и н|реб|сво|ђи |а з|ве |бил|ред|род|аро|ило|ива|ту |пос| ње| из|е у|ају|ба |ка |ем |ени|де |јер|у д|одн|њег|ду |гов|вим|јел|тва|за | до|еђу|ним| са|нар|а т| ни|о к|оји|м и| см| ст|еба|ода|ран|у н|дна|ичн|уђи|ист|вно|алн|и м| дј|нак|нац|сно|нст|тив|ани|ено|е к|е н|аве|ан |чно|и б|ном|сту|нов|ови|чов|нап|ног|м с|ој |ну |а р|еди|овј|оја|сми|осн|анс|ара|дно|х п|под|сам|обр|о о|руг|тво|ји | мо|его|тит|ашт|заш| кр|тељ|ико|уна|ник|рад|оду|туп|жив| ми|јек|кри| ов| вј| чо|ву |г п| оп|међ|њу |рив|нич|ина|одр|е т|уду| те|мје|ење|сви|а ч|у у|ниц|дни| та|и т|тно|ите|и в|дст|акв|те |ао | вр|ра |вољ|рим|ак |иту|ави|кла|вни|амо| он|ада|ере|ена|сто|кон|ст |она|иво|оби|оба|едс|как|љу ',srp:' пр| и |рав|пра| на|на | по|ма | св|да |има|а п|а и|во |ко |ва |ти |и п| у |ако| да|а с|аво|и с|ост| за|о и|сва| им|вак|ава|је |е с| сл| ко|о н|ња |но |не | не|ом |ли | др|или|у с|сло|обо|кој|их |лоб|бод|им |а н|ју | ил|ств| би|сти|а о|при|а у| ра|јед|ог | је|е п|ње |ни |у п|а д|едн|ити|а к|нос|и у|о д|про| су|ање|ова|е и|вањ|и и|циј| ос|се |дру|ста|ају|ања|и о| об|род|ове| ка| де|е о|аци|ја |ово| ни| од|и д| се|ве |ује|ени|ија|авн|жав| ст|у и|м и|дна|су |ред|и н|оја|е б|ара|што|нов|ржа|вој|држ|тва|оди|у о|а б|одн|пош|ошт|ним|а ј|ка |ран|у у| ов|аро|е д|сно|ења|у з|раз| из|осн|а з|о п|аве|пре|де |бит|них|шти|ву |у д|ду |ту | тр|нар| са|гов|за |без|оји|у н|вно|ичн|еђу|ло |ан |чно|ји |нак|ода| ме|вим|то |сво|ани|нац| ње|ник|њег|тит|ој |ме |ном|м с|е у|о к|ку | до|ика|ико|е к|пос|ашт|тре|алн|ног| вр|реб|нст| кр|сту|дно|ем |вар|е н|рив|туп|жив|те |чов|ст |ови|дни|ао |сме|бра|ави| ли|као|вољ|ило|о с|штв|и м|заш|њу |руг|тав|анс|ено|пор|кри|и б|оду|а р|ла | чо|а т|руш|ушт| бу|буд|ављ|уги|м п|ком|оје|вер| ве|под|и в|међ|его|вре|акв|еди|тво| см|од |дел|ена|рад|ба | мо|ну |о ј|дст|кла| оп|как|сам|ере|рим|вич|ива|о о| он|вни|тер|збе|х п|ниц|еба|е р|у в|ист|век|рем|сви|бил|ште|езб|јућ|њен|гла',uzn:'лар|ан |га |ар | ва| би|да |ва |ир | ҳу|ига|уқу|бир|ҳуқ|қуқ|ган| ҳа|ини|нг |р б|иш | та|ни |инг|лик|а э|ида|или|лиш|нин|ари|иши| ин|ади|он |инс|нсо|сон|ий |лан|дир| ма|кин|и б|ши |ҳар| бў|бўл| му|дан|уқи|ила|қла|р и|қиг|эга| эг| ўз|ки |эрк|қил|а б|оли|кла| эр|гад|лга|нли| ол|рки|и ҳ| ёк|ёки| қа|иб |иги|лиг|н б|н м| қи| ба|ара|атл|ри | бо|лат|бил|ин |ҳам|а т|лаш|р ҳ|ала| эт|инл|ик |бош|ниш|ш ҳ|мас|и в|эти|тил|тла|а ҳ|и м|а қ|уқл|қар|ани|арн|рни|им |ат |оси|ўли|ги | да|а и|н ҳ|риш|и т|мла|ли | ха|а м|ият| бу|рла|а а|рча|бар|аси|ўз |арч|ати|лин|ча |либ|мум| ас|аро|а о|ун |таъ| бе| ту|икл|р в|тга|тиб| ке|н э|ш в|мда|амд|али|н қ|мат|шга| те|сид|лла|иро| шу| қо|дам|а ш|ирл|илл|хал|рга| де|ири|тиш|умк|ола|амл|мки|тен|гин|ур |а ў|рак|а ё|имо| эъ|алқ| са|енг|тар|рда|ода| ша|шқа|ўлг|кат|сий|ак |н о|зар|и қ|ор | ми|нда|н в| си|аза|ера|а к|тни|р т|мил| ки|к б|ана|ам |ошқ|рин|сос|ас | со|сиз|асо|нид|асл|н ў|н т|илг|бу |й т|ти |син|дав|шла|на |лим|қон|и а|лак|эма|муҳ|ъти|си |бор|аш |и э|ака|нга|а в|дек|уни|екл|ино|ами| жа|риг|а д| эм|вла|лма|кер| то|лли|авл| ка|ят |н и|аъл|чун|анл|учу| уч|и с|аёт| иш|а у|тда|мия|а с|ра |ўзи|оий|ай |диг|эът|сла|ага|ник|р д|ция| ни|и ў|ада|рор|лад|сит|кда|икд|ким',azj:' вә|вә |әр |лар| һә|ин |ир | ол| һү| би|һүг|үгу|гуг|на |ләр|дә |һәр| шә|бир|ан | тә|лик|р б|мал|лма|асы|ини|р һ|шәх|ән |әхс|ары|гла|дир|а м|али|угу|аг | ма|ын |илә|уна|јәт| ја|икд|ара|ар |әри|әси|рин|әти|р ш|нин|дән|јјә|н һ| аз|ни |әрә| мә|зад|мәк|ијј| мү|син|тин|үн |олу|и в|ндә|гун|рын|аза|нда|ә а|әт |ыны|нын|лыг|илм| га| ет|ә ј|кди|әк |лә |лмә|олм|ына|инд|лун| ин|мас|хс |сын|ә б|г в|н м|адл|ја |тмә|н т|әми|нә |длы|да | бә|нун|бәр|сы | он|әја|ә һ|маг|дан|ун |етм|инә|н а|рлә|си | ва|ә в|раг|н б|ә м|ама|ры |н и|әра|нма|ынд|инс| өз|аны|ала| ал|ик |ә д|ләт|ирл|ил | ди|бил|ығы|ли |а б|әлә|дил|ә е|унм|алы|мүд| сә|ны |ә и|н в|ыг |нла|үда|аси|или| дә|нса|сан|угл|уг |әтл|ә о|хси| һе|ола|кил|ејн|тәр|јин| бу|ми |мәс|дыр|һәм| да|мин|иш | һа| ки|у в|лан|әни| ас|хал|бу |лығ|р в| ед|јан|рә |һеч|алг| та|еч |и с|ы һ|сиа|оси|сос|фиә|г һ|афи|ким|даф| әс|ә г| иш|н ә|ији|ыгл|әмә|ы о|әдә|әса| со|а г|лыд|илл|мил|а һ|ыды|сас|лы |ист| ис|ифа|мәз|ыр |јар|тлә|лиј|түн|ина|ә т|сиј|ал |рил| бү|иә |бүт| үч|үтү|өз |ону| ми|ија| нә|адә|ман|үчү|чүн|сеч|ылы|т в| се|иал|дах|сил|еди|н е|әји|ахи|хил| ҹә|миј|мән|р а|әз |а в|илд|и һ|тәһ|әһс|ы в|һси|вар|шәр|абә|гу |раб|аја|з һ|амә|там|ғын|ад |уғу|н д|мәһ|тәм| ни|и т| ха',koi:'ны |ӧн | бы|да | пр|пра|рав| мо|лӧн| да|быд|лӧ |орт|мор|ӧм |аво|ӧй | ве|ыд | не|нӧй|ыс |ын |сӧ |тӧм|сь |во |эз |льн|ьнӧ|тны|д м| ас|ыны|м п| по|сьӧ| и |то |бы | ӧт| эм| кы|аль|тлӧ|н э| от|вер|эм | кӧ|ртл|ӧ в| ко|воэ|ств|ерм|тшӧ| до|ола|ылӧ|вол|ас |ӧдн|кыт|ісь|ето|нет|тво|ліс|кӧр|ӧс | се|ы с|шӧм|а с|та |злӧ| ме| ол|аци|ӧ к|ӧ д|мед| вы|вны|а в|на |з в| на|ӧ б|лас|ӧрт| во| вӧ| сі|лан|рмӧ|дбы|едб|ыдӧ|оз |ась| оз| сы|ытш|олӧ|оэз|тир|с о| чу|ы а|оти|ция|ись|ӧтл| эт|рты| го|ы п|ы б|кол|тыс|сет| сь|рті|кӧт|о с|н б|дз |н н| мы| ке|кер|тӧн|тӧг|ӧтн|ис |а д|мӧ |ост|ӧ м| со|онд|нац|дӧс|итӧ|ест|выл| ви|сис|эта| уд|суд|нӧ |удж|ӧг |пон|ы н|н п|мӧд|а п|орй|ӧны|ӧмӧ|н м|ть |сыл|ана|ті |нда|рны|сси|рре|укӧ|з к|чук|йын|рез| эз|ысл|ӧр |ьӧр|с с|с д|рт |с в|езл|кин|осу|эзл|й о|отс| тӧ|ы д| ло| об|овн|лӧт|асс|кӧд|с м|ӧ о|нал|быт|она|ӧт |слӧ|скӧ|кон|тӧд|ытӧ|дны|а м|ы м|нек|ы к|ӧ н|асл|дор|ӧ п| де| за|а о| ов|сть|тра| дз|ь к|ӧтч|н к| ст|аса|етӧ|ьны|мӧл|умӧ|сьн| ум|ерн|код| пы|тла|оль|иал|а к|н о| сэ|а н|ь м|кыд|циа|са | ли|а б|езӧ|й д| чт|ськ|эсӧ|ион|еск|ӧ с|оци|что|ан |соц|йӧ |мӧс|тко|зын|нӧя|вес|енн| мӧ|ӧтк|ӧсь|тӧ |рлӧ|ӧя |оля|рйӧ|ӧмы|гос|тсӧ|зак|рст|з д|дек|ннё|уда|пыр|еки|ако|озь| а |исӧ|поз|дар|арс|ы ч',bel:' і | пр|пра|ава| на|на | па|рав|ны |ць |або| аб|ва |ацы|аве|ае | ча|ння|анн|льн| ма| св|сва|ала|не |чал|лав|ня |ай |ых | як|га |век|е п| ад|а н| не|пры|ага| ко|а п| за|кож|ожн|ы ч|бод|дна|жны|ваб|цца|ца | ў |а а|ек |мае|і п|нне|ных|асц|а с|пав|бо |ам |ста| са| вы|ван|ьна| да|ара|дзе|одн|го |наг|він|аць|оўн|цыя|мі |то | ра|і а|тва| ас|ств|лен|аві|ад |і с|енн|і н|аль|най|аво|рац|аро|ці |сці|пад|ама| бы| яг|яго|к м|іх |рым|ым |энн|што|і і|род| та|нан| дз|ні |я а|гэт|нас|ана| гэ|інн|а б|ыць|да |ыі |оў |чын| шт|а ў|цыі|які|дзя|а і|агу|я п|ным|нац| у | ўс|ыя |ьны|оль|нар|ўна|х п|і д|ў і| гр|амі|ымі|ах | ус|адз| ні|эта|ля |воў|ыма|рад|ы п|зна|чэн|нен|аба| ка|ўле|іна|быц|ход| ін|о п| ст|ера|уль|аў |асн|сам|рам|ры | су|нал|ду |ь с|чы |кла|аны|жна|і р|пер|і з|ь у|маю|ако|ыцц|яко|для|ую |гра|ука|е і|нае|адс|і ў|кац|ўны|а з| дл|яўл|а р|аюч|ючы|оду| пе| ро|ы і|вы |і м|аса|е м|аду|х н|ода|адн|нні|кі | шл|але|раз|ада|х і|авя|нав|алі|раб|ы ў|нна|мад|роў|кан|зе |дст|жыц|ані|нст|зяр|ржа|зак|дзі|люб|аюц|бар|ім |ены|бес|тан|м п|дук|е а|гул|я ў| дэ|ве |жав|ацц|ахо|заб|а в|авы|ган|о н|ваг|я і|чна|я я|сац|так|од |ярж|соб|м н|се |чац|ніч|ыял|яль|цця|ь п|о с|вол|дэк| бе|ну |ога| рэ|рас|буд|а т|асо|сно|ейн',bul:' на|на | пр|то | и |рав|да |пра| да|а с|ств|ва |та |а п|ите|но |во |ени|а н|е н| за|о и|ото|ван|не | вс|те |ки | не|о н|ове| по|а и|ава|чов|ни |ане|ия | чо|аво|ие | св|е п|а д| об|век|ест|сво| им|има|ост|и д|и ч|ани|или|все|ли |тво|и с|ние|вот|а в|ват|ма | ра|и п|и н| в |ек |сек|еки|а о| ил|е и|при| се|ова|ето|ата|воб|обо|бод|аци|ат |пре|оди|к и| бъ| съ|раз| ос|ред| ка|а б|о д|се | ко|бъд|лно|ния|о п| от|ъде|о в|за |ята| е | тр|и и|о с|тел|и в|нит|е с|ран| де|от |общ|де |ка |бра|ен |ява|ция|про|алн|и о|ият|ст |нов| до|его|как|ато| из|нег|а т|ден|а к|щес|а р|тря|а ч|ряб|о о|вен|ябв|бва|дър|гов|нац|ено|тве|ърж|е д|нос|ржа|а з|вит|зи |акв|лен| та|ежд|и з|род|е о|обр|нот| ни| с |т с|нар|о т|она|ез |йст|кат|иче| бе|жав|е т|е в|тва|зак|аро|кой|осн| ли|ува|авн|ейс|сно|рес|пол|нен|вни|без|ри |стр| ст|сто|под|чки|вид|ган|си |ди |и к|нст| те|а е|вси|еоб| дъ|сич|ичк|едв|жен|ник|ода|т н|о р|ака|ели|одн|елн|лич| че|чес|бще| ре|и м| ср|сре|и р|са |лни| си|дви|ичн|жда| къ|оет|ира|я н|дей| ме|еди|дру|ход|еме|кри|че |дос|ста|гра| то|ой |тъп|въз|ико|и у|нет| со|ави|той|елс|меж|чит|ита|що |ъм |азо|зов|нич|нал|дно| мо|ине|а у|тно|таз|кон|лит|ан |клю|люч|пос|тви|а м|й н|т и|изв|рез|ази|ра |оят|нео|чре',kaz:'ен |не | құ|тар|ұқы| ба| қа|ға |ада|дам|құқ|ық | бо| ад|ықт|қта|ына|ар | жә|ың |ылы|әне|жән| не|мен|лық|на |р а|де | жа|ін |а қ|ары|ан | әр|қыл|ара|ала| ме|н қ|еме|уға|ның| де|асы|ам |іне|тан|лы |нды|да |әр |ығы|ста|еке| өз|ын |ған|анд|мес| бі| қо|ды |ің |бас|бол|етт|ып |н б|ілі|қық|нде|ері|е қ|алы|нем|се |бір|лар|есе|ы б|тын|а ж| ке|тиі|ост|ге |бар| ти|е б| ар|дық|сы |інд|е а|аты| та| бе|ы т|ік |олы|нда|ғын|ры |иіс|ғы | те|бос|луы|алу|сын|рын|еті|іс |рде|қығ|е ж|рін|дар|іні|н ж|тті|қар|н к|ім | ер|егі|ыры|ыны| са|рға|ген|ынд|аны|уын|ы м|лға|ана|нің|тер|уы |ей |тік|ке |сқа|қа |мыс|тық|м б|ард| от|е н|е т|мны|өзі|нан|гіз|еге| на|ы ә|аза|ң қ|лан|нег|асқ|кін|амн|кет|рал|айд|луғ|аса|ті |рды|і б|а б|ру | же|р м|ді |тта|мет|лік|тыр|ама|жас|н н|лып| мү|дай|өз |ігі| ал|ауд|дей|зін|бер|р б|уда|кел|біл|і т|қор|тең|лге| жү|ден|ы а|елі|дер|ы ж|а т|рқы|рлы|арқ| тү|қам|еле|а о|е ө|тін|ір |ең |уге|е м|лде|ау |ауы|ркі|н а|ы е|оны|н т|рыл|түр|ция|гін| то| ха|жағ|оға|осы|зде| ос|ікт|кті|а д|ұлт|лтт|тты|лім|ғда| ау| да|хал|тте|лма| ұл|амд|құр|ірі|қат|тал|орғ|зі |елг|сіз|ағы| ел|ң б|ыс | ас|імд|оты| әл|н е|ағд|қты|шін|ерк|е д|ек |ені|кім|ылм|шіл|аға|сты|лер|гі |атт|кен| кө|ым‐| кұ|кұқ|ра |рік|н ә| еш',tat:' һә|лар|әм |һәм| ке| хо|кук|оку|хок|еше| бе|ләр|кеш|га |әр |рга|ан |кла| бу|ар |ең |нең|гә | то| ба|да |ргә| ти|ырг|һәр|ене|бер|ән |ен |р к|бул|укл|дә |а т|ары|тор|ире| үз|на |ган|ара| ка| ал|ә т|нә | ит| дә|ы б| ир|рын|ше |ын |енә|тие|лык|екл|ына|н т|иеш|бар|еле|ка |елә|а х|н б|кы |рек|ала|кар| та|ә к|нда|еш |лән|бел|укы|лан|ите|тә |шен|ле |лы |ез |ерг|н и|ә б|а к|клә|үз |тел|лыр|не |әрг|ы һ|е б| га| ха|алы|рне|м и|тен|әрн|а б|ның|ынд|ың |ләт|дан|сә | як|лга|улы|ел |а а| яи|яис|асы|ш т|а һ| са|рлә|лек|иге|ә х|гез|орм|ем |аны|р б|м а|р һ|рмы|мыш|сын|шка|ә һ|исә|тәр|үлә|әт |мәт|сен|сез|чен| ни|ә и|н м|илл|ять|ны |ылы|үзе| ки| эш| ту|алу|акы|ып |уга|ль |тан|н к|лу |бу |мас|рен|кә | тү| тә|түг|зен| җә|тын|ди |баш|кле|гән|ть | би|әре|штә|гын|әүл|ер |мил| ми|клы|гел|ыш |лер|ерл|әве|рдә|а я|р а| мә| рә|лем|хал| ан|ң т| аш|ык |ция|е х|стә|ә д|аль|рак|ек | де|рәв|тот|кән|улг|орг|веш|ешт|ни |итә|кка|м т|үге|шел|а и|ндә| да|рел|кер| кы|ерә|та |н я|еге|ый |а д|аци|р о|шла|тлә|әтл|н д|айл|ллә|ард|рда|кта|шкә| за|ге |ләш|ш б|әсе|кон|шыр|циа|нин|лау|уры|ры |оты|әне| тө|инд|нди| җи|оци|соц|лә |арт|якл|зак|тиг|рке| ди| со|ыкл|кем| ко|р и|ң б|әте|гыя|чар|үгә|ин |иле| сә| ил|мгы| ае|н а|аер|ыны|л һ',tuk:' би|лар| ве|ве |да |ада|ары| хе|ир | ад|бир|дам|кла|ер |р б|ың | ха|ара|га |ен |лан|ыны|или|дыр|ам |ала| бо|хер|р а|ыр |лы |лер|ан |бил|иң |ыды|р х|акл|нда| өз|клы|ны |хук|ери| ху|уку|ага|не |лыд|ине|ына|лен|на |хак|де |‐да|ин |рын|атл| эд|маг|өз | де|асы|лыг|кук|е а|ынд|алы|лма|бол|дан|ини|а х| я‐|е х|ге |иле|я‐д|ар |ама|ли |ыгы|ети| ба| га|гын|ере|укл|лиг|ның|зат|лык|тлы|нде|ни |лик|ден|мак|сын|дил|ры |аны|кин|әге|п б|а г|хем|иги|эрк|аза|а д|мек| эр|мал|ыкл|мәг|сас| эс|екл| ма|рин|эса|ола|ы б|айы|н э|эди| гө| хи|сы | аз|баш|ы д|йда|шга|ашг|а в| до|ыет|ы в|дак|ниң|рки|гал|чин|гда|ак | җе|а б| эт|этм|кы |лет|йән| та|гин|ян |тме|хич|ич |мез| гу|хал|ылы|үнд|илм|дай|ягд| яг|и в|им |акы|ы г|ән |а а|рың|ги |тле|н м| го|ип |ал |еси| се|лме| ка|м х|дең|ң х|е д|дир|илл|рил| ал|кан|е г|лин|ра |дол| бе| ми|мил|ң д|н х|ели|н а|е м| ге|ы х| дө|ик | со|ң а|чил|дөв|е б| са|гар|е в|ең |н б|рма| ме|кли|үчи| дә| үч|ция|н в| дү|и б|айд|кле|сер|а я|соц|гор|оци|дал|мы |олм|циа|уң | он|уп |кда|дәл|ири| ди|еле|лип|алк|лим|гур|үни|нме| әх|н г| иш|ы ө|ң э|нун|еги|тин|ы а|рле|аци|ыз |з х|сыз|аха|м э|олы|рам| ту| ни|ып |ерт|алм|ора|и х|хли|әхл|к э|өвл|вле|тмә|ет |нли|ахс|гөз|гы |етл|ы ү|нуң|ону|сиз|емм|ек ',tgk:'ар | ба| ҳа| да|ад | ва|он |ва | та|дар|ти | ин|ба | бо| ки|аро| до|ои |дор|ард|ки |бар|д ҳ|уқу| як|ин |ҳар|и о| на| ма|и м|ора| ҳу|як |ни |нсо|инс|и ҳ|аи |и б|сон|рад| му|ҳои|р я|ҳуқ|қуқ|ҳақ|ии |к и| ша|и д| аз|и и| оз|нд |яд |қ д|озо|аз |зод|анд|д б|ояд| ка|ият|она|да |амо|ақ |а б|ди | ё |гар|ат |дан|ҳам|оди|рда|моя| он|уда|қи | ху|бо |и т|дон|ст |нам|н ҳ|ода|и с|ан |н б|мил|и х|бош|они|оша|худ|ава|боя|аст|и а|ро | ме|а ҳ|имо|ила|оми|оба|ида|кар|н д|лат|д в|а ш|ҳо | ас|таҳ|рои|и н|д к|яти| ди|шад|ӣ в|ри |рдо|шав| ми|е к|роб|тар|та |кор| бе|о д|вад|мон|иҳо|ли |уд |оси|ошт|ми |р м|ати|т б| со|ӣ ё|нҳо|мин|шар|ара|таъ|ани|а в|иро|а д|дав|ят |даа| са|ама|дош|раф|шуд|лӣ |д а|оти|а м| фа|ист|ор |р ҳ|на |и к|р к|д т|и ҷ|и ш| эъ| су|н м|н в|и ӯ|фи |вар|диҳ|ига|зар| шу|ари|а т| иҷ| ақ| ҳи|асо|р б|т ҳ|а а|одо|мум|р в|а о| ӯ |рон|наз|диг| ни|бот| ҷа|авр| қа|яи |р д|уқи|лал|кас|шта|уна|еҷ |ино|тҳо|уни|або|сти| во|авл|и қ|вла|ун |у о|ӣ б| ҳе|дӣ |қу |чун|н и|сар|ояи|тав|маҳ|онҳ|қар|атҳ|тир|оҳ |ахс| қо|уқ |оли| ис|д д|и з| ко|аза|ори|фар|сос|ран|н к|р а|ҷти|ону|сӣ |ири|рра|рӣ |ҳеҷ| за|ид |ҳти|рии|ами|қон|уди|н н| од|иҷт|мия|ъло|лом|ию |наи|али|нда|оӣ |оят|янд| зи|оян|ӣ ҳ|и п|офи|киш|ҳим|рат|тим',kir:' жа|на |ана|жан| би|уу |уку|га |бир| ук|ар |ен |луу|тар|кук|укт| ка| ад|ын |ада|ууг|дам| ме|уга|ык | ар|ене|мен|нен|ан |ары|олу| бо|ин |ам |ган|ир |бол| ал|ара|нда|н к|туу|р б|н ж| ба|анд| же|р а|кта|ына|ард|кту|эрк|үн |да |н б|н э| эр|нди|а т| ко|рды|н а|дык|рки|инд|а ж|кин|ала|а а|лар|аны|үү | өз|а к|тер|алу| та|а у|алы|а э|же |ук |ийи| ти|иш |тий| ма|гө |кыл|йиш|улу|нын|ке |н т|кар|бар|или|у м| кы|иги|рын|а б|үгө|рга|е а|ун |етт|дик| ту|дар|тта|баш|у а|н у| ээ|дын|им |рүү|гин|лык|ушу|нды|тур| са| эл| эм| мү|гон|лга|алд|икт|үүг| бе|ры |өз |нан|он | ан|кте|ул |дай|ерд|диг|р м|ери|үчү| не|атт|лды|еке|еги|үнө|лук|амд|у б|ынд|үнү|рди|тук|ка |кан|к ж| ки|м а|күн|не |ине|мда|рин|ого|кет| со|кам|дин|к м| эч| то|сыз|ылу|өзү| де|н м|ция|ээ |чүн|гиз|уп |нег|эч |руу|ыз |мес|эме| иш|лут|ы м|шка|ыкт|мам|ашк|лде| ке|лго| тү|ө ж|олг|ес |к т|кор|ге |бил|түү|угу|рал|алг|тын|кен| ул|лим|утт|ыгы|орг|н н|у ж|рде|нуу|тал|ч к|рго|мак| те| уш|уну|ктө|ди |акт|нүн| ди|зүн|иле| кө|кат|аци|мсы| эс|тык|е к|ей |тан|е э|ай |ер |соц|оци|циа|аты| жо|к к|амс|лан|а м|ири|ске|айд|ирд| мы|ылы|зги|ыны|ага|ген|е б|шул|тол|өнү|дыг|е ж|ү ү|з к|айы|раб|енд|абы|жал|ү ж|оо |уна|к а|кал|лек|ект|рма|дей| үч|тоо|мат|у э|бер',mkd:' на|на | пр| и |во | се|то |ите|те |рав|та |а с|пра|ува|да | да| не|ва |а п|а н|и с|ата|о н|еко|а и| по|но |ој |кој| со| за| во|ств|ја |ње |ање|аво|ни | им|от |е п|е н|ма |ат |вањ|ост|а д|о с|е и|се |ова|ија|и п| сл|а о|има|сек|сло|ото|ли |о д|ава|обо|о и| ил|или| би|бод|и н|лоб| од|бид|ред|ен |при|вот|иде|а в|ста| об|и и|и д|пре|нос|ст |е с| ни| ќе|ове|аат|аци|ќе |со |ови|про|ј и|тво| ра|ест|што| де|т и|акв| ко|раз|гов|его|нег|ани|едн|ако|циј|бра|од |а з|е б|и о|а б|о п|ват| е | др|ето|ваа|как|ди |т с| ка| чо|ени|алн|одн|ено| си|чов| шт|а г|а е|вен|нит| ја|де |оди|е о|ран|и з|сно|нот| ед|тит|лно|ви |јат|ден|т н|нац| оп| до| ос|и в|осн|кон|дна|е д| ст|век|о о|род|сто|сит|еме|ара|дно|обр|ј н|пшт|еди|опш|за |ние|аро|нов|а к|вни|дру| ов|тве|жив|ште|д н|ие | ме|ед |иот|и м|о в|ќи |дат|шти|јќи|без|бед|ки |ков|ко |а р|нар|чно|дни| вр|ели|нак|ашт|ичн|ка |ема|цел|зем|еду|чув|тес|држ|ник|т п|луч|аа |деј|нст|не |а ч|руг|ода|ивн| це|нив|дин|авн| зе|нио|пор|а м|заш|лас|вит|дек|го |ине|ело|нет|ез |тен| ре| из|под|раб|або|бот|дув|нув| бе|ење|еде|он |њет|зов|иту|ван|н и|аѓа|е в|еѓу|рем|дел|о к|кот|им | жи|дос|вре|меѓ|олн|нап| го|емј|кри|уна|нем|оја| су|ита|азо|лит|тор|инс|ора|огл|ипа|пот|слу|кви',khk:' эр|эрх| хү|ний|н б|эн |тэй|ийг|х э|эй | бо|хүн| бү|йн |ан |ах | ба|ийн|бол|ий | ха|бай|уул|рх |оло|й х|йг |гаа|эх |бүр|гүй|үн | бу|он |аар|рхт|үнд|хтэ|үр |лэх|ар | за|н х|лах|эр | хэ|й б|өлө|н э|лөө|эл | үн|аа | ул|ын |хий|үй | ор| ту|улс|ула|үлэ| чө|чөл|н т|үүл| ху|сэн| ни|ндэ|лон|гээ|р х|өөр|сан| нэ|ны | ёс|нь |эд | гэ| нь| ч | тө| тэ|лаг|оро|дэс|лс |г х|ох |үни|ээр|хам|х ё| ша|д х|р э|лго|лд | дэ|н а|бую|уюу|гуу|төр|ай |юу |тай|ээ |ж б|эг |лий|хан|ыг | эд| то|х б|дсэ|й э|рга| ал|хар|арг|ад |лга|рэг| зо|айг|ага| тү|л х|ал | хө|өөт| са|н н|йгэ|дэл|нд |гий|н з|ол |ава|лла| өө|рол|өтэ|гэр|г б|л б|бус|нэг|н д|аг |аал|н ү|алд|рла| үз|гэм|й а|н у| ол|хуу|х ч|эрэ|мга|олг|эс |хүү|той| ар|үү |лал| эн| мө|йх |ин |өрө|х т|луу|рий|сон| га|хэн|айх|эни| ам|гла|өр |аса|ана|амг| би|ард| ял|йгм|ой |лын|үрэ|эгт| ав|эдэ|оо |мий|х н|аан|үйл|арл|нха|тгэ|дээ|с о|рхи|лов|д н|тэг|өг |өн |хэр|лэн|өөг|үүн|вср|га |р т| хи|хүр|рон|ч б| хо|гөө| мэ|бие|н г|ура|бүх|ори|али| аж| үй| яв|өх |хээ|г н|ата| та|гш |г ү|эгш|вах|лох|эгд|длэ|х ү|гох|үх |энэ|лж |олц| шү|л т| да|дал|эж |д б|лан|й т|айл|л н|х а|агл|тоо| со|өри|йгу|гми|дил|ээн|дар|н ш|шүү|овс| ад|а х|р ч|ади|ааг|лаа|айд|амь|гтэ|н с|д т|ийт|лэл|х ш|н ч|унх',oss:'мӕ |ӕн | ӕм|ӕмӕ|ӕй |бар| ба|адӕ|он | кӕ|дӕр|ӕр |ты | ад|ы а|тӕ | хъ|дӕй| дӕ|н ӕ| ис|ар |кӕн| йӕ|над|ӕйм|ды |йма|ӕ ӕ|гӕн|йӕ |алы| ал|лы |нын|маг|ис |нӕн|н д| ӕх|хуы| уа|хъу|ӕны|агӕ|ы б|ӕнӕ|цы |ынӕ|ын |амӕ|уам|ъуа|ӕст|уа | па|онд|арт|ад |сты|дӕм|ӕ к|н а|ӕнд|р и| ма|сӕн|дзи|ртӕ|ады|уыс|с б| ку|ӕ у|ӕхх|ст |р ӕ|ӕцы|адд|ӕ х| ах|ӕ б|аци|ддз|ӕ а|зин| уы|ахъ|дон|хъӕ|ы ӕ| цӕ|кӕц| сӕ| ра|нӕй| ӕн|ы у|ӕ с|гӕ |дза|дзӕ|ыст|пад|ина|хсӕ|ы х|аха|зах|стӕ|ӕна|тӕй|уыд|н к| хи|нӕ |ара|ард| нӕ|ӕрд|цӕу|хиц|куы|ицӕ|йы |нд |ой |лон|зон|ало|ны |джы|ӕхс|н б| ст|хъа|иба|йӕх|ӕнг|й ӕ|цӕн|ацы| на|бын| ар|д а|ӕм | уӕ|гон|ӕхи|ӕ й|ӕ м|хад| ац|н х|ына|мад|рд |ъӕн|ынд|хӕс|вӕр|арӕ|ӕ н|н и| ца|уыз|ъах|уыр|й а|ы д|рад|адз|аг |хху|ыд | бы| фӕ|ӕг |н у|нды|фӕн|ытӕ|ӕ г|сгӕ|ино|адо|нон|ппӕ|ы н|имӕ| рӕ|ххӕ|зӕн|хи |ций|пӕт|кӕй| ӕп|рӕй| за|мӕй|къо| гӕ|й р| ны|дур|ӕуы|гӕй|ӕ и|ӕмб|ахӕ|акӕ|рды|раз|нду|рон|д ӕ|ӕпп|р к|тӕн|ӕри|риб|ийы|ы ф|дмӕ|уын|жы |рӕс|т к| ӕв|уы | хӕ|ыны|сӕ |циа|ызо|ыс |ы р|зак|р а| де|рын|ы с|оци|р х|ӕмы|амы|ндӕ|соц|ӕсг|гӕс|ист|й с|й х|ъон|акъ|мху|сӕр|ӕ ц|дтӕ| ӕр|ары|авӕ|цар|й к|р й|лар|иал|айд| би|бин|мӕн|мыс|мбӕ|нац| ха|ӕ ф|ани|дек|онт|ӕ п|кон|аху|а ӕ|ӕдт|ӕмх|аты|мы |с ӕ|нам|адж|зӕр|ндз| фы|сын|цыт| сы|хӕд| ин',sah:'ар | ки|ан | бы|аах|таа|эр |ах |нна|ары|лар|уон|на | уо|онн| ха|раа| бу|ыра|быр|иһи| су| кө|киһ| ту|ын |тар|р б|һи |уол| би|ин |аап|иир|н т|суо|н б|уох|ии |апт|пта|а к|с б|бии|ас |а с|хта|эйэ|тта|ай |рди|дии|буо|ирд|тэр| бэ|эн |эри|нан|и к|ара|бэй|най|тан|хас| дь|н с|ына|н к|р к|охт|гар|гэр| ол|аты|игэ|тын|оло|этэ| ба|рын|х х|ана|ала|эти|өҥү|х б|и б|йэт|тин|көҥ|га |аци|ҥүл|уга|р т|ция| са|ыла|ору|лэр|ллэ|ста| да|ытт|ола|р у| кэ| та|аст|ыга| со|ох |аҕа|туһ|ахт|олу|ны |эх |лла|аль|н д|уту|улу|ыыт|уру|ств|ьна|һин|ини|льн|ык |абы|анн|көм|ыты|а б|ээх|эһи|аны|быһ| тө|тут|оһу|ааб|бэт|р с|ыһы|хан| на| до|э с|он | кы|ыба|оҕо|наа|нны|илл|ор |аар|нар|аһы|тво|ылл|н у|руо|ни |аҕы|ттэ|ьон| эб|уу |рин|лаа|кин| сы|х к| ыл|дьо|луо| ма|эҥ |нык|нэн|н а|руй|сты|лор|бар|тэн|т б| хо|да |а т|рыт| ку|һыы|итэ|ыта|эбэ| тэ|уһу|оро|н о|бур|тээ|үлү|во |нор|үлл|хтэ| үө|лан|үөр|р и|эрэ|өрү|өрэ| тү|уһа|көр|йду|үн |һын|рга|та |ити|эхт|куо|э б|и о|уот|нэр|бил|лта|тэҥ|ойд| но|рар|дой|тэ | оҥ|оҥо|ыст|утт|тур|ргэ|ллы|ааҕ| си|р х|хол|р д|айы|уда|тал|рор|йэ |бат|ат |ҕан|кэм|рыс|нац|дьи|аас|уоб|бу |ры |суд|рыг|үлэ|элэ|үгэ|ааһ|или| эр|тул|эрг|дьа|у б| ар|ну |иэх|ҕын|ест|эни|н х|тэҕ|эҕэ| ит|үнэ|укт|кта|төр|р о| ор|иял|яла',tyv:' бо|лга|бол| эр|рге|эрг|га | ки|аш |олг|гел| ба|гаш|ары| бү|азы|нга|ижи|киж|ан |ге |иг |ар |лер|үрү|иң | хо|ың |аза|за |ынг|баз|рин| ту|ниң|лиг|ели|и б|үзү|иле|ери| чо|рын|жи |аар|тур|ның| ка|уг |ган|г к|лар|н б|ын |еле| ха|ин |г б|ажы|зы |бүр|рүз|ала|зү | де|ост|хос|нге|дыр|зын|лге|рга|р б|анд| би|лды| кы|даа|алг|а б|ура|ң б|ыны|олу|да |луг| да|аан|гал|бил|урл|ле |аа |рар|алы|е б|ыр |жур|а к|ужу| уж|нды|ини| аж|ыг | аз|алд|еди|ста| ал|зин|тал|ур |п т|елд|ези|р э|ады|ыры|ору|аны|рлу|үгү|ен |н ч|лур|тты|н к|а а|ң к|ас |дыг|е а|а э|нда|шкы|нде|ылд|лээ|ышк|инг|ы б|рни|дар|уң | кү|чок|атт|ени|маа|ылг|бүг|ң х|кын| та|ыра|аци|ал |гаа|н х| со|рла|ээр|ң э|ир | чу|ып |ң ч| на|уру|иит|ер |н а|лда|бод|ама|рүн|газ|гла|ити| ча|р к| ар| оо|п б|гү |а х|ерн|ция|өөр|е к|рны|кан|арн|хам|жыл|ара|улг| хү|нуң|р у|сту|туг|оң |лаа| са|ооң|дал|ү к| хе|уну|дун| чү|оду|ни |лде|а ч|өре|а д|р а|ынд|ург|ээн|кыл|үлэ|үлг|ок |дең| ни|тта|нии|лыр|н т|үне|угу|ден| уг|н д|еп |шаа|ең |тын|хан|нар|нна|ы х|чор|дер|арл|чур|арг|ойл| кө|дил|эп |а т|алб|ка |ш х| ке|ске|ири|ааш|рыл|ны |етк|гуу|р д|ү б|урт|илг|үнд|ген|өск| өс| ол|инд|күр|бот|нац|еге|амг| че|эр |лел|өрү|ыша|ред|ада|язы|еви|кам|ашк|ды |хоо|дан|айы|ы к|рал|шка',abk:'ара|ра |еи |ала|а а|а и| иа| ау|ауа|заа|реи| аз|ақә|зин|уп |аза|әа |и а|ы и| да|оуп|гьы|лак|ак |ьы |уаҩ|зар|атә|лар|аҩы|аал|арб| еи|к а|ыла|аар|қәа|дар|ҩы |у а|ы а|рба|әеи|бан|ази|ла |а р|моу|иар|роу|тә |оу | им|анз|қәе|нза|ин |ны | ры|аре|аро|и и| ма|н и| ах|әар| их|имо|ила|рат|аҭа|шьа|ахь|а д|аҵа|ҵар|и р|рақ|аха| ал| аи|аз |уа |п а|қәи|әиҭ|аны|иҧш| из|еиҧ|ҭра| ам|ахә|нқә| ир|инқ| зе|тәы|әла|ы д|а м|ура|шәа|әыл|егь|жәл|ацә|ана|неи| ин|цәа|рра|хәа|ҳәа|а з|ма |а у|п д| аа|мза|ан |ина|ьар|леи|гь |рым|арр| уб|арг|мам| аҭ| аб|әан|сгь|асг|хар|гыл| ад|хра|зы |зег|әи | на|иҭр|азы|ас |ажә|кәа|акә|ҭаз|мҭа|уаа|арц|иал|амз|бас|тәи| ҳә|иха|аҳә|ри |ргь|хақ|агь| рз|аац|ҭаа|лаз|аҧш|дун|каа|има| ха|з а|уне|ықә|изи|уба|ышь|ашь|ага|ар |еил|раз|аҭы| ре|наг|ҳәы|рал|лаҭ| аҳ|хәы|мил|рҭ |ы е|рц |аба|да |раа| ды|лах|иду|ада| ид|ҧшы|ахы|о а|иҟа|нас|бар|амҭ|аӡә|ҭах|хьа|әыр|п и|ыҟа|бжь|гар|у и|ало|рхә|ҟаз|аан| аҧ|зак|аам|ҭқа|аҳа|мҩа|дыр|әым|әаҧ|ырш|аус|нҭқ|маз|ами|хы |иры|зеи| аӡ|куа|ынҭ|еид| ан| иш|әын|аа |қәы|шьҭ| ҟа|иҭа|қар|гӡа|ус |аҧс|ым |м а|р а|ҧш |ҭар|хьч|әал|хьы|алх| ус|ӡба|и д|хаҭ|лаг|с и|а ҟ|ҿка|иҿк|ьҭр|бри|әра|ьақ|ҳаҭ|жьа|аҟа|рыл| аҟ|арҭ|циа|ам |абр|уаз| аҵ|кгь|ацх|акг|агӡ|ҭыр| иҟ|еиц|с а|әгь|аша',alt:' ја| та|ла | ка|тап|рик| ки| ла|эри|ыҥ |икт|п‐э|‐эр|а к|ап‐|ижи| бо|киж|лу |ныҥ|ажы|тӱ |ктӱ|ле |ына|айы| ту| он|ы л|лар| ке|жы |а т|јар|ери|каж|бол|да |ар |га |рга| де|учу|де |жи | уч|ый |иҥ |чур|ын | би|ынд|ары|йым|е ј|рлу|урл|ер |јай|е к|нды|оло|арг| ле|рын| эм|эме|ара|аҥ |ан | те|зе |ин |езе|ган| ор|ҥ т|оны|ниҥ|лга|зын|йын|мез|ыны| је|алы|ула|ҥ к|кер| ал|ык |рин|ок |ӱ к| ай|наҥ|ере|до |ири|ция|кан|нда|ала|лык|а ј|тур| ба|р т|р у|рӱм|лор|тер|ини|аци|бир|е т|ҥ ј| ко|анд|ыкт|на |о о|ор |а а|кте| јо|јаҥ|јӱр|ы ј|ине|ым |ӱре|рек|азы|у к|бой|аны| ол|ару|ен |ойы|‐та|ик |и ј|ный|улу|а б|аҥы|кем|ай |кор|лан|ыла|ге |оно| иш|дый|н ј|и к| бу|рул|кал|р а|иле| тӧ|к к| јӱ|тай| ар|жин|тар|алд|ама|н а| кӧ|зин|лер|ады|ӱми|кта| ок|н т|еп |ард|ана|алг|н к|йдо|ойд|мин|дар|ген|ной|ӱрӱ|теҥ|у б|не |ри |јет|ол |рды|р о|деп|ӧмӧ| ул|р л|к б| чы|а о|ры |ств|оон|едӱ|тки|е б|лге|ору| то|ьны|ҥ б|льн|аль|ҥ‐т|тӧз|айа|ны |нар|нде|ек |п ј|кти|тек| кӱ|еҥ‐|ире|амы|оро|тво|роо|ас | бӱ|ди |огы|одо|оры|ишт|лик|с у|кши|екш|инд|етк|йал|еер|ада|рер|а э|лус|и б|ект|нчо|онч|ӱ о|ы б|ҥ а|кӧр| ӱр|руг|соц|аја|тод| ај|кир|ды |ӱмд|рил|ир |илг|зы |баз|чын|јӧм|лда| на|ӧзи|е э|ка |рто|орт|иял|ып |е о|дыҥ|ҥын|еҥ |гал|и о|ши |ред|ы а',kjh:' па| по|аза|паз|а п|за |ай |лар|ар |пол|а к|ға |ың | тј| кі|ала|ған|рға|на | ха|ізі|ан |кіз|ның|лға|арғ|тјр| ки|јре|е п|аны| ал|зын|ара| на| пр|ің |кир|нің|ире|іні|зін|олғ| са|да |н н|ын |азы|ң п|пра| ча| чо|най|р п|рге|пар|ге |р т|рек|ре |а а|нар|ары|пос|ына|лер| хо|н п|нда| пі|ола|ені|аци|сты|сха|а т|ос | ар|а ч|а х|й п|ек |ыра| то|ны |ыны|ция|чар|лай|хай|ығ |рын|ген|ста|ост|ы п|дай|а с| оң|нна|ер |ен | ан|оңд|ңда|еле|ынд|ерг|чон|пір|рай|онн|ра |іг | ту| чу|асх|ха |урт|чур|алы|ң т|льн|аль|ьна|нын|не |зі |зар|рел| ти|айд|сан|рта|арн|ері|рав|с о|іне|ін |рны|тыр|нін|і п|айл|озы|зна|хан|е а|ң а|хаз|зы |ча |чох|тер|лан|ғыс|тар|сте|н т| пу|р а|к п|ох |пу | сы|ним|ыс |тоғ|пас|оғы|нча|ні |име| ни|аво|дыр|раз|азн|ағы|поз|ас |анд|хоо|та |гре|ң ч|нал|оос| та|ғла| ол|аба|нац|кен|рер|лге| да|ана|н х|тас|ады|рад|а о|езі|дағ|тха|с п|іре|е х|й к|й ч|пир| пи| чи|ирг|аст|еді|йзы|айз|иң | де|е ч|ард|н с|йла|ағ |она|чат|е т|ірі|дыл|бин|і т|рее|н к|сын|рга|ніс|олд|ылғ|й а|чыл|лды|аа |кір|ли |н а|лир|лығ|де |хон|лын| со|ң с|тол|ест|ред|г п|ых |анн| ре|йда|инч|ылб|тиң|ске|ект|сай|айб|атх|нге| ег|циа|оци|соц| те|нға|ачы|рач|ып | ке|діг|егр|рде|ліг|ныс|с т|рі |ғ п|с ч|јст|тјс|а и|иск|туз|рін|енн|ион|й т',evn:'ин | ил|илэ| тэ|тэд|чин|эде|кин| би|ду |тык|ыки|эл |тын| о̄|ын | та|н т|э̄н|эты|н и|ачи|ңи |н э|мач|лэт| эр|̄н |ава|дет| дя|ет |э̄ |упк|на |иты| гу|най|ки | мэ|вэл| вэ|ств|элэ| уп| һа|лэл|эр |ан |нңи|ми |пка|ай |нэ |кат|дяр|̄нм|ва |чэ̄|н б|о̄м|тар|гу | ты|мэ̄|лэ |мчэ| ая|дук|нду|ция|дер|ви |н а|э̄т|эчи|н г|ган|дян|э т|аци|н о|эн |мэч|тчэ|ун |һав|нма|яри|эгэ|т б|эдэ|ӣ |а т|ат |дун|бим|р и|н д|̄ма|гэ̄|ден|а д|ани|рэ̄| ду|нму|ама|уңа| да|вад|и т|и д|ту |а и| ав| ну|т т|у и|и и|имч|урэ| ңи|тво|н у|ысу|дыс| ды|рэ |инд|ди |рга|бис|иси|нуң|дэ̄|н һ|гды|лду|̄чи|эру|мук|лды|лэ̄|ады|и в|ичэ| со|бид|сӣ|кит| об|ит |суд|̄нң|да |ча̄|син|ңан|эрэ|н с|а̄ |и б|уки| бэ|эвк|рин|вки|̄ты|эгд| бу|аду| дэ| де|ен |дыт|р д|ма |вэ |а̄н|яра|элд| дю|кэ̄|н ң|ери| эм|у д| эв| ит|ук | га|а э|ир | ич|аты|и г|рӣ|эду|ар |иде|и о|э̄л|эвэ| ур| ас|һэг| һэ| һу|эт |льн|дем|аль|э̄в|вэр|ңэ̄|ман|ды |арс|рст|гэл|л б|л т|нӣ|ал |тэг| эд|яна|ян |бин|ӣв| са|у т|чир|ты̄|тки| го|гос|осу|тыл|уда|дар|дин|ӯн|рэв|чэт|н м|ерэ|энэ|еңэ| гэ|дең|эси|лва|уку|тва|ӣч|си |суч|учи|̄ т|и у| – | су|ьна|а б|т г| ум|уму|н н|лэд|̄ и|анд|тур|у с|уңт|адя|ңту|илд|эма|у б|эмэ|л и|бэл|ннэ|инм| си|ыга|тыг|тат| на|и м|ича|вэт|алд|нна|енн|̄л |ыты|анң',cjs:'ын | ки|ижи| па|киж| по|да | қа|н к|пар|зын|ға | ча|жи |а к|рчы|чын|арч|ге |а п| ке|ин |аны|пол|ана|н п| са|алы|рге| да| те|қа |ған|ар |сан|за |лар|ың |ан |лер|зин|арғ|н қ|азы|ара|ере| чо|қал|кер|а ч|ген|наз|ола|а т|нға| то|аза|нар|ығ | пи|нын|а а|аға| кӧ| ан|ерг|иле|жил|кӧр|рға|аң |қай|ынғ|лық|н т|ның|оол|тоо|н а|айд|ыға|ер |ери|сын|ең |ны |ықт|чад|ады|нна|ен |қта|шқа|уғ |лзы|ары|тар|чар|п к|ашқ|пир|ң к|нер| ул|и п|ези|улу|н ч|луғ|а қ|аба| че| ал|паш|қан|а с|ғ т|де |ол |ынн|ы п|жин|поз| ту|рбе|ң п|нда|ы ч|озу| иш|сқа|еги|рег|гин| шы|рин|ция|теп| қы|еп |ӱрг|ып |ғ п|пош|зун|рын|уны|баз|ӱп |ош |аци|е с| аа|кем|рба|и қ|тең|ебе|ште|ба |ишт|олз|ӧрӱ|с п|ӧре|чер|рӱп| ол|ыйы| ар|лығ|дый|р п|рек| тӧ|нне|оза|ағы|кир|ип |нге|инг| ӱр|тқа|чат|ини|асқ|чоз| не|тег|еле|тсы|еге|пас|ш ч|кла|п п|ек |иң |по |рғы|е ч|ени|р а|ра |чығ|ча |ала| но|ноо|йды|дығ|рзи|бе |ерд|неб|е а|қаа|е у|н н|аан|ынд|а ӱ|зақ|наң| ай|ң ч|ас |қат|ааң|оо |жиг|ла |алз|и т|тут|о д|ири|иге| де|дек|екл|е д|рац|тыр|а д|ни |йда|ста|е т|и а|е п|лағ|рда|инн|и к|бен|шсы|ақ |ем |ре |р ч|тығ|ыны|н с|атқ|ғ д|чон|ыст| ағ|қты|нде|тың|ң қ|анд| қу|икт|быс|кте|язы|чоқ| пӱ| ти|л п|р к|яда|нан|ун |ына|без|рик|оқ |тча|ң у|инд|дар| эт|он |аар|ққа',eve:'эн | бэ|бэй|нэн|ан |да |‐да| би|эй |н б|нян|ян |ннэ| ня|н т|н н|л б|мэн|тэл|инн|чин|кэн|эл |өмэ|мэт| мэ|эсн| ҥи| өм| эс| та|ни |этэ|и‐д|а б| но|ин |ноҥ|элэ|сни|оҥа|бин|эчи|ара|н ө|дьи| тэ|н д|ҥан|ств| го|н э|нна|дук| хо|н г|рав|ҥи‐|н ҥ|ргэ|эйи|икэ|тар|н х|дэн|тти|йил|суд| пр|тво|бид|ник|идэ|ур |и н|этт|тэг|а э|эгэ|н м|ьи |дар|иву|э б|бэл|най|ич |ай |уда|н а|нан| дь| ху|ки |во | тө|ти | эн|ча |гос|аль|эйд|арс|рст|осу|гур|й н| га|чим|и э|пра|гэл|кэт|и т|ын |лэч|гэч|нтэ|ург|й б| гу|н п|куч| ба|ир |йдь|ач |лив|энд|дьэ|гэн| ач| бо|нат|тта|та |льн|ла |ьна|ун |тын|алд|мэр|к‐д|кон|н һ|тэ | аи|мнэ|кан|и б|ил |имн|утт|нду|эни|онт|хон| һи|уку|рду| ку|ала| һа|эрг|лэн|и ҥ|снэ|вал|й м|ав |этч|лэ |чур|бу |окэ|бок|а а|лбу|ция|нди|илб|аич|р б|и х| ҥэ|ҥэл|ари| ил|иду|лгэ|дэ |илэ|иһи|ака|ями|лда|бал|идь|имэ|лни|инэ|куй|ми |тчу| кэ|дял| ям| дя|төр| дю|гэв|пку|упк|атт|н к|ман|ама|хуп|йи |ч т|и а|р г|ҥии|айу|а д|ава| де|тал|ми‐|дол| до|анн| за|ээн|зак|ако|ача|рэк|н‐д|чэ |и и|гэт|они|аци|лкэ| хи|й х|ди |энн| на|унн| су|н и|ьэн|төг|н я|өгэ| эр|эки|дьо|он |ук‐|бак|ҥид|дач|чча|йут|иал|циа|оци|һай|соц| со|биһ|лан|вур|дюл|омк|лдэ|там|так|ика|а о|ьом| ор|рак|эли|ак |эчэ|тэн|вун|ч б|й г|тур| ‐ |ите|укэ| ай|нюн',ykg:'уол|раw|ньэ|дэ |ол |аwн|л м|эй | мо|ора|мор|йуо|ьэй|аҕа| та|эл |ҕа | эл| кө|көд|ьэ |тэ |wнь| па|дьэ|өдэ|эҥ |льэ|анэ|ҕан|э к|даҕ|аат|даа|пар|атэ|тад|ада|нэ | ту|йаw|эҕа| йа|ара|wна|туд|удэ|э т|эйу|нар|wаа|аwа|элэ|э й| мэ|ар |э п| ча|ьэл|э w|ньи| нь|wиэ|аан|ги |эк |дьи|аw |лҕа|урэ|ндь|эдэ|лэ |й т| ки|ьил|лэк| wи|ань|лль|эда|уйу|й к|w п|ури| су|ҕат|кин|уур|э ч|энь|э м| ҥо|нэй| уу| тэ|мэ |уон| кэ|э э|нул|элк|тэт| эн|ри |ьии|ину|эн |ҕад|адь|нну|нь |инь|эдь|бан|ат |лк |иэй|таҥ|нун|энн|итэ|аль| со|рэҥ|дэл|иэн| wа|одэ|л т|лги|ньа|ҥ э|эрэ|нуй|э н|к э| ха|нуо|ул |чаҕ| эw|а э|пэд|мэн| чи|чии|уку| ль|дэҥ|ийу| чу|льи|анд|э л|и т|дит|имэ|ҥол|нэҥ|э у|э х|ҥдэ|ьуо|эwэ|пэҕ|wэй|эт |чуҥ|ару|олл|а к|р т|куо|нҕа|уҥд|маа|ьэр|луо|аал| лэ| ма|льн|лда|ҥ т|кэд|эги|он |эйн|дэҕ|унҥ|эру|кун|л л|эwр|мэд|н н|ади|эмэ|ура|лэw|йнб| ур|нбу|бур|рэб|ҥи |олу| ди|нэм|аму|рук|аҥу|й с|чам|эль|ьэҥ|дьу|р э| пр|и э|эбэ|чуо|ола|л ч|и к|ьнэ|ил | ба|пэ |апэ|хад|раа|энд|ств|иэ |нур| нэ|ция|й ч|алл|ьал|ай |най|лдь|а ч|ҥну|лпэ|wрэ|одь|пэл|ҥин| эд| уо|инҕ|оҥн|рэл|йэ |н ч|олҕ|аап|ан |иий|ьид|э б|э с|улҕ| ни|ним| чо|чоҥ|аай|тэй|кэй|ану|оҕо|амб|т э|мэл|иал|э ҥ| ко|уул|суу|олн|ут |л э| по|иил|ууй| ти|лнь|мөр|оку|ииг|аар|а м|иги|ҥ м|аци',nio:'нә | ку| ӈа|ә” |ӈан|мән| ӈи|аса|ны |ана|онә|нас| ӈо| мә|ӈон|әди|әны|са |ӈил|иле|ле |рәд|урә|кур| пр|ты |ти |” ӈ|пра|рав| ни|ту |тән| кә|ите|е м|нту|әнә|те | хо|дит|дя | тә|хон|тү |е ӈ|сан|ынт|ы ӈ|әнд|ити|анә|мын|үтү| мы|нде| ня|во |” к| ӈә|бса|нә”|и” |нты|у” |бся|ә ӈ|аво| та|ся |ә к|кәр|ә т|ә п|” х|тти|бит|” т|тан|әтт|онт|де”| бә|уни|е” |уо | хе|әй |ә н|и ӈ| те|ы к|мәә|туо|няг|и м| ху|кун|а х|ягә|ный|гәт|хүт|иби|ндя|тә | ме|бән| де|анд|ый |о” |изи|рçу|итт|елы| сы|әрç|ә м|ыты|әә |ндә| ит| ӈу|кәт|түо|” н|” с|”тә|ств|я ӈ|әтә|әту|нин| си|ава|ены|я к|нсә|тен|ттү|аци|хел|у к|әмә|ы н|ану|али|әты|ди |нил|ыӈ |а ӈ|хун|ы” |у ӈ|ӈәз|ә х|тәт|әән|әә”|мты|гуй|тыӈ|лит|нян|зә |тәб|ниб|тәр|зи”|ини|” м|бәу|янд|нәй| сә|әбс|ӈуо|уом|ы с|ни |гал|гәә|ерә| не|й ӈ|әйб|мел|”дя|ыби|етә|ы м|ү м|йбә| су|а” |ӈәй| ка| об|е н|ӈиз|иде| на|сыт|тум|уо”|тыә| их|агә| хү|о т|рә”|ыбс|я и|унс|ыры|атә|сиә|й н|илы|ӈ ӈ|сы |әзы|и н| мо|ызә|уйс|нен|” д|уод|ы и|вай|наг|суд|а к|моу|” п|лы”|ы х|әуз|уза|кон|у н|ә с|инт|мту|тыг|ыгу|ы т|о ӈ|ели|о н|нтә|ымт| дя|ция|айт|унт|сыл|нии| го|дей| ко|иәр|би”|үо”|омт|й с|лид|ибс|әрә|унә|и к|сун|ү” |ы”с|йся|”сы|үо |ихү|сиб|çу |түӈ|ябс|нис|лыг|дә |гәй|о д|у т| тя| дү|ӈәт|ү”т|уда|ниа|әнү| ма|нер'},Arabic:{arb:' ال|ية | في|الح|في | وا|وال| أو|ة ا|أو |الم|الت|لحق|حق |لى |كل |ان |ة و|الأ| لك|لكل|ن ا|ها |ق ف|ات |مة |ون |أن |ما |اء |ته |و ا|الع|ي ا|شخص|ي أ| أن|الإ|م ا|حري| عل|ة ل|من |الا|حقو|على|قوق|ت ا|أي |رد | شخ| لل| أي|ق ا|لا |فرد|رية| ول| من|د ا| كا| إل|خص |وق |ا ا|ة أ|ا ي|ل ف|ه ا|نسا|جتم|ن ي|امة|كان|دة | حق|ام |الق|ة م| فر|اية|سان|ل ش|ين |ن ت|إنس|ا ل| لا|ذا |هذا|ن أ|لة |ي ح| دو|ه ل|لك |ترا|لتع|اً |له |إلى| عن|ى ا|ه و|ع ا|ماع|د أ|اسي| حر|ة ع|مع |الد|نون| با|لحر|لعا|ن و|، و|يات|ي ت|الج| هذ|ير |بال|دول|لإن|عية|الف|ص ا| وي|الو|لأس| إن|أسا|ساس|ماي|حما|رام|سية|انو|مل |ي و|عام|ا و|تما| مت|ة ت|علي|ع ب|ك ا| له|ة ف|قان|ى أ|ول |هم |الب|ة ب|ساو|لقا|الر|لجم|ا ك|تمت|ليه|لتم|لمت|انت| قد|اد |ه أ| يج|ريا|ق و|ل ا|ا ب|ال |يه |اعي|لدو|ل و|لإع|لمي|لمج|لأم|تع |دم |تسا|عمل|اته|لاد|رة |اة |غير|قدم|وز |جوز|يجو|عال|لان|متع|مان|فيه|اجت|م و|يد |تعل|ن ل|ر ا| يع| كل|مم |مجت|تمع|دون| مع|تمي|ذلك|كرا|يها| مس|ميع|إعل|علا| تم| عا|ملا|اعا|لاج|ني |ليم|متس|ييز|يم |اعت|الش| تع|ميي|عن |تنا| بح|لما|ي ي|يز |ود |أمم|لات|أسر|شتر|تي | جم|ه ع|ر و|ي إ|تحد|حدة| أس|عة |ي م|ة، |معي|ن م|لمس|م ب|اق |جمي|لي |مية|الض|الس|لضم|ضما|لفر| وس|لحم|امل|ق م|را |ا ح|نت | تن|يته| أم|إلي|واج|د و|لتي| مر|مرا|متح| ذل| وأ| تح|ا ف| به| وم| بم|وية|ولي|لزو',urd:'ور | او|اور| کی|کے | کے|یں | کا|کی | حق|ے ک|ایٔ|کا |یٔے| کو|یا |نے |سے | اس|ٔے |میں|کو | ہے| می|ے ا| ان|وں | کر| ہو|اس |ی ا|ر ا|شخص| شخ|حق | سے| جا|خص |ہر |ام |ے م|ں ک|ہیں| یا|سی |ادی|آزا| آز|زاد|ص ک|ہ ا|ہے |جای|ا ح|ر ش|ت ک|کہ |م ک| پر|ی ک|ان |پر |۔ہر|دی |یٔی|س ک|ا ج|ر م|ہے۔|ق ہ|ں ا|ی ح|و ا|ار |ن ک|قوق|کسی|حقو|ری |وق |ے گ| ہی|ی ج| مع|سان| نہ| مل| حا|ٔی | جو|نی |کرن| لی|تی |ی ت|نسا|ل ک| کہ|جو |انس|اپن|ے ب|نہ | اپ|یت |ا ا|ہ ک| کس|ر ک|رے |ے ہ| ای|می |ل ہ|۔ ا|ے ل|ی ش|رنے|وہ |حاص|ی م|معا|اصل|صل |یں۔|ویٔ|نہی|ملک|ایس|انہ|ات |ی ب|د ک|ی ہ| تع|کیا|ق ک|ر ہ|ا م|دہ | من| بن| قو|ے ج|یہ |ں م|اشر|مل | دو|عاش|قوم|ر ب|انی|وام|قوا|اقو|لیٔ|دار| وہ| و | عا|ی س|بر |علا|اد |ہ م|و ت|ر ن| جس|ے۔ہ|ے، |انو| دی|گی |لیم|یوں| قا| یہ|دوس|ے۔ |ا ہ|تعل|یم |ر پ|جس |ریق|ے ح| اق|نیا|لک | گی|ین |یاد| مس|لاق|، ا|ی ن|پنے|وری|م ا| با|علی|یر |ی، |انے|ون |ن ا|ر ع| بر|ی آ|ر ح| رک|ے پ|کر |گا۔| پی|سب | گا|نا | پو|یسے|رای| مر|اری|قان|نون| مم|ندگ| اع|دگی|ہ و| ہر|ر س| چا|خلا|ا پ|ق ح| بھ|س م| شا|ہوگ|ے خ|وسر|رتی|ومی| بی|رکھ| مت|کوی|ر آ|پور|اف | مح|ے س|ہوں|نکہ|ونک|ت ا| طر|ے ع|یٔد|د ا|ال |ں۔ |م م|اں | مق|غیر|پنی| ام|ں، |من |ہو |ریع|و ک|ذری| ذر|عام|، م|دان|ادا|اعل|مام|تما| عل|دیو|بھی|ھی |بنی|ے ی|ا ک|اوی|ل م| زن|یاس|لان|عمل| عم|ت م| بچ',skr:'تے |اں | تے|دے |دی |وں | دا| حق| کو|ے ا|کوں| دے|دا | دی|یاں| کی|ے ۔|یں |ہر | ۔ |کیت|ہے | وچ| ہے|وچ | ان| شخ|شخص|ادی|ال | حا|اصل|حق |حاص|ے م|خص |صل |ں د| نا|یا | ای|اتے|ق ح|ل ہ|ے و|ں ک| ات|ہیں|سی | مل|نال|زاد|ازا|ی ت| از|قوق|ار |ا ح|حقو| او|ص ک| ۔ہ|۔ہر|ر ش|دیا|ے ج|وق |ندے| کر|یند| یا|نہ | جو|کہی|ئے |ی د|سان|نسا|وند|ی ا|یتے|انس|ا ا|ملک|ے ح|و ڄ|ے ک|ڻ د| وی|یسی|ے ب|ا و| ہو|ں ا|ئی |ندی|تی |آپڻ|وڻ |ر ک|ن ۔| نہ|انہ|جو | کن| آپ| جی|اون|ویس|ی ن| تھ| کہ|ان |ری |ڻے | ڄئ| ہر|ے ن|دہ |ام |ں م|ے ہ|تھی|ں و|۔ ا|ں ت|ی ۔|کنو|ی ح|ی ک|نوں|رے |ہاں| بچ|ون |ے ت|کو | من|ی ہ|اری|ور |نہا|ہکو|یتا|نی |یاد|ت د|ن د| ون|وام|ی م|قوا|تا |ڄئے|پڻے| ہک|می | قو|ق ت|ے د|لے |اف |ل ک|ل ت| تع|چ ا|ین |خلا|اے |علا| سا|جیا|ئو |کرڻ|ی و|انی|ہو |دار| و |ی ج| اق|ن ا|یت |ارے|ے س|لک |ق د|ہوو| ڋو|ر ت| اے|ے خ| چا| خل|لاف|قنو|نون|پور|ڻ ک| پو|ایہ|بچئ|چئو|ات |الا|ونڄ|وری|این| وس| لو|و ا|ہ د| رک|یب |سیب|وسی|یر |ا ک|قوم|ریا|ں آ| جا|رکھ|مل |کاں|رڻ |اد |او |عزت| قن|ب د|وئی|ے ع| عز| ۔ک| مع|اقو|ایں|م م|زت |ڻی |یوڻ|ر ہ| سم|ں س|لوک| جھ| سی|جھی|ت ت|ل ا|اوڻ|کوئ|ں ج|ہی |حدہ|تعل|ے ذ|وے |تحد|متح|لا |ا ت|کار| اع|ے ر| مت|ر ا|ا م|ھین|ھیو|یہو| مط| سڱ|ی س|ڄے |نڄے|سڱد|لیم|علی|ے ق| ذر|م ت| کھ|ن ک| کم|ہ ا|سار|ائد|ائی|د ا| ہن|ہن |ی، |و ک|ں ب|ھیا|ذری|ں پ|لی ',uig:' ئا| ھە|ىنى|ە ئ|نىڭ|ىلى| ۋە|ىڭ |ۋە | ئى| بو|ھوق|وقۇ| ھو|قۇق|نى |بول| ئە|لىك|قىل|ىن |لىش|شقا|قا |ەن | قى|ن ب|ھەم|ى ئ|ئاد|ىشى|دەم|ادە|كى |لىق|غان|ىي |ىغا|گە | بى|دىن|ىدى|ەت |كىن|ىكى|ندا|ۇق | تە|نلى|تىن|ەم |لەت|قان|ىگە|ىتى|ىش |ھەر|ئەر| با|ولۇ|دۆل|غا |اند| دۆ|اق |مە |لۇش|دە |لۇق| ئۆ|ان | يا|ەرق|ۆلە|ركى| قا|ەرك|ەمم|ا ئ|ممە|ۇقى|ىق | بە|رقا|داق|ارا|ىلە|رىم|ىشق|ى ۋ|لغا|مەن|اكى|ەر |ا ھ|دۇ |ياك|ۇقل|ئار|ق ئ|ىنل|لار| ئې|ى ب|لىن|ڭ ئ|ئۆز|ق ھ|شى |ىمە|قلۇ|ن ئ|لەر|ەتل|نىش|ىك |ەھر| مە|ھرى|لەن|ىلا|ار |بەھ| ئۇ|ە ق|ئىي|اسى| مۇ|رلى| ئو|بىر|، ئ|بىل|ش ھ|بار|ى، |ۇ ھ|ايد|ۇشق|شكە|ە ب|يەت|ا ب|رنى|كە |ىسى| كې|ېلى|الى|ەك |م ئ|ماي|ولم|تنى|ىدا|ارى|يدۇ|لىد| قو|ەشك|تلە|ك ھ|انل|ەمد|مائ|ئال|ر ئ|مدە|ىيە|ش ئ|ە ھ|لما|ائى|ئىگ|دا |ي ئ|ۇشى|راۋ|ا، |سىي| تۇ|كىل|ە ت|ىقى|قى |ۆزى|ېتى|ىرى|ىر |ىپ |ى ك|ن، |ر ب|لەش|اسا|اۋا|ى ھ|شلى|ساس|ادى|تى |اشق|ەتت|قىغ|ىما|انى| خى|ۇرۇ| خە|ن ق|منى| خا|چە |ى ق| جە|رقى|تىد| ھۆ|باش|ارل|ئىش|تۇر| جى|مۇش|نۇن|شۇ |انۇ|ۇش |رەك|ېرە|كېر| سا|الغ|ۇنى|ئېل|ىشل|تەش|خەل|مەت|اش |دىغ|كەن|ەلق|تىش|مىن|ايى|سىز|ق ۋ|نىي|جىن|رىش|پ ق| كى|ېرى|ئاس|ەلى| ما|تتى|ىرل|ولى| دە|ارق|سىت|ە م| قە|شىل| تى|ەرن|كىش|ن ھ|ەلگ|ەمن|ك ئ| تو|ى ي|قتى|ئاش|تىم|تەۋ|ناي|ىدە|ىنا| بۇ|ىيا|زىن|امى|قار|شكى|ىز | ئۈ|ەۋە|ۆرم|ە خ|شىش|ىيى|جتى|ىجت|ئىج|نام|تەر',pes:' و | حق| با|که |ند | که| در|در |رد | دا|دار|از | از|هر | هر|یت |ر ک|حق |د ه|ای |د و|ان | را|ین |ود |یا | یا|را |ارد|ی و|کس | کس| بر| آز|باش|ه ب|آزا|د ک| خو|ه ا|د ب|زاد| اس|ار | آن|ق د|شد |حقو|قوق|ی ب|وق |ده |ه د|ید |ی ک|و ا|ور |ر م|رای|اشد|خود|ادی|تما|ری | اج|ام |دی |اید|س ح|است|ر ا|و م| ان|د ا|نه | بی|با | هم| نم|مای| تا|د، |ی ا|انه|ات |ون |ایت|ا ب|ست | کن|برا|انو| بش| مو|این| مر|اسا| مل|وان|ر ب|جتم| شو| اع|ن ا|ورد| می| ای|آن | به|و آ|ملل|ا م|ماع|نی |ت ا|، ا|ت و|ئی |عی |ائی|اجت|و ب|های|ن م|ی ی|بشر|کند|شود| من| زن|ن و|ی، |بای|ی ر| مس|مل |مور|ز آ|توا|دان|اری|علا|گرد|یگر|کار| گر| بد|ن ب|ت ب|ت م|ی م| مق|د آ|شور|یه |اعی| عم|ر خ|ن ح| کش|رند|مین| اح|ن ت|ی د| مت|ه م|د ش| حم|و د|دیگ|لام|کشو|هٔ |ه و|انی|لی |ت ک| مج|ق م|میت| کا| شد|اه |نون| آم|اد |ادا|اعل|د م|ق و|ا ک|می |ی ح|لل |نجا| مح|ساس|یده| قا|بعی|قان|ر ش|مقا|ا د|هد |وی |نوا|گی |ساو|ر ت|بر |اً |نمی|اسی|اده|او | او| دی| هی|هیچ|ه‌ا|‌ها|یر |خوا|د ت|همه|ا ه|تی |حما|دگی|بین|ع ا|سان|ر و|شده|ومی| عق| بع|ز ح|شر |مند| شر|ٔمی|أم|تأ|انت|اند|اوی|مسا|ردد|بهر| بم|ارن|یتو|ل م|ران|و ه|ر د|م م|رار|عقی|سی |و ت|زش | بو|ا ا|ی ن|موم|جا |عمو|رفت|عیت| فر|ندگ|واه|زند|م و|نما|ه ح|ا ر|دیه|جام|مرد|ت، |د ر|مام| تم|ملی|نند|الم|طور|ی ت|تخا|ا ت|امی|امل|دد | شخ|شخص'},Devanagari:{hin:'के |प्र|और | और| के|ों | का|कार| प्|का | को|या |ं क|ति |ार |को | है|िका|ने |है |्रत|धिक| अध|अधि|की |ा क| कि| की| सम|ें |व्य|्ति|क्त|से | व्|ा अ|्यक|में|मान|ि क| स्| मे|सी |न्त| हो|े क|ता |यक्|क्ष|ै ।|िक |त्य| कर|्य | या|भी | वि|रत्|र स|ी स| जा|स्व|रों|्ये|ेक |येक|त्र|िया|ा ज|क व|र ह|ित |्रा|किस| अन|ा स|िसी|ा ह|ना | से| पर|र क| सा|देश|गा | । | अप|्त्|े स|समा|ान |ी क|्त |वार| ।प|ा प| रा|षा |न क|।प्|ष्ट|था |अन्| मा|्षा|्वा|ारो|तन्|वतन|ट्र|्वत|प्त|ाप्|्ट्|राष|ाष्| इस|े अ| उस| सं|राप|कि |त ह|हो |ं औ|ार्|ा ।|किय|े प| दे| भी|करन|री |जाए|ी प| न |र अ|क स|अपन|े व|ाओं|्तर|ओं | नि|सभी|रा | तथ|तथा|िवा|यों|पर | ऐस|रता|ारा|्री|सम्| द्|ीय |िए |व क|सके|द्व|होग| सभ|ं म|माज|रने|िक्|्या|ा व|र प| जि|ो स|र उ|रक्|े म|पूर| लि|ाएग| भा|इस |त क|ाव |स्थ|पने|ा औ|द्ध|श्य|र्व| घो|घोष|रूप|भाव|ाने|कृत|ो प|े ल|लिए|शिक|ूर्| उन|। इ|ं स|य क|्ध |दी |ी र|र्य|णा |एगा|न्य|रीय|ेश |रति|े ब| रू|ूप |परा|्र |तर्| पा| सु|जिस|तिक|सार|जो |ेशो| शि|ानव|ी अ|चित|े औ| पू|ियो|ा उ|म क|ी भ|शों| बु|म्म|स्त|िश्|्रो|्म |ो क| यह|र द|नव |चार|दिय|े य|र्ण|राध|ोगा|ले |नून|ानू|ोषण|षणा|विश| जन|ारी|परि|गी |वाह|साम|ाना|रका| जो|ाज |ी ज|ध क|बन्|ताओ|ंकि|ूंक|ास |कर |चूं|ी व|य ह|ा ग|य स|न स|त र|कोई|ुक्|ोई | ।क|ं न|हित|निय|याद|ादी|्मा|्था|ामा|ाह |ी म|े ज',mar:'्या|या |त्य|याच|चा | व |ण्य|प्र|कार|ाचा| प्|धिक|िका| अध|अधि|च्य|ार |आहे| आह|ा अ|हे | स्|्रत|्ये|ा क|स्व| कर|्वा|ता |ास |ा स|ा व|त्र| त्|वा |ांच|यां|िक |मान| या|्य | का| अस|रत्|ष्ट|र्य|येक|ल्य|र आ|ाहि|क्ष| को|ामा|कोण| सं|ाच्|ात |ा न| रा|ंत्|ून |ेका| सा|राष|ाष्|चे |्ट्|ट्र|तंत| मा|ने |किं| कि|व्य|वात|े स|करण|ंवा|िंव|ये |क्त| सम|ा प|ना | मि|कास|ातं|्र्|र्व|समा|मिळ| जा|े प|व स|यास|ोणत|रण्|काम|ीय |ा आ| दे|े क|ांन|हि |रां| व्|्यक|ा म|िळण|ही | पा|्षण|ार्|ान |े अ| आप| वि|ळण्|ाही|ची |े व|्रा|मा |ली |ंच्|ारा|ा द| आण| नि|णे |द्ध| नय|ला |ा ह|नये| सर|सर्|्री|बंध|ी प|आपल|ले |ील |माज| हो|्त |त क|ाचे|्व |षण |ंना|लेल|ी अ|देश|आणि|णि |ध्य| शि|ी स|े ज|शिक|रीय|ानव|पाह|हिज|िजे|जे |क स|यक्|न क|व त|ा ज|यात|पल्|न्य|वी |स्थ|ज्य| ज्|े आ|रक्|त स|िक्|ंबं|संब| के|क व|केल|असल|य अ|य क|त व|ीत |णत्|त्व|ाने| उप|्वत|भाव|े त|करत|याह|रता|िष्|व म|कां|साम|रति|सार|ंचा|र व|क आ|याय|ासा|साठ|ाठी|्ती|ठी |ेण्|र्थ|ीने|े य|जाह|ोणा|संर|ायद|च्छ|स स|ंरक|तील|ी व|त आ|ी आ|ंधा|ेशा|ित | अश|हीर| हक|हक्|क्क|य व|शा |व आ|तीन|ण म|ूर्|ेल्|द्य|ेले|ांत|ा य|ा ब|ी म|ंचे|याव|देण|कृत|ारण|ेत |िवा|वस्|स्त|ाची|नवी| अर|थवा|अथव|ा त| अथ|अर्|ती |पूर|इतर|र्ण|ी क|यत्| इत| शा|रका|तिष|ण स|तिक|्रक|्ध |रणा| आल|ेल |ाजि| न्|धात|रून|श्र|असे|ष्ठ|ुक्|ेश |तो |जिक|े म',mai:'ाक | आ |प्र|कार|िका|धिक|ार |्रत|ेँ |क अ|्यक|िक |्ति| अध|व्य|अधि|क स| प्|क्त| व्|केँ|यक्|तिक|न्त| स्|हि |क व|मे |बाक|मान| सम|त्य|क्ष| छै|छैक|ेक |स्व|त्र|रत्|्ये|ष्ट| अप|येक|र छ|सँ |वा | एह|ैक।|ित | वि| जा|ति |्त्|ट्र|िके|राष|ाष्| हो|्ट्| रा|्य | सा| अन| कर|अपन|।प्|कोन|अछि|वतन|्वत|तन्|क आ| अछ|ताक|था | पर| वा| को|ार्|एहि|पन |ा आ|नहि|नो |समा| मा|्री|रता| नि| का|देश| नह|्षा|क प| दे| कए|रक | सं|ोनो|ि क|न्य|आ स|छि |्त |ल ज|्वा|ारक|ा स|तथा|ान्| तथ|्या|आ अ|ना |ँ क|ान | जे|जाए|वार|ता |ीय |र आ|क ह|करब|िवा|ामा|र्व| आओ|्रस|परि|त क|स्थ|ा प|ानव|रीय|धार|्तर|अन्|घोष|साम|माज|आओर|ारण| एक|कएल|ँ अ|ओर |एबा|स्त|द्ध|्रा|ँ स|रण | सभ|ोषण|क।प|ाहि|रबा|क ज|ा अ|चित|यक |कर |पूर|रक्|नक | घो|षा |िक्|सम्|एहन| उप|र प| अव|एल |ूर्|षणा| हे|त अ|शिक|तु |ाधि|ेतु|हेत|हन |िमे|र अ|वक |ँ ए|जाह| शि|आ प|भाव|े स|्ध |क क|ि ज|प्त|रूप|निर|िर्| सक|च्छ|होए|रति|अनु|सभ |हो |ेल |त आ|चार|ण स|रा |त ह|जिक|ाजि|र्ण|्रक|एत।|ि आ|र्य|सभक|ैक |क उ| जन|त स|ाप्|न प|श्य|न अ|कृत|हु |रसं|री |राप|ा व|जे |क ब|ि घ| भा|उद्|ाएत|्ण |विव| उद|वाध|िसँ|आ व|ि स|न व|ारा|ोएत| ओ |य आ|कान|िश्|न क| दो|णाक| द्|हिम| अथ|अथव|ामे|द्व|ेश |ओ व|ि अ|क ए|वास| पू|षाक|त्त|य प| बी|यता|धक |ए स|थवा|ि द|पर | भे|जेँ| कि|कि |क ल| रू|विश|न स| ले|सार|ाके|िष्|रिव|क र|ास |ेओ |्थि|केओ|राज',bho:' के|के |ार |े क|कार|धिक|िका|ओर |आओर| आओ| अध|अधि|े स|ा क|े अ| हो| सं|र क|र स|ें | मे|में|िक | कर|ा स|र ह| से|से |रा |मान| सम|न क|क्ष|े ब|नो | चा|वे |ता |चाह|ष्ट| रा|ति |्रा|खे |राष|ाष्|प्र| सा| का|ट्र|े आ| प्| सक| मा|्ट्| स्|होख| बा|करे|ि क|ौनो|त क|था |कौन|पन | जा| कौ|रे |ाति|ला | ओक|ेला|तथा|आपन|्त | आप|कर |हवे|र म| हव| तथ|सबह|र आ|ोखे| ह।|िर |े ओ|केल|सके|हे | और|ही |तिर|त्र|जा |ना |बहि|।सब|े च| खा|े म| पर|खात|ान |र ब|न स|ावे| लो|षा |ाहे|ी क|ओकर|ा आ|माज|ित |े ज|ल ज|मिल|संग|्षा|ं क| सब|ा प|और |रक्|वे।|िं |े ह|ंत्|ाज |स्व|हिं|नइख|कान|ो स| जे|समा|क स|लोग|करा|क्त|्रत|ला।| नइ|े। |ानव|िया|हु |इखे|्र |रता|्वत|ानू|े न|ाम |नून|ाही|वतं|पर |ी स| ओ |े उ|े व|्री|रीय|स्थ|तंत|दी |ीय |े त|र अ|र प|्य |साम|बा।| आद|ून |। स|व्य|ा।स|सभे|भे |या | दे|ा म|े ख| वि| सु|केह|प्त|योग|ु क|ोग |े द|चार|ादी|ाप्| दो| या|राप|ल ह|पूर| मि|तिक|खल |यता|्ति| बि|ए क|आदि|दिम| ही|हि |मी | नि|र न| इ |ेहु|नवा|ा ह|री |ले | पा|ाधि| सह| उप|्या| जर|षण | सभ|िमी|देश|े प|म क|जे |ाव | अप|शिक|ाजि|जाद|जिक|े भ|क आ|्तर|िक्|ि म|ेकर|ुक्|वाध|गठन| व्|निय|ठन |।के|ामा|रो | जी|य क|न म|े ल|न ह|ास |ेश | शा|घोष|ंगठ|िल | घो|्षण| पू|े र|ंरक|संर|उपय|पयो|हो |बा |ी ब|्म |सब |दोस|ा। | आज|साथ| शि|आजा| भी| उच|ने |चित| अं|र व|ज क|न आ| ले|नि |ार्|कि |याह|्थि',nep:'को | र |कार|प्र|ार |ने |िका|क्त|धिक|्यक| गर|व्य|्रत| प्|अधि|्ति| अध| व्|यक्|मा |िक |त्य|ाई |लाई|न्त|मान| सम|त्र|गर्|र्न|क व| वा|्ने|वा | स्|रत्|र स|्ये|तिल|येक|ेक |छ ।|ो स|ा स|हरू| वि|क्ष|्त्|िला| । |स्व|हुन|ति | हु|ले | रा| मा|ष्ट|समा|वतन|तन्| छ |र छ| सं|्ट्|ट्र|ाष्|ो अ|राष|्वत|ुने|नेछ|हरु|ान |ता |े अ|्र | का|िने|ाको|गरि|े छ|ना | अन| नि|रता|नै | सा|ित |तिक|क स|र र|रू |ा अ|था |स्त|कुन|ा र|ुनै| छै|्त |छैन|ा प|ार्|वार|ा व| पर|तथा| तथ|का |्या|एको|रु |्षा|माज|रक्|परि|द्ध|। प| ला|सको|ामा| यस|ाहर|ेछ |धार|्रा|ो प|नि |देश|भाव|िवा|्य |र ह|र व|र म|सबै|न अ|े र|न स|रको|अन्|ताक|ंरक|संर|्वा| त्|सम्|री |ो व|ा भ|रहर| कु|्रि|त र|रिन|श्य|पनि|ै व|यस्|ारा|ानव| शि|ा त|लाग|रा |शिक| सब|ाउन|िक्|्न |ारक|ा न|रिय|्यस|द्व|रति|चार| सह|्षण| सु|ारम|ुक्|ुद्|साम|षा |ैन | अप| भए|बाट|ुन | उप|ान्|ो आ|्तर|िय |कान|ि र|रूक|द्द|र प|ाव |ो ल|तो | पन|ैन।| आव|ा ग|।प्|बै |ूर्|िएक|र त|निज|त्प| भे|जिक|ेछ।|िको|्तो|वाह|त स|ाट | अर|ाजि|्ध | उस|रमा|ात्|र्य|नको|ाय |जको|ित्|ागि| अभ|न ग|गि |ा म| आध|स्थ| पा|ारह|घोष|त्व|यता|ा क|र्द| मत|विध| सक|सार|परा|युक|राध| घो|णको|अपर|े स|ारी|।कु| दि| जन|भेद|रिव|उसक|क र|र अ|ि स|ानु|ो ह|रुद| छ।|ूको|रका|नमा| भन|र्म|हित|पूर|न्य|क अ|ा ब|ो भ|राज|अनु|ोषण|षणा|य र| मन| बि|्धा| दे|निर|ताह|र उ|यस |उने|रण |विक',mag:'के | के|ार | हई|कार|िका|धिक|हई।| और|े अ|और |अधि| अध|ा क|र ह|े स|े क|सब |ें |में| मे| कर|से | सम|था |तथा| हो| से|र स|र क|िक | तथ| सब| सं|क्ष|मान|ब क|ा स|ना | सा|प्र|कर | प्| भी|ति |ई। |रा |भी |्रा| अप| का|त क|या |अपन| को|ट्र|क ह|पन | पर| मा| रा| या|ी क|ता | स्| ओक|ष्ट|ही |ान |्त |करे|्रत|त्र|ाष्|्ट्| सक|न क|राष|ओकर|।सब|रे |ेल |हई |े ब| जा|ई।स|रक्| ले|ंत्|े म| ही|सक |नो |र म| ना|स्व|ाम |होए|र औ|दी |व्य|क्त|ा प|वतं|ानव|ित | शा|ादी|षा |माज| इ |तंत|पर |ी स|्वत|्य |े उ|्र |ोग |वे |्षा|े भ|े ल|न स|करा|कान| एक|ल ज|म क|लेल|्ति|ावे| दे|रता|क स|साथ|ानू|नून|ेकर|र अ|य क|ाथ |प्त|ा म|ला |ई।क| वि|समा|ून |े प|साम|। स|ा ह| जे|े ह| चा|ोई |जा |मिल| व्|ि क|बे |ाप्|राप|ोए |रो |वार|कोई|चाह| दो|व क| नि|चार|र व|ाधि| पा|र प|स्त|एल |कोन|े व|ोनो|काम|ो स|्म |े ओ|योग| सु|ए क|नवा|न ह|षण |ीय |एक |परि| उप|े आ|्तर| सह|ाजि|ल ह|संर|ई क|ास |पूर|ं स|ंरक|ो क|जिक|देश|ुक्|ामा|होब|सम्|।के|्यक|े च|केक|्वा|पयो|उपय|री |ी ह|ाही|दोस|र आ| उच|ाति|म्म|्मा|े ख| लो|तिक|रति|ेश |न औ|स्थ|वा |मी |े त| आद|निय|न प|वाध| घो|घोष|ब अ|रिव|ा ब|कि |म स|रीय|्री|य स|यक्|ि म|ा द|ा त|ब ह|जाद|उचि|युक|ंयु|संय| उ |इ स|े इ|्षण|। त|चित|ा औ|व ह|हे |त स| पू|क औ|ग क|े न|न द|करो|लोग|ोषण|ारा|र न|िल |समय|कौन|ं क|मय |ौनो|ुरक|ो भ| भा|ाज | कए|कएल|सुर|र्म|ाव |िवा',san:'प्र|ां |स्य|्या| प्|्य |पि |िका| स्|कार|स्व|न्त|धिक| च |ं स| सं|्रत|क्ष|्वा|तुं|ुं |त्य| वि|मान|ार्| सम|त्र|ष्ट|्ये|ाना|ं अ| जन|्ति|रत्|र्व|नां|स्त|ाणा|ं व|ाधि|्त्|तन्|ते।|ारा|व्य|र्य|णां|मपि|येक| नि|ट्र|्ट्|ति।|राष|ाष्|ा स|अधि| अध| सा|त्त|वा |च स|रं |या |ते |्यत|सर्|वीय|वर्|ान्|िष्| वा|िता| रा|ेकम|धार|कमप|्वी|क्त|जन |य स| मा|राण|षु |ि च|ितु|्तु|र्त|ेन |ाया|साम|ं प| सर|्वे|ारं|वात|्ते|िक |न्य|ेषु|ष्य|न स|कृत|त्व|ं च|र्थ|े स|ानव|रक्|ि स|ऽपि|ातन|यित|ि ज|यते| अन|ं न|म् |्थं| पर| वर|निर|याण|नं |थं |यति|ति |ोऽप|वाध|्तर| अभ|संध|िर्|्यक|ामा|वस्|रस्|विध|श्च|समु|िवा|कस्|ारय|परि|माज|।प्|संर|्च |षणा|तान|्र |ेण |अभि|यां| का|ा अ| अप|ीय |ंरक|न क|यं |ा व|ित्|भवि|्षण|्षा|य प|समा|कं |्रा|वित|ात्| एत|िक्|घोष|अपि|रति|य्व|क स| कृ|िघो|नवा|रयत|पूर|र्ण| व्|धत्|ं ज|ास्|षा |्र्|भिघ|त् |चित|ृते|ध्य|संघ|ाजि| न |ऽस्|िश्|ार |ं ध|शिक|ोषण|ूर्|्री|च्छ|। अ|नान| भव|देश|र्ह|च प|्रि|ं क|ंधत|ानि|नि |्ता|रिक|विक|ैव |्रस|यक्|जिक|राध|तं |वार|य क|तित|य च|न व|े। |् स|ता |विव|तिक|र स|ना |ताय|्ञा|यान|्यम|ारे|ज्ञ|अन्|े च|ोऽस| शि|विर|्रम|नैव|्वस|ि।प|ष्ठ|योग|स्थ|नस्|य व|यता|रिव|सम्|कोऽ| को|ि न| वै|यस्|ि व|याप|द्ध|्रव|ता।|ेषा| धा|संय| सह|ुक्|जीव|ा प|्षे|्तन|े प|ने |श्य|न् |च व|परा|ि प|्रय|िरु|्वत|्ञ्|यत्|भाव|न्ञ|रुध|ुध्| पू|निय'},Ethiopic:{amh:'፡መብ|ሰው፡|ት፡አ|ብት፡|መብት|፡ሰው|፡አለ|፡ወይ|ወይም|ይም፡|ነት፡|ንዱ፡|አለው|ለው።|ዳንዱ|ያንዳ|ንዳን|እያን|ዱ፡ሰ|ት፡መ|፡እን|፡የመ|።እያ|እንዲ|፡ነጻ|፡የተ|ም፡በ|ው፡የ|ም፡የ|፡የሚ|ና፡በ|ን፡የ|፡የማ|፡አይ|ነጻነ|ና፡የ|ው፡በ|ቶች፡|ው።፡|ሆነ፡|ት፡የ|፡በሚ|፡መን|ው።እ|ትና፡|ኀብረ|ትን፡|ውም፡|ንኛው|እኩል|ብቻ፡|ኛውም|ንም፡|፡ለመ|፡ያለ|ም፡ሰ|ማንኛ|መብቶ|፡አገ|ት፡በ|ራዊ፡|፡እኩ|፡ለማ|ለት፡|በት፡|ሆን፡|መንግ|፡በተ|ረት፡|ብቶች|ጋብቻ|ዎች፡|ህንነ|ጻነት|ም፡እ|ወንጀ|፡ልዩ|ሰብ፡|ማንም|ጠበቅ|ኩል፡|ደህን|።ማን|ነጻ፡|ግኘት|ማግኘ|።፡እ|፡የሆ|፡ሁሉ|ች፡በ|፡በመ|ሥራ፡|፡ደህ|ፈጸም|ል፡መ|ተግባ|፡ድር|ት፡ወ|ው።ማ|ፍርድ|ርድ፡|፡በሆ|ር፡ወ|በትም|ትም፡|ይነት|ቸው፡|ብ፡የ|ነትና|ቱን፡|ሕግ፡|ንና፡|፡ሥራ|የማግ|፡መሠ|ኘት፡|፡ጊዜ|ጻነቶ|ነቶች|በር፡|በኀብ|ዩነት|ልዩነ|፡በኀ|፡ዓይ|ዓይነ|ችና፡|ግባር|ባር፡|፡ደረ|ነው።|፡ነው|ደረጃ|ም።እ|ም፡መ|፡ወን|ይማኖ|ማኀበ|ሃይማ|፡ኑሮ|መሠረ|ሁሉ፡|ነቱ፡|ሌሎች|ንግሥ|በቅ፡|የሆነ|፡ይህ|ንዲጠ|ገር፡|ተባበ|ትክክ|ጸም፡|ር፡የ|ዲጠበ|ትም።|ው፡ከ|፡እያ|ሩት፡|ድርጅ|፡ብቻ|ና፡ለ|ይገባ|የመኖ|፡ማን|ንነት|ቤተሰ|ርጅት|ት፡ድ|፡መሰ|እንደ|፡አላ|ብሔራ|ት፡ለ|ሔራዊ|ርት፡|ህርት|ውን፡|የሚያ|ል።እ|ሆኑ፡|ምህር|ትምህ|በት።|ለበት|አለበ|፡አስ|ሎች፡|ች፡የ|፡በሕ|ብረ፡|፡ከሚ|ን፡አ|ት፡እ|ን፡ወ|ረግ፡|በሆነ|የኀብ|፡የኀ|መሆን|፡መሆ|ን፡መ|፡ውሳ|ንጀል|ፈላጊ|ህም፡|ረታዊ|ክለኛ|ክክለ|ታዊ፡|ጀል፡|ኑሮ፡|።፡ይ|ዓዊ፡|ዜግነ|ንዲሁ|ዲሁም|፡ማኀ|ገሩ፡|ር፡በ|ብዓዊ|አገሩ|ሁም፡|ና፡ነ|ሰብዓ|የተባ|ጅት፡|ማኖት|ር፡አ|ንግስ|ኖት፡|በሕግ|መኖር|ው፡ያ|መጠበ|ረጃ፡|፡በማ|ነትን|ብነት|ገብነ|፡ገብ|መፈጸ|፡ሁኔ|ሁኔታ|ን፡ለ|ው፡ለ|፡ተግ|፡የአ|፡ይገ|፡በአ|ችን፡|፡ትም|ነቱን|፡ቢሆ|ቢሆን|ጊዜ፡|ረ፡ሰ|ት፡ጊ|ሰቡ፡|ምበት|ላቸው|አላቸ|በነጻ|፡በነ|አንድ|ቅ፡መ|፡መጠ|ት፡ይ|መሰረ|ጥ፡የ|ስጥ፡|ፈጸመ|ውስጥ|ንድ፡|፡ውስ|፡በግ|፡ሆኖ|ሉ፡በ|፡ጋብ|ንስ፡|ንነቱ|መው፡|የሚፈ|አይፈ|ብረሰ|ነ፡መ|፡የሃ|ም፡ከ|ች፡እ|ስት፡|ሙሉ፡|አገር|ሆኖ፡|ደረግ|ኢንተ|ንተር|ተርና|ርናሽ|ናሽና|ሽናል',tir:' መሰ| ሰብ|ሰብ | ኦለ|ትን |ኦለዎ|ናይ | ናይ| ኦብ|ዎ፡፡|ለዎ፡|ሕድሕ|ኦብ |ድሕድ|ሕድ |መሰል|ውን |ሰል |ድ ሰ|ይ ም|ል ኦ|ካብ |፡ሕድ|፡፡ሕ| ወይ|ወይ | መን| ነፃ|ን መ|ዝኾነ|፡፡ |ታት |ብ ዝ|ነት |ን ነ| ካብ|መሰላ|ነፃነ| እዚ|ብ መ|ኦዊ |ታትን|መንግ|ዊ መ| እን|ብ ብ|ንግስ|ት ኦ|ሰላት|ን ም|ኾነ |እዚ |ብኦዊ|ሰብኦ|ን ኦ|ን፡፡| ንክ| ዝኾ|ን ን| ምር|ኹን |ይኹን| ይኹ|ምርካ|ርካብ| ኦይ| ሃገ|ሕጊ |ራት |ሎም | ብሕ|ነ ይ| ከም|ማዕሪ|ይ ብ| ንም| ዝተ|ርን |ን ብ|ራዊ | ፣ |ብ ሕ|ላትን|ብ ኦ|ማሕበ|ነታት| ኦድ|ዕሪ | ማዕ|ስታት|ግስታ|’ውን|ት መ|ን ዝ|ታዊ |፣ ብ| ማሕ|ነትን|ንጋገ|ድንጋ| ስለ| ድን|ስራሕ|ኩሎም|ሕበራ|ኦት |ን ሰ|ዓለም|ፃነታ| ብም|ት ወ|መሰሪ| ስራ|ፃነት|ተሰብ|ካልኦ|ልኦት|ን ሓ|ዓት |ዋን |ቡራት|ሕቡራ| ሕቡ|ብሕጊ|ድብ |ውድብ| ውድ|ብን |ትምህ|ነቱ |ዚ ድ|፣ ኦ|ሃገራ| ኩሎ|ለዎም|ምህር|ም፡፡|ም መ| ብዝ|ምኡ’|ኡ’ው|እንት| ዓለ| ብዘ|በራዊ| ሓለ|ሓለዋ|ዎም፡|ቱ ን|ት ብ|ጋገ |ነፃ | ምዃ|ን ዘ| ገበ|ት፣ | ትም|ኸውን|ራሕ | ዘይ|ህርቲ|ርቲ |ከምኡ|ሃይማ| ምስ|ነ፣ |እንተ| ስር|ስርዓ|ርዓት|ባት |ይማኖ|ሰሪታ|ን ና| ክብ|ልን | ብማ|ገሩ | ህዝ|ላት |ት ና|ይ ኦ|ዕሊ |ለዝኾ|ስለዝ|ሪተሰ|ብሪተ|ሕብሪ| ሕብ|ን ተ|ኾነ፣|በን |ሃገሩ|ገ እ|ኻዊ | ሃይ|እን |ሪጋገ| ምሕ|ን እ|ለኻዊ|ር፣ | ብሓ| ብሃ| ክኸ|ክኸው|ብ ዘ|ዃኑ |ዊ ክ|ምን |ሓደ |ምዃኑ|ም ን|ት እ|ዊ ወ|ታውን| ሕድ|ብዘይ| ሕጊ|ት ን| ልዕ| ካል|ን ካ|ሰባት|ን ስ|ናን |ቤተሰ|ሕን |ለምለ|ት ስ|ምለኻ|፣ ከ|ተደን|ባል |ኦድላ|እዋን| እዋ|ደቂ | ደቂ| ሰባ|ፃን |ነፃን|ግስቲ|፣ ን|ዚ ብ|ስቲ | ቤተ|ምጥሓ| ክሳ| ነዚ|ን ክ|ነቲ | ነቲ|ነዚ | ምእ|ብነፃ| ምዕ|ምዕባ|ዕባለ|ክሳብ| ብነ|ል እ|ዚ መ|ልዕሊ|ክብሩ|ብማዕ|ሳብ |ህይወ|ኦቶም|ምስ |ንገገ|እምነ| እም|ድ ኦ|ቶም |ቲ ክ|ፍትሓ|ለም | ፍት|ብ ን|ን ዓ|ራውን|ሓፈሻ|ደንገ|ም ብ|ትዮን| ዝሰ|ዝተደ|ሉ መ|ብ ና|ጊ ካ|ልዎ |ኦባል| ኦባ|ድልዎ|ን ድ|ኦድል|ዜግነ|ላውን| ድሕ'},Tibetan:{bod:'འི་|་དང|གས་|ྱི་|ང༌།|༌། |ོབ་|་ཐོ|དང༌|་ཡོ|་བྱ|ཐོབ|ོད་|་ཀྱ|་པ་|ི་ཐ|ོས་|ད་པ|ཀྱི|་པའ|པའི|ེད་|ས་ཀ|ང་ད|ས་ས|ུང་|ང་བ|རྒྱ|བ་ཐ|རང་|བྱེ|ོན་|ི་ར|་ཐང|་དབ|ནས་|ཡོད|་འད|ཐང་|ང་ཡ|ས་པ|་མི|ྱེད|མས་|ས་འ|་ལ་|་རྒ|ིག་|དབང|སྐྱ|་དག|་རེ|བང་|་རང|་སྐ|ས་ལ|་སྤ|ེ་བ|་ཡི|ོགས|སྤྱ|་འག|ངས་|ོང་|ིན་|་བཅ|་གི|ས་ད|ང་ག|དེ་|ཡིན|ལ་བ|་ནས|སུ་|་བས|ང་འ|མི་|ས་བ|ོག་|བཅས|གྱི|་ཚོ|་བ་|་གྱ|ཅས་|གི་|གོས|དགོ|ྐྱེ|ྱེ་|ེན་|་རི|རིག|ན་ག|ང་མ|ེས་|ི་མ|ྱལ་|ང་ས|ྒྱལ|པ་ད|། ར|ིགས|ོངས|ལ་ག|དོན|གང་|། ད|་ཞི|ེར་|་གང|ཡང་|ང་ར|་བར|ེ་ར|ི་ས|བས་|ི་ག|དང་|་དོ|ེལ་|ོ་ར|ི་བ|་འབ|རེ་|་བོ|ས་མ|ུལ་|ཚོག|འགྲ|ལས་|ི་ད|་གན|བོ་|་གཞ|ུགས|ད་ད|ལ་ཁ|ིས་|མ། |ཁྲི|ན་ད|ིམས|་དུ|མཉམ|ན་བ|བ་ད|་སུ|་མཐ|ྲིམ|་བའ|ས་ག|ར་བ|ྱོད|ཉམ་|ྤྱོ|་ཡང|ོ་བ|ོད།|ར་ར|ས་ར|ིའི|བའི|ག་ག|དུ་|་དེ|འདྲ|ན་པ|ན་ར|ང་ལ|་ཁབ|ཞིག|་ལས|གྲོ|་ལེ|་ཆེ|་གཏ|ྤྱི|ུས་|ུན་|་རུ|་སྒ|ན་ས|ལེན|དྲ་|བྱུ|ི་འ|ྲེལ| དེ|ོད༎|ི་ཆ|་ཁྲ|ིད་|གནས|སྒྲ|་མཉ|ུ་ཡ|་ཆོ|་ཚུ|ལ་ས|ཁབ་|རེར|ཡོང|ྲོ་|་སྦ|ག་ལ|ར་ད|གལ་|་ནང|ས་ཡ|རུང|ྱུང|་འཛ|། ས|དག་|ད༎ས|ནང་|འདི|ཐོག|ག་ད|ཆོག|་སྟ|ང་ན|ན་ལ|༎སྐ|ཆེ་|བྱ་|དི་|ྲ་མ|ི་ཁ|མིའ|ཚང་|ྐྱོ|ྟར་|ྒྱུ|་པར|་གས|ི་ན|ུར་|་ཤེ|པར་|། འ|པ་ཡ|ཤེས|ང་ཚ|་ལུ|་རྩ| རང|། ག|ི་ཚ|ཞི་|་སྡ|ས་ཚ|ད་ཀ|བ་བ|སལ་|ྱིས|ི་ལ|ུག་|ལག་|ག་ན|་ལག|བ་མ|བ་ས|འདོ|ར་ག|ཚུལ|ིང་|གཞི|བ་པ|འགལ|ར་འ|་བཀ|་མང|་ནི|བསྟ|། མ|ས་ཤ|ིན།|ད་བ|ྱས་|གསལ|ྱང་|་པོ|་བད|ལ་ད|ོ་ན|ག་བ|ུ་ས|ཚོ་|་ཚང|ས་ཁ|ག་པ|ཏོང|ན་འ|གཏོ|ོར་|་འཚ|བསྒ|འཚོ'},Hebrew:{heb:'ות |ים |כל |ת ה| כל|דם |אדם|יות| של| זכ|ל א| אד|של |ל ה|אי |ויו|כאי|ת ו|י ל|זכא| ול|לא | וה|רות|זכו|ית |ירו|ין | או|ם ז| לא| הח|או | הא| וב| המ|חיר|ת ל|יים|ם ל|את |ת ב|ת ש|רה |ון | לה|נה |כוי|ותי|ה ש|ו ל|ו ב| הו|ת א|ם ב|ם ו|תו | את|לה |ני |אומ| במ|דה |א י|ה ה|ה ב|על |ם ה| על|הוא|וך |ה א|בוד|וד |ואי|נות|ה ו|ת כ|י ה|יה |ם ש|ו ו| שה|ם א|ו כ|ינו|ן ה| שו|שוו|החי|כות|לאו|בות|דות|ה ל|לית|ה מ| בי|וה |וא | הי| לפ|ור | לב|ל ב|בחי|הכר|לו |ת מ|ן ש|החו|ה כ| בכ|ומי|בין|ן ו|ן ל|רוי|פלי|ולה|ליה| הז|חינ| לע| בנ|יבו|חוק| אח|חבר| יה| חי|מי |ירה| חו|האד|ווה|חופ|ופש|וק |נו |יו |ל מ|מדי|כבו| הע|נוך| הד|י א|י ו| הכ|בני|עה |ו א|רצו|דינ|בזכ|מות|יפו| אל|סוד|לם |איש|רך | אי|הגנ|הם |פי |ם כ|חות|ל ו|איל|ילי|תיה|כלל|אלי|יסו|האו|זש | בא|ר א|ו ה|זו |אחר| הפ| בע| בז|משפ| בה| לח|דרך|ומו| בח| דר| מע|ל י|תוך|מנו| בש|לל |רבו| למ|פני| לק|תם |שה |שית|ללא|לפי|היה|מעש|דו |שות|להג|וצי|שוא|אין|וי |תי |ונו|ליל| לו|חיי|ל ז| זו|היא|יא |נתו|ה פ|לת |ובי| לכ|ך ה|יל |י ש|שיו|ן ב|עול|המד|ודה|ולם| ומ|א ה|ולא| בת|הכל| סו| מש| עב|סוצ|ארצ| אר|ציא|ד א|לחי|הן |יחס| יח|יאל|הזכ|ם נ| שר|בו |עבו|היס| לי|ת ז|פול|יהי|גבל|תיו|המא|שהי|א ל|מאו| יו|ותו|ישי|גנה|פשי|וחד|יהם|חרו|לכל|ידה|עות|ונה|ום |חה |עם |שרי|ם י|שר |והח| אש| הג|ק ב|הפל|נשו|הגב|ד ו',ydd:' פֿ|ון |ער |ן א| אַ|דער|ט א| או|און|אַר|ען |פֿו| אױ| אי|ן פ|ֿון|רעכ| דע| רע|עכט|פֿא|ן ד|כט | די|די |אַ |אױף|ױף |ֿאַ| זײ| גע|אַל|אָס| אָ|ונג| הא|האָ|זײַ| מע|אָל|נג |װאָ|ַן |אַנ|רײַ| װא|ָס |באַ| יע|יעד|ניט|ן ז|ר א|יט |אָט|אָר|עדע|מען|זאָ|ָט |פֿר|ײַן| בא|טן |אין|ן ג|ין |ן װ|נאַ|ֿרײ|ר ה| זא|לעכ|ע א|אָד|ַ ר|ענט|אַצ|ַצי|אָנ| צו| װע|יז |מענ|ָדע|איז|ן מ|ַלע|בן |ר מ|טער| מי| פּ|מיט|טלע|ָל |עכע|ײט |ַנד|ע פ|לע |געז|לאַ|אַפ|עזע|ראַ| ני|ַפֿ|רן |ײַנ|נען|טיק|כע |פֿע|יע |הײט|ַהײ|נטש|ײַה|ט ד|ן ב|לן |ן נ|פֿט|שאַ|רונ| זי| װי|ט פ| דא|טאָ|דיק|קן |ר פ|ר ג|יקן|אָב|ף א|אַק|קער|ערע|כער|י פ|ות |ַרב|פּר|קט |עם |יאָ|ציע|ציא|יט־|צו |ישע| קײ|ן ק|סער| גל|דאָ|ונט|גן |ַרא|יקע| טא|ענע|לײַ|שן |ַנע|יק |טאַ|ס א|עט |נגע|ט־א|ָנא|־אי|יקט|נטע|ײנע|־ני|ָר |װער|י א|ן י|יך |זיך|ער־|ערן|אױס|ָבן|נדע|ָסע|װי |ֿעל|ר־נ|ן ה| גר|גלײ| צי|ראָ|זעל|עלק|נד |לקע|אָפ| כּ|ט װ|ג א| נא|ט צ|ר ד|עס |דור|גען|קע |ג פ|ֿט |ן ל|שע |ר ז|רע |ײטן|פּע|קלא|קײט|יטע|ים |ס ז|ײַ | דו|אַט| לא|ר װ|קײנ|עלש|י ד|לשא|יות|נט |ַרז|ע ר|ל ז|אַמ|ן ש| שו|אינ|נטל| הי|בעט|ָפּ|ף פ|ײַכ|בער|ן צ|מאָ| שט| לע|גער|ורך|רך |נעם|גרו|פֿן|לער|װעל|ע מ|ום |שפּ|ך א|יונ|רבע|עפֿ|טעט|ן כ|רעס|ערצ|ז א|עמע|ם א|שטע|כן |רט |י ג|סן |נער|ליט|ט ז|נעמ|ּרא|היו|אַש|ת װ|אומ|ק א|יבע|ֿן |ץ א|פֿי|ײן |ם ט'},Canadian_Aboriginal:{csw:'ᑭᒋ | ᑭᒋ|ᓀᐢᑕ| ᓀᐢ|ᐢᑕ | ᑲ | ᐁ | ᐱᑯ|ᓂᐠ |ᒥᓯᐌ|ᐠ ᓀ|ᓯᐟ |ᐱᑯ |ᐎᐣ |ᑯᐎᓯ|ᐎᓂᐠ| ᐃᔑ|ᐎᓇ |ᓯᐌ |ᒋ ᐃ|ᐟ ᓀ|ᓂᐤ |ᐠ ᑭ|ᐗᐠ |ᐁᑲ |ᒥᓂᑯ| ᑎᐯ| ᒥᓂ|ᐃᔑ | ᐃᓂ|ᑕ ᐱ|ᐌᓇ |ᐊᐌᓇ|ᓂᑯᐎ| ᐊᐌ|ᐃᓂᓂ| ᐅᒋ| ᐊᐢ|ᐅᐟ |ᐊᐢᑭ| ᐅᐟ|ᒋᐠ |ᐌ ᐊ|ᓂᓂᐤ|ᐠ ᐅ| ᐁᑲ|ᑕᑯᓯ|ᓂᐗᐠ|᙮ᒥᓯ|ᒋ ᐊ|ᐅᒋ | ᑲᓇ|ᑲ ᑭ|ᓯᐎᓇ| ᒥᓯ|ᐟ ᑭ|ᐟ ᐃ| ᐁᔑ|ᑌᓂᑕ|ᓇ ᐁ|ᓂᒥᑎ| ᐊᓂ| ᐯᔭ|ᐠ ᐁ|ᑕ ᐁ|ᓂᑕᑯ|ᐟ ᐅ| ᐃᑕ|ᑕ ᑭ|ᑎᐯᓂ|ᐯᓂᒥ|ᐁᔑ | ᐊᐸ|ᐎᓯᐟ|ᑕᐢᑲ|ᓯᐎᓂ|ᐟ ᐊ|ᐎᓯᐎ|ᑭᐠ |ᑕ ᑲ|ᐯᔭᑾ| ᑭᐢ|ᒋ ᐅ|ᑲ ᐅ|ᐎᓂᓂ|ᑕᒧᐎ| ᐃᐢ|ᑯᓯᐟ|ᐢᑭᐠ|ᑎᓯᐎ|ᓂᑕᒧ|ᑲ ᐊ|ᔑ ᑲ|ᑌᐠ |ᐠ ᑲ|ᒋᑲᑌ|ᐤ ᑭ|ᐣ ᑭ| ᐱᒋ|ᓯᐎᐣ|ᑲᐠ |ᑲᑌᐠ|ᐃᐢᐱ|ᓇᐗᐸ|ᐢᑲᓀ|ᑕᐟ |ᑲ ᐱ| ᐅᑭ|ᑐᐎᓂ|ᐱᒋ |ᑲᓇᐗ|ᒋ ᒥ| ᐃᑗ|ᓂᒋᑲ|ᐢᐱ |ᒋ ᑭ|ᑲᓀᓯ|ᐠ ᐃ|ᒥᑎᓱ|ᒧᐎᐣ|ᑕᐠ |ᑭ ᐃ| ᐃᑌ|ᒋ ᓇ|ᐢᑲᒥ|ᐢᑌᓂ|ᐃᑕᐢ|ᐣ ᓀ|ᐠ ᐱ|ᓇ ᓀ|ᑾᐣ |ᑯᓯᐎ| ᐅᓇ|ᐠ ᐊ| ᑎᐸ|ᐤ ᓀ|ᓂᓂᐠ| ᐅᑎ|ᐃᑌᓂ|ᑲ ᐃ|ᒋ ᓂ|ᓀᓯᐎ| ᐅᑕ|ᐗᐸᒥ|ᐱ ᑲ|ᑭᐢᑌ| ᐎᒋ|ᑯ ᑭ|ᑕᓂᐗ|ᑾᐠ | ᑕᐺ|ᑕ ᐅ|ᐤ ᐁ|ᓂᓂᐗ|ᐠ᙮ᒥ|ᒥᐟ |ᔓᐌᐎ|ᓇᔓᐌ|ᓂᓂᐎ| ᐊᔭ|ᐊᐸᑎ|ᐸᑎᓯ|ᑎᓱᐎ|ᒋ ᒪ|ᑕ ᐊ| ᒪᑲ|ᐱᒪᑎ| ᑭ |ᐅᑭᒪ|ᒋ ᑲ|᙮ ᐁ|ᑲᓇᐌ|ᓂᐠ᙮|ᓇᐌᓂ|ᐌᐎᓂ| ᑫ |ᐅᒪ |ᓂᐎ |᙮ᐁᑲ| ᑯᑕ|ᔦᓂᑕ| ᐅᒪ|ᐣ ᐁ|ᒪᑲᐠ|ᒪᑎᓯ|ᒥᑯᐎ|ᔭᑾᐣ|ᑕᐌᓂ|ᐅᓇᔓ|ᓂᑭ | ᑫᑾ|ᐟ ᐁ|ᔑ ᒥ|ᒪᑲ |ᐊᔭᒥ|ᒪᐟ |ᓂᐃ |ᐊᓂᐃ|ᐠ ᒥ| ᓂᐸ|ᓂᐸᐎ|ᐸᐎᒪ|ᐎᒪᑲ|ᐁ ᒥ| ᒪᒪ|ᑭᒪᐎ|ᒪᐎᐎ|ᓂᒥᑯ|ᐁ ᐃ|ᐺᔦᓂ|ᑕᐺᔦ|ᑭᔭ |ᑎᓯᐟ|ᒪᒪᐎ|ᐢᑯᓂ|ᒪᐎ |ᓂᔑᒋ|ᐎ ᒥ|ᑫᐎᓂ|ᑲ ᑎ| ᐊᔑ| ᓇᑕ|ᓇᐌ |ᐸᒥᐟ|ᐸᒋᑕ|ᐸᑭᑎ|ᔭᑾᓄ|ᑕ ᒥ| ᐱᒪ|ᒋ ᐱ|ᑯᐟ |ᓄᐠ | ᑐᑕ|ᐌᓂᒥ|ᐁ ᑭ| ᐗᓂ| ᑲᑕ|ᐗᓂᔑ|ᐎᐣ᙮|ᑎᓇᒪ|ᒋᑕᐟ| ᐸᑭ|ᓇ ᑭ|ᐤ ᑲ|ᓇ ᑲ|ᒋ ᐸ|ᔑᒋᑫ|ᐊᐸᒋ|ᑐᑕᒧ|ᑎᐯᓇ|ᑭ ᐊ|ᑯᑕᑭ|ᑕ ᑎ|ᐣ ᐅ|ᐌᓂᑕ|ᒥᑎᓯ|ᐎᐎᓂ|ᑲ ᐁ|ᒋᑫᐎ|ᓇᐢᑯ|ᑐᒋᐠ|ᐃᐟ |ᑌᑭ |ᑲᑌᑭ|ᐎᑭᑐ|ᐯᓇᐌ|ᐊᓂᑭ|ᓯᐤ |ᐌ ᑲ|ᓂᑕᑾ|ᒋ ᑎ|ᐃᑗᐎ| ᐎᓇ|ᑕᒪᑫ|ᑎᐯᐣ| ᐎᑭ|ᑾᓄᐠ|ᐣᑕ |ᐸᐢᑯ|ᑯᓂᑲ|ᔑᓇᑾ|ᒥᐠ |ᑲᒥᐠ|ᐌᐢᑲ|ᓯᐌᐢ|ᐟ ᐱ|ᔑ ᓂ|ᐠ᙮ |ᓯᒋᐠ|ᐨ ᑲ| ᐱᑐ|ᐠ ᐸ|ᓇᑕᒪ|ᑲ ᐗ|ᑯ ᑲ| ᑾᔭ|ᑾᔭᐢ|ᒋᐠ᙮| ᐁᑯ|ᒪ ᑲ',ojb:'ᐎᓐ |ᓐ ᑲ|ᓂᒃ | ᑲᐃ|ᒃ ᑲ| ᒥᓇ|ᑲᐃᔑ|ᑕᑯᓯ|ᐗᒃ |ᒥᓇ |ᓯᐎᓐ|ᐎᓂᒃ| ᑲᑭ|ᓐ ᐅ|ᑫᑕᑯ|ᑌᐸᑫ|ᑯᓯᐎ|ᐸᑫᑕ|ᑲᔦ | ᑌᐸ| ᑲᔦ|ᒃ ᒥ| ᐅᑕ|ᓐ ᒥ|ᐅᒋ |ᓂᐗᒃ|ᐃᔑ |ᑲᑭᓇ|ᑭᓐ |ᒃ ᒋ|ᓇᓐ |ᒃ ᐅ|ᓀᓐ |ᒥᓯᐌ|ᐗᑦ |ᑦ ᑲ|ᓐ ᑌ| ᒥᓯ|ᑭᓇᐌ|ᐅᑕᔭ|ᑌᒃ |ᒋᑲᑌ|ᐌᓀᓐ|ᑦ ᐅ|ᓇᐌᓀ|ᑫᐎᓐ|ᓇᓂᐗ|ᔭᓐ | ᒋᐃ|ᑯᓂᑫ|ᓐ ᒋ|ᒋᐃᔑ| ᐅᒋ| ᐃᔑ|ᑕᔭᓐ|ᓇᐗ |ᑲᑌᒃ|ᓂᑫᐎ| ᒋᐅ|ᐎᓇᓐ|ᑾᒃ | ᑎᐯ| ᑲᐅ|ᓐ ᐊ|ᑕᔥ |ᑌᑭᓐ|ᒃ ᐊ|ᒪᑎᓯ| ᒋᑭ|ᐃᔑᓇ|ᓇ ᑲ| ᐅᒪ|ᑲᐎᓐ|ᐸᓐ | ᒋᐊ| ᑲᐎ| ᐱᑯ| ᐊᑭ|ᑲᑌᑭ|ᓯᑦ |ᒃ ᑭ|ᑫᐎᓂ|ᐊᐎᔭ|ᐅᒪ |ᓐ ᐃ|ᐅᐌ | ᐊᐎ|ᓂᒥᑎ|ᑎᐯᓂ|ᑭᒃ |ᑕᒃ |ᐱᑯ |ᐌᓂ |ᓯᐌᑲ|ᓯᐌ |ᑲᓇᐌ|ᒥᓇᐗ|ᐯᓂᒥ| ᐊᓂ|ᓄᓐ |ᐱᒪᑎ|ᐎᑦ |ᓇᑯᓂ|ᑕᑾᒃ|ᒋᐅᒋ|ᐊᑭᒃ|ᒥᒃ |ᑲᒥᒃ|ᓂᑲᑌ|ᐌᑲᒥ|ᑲᐅᒋ|ᑎᐸᑯ| ᒣᑾ|ᒣᑾ | ᑎᐸ|ᒃ ᑫ|ᑎᓱᐎ|ᐗᓐ | ᐃᑕ|ᓐ ᑫ| ᑲᐊ|ᐎᔭ | ᑲᑕ| ᑫᒪ|ᑫᒪ | ᑭᒋ| ᐅᐌ|ᐃᑕᔥ| ᑭᐃ|ᑭᑫᑕ| ᑫᑯ|ᐸᑯᓂ|ᑲᓐ |ᔭᒃ |ᒪ ᑲ|ᑎᐎᓂ|ᓇ ᒋ|ᑐᒋᑲ|ᒥᑎᓱ|ᐗᐨ |ᒃ ᐃ|ᓐ ᐁ|ᒧᐎᓐ|ᑦ ᐊ|ᐃᔑᒋ|ᐃᒪ |ᐌ ᐃ|ᑲᓂᐎ| ᒪᒪ|ᑭᓇ | ᑕᐱ| ᑲᓇ|ᐃᔑᐊ|ᓂᐗᓐ|ᓂ ᐅ|ᑯ ᒋ|ᓇᐌᑕ|ᐃᑯ | ᐃᑯ|ᒪ ᐊ|ᒋᑫᐎ|ᓐ ᑭ|ᐃᓀᑕ|ᓐ ᑕ| ᐅᑎ|ᐃᔑᑭ| ᐅᓇ|ᑕᐱᑕ|ᑎᓇᓂ|ᒋ ᑲ|ᓯᐎᓇ|ᑎᓯᑦ|ᔭ ᑕ|ᐊᓄᑭ|ᓱᐎᓂ| ᐱᓴ| ᑯᑕ| ᑕᐃ|ᑫᑕᑾ|ᐅᑭᒪ|ᐱᑕ | ᐊᔭ|ᒋᐎᑎ| ᑫᐎ|ᐅᐌᓂ|ᑲᒃ |ᑭᐃᔑ| ᒋᑲ|ᑫᐎᓇ| ᒥᐅ|ᑎᐯᑕ|ᒥᐅᐌ|ᔥ ᒣ|ᔑᓇᑾ|ᓐ ᒪ| ᐃᒪ|ᓯᓇᐃ|ᑎᓯᐎ|ᑲᓂᐗ|ᑭᒋᐃ|ᒋᐃᓀ|ᑯ ᑲ|ᓐ ᐱ|ᐃᑎᐎ| ᐁᔑ|ᑲᓀᓯ|ᓐ ᐎ|ᑕᑲᓀ|ᐅᓇᑯ|ᒋᐊᔭ|ᑕ ᐃ|ᔑᓇᑯ|ᐗ ᑲ|ᑕᐃᔑ|ᑌᓂᒃ|ᐯᒪᑎ| ᑲᑎ| ᐃᓇ| ᑎᐱ| ᐯᒪ|ᑕᑾᑭ|ᐃᓇᑯ|ᑫᑦ | ᑾᔭ|ᐸᒋᒧ|ᓇᐗᐸ|ᓐ ᒣ|ᔦ ᑭ|ᓱᐎᓐ|ᒃ ᐱ|ᓐ ᑎ|ᓯᐎᓂ|ᓇᑯᓯ|ᔦ ᒋ|ᓯᓇᓂ|ᒃ ᑎ|ᓯᓄᓐ|ᐌ ᐊ|ᒧᐗᑦ|ᓇᐃᑲ|ᐱᐃᑲ|ᐃᑲᓂ|ᒪᓯᓇ| ᒪᓯ|ᔑ ᐊ|ᑎᐸᒋ|ᑦ ᑌ|ᒃ ᒪ|ᐎᑎᑫ|ᑾᔭᒃ|ᒋᒧᐎ|ᑭᑲᓇ|ᓯᒃ |ᐃᑲᑌ|ᐌᓂᒥ| ᒪᐗ|ᐱᓂᑲ|ᑲᑌᓂ| ᐊᓄ|ᐅᑕᐱ|ᓂᐎᑦ|ᒪᒪᔑ|ᑕᒧᐗ|ᓇ ᐊ|ᐱᐃᑎ|ᑦ ᒋ|ᑯᓐ |ᐅᑕᑭ|ᑕᒧᐎ|ᐎᒋᐎ|ᐅᑾᐱ|ᑦ ᒥ| ᐅᑾ|ᐤ ᐅ|ᒋᑲᓂ|ᒪᐤ |ᒪᒪᐤ| ᑭᔥ|ᐌ ᑲ|ᑭᔥᐱ|ᐱᓇᐌ|ᐃᔑᑕ|ᑎᐱᓇ|ᔥᐱᓐ|ᑭᐸᓐ|ᑫᑯᓇ|ᒥᑕᔥ|ᑲᓂᒃ|ᐱᓐ |ᑯᓇᓐ|ᔑᑭᑫ|ᐅᔑᐱ| ᐅᔑ|ᑲᓇᐗ| ᐱᒪ|ᑯᓯᑦ|ᑭᑐᐎ|ᐱᓴᓐ|ᓴᓐ |ᑲᐃᓇ',ike:'ᑦ ᐊ|ᐊᒻᒪ|ᐃᓐᓇ|ᒻᒪᓗ|ᒪᓗ | ᐊᒻ|ᑐᐃᓐ|ᑦ ᐃ|ᑦᑎᐊ|ᑯᑦ |ᒃᑯᑦ|ᔪᓐᓇ|ᓄᑦ |ᒍᑦ |ᓂᒃᑯ|ᓐᓇᐅ|ᑦ ᐱ| ᐱᔪ|ᓇᐅᑎ|ᑎᖃᕐ|ᐅᑎᖃ|ᒧᑦ |ᐱᔪᓐ|ᒃᓴᐅ|ᓂᒃ | ᑭᓇ|ᒥᒃ |ᓇᒃᑯ| ᐃᓱ| ᐃᓅ|ᒃ ᐊ|ᓐᓇᕐ| ᑕᒪ|ᑎᒃ |ᓂᕐᒥ| ᐅᕝ|ᐅᕝᕙ|ᑭᓇᒃ|ᐃᓱᒪ|ᑦ ᐅ|ᑎᒍᑦ|ᒋᑦ |ᒃᑯᑐ|ᑦ ᑭ|ᑯᑐᐃ|ᕐᓂᕐ|ᓐᓃᑦ|ᓃᑦ |ᓘᓐᓃ|ᓗᒍ |ᓐᓇᖅ|ᕐᔪᐊ|ᖃᖅᑐ|ᐳᑦ |ᕐᒧᑦ|ᕙᓘᓐ|ᑐᒃᓴ|ᕝᕙᓘ|ᐊᑦ |ᖅᑐᒃ|ᕈᓐᓇ|ᓗᓂ | ᓄᓇ|ᓇᕐᓂ|ᑎᐊᑦ|ᓗᒋᑦ|ᖃᕐᐳ|ᑎᑦᑎ|ᓇᑦᑎ|ᖅᑕᐅ|ᓂᕐᒧ|ᔪᐊᕐ|ᕐᓂᒃ|ᕐᐳᑦ|ᓇᖅ |ᕐᓯᒪ|ᑦ ᑕ|ᕐᒥᒃ|ᖃᕐᓂ|ᑎᑕᐅ|ᓗ ᐃ|ᓴᐅᙱ|ᐊᕐᒥ|ᓕᒫᑦ|ᓂᖅ |ᑦ ᓇ|ᓗ ᐊ|ᓐᓇᑦ|ᑦ ᓴ|ᓗᑎᒃ|ᓪᓗᒍ|ᔾᔪᑎ|ᐊᕐᓂ| ᓯᓚ|ᓯᒪᔪ|ᓱᒪᖅ|ᐱᖁᔭ|ᓯᓚᕐ|ᓚᕐᔪ| ᐊᔾ| ᐱᖁ|ᕐᒥᐅ|ᐅᙱᓚ|ᖅᑐᐃ|ᑐᑦ |ᒪᖅᓱ|ᖅ ᐊ|ᓂ ᐊ|ᐊᔾᔨ|ᔪᑦ |ᐅᓯᒪ|ᒃ ᐃ|ᖅ ᐃ|ᑎᐊᖅ|ᖃᑎᒌ| ᐃᓄ|ᕐᓗᓂ|ᑎᐊᕐ|ᕆᐊᖃ|ᑕᐅᓯ| ᐃᓕ|ᓚᖅ |ᐅᑉ |ᑦ ᓯ|ᓪᓗᒋ|ᒋᔭᐅ|ᐃᓅᖃ|ᙱᓚᖅ|ᑎᓪᓗ|ᒪᑦ |ᑕᐅᔪ|ᓗ ᓇ|ᒫᑦᑎ| ᐃᓚ|ᑦ ᑲ|ᖕᒥᓂ|ᑦ ᓄ|ᖁᓪᓗ|ᖕᒋᓐ| ᐊᖑ|ᓇᖕᒥ|ᓂᑐᐃ| ᓇᖕ|ᓱᕈᓐ| ᐊᑐ|ᐊᖑᑎ|ᓐᓂᐊ|ᔭᐅᔪ|ᓯᒪᓂ|ᖢᑎᒃ| ᓇᓂ|ᖅᓱᕈ| ᐅᖃ|ᖅᑎᑦ|ᓗ ᐱ|ᓯᐅᑎ| ᓴᐳ|ᐅᓂᒃ|ᑕᒪᒃ|ᔾᔨᐅ|ᓐᓇᓕ|ᕗᑦ |ᓇᓂᑐ| ᐃᑲ|ᓇᓕᒫ|ᑕᐅᓂ|ᐊᖅᑐ|ᐅᔪᑦ| ᖃᓄ|ᐃᓅᓯ|ᐃᑲᔪ|ᓇᓱᐊ|ᖃᑦᑎ|ᕐᖢᑎ|ᒥᓂᒃ|ᓐᓇᐃ|ᓪᓕᐊ|ᑲᔪᖅ| ᐊᕐ|ᒥᒍᑦ|ᓴᐳᒻ|ᔪᖃᖅ|ᐳᒻᒥ|ᖅ ᐱ| ᒪᓕ|ᒃᑎᒍ|ᒻᒥᔭ| ᓴᓇ|ᒃ ᐱ|ᒍ ᐊ|ᐊᖅ |ᖅᑎᑕ|ᐅᔪᒥ|ᖃᓄᐃ|ᐊᕐᓇ|ᓂ ᐃ|ᑦ ᖃ|ᐊᕐᓗ|ᐅᑦ |ᔪᖅᑐ|ᑦᑎᔪ|ᕐᓱᐊ|ᕐᓂᖅ|ᖅᓯᐅ| ᓇᓪ|ᐃᒪᐃ|ᑎᓄᑦ| ᐃᒪ| ᐊᓯ|ᔭᐅᑎ|ᓐᓇ |ᖑᑎᐅ|ᐃᒻᒪ|ᐃᑦ |ᓇᓪᓕ|ᒃᑯᐊ| ᐊᑭ|ᒪᒃᑯ|ᒥᒃᑎ|ᓕᐅᖅ|ᓇᐃᑦ|ᑯᐊ |ᐅᑎᐅ|ᓂᕈᐊ| ᓂᕈ|ᕐᓗᑎ|ᐊᖕᒍ|ᑎᐅᔪ| ᒐᕙ|ᓪᓚᕆ|ᓗ ᑕ| ᓇᓗ|ᓱᐊᕐ| ᑲᑎ|ᔭᒥᓂ|ᑐᔾᔨ|ᓇᓗᓇ|ᓗᓇᐃ|ᓂᐊᕐ| ᐊᓂ|ᓂ ᐱ|ᖓᓄᑦ|ᖓᓂᒃ|ᖁᑎᒋ|ᕐᒥᒍ| ᓈᓚ|ᑦ ᒪ|ᕐᕕᖃ| ᑲᑐ|ᒃ ᐅ|ᖓᒍᑦ|ᒪᐃᒻ|ᔪᒃᓴ|ᐊᖃᕐ|ᔪᖅ |ᒻᒪᑦ|ᓅᖃᑎ|ᓱᒪᒋ|ᑦ ᑐ|ᒥᔭᐅ|ᒪᕐᒥ|ᕈᑕᐅ|ᑕᒪᕐ|ᖅ ᑭ| ᑭᒡ|ᓄᓇᒋ|ᓇᒋᔭ|ᓂᐊᖅ|ᒥᓂᖅ|ᓇᑐᐃ|ᓂᖃᕐ|ᐊᕆᓗ|ᓂᑦ |ᒪᑕ |ᙱᓪᓗ| ᐊᑕ|ᔪᒥᒃ|ᓪᓗᑎ|ᑎᖃᑦ|ᖅᑲᖅ|ᖕᒐ |ᒪᐅᑎ| ᐊᖏ|ᓐᓂᒃ|ᑎᔪᖃ|ᕕᖃᖅ|ᐃᖅᑲ|ᐅᔪᓐ|ᓪᓗᓂ| ᐃᖅ|ᙱᑦᑐ|ᐃᔾᔪ|ᑲᑐᔾ|ᒥᐅᓄ|ᐅᓄᑦ|ᑎᓂᒃ|ᒐᕙᒪ|ᒃ ᑭ|ᓱᐊᕆ|ᓐᓄᑦ'}}},{}],2:[function(b,a,c){a.exports={cmn:/[\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u3005\u3007\u3021-\u3029\u3038-\u303B\u3400-\u4DB5\u4E00-\u9FCC\uF900-\uFA6D\uFA70-\uFAD9]|[\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/g,Latin:/[A-Za-z\xAA\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u02E0-\u02E4\u1D00-\u1D25\u1D2C-\u1D5C\u1D62-\u1D65\u1D6B-\u1D77\u1D79-\u1DBE\u1E00-\u1EFF\u2071\u207F\u2090-\u209C\u212A\u212B\u2132\u214E\u2160-\u2188\u2C60-\u2C7F\uA722-\uA787\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA7FF\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uFB00-\uFB06\uFF21-\uFF3A\uFF41-\uFF5A]/g,Cyrillic:/[\u0400-\u0484\u0487-\u052F\u1D2B\u1D78\u2DE0-\u2DFF\uA640-\uA69D\uA69F]/g,Arabic:/[\u0600-\u0604\u0606-\u060B\u060D-\u061A\u061E\u0620-\u063F\u0641-\u064A\u0656-\u065F\u066A-\u066F\u0671-\u06DC\u06DE-\u06FF\u0750-\u077F\u08A0-\u08B2\u08E4-\u08FF\uFB50-\uFBC1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFD\uFE70-\uFE74\uFE76-\uFEFC]|\uD803[\uDE60-\uDE7E]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB\uDEF0\uDEF1]/g,ben:/[\u0980-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09FB]/g,Devanagari:/[\u0900-\u0950\u0953-\u0963\u0966-\u097F\uA8E0-\uA8FB]/g,jpn:/[\u3041-\u3096\u309D-\u309F]|\uD82C\uDC01|\uD83C\uDE00|[\u30A1-\u30FA\u30FD-\u30FF\u31F0-\u31FF\u32D0-\u32FE\u3300-\u3357\uFF66-\uFF6F\uFF71-\uFF9D]|\uD82C\uDC00/g,kor:/[\u1100-\u11FF\u302E\u302F\u3131-\u318E\u3200-\u321E\u3260-\u327E\uA960-\uA97C\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/g,tel:/[\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C78-\u0C7F]/g,tam:/[\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BFA]/g,guj:/[\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AF1]/g,mal:/[\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D75\u0D79-\u0D7F]/g,kan:/[\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2]/g,mya:/[\u1000-\u109F\uA9E0-\uA9FE\uAA60-\uAA7F]/g,ori:/[\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B77]/g,pan:/[\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75]/g,Ethiopic:/[\u1200-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u137C\u1380-\u1399\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E]/g,tha:/[\u0E01-\u0E3A\u0E40-\u0E5B]/g,sin:/[\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2-\u0DF4]|\uD804[\uDDE1-\uDDF4]/g,ell:/[\u0370-\u0373\u0375-\u0377\u037A-\u037D\u037F\u0384\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03E1\u03F0-\u03FF\u1D26-\u1D2A\u1D5D-\u1D61\u1D66-\u1D6A\u1DBF\u1F00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FC4\u1FC6-\u1FD3\u1FD6-\u1FDB\u1FDD-\u1FEF\u1FF2-\u1FF4\u1FF6-\u1FFE\u2126\uAB65]|\uD800[\uDD40-\uDD8C\uDDA0]|\uD834[\uDE00-\uDE45]/g,khm:/[\u1780-\u17DD\u17E0-\u17E9\u17F0-\u17F9\u19E0-\u19FF]/g,hye:/[\u0531-\u0556\u0559-\u055F\u0561-\u0587\u058A\u058D-\u058F\uFB13-\uFB17]/g,sat:/[\u1C50-\u1C7F]/g,Tibetan:/[\u0F00-\u0F47\u0F49-\u0F6C\u0F71-\u0F97\u0F99-\u0FBC\u0FBE-\u0FCC\u0FCE-\u0FD4\u0FD9\u0FDA]/g,Hebrew:/[\u0591-\u05C7\u05D0-\u05EA\u05F0-\u05F4\uFB1D-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFB4F]/g,kat:/[\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u10FF\u2D00-\u2D25\u2D27\u2D2D]/g,lao:/[\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF]/g,iii:/[\uA000-\uA48C\uA490-\uA4C6]/g,aii:/[\u0700-\u070D\u070F-\u074A\u074D-\u074F]/g,div:/[\u0780-\u07B1]/g,vai:/[\uA500-\uA62B]/g,Canadian_Aboriginal:/[\u1400-\u167F\u18B0-\u18F5]/g}},{}],3:[function(d,s,t){'use strict';function j(a,b){return e(a,b)[0][0]}function e(c,l){var d=l||{},j=f,e;return d.minLength!==null&&d.minLength!==undefined&&(j=d.minLength),!c||c.length<j?b():(c=c.substr(0,k),e=p(c,i),e[0]in a?n(c,r(h.asTuples(c),a[e[0]],d)):e[1]===0?b():g(e[0]))}function n(g,a){var d=a[0][1],e=g.length*c-d,b=-1,f=a.length;while(++b<f)a[b][1]=1-(a[b][1]-d)/e||0;return a}function p(f,d){var a=-1,e,b,c;for(b in d)c=q(f,d[b]),c>a&&(a=c,e=b);return[e,a]}function q(b,c){var a=b.match(c);return(a?a.length:0)/b.length||0}function r(h,a,e){var c=[],f=e.whitelist||[],g=e.blacklist||[],d;a=l(a,f,g);for(d in a)c.push([d,m(h,a[d])]);return c.length?c.sort(o):b()}function m(f,g){var d=0,e=-1,h=f.length,b,a;while(++e<h)b=f[e],b[0]in g?(a=b[1]-g[b[0]]-1,a<0&&(a=-a)):a=c,d+=a;return d}function l(b,c,e){var d,a;if(c.length===0&&e.length===0)return b;d={};for(a in b)(c.length===0||c.indexOf(a)!==-1)&&e.indexOf(a)===-1&&(d[a]=b[a]);return d}function b(){return g('und')}function g(a){return[[a,1]]}function o(a,b){return a[1]-b[1]}var h=d('trigram-utils'),i=d('./expressions.js'),a=d('./data.json');j.all=e,s.exports=j;var k=2048,f=10,c=300;!function(b,d,e,f,g,c){for(g in a){b=a[g];for(d in b){f=b[d].split('|'),c=f.length,e={};while(c--)e[f[c]]=c;b[d]=e}}}()},{'./data.json':1,'./expressions.js':2,'trigram-utils':4}],4:[function(g,k,l){'use strict';function e(a){return(a===null||a===undefined)&&(a=''),String(a).replace(c,' ').replace(/\s+/g,' ').trim().toLowerCase()}function h(a,b){return a[1]-b[1]}function a(a){return d(' '+e(a)+' ')}function f(g){var e,c,f,d;e=a(g),c={},f=e.length;while(f--)d=e[f],b.call(c,d)?c[d]++:c[d]=1;return c}function i(d){var b,a,c;b=f(d),a=[];for(c in b)a.push([c,b[c]]);return a.sort(h),a}function j(d){var a,b,c;a={},b=d.length;while(b--)c=d[b],a[c[0]]=c[1];return a}var d,c,b;d=g('n-gram').trigram,b=Object.prototype.hasOwnProperty,c=/[\u0021-\u0040]+/g,k.exports={clean:e,trigrams:a,asDictionary:f,asTuples:i,tuplesAsDictionary:j}},{'n-gram':5}],5:[function(c,b,d){'use strict';function a(a){if(typeof a!=='number'||a<1||a!==a||a===Infinity)throw new Error('Type error: `'+a+'` is not a valid argument for n-gram');return function(b){var c,d;if(c=[],b===null||b===undefined)return c;if(b=String(b),d=b.length-a+1,d<1)return c;while(d--)c[d]=b.substr(d,a);return c}}b.exports=a,a.bigram=a(2),a.trigram=a(3)},{}]},{},[3])(3)})
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],106:[function(require,module,exports){

},{}],107:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":108,"ieee754":109,"isarray":110}],108:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return b64.length * 3 / 4 - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, j, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr(len * 3 / 4 - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],109:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],110:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],111:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],112:[function(require,module,exports){
arguments[4][96][0].apply(exports,arguments)
},{"dup":96}],113:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],114:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":115}],115:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],116:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":117}],117:[function(require,module,exports){
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":119,"./_stream_writable":121,"core-util-is":124,"inherits":112,"process-nextick-args":126}],118:[function(require,module,exports){
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":120,"core-util-is":124,"inherits":112}],119:[function(require,module,exports){
(function (process){
'use strict';

module.exports = Readable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var StringDecoder;

util.inherits(Readable, Stream);

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options && typeof options.read === 'function') this._read = options.read;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;

  if (!state.objectMode && typeof chunk === 'string') {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = bufferShim.from(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var _e = new Error('stream.unshift() after end event');
      stream.emit('error', _e);
    } else {
      var skipAdd;
      if (state.decoder && !addToFront && !encoding) {
        chunk = state.decoder.write(chunk);
        skipAdd = !state.objectMode && chunk.length === 0;
      }

      if (!addToFront) state.reading = false;

      // Don't add to the buffer if we've decoded to an empty string chunk and
      // we're not in object mode
      if (!skipAdd) {
        // if we want the data now, just emit it.
        if (state.flowing && state.length === 0 && !state.sync) {
          stream.emit('data', chunk);
          stream.read(0);
        } else {
          // update the buffer info.
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

          if (state.needReadable) emitReadable(stream);
        }
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function (ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = bufferShim.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'))
},{"./_stream_duplex":117,"./internal/streams/BufferList":122,"_process":115,"buffer":107,"buffer-shims":123,"core-util-is":124,"events":111,"inherits":112,"isarray":125,"process-nextick-args":126,"string_decoder/":133,"util":106}],120:[function(require,module,exports){
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":117,"core-util-is":124,"inherits":112}],121:[function(require,module,exports){
(function (process){
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

module.exports = Writable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

util.inherits(Writable, Stream);

function nop() {}

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;
  // Always throw error if a null is written
  // if we are not in object mode then throw
  // if it is not a buffer, string, or undefined.
  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = bufferShim.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) processNextTick(cb, er);else cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
        afterWrite(stream, state, finished, cb);
      }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    while (entry) {
      buffer[count] = entry;
      entry = entry.next;
      count += 1;
    }

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else {
      prefinish(stream, state);
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function (err) {
    var entry = _this.entry;
    _this.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    if (state.corkedRequestsFree) {
      state.corkedRequestsFree.next = _this;
    } else {
      state.corkedRequestsFree = _this;
    }
  };
}
}).call(this,require('_process'))
},{"./_stream_duplex":117,"_process":115,"buffer":107,"buffer-shims":123,"core-util-is":124,"events":111,"inherits":112,"process-nextick-args":126,"util-deprecate":127}],122:[function(require,module,exports){
'use strict';

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

module.exports = BufferList;

function BufferList() {
  this.head = null;
  this.tail = null;
  this.length = 0;
}

BufferList.prototype.push = function (v) {
  var entry = { data: v, next: null };
  if (this.length > 0) this.tail.next = entry;else this.head = entry;
  this.tail = entry;
  ++this.length;
};

BufferList.prototype.unshift = function (v) {
  var entry = { data: v, next: this.head };
  if (this.length === 0) this.tail = entry;
  this.head = entry;
  ++this.length;
};

BufferList.prototype.shift = function () {
  if (this.length === 0) return;
  var ret = this.head.data;
  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
  --this.length;
  return ret;
};

BufferList.prototype.clear = function () {
  this.head = this.tail = null;
  this.length = 0;
};

BufferList.prototype.join = function (s) {
  if (this.length === 0) return '';
  var p = this.head;
  var ret = '' + p.data;
  while (p = p.next) {
    ret += s + p.data;
  }return ret;
};

BufferList.prototype.concat = function (n) {
  if (this.length === 0) return bufferShim.alloc(0);
  if (this.length === 1) return this.head.data;
  var ret = bufferShim.allocUnsafe(n >>> 0);
  var p = this.head;
  var i = 0;
  while (p) {
    p.data.copy(ret, i);
    i += p.data.length;
    p = p.next;
  }
  return ret;
};
},{"buffer":107,"buffer-shims":123}],123:[function(require,module,exports){
(function (global){
'use strict';

var buffer = require('buffer');
var Buffer = buffer.Buffer;
var SlowBuffer = buffer.SlowBuffer;
var MAX_LEN = buffer.kMaxLength || 2147483647;
exports.alloc = function alloc(size, fill, encoding) {
  if (typeof Buffer.alloc === 'function') {
    return Buffer.alloc(size, fill, encoding);
  }
  if (typeof encoding === 'number') {
    throw new TypeError('encoding must not be number');
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  var enc = encoding;
  var _fill = fill;
  if (_fill === undefined) {
    enc = undefined;
    _fill = 0;
  }
  var buf = new Buffer(size);
  if (typeof _fill === 'string') {
    var fillBuf = new Buffer(_fill, enc);
    var flen = fillBuf.length;
    var i = -1;
    while (++i < size) {
      buf[i] = fillBuf[i % flen];
    }
  } else {
    buf.fill(_fill);
  }
  return buf;
}
exports.allocUnsafe = function allocUnsafe(size) {
  if (typeof Buffer.allocUnsafe === 'function') {
    return Buffer.allocUnsafe(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new Buffer(size);
}
exports.from = function from(value, encodingOrOffset, length) {
  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {
    return Buffer.from(value, encodingOrOffset, length);
  }
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number');
  }
  if (typeof value === 'string') {
    return new Buffer(value, encodingOrOffset);
  }
  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    var offset = encodingOrOffset;
    if (arguments.length === 1) {
      return new Buffer(value);
    }
    if (typeof offset === 'undefined') {
      offset = 0;
    }
    var len = length;
    if (typeof len === 'undefined') {
      len = value.byteLength - offset;
    }
    if (offset >= value.byteLength) {
      throw new RangeError('\'offset\' is out of bounds');
    }
    if (len > value.byteLength - offset) {
      throw new RangeError('\'length\' is out of bounds');
    }
    return new Buffer(value.slice(offset, offset + len));
  }
  if (Buffer.isBuffer(value)) {
    var out = new Buffer(value.length);
    value.copy(out, 0, 0, value.length);
    return out;
  }
  if (value) {
    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {
      return new Buffer(value);
    }
    if (value.type === 'Buffer' && Array.isArray(value.data)) {
      return new Buffer(value.data);
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');
}
exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
  if (typeof Buffer.allocUnsafeSlow === 'function') {
    return Buffer.allocUnsafeSlow(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size >= MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new SlowBuffer(size);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"buffer":107}],124:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../../../insert-module-globals/node_modules/is-buffer/index.js")})
},{"../../../../insert-module-globals/node_modules/is-buffer/index.js":113}],125:[function(require,module,exports){
arguments[4][110][0].apply(exports,arguments)
},{"dup":110}],126:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

}).call(this,require('_process'))
},{"_process":115}],127:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],128:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":118}],129:[function(require,module,exports){
(function (process){
var Stream = (function (){
  try {
    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify
  } catch(_){}
}());
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream || exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

if (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
}

}).call(this,require('_process'))
},{"./lib/_stream_duplex.js":117,"./lib/_stream_passthrough.js":118,"./lib/_stream_readable.js":119,"./lib/_stream_transform.js":120,"./lib/_stream_writable.js":121,"_process":115}],130:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":120}],131:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":121}],132:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":111,"inherits":112,"readable-stream/duplex.js":116,"readable-stream/passthrough.js":128,"readable-stream/readable.js":129,"readable-stream/transform.js":130,"readable-stream/writable.js":131}],133:[function(require,module,exports){
arguments[4][98][0].apply(exports,arguments)
},{"buffer":107,"dup":98}],134:[function(require,module,exports){
arguments[4][96][0].apply(exports,arguments)
},{"dup":96}],135:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],136:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":135,"_process":115,"inherits":134}]},{},[19]);
